
final.elf:     file format elf32-littlenios2
final.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0c000230

Program Header:
    LOAD off    0x00001000 vaddr 0x0c000000 paddr 0x0c000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x0c000020 paddr 0x0c000020 align 2**12
         filesz 0x0001e108 memsz 0x0001e108 flags r-x
    LOAD off    0x0001f128 vaddr 0x0c01e128 paddr 0x0c01ff44 align 2**12
         filesz 0x00001e1c memsz 0x00001e1c flags rw-
    LOAD off    0x00021d60 vaddr 0x0c021d60 paddr 0x0c021d60 align 2**12
         filesz 0x00000000 memsz 0x000002e8 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  0c000000  0c000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  0c000020  0c000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001d444  0c000230  0c000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000ab4  0c01d674  0c01d674  0001e674  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001e1c  0c01e128  0c01ff44  0001f128  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000002e8  0c021d60  0c021d60  00021d60  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00020f44  2**0
                  CONTENTS
  7 .sdram        00000000  0c022048  0c022048  00020f44  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00020f44  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 000014a0  00000000  00000000  00020f68  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   000369a0  00000000  00000000  00022408  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000d740  00000000  00000000  00058da8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00011c37  00000000  00000000  000664e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00003600  00000000  00000000  00078120  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000515c  00000000  00000000  0007b720  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    000250ab  00000000  00000000  0008087c  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000040  00000000  00000000  000a5928  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00002170  00000000  00000000  000a5968  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  000ac106  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  000ac109  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000ac115  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000ac116  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  000ac117  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  000ac11b  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  000ac11f  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  000ac123  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  000ac12e  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  000ac139  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000006  00000000  00000000  000ac144  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000012  00000000  00000000  000ac14a  2**0
                  CONTENTS, READONLY
 30 .jdi          00004d26  00000000  00000000  000ac15c  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0008a4ea  00000000  00000000  000b0e82  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0c000000 l    d  .entry	00000000 .entry
0c000020 l    d  .exceptions	00000000 .exceptions
0c000230 l    d  .text	00000000 .text
0c01d674 l    d  .rodata	00000000 .rodata
0c01e128 l    d  .rwdata	00000000 .rwdata
0c021d60 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
0c022048 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../final_bsp//obj/HAL/src/crt0.o
0c000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 USB_drive.c
0c01fee4 l     O .rwdata	00000001 addr
00000000 l    df *ABS*	00000000 main.c
0c01fee8 l     O .rwdata	00000004 vga_ctrl
0c01e128 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 text_mode_vga_color.c
0c01feec l     O .rwdata	00000004 vga_ctrl
0c01e298 l     O .rwdata	00000170 colors
00000000 l    df *ABS*	00000000 HID.c
00000000 l    df *ABS*	00000000 MAX3421E.c
00000000 l    df *ABS*	00000000 transfer.c
0c021d70 l     O .bss	00000004 usb_delay.2608
0c021d74 l     O .bss	00000001 tmp_addr.2609
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 rand.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0c01da22 l     O .rodata	00000010 zeroes.4389
0c01da32 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
0c01da42 l     O .rodata	00000010 zeroes.4404
0c009944 l     F .text	000000bc __sbprintf
0c01da52 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 vfscanf.c
0c01da6a l     O .rodata	00000022 basefix.4359
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
0c01db8d l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
0c00b5b0 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0c00d108 l     F .text	00000008 __fp_unlock
0c00d11c l     F .text	0000019c __sinit.part.1
0c00d2b8 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0c01e840 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
0c01ec84 l     O .rwdata	00000020 lc_ctype_charset
0c01ec64 l     O .rwdata	00000020 lc_message_charset
0c01eca4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0c01dd30 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
0c0102cc l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strtod.c
0c010820 l     F .text	00000064 sulp
0c01de64 l     O .rodata	00000014 fpinan.2773
0c01de78 l     O .rodata	00000014 fpi.2737
0c01de8c l     O .rodata	00000028 tinytens
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
0c01deb4 l     O .rodata	00000010 zeroes.4333
0c01dec4 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
0c01429c l     F .text	000000fc __sprint_r.part.0
0c01ded4 l     O .rodata	00000010 zeroes.4349
0c0158d8 l     F .text	000000bc __sbprintf
0c01dee4 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0c015fe4 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0c01a8e4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0c01a9f8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0c01aa24 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0c01ab18 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0c01ac00 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0c01acec l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_read.c
0c01b130 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0c01ff34 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0c01b578 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0c01b6b4 l     F .text	00000034 alt_dev_reg
0c01ee84 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0c01b9a8 l     F .text	0000020c altera_avalon_jtag_uart_irq
0c01bbb4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_spi.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0c01c3e8 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0c01c780 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0c01cbe0 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0c01cd40 l     F .text	0000003c alt_get_errno
0c01cd7c l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0c021dac g     O .bss	00000004 alt_instruction_exception_handler
0c00500c g     F .text	00000018 putchar
0c00fa88 g     F .text	00000074 _mprec_log10
0c00fb74 g     F .text	0000008c __any_on
0c016b90 g     F .text	00000054 _isatty_r
0c01dd3c g     O .rodata	00000028 __mprec_tinytens
0c01ae04 g     F .text	0000007c alt_main
0c01fef0 g     O .rwdata	00000008 ctrl_xfers
0c005024 g     F .text	000000c0 _puts_r
0c021f48 g     O .bss	00000100 alt_irq
0c016be4 g     F .text	00000060 _lseek_r
0c003d3c g     F .text	00000644 USB_Task
0c0010a8 g     F .text	0000010c TetrisMain
0c01ff44 g       *ABS*	00000000 __flash_rwdata_start
0c019114 g     F .text	00000088 .hidden __eqdf2
0c022048 g       *ABS*	00000000 __alt_heap_start
0c004fc8 g     F .text	0000003c printf
0c016d74 g     F .text	0000009c _wcrtomb_r
0c002dec g     F .text	00000088 kbdPoll
0c0106e0 g     F .text	0000005c __sseek
0c00d468 g     F .text	00000010 __sinit
0c015994 g     F .text	00000140 __swbuf_r
0c00e1dc g     F .text	0000007c _setlocale_r
0c00d2c0 g     F .text	00000078 __sfmoreglue
0c014284 g     F .text	00000018 ungetc
0c01aea4 g     F .text	00000024 __malloc_unlock
0c00213c g     F .text	000002b4 textVGAColorScreenSaver
0c01d674 g     O .rodata	000000d8 tetrisBlocks
0c000ed0 g     F .text	00000118 TetrisCheckLineComplete
0c0011b4 g     F .text	000001f0 GetDriverandReport
0c010884 g     F .text	000015e4 _strtod_r
0c0016b4 g     F .text	000003f8 keyInput
0c0006c0 g     F .text	000001b0 TetrisCheckCollision
0c00e8c4 g     F .text	0000015c memmove
0c00d450 g     F .text	00000018 _cleanup
0c00eb48 g     F .text	000000a8 _Balloc
0c002f40 g     F .text	00000088 MAXreg_wr
0c01e408 g     O .rwdata	00000030 ClientDriverTable
0c01919c g     F .text	000000dc .hidden __gtdf2
0c01cfc4 g     F .text	00000024 altera_nios2_gen2_irq_init
0c004380 g     F .text	0000002c MSDProbe
0c000000 g     F .entry	0000000c __reset
0c00383c g     F .text	000000e8 XferCtrlData
0c00245c g     F .text	000000b8 VGAwriteText
0c000020 g       *ABS*	00000000 __flash_exceptions_start
0c021db0 g     O .bss	00000010 hid_ep
0c015f88 g     F .text	0000005c _fstat_r
0c021d84 g     O .bss	00000004 errno
0c00b3f4 g     F .text	0000001c __svfscanf
0c01065c g     F .text	00000008 __seofread
0c00043c g     F .text	00000084 TetrisCleanup
0c012c7c g     F .text	000013a0 ___svfiprintf_internal_r
0c021d98 g     O .bss	00000004 alt_argv
0c027ee4 g       *ABS*	00000000 _gp
0c01b548 g     F .text	00000030 usleep
0c003130 g     F .text	00000074 MAXreg_rd
0c001db4 g     F .text	00000050 textVGAColorClr
0c01ed04 g     O .rwdata	00000180 alt_fd_list
0c002d24 g     F .text	00000040 HID_init
0c000954 g     F .text	00000164 TetrisPrintBlock
0c005004 g     F .text	00000008 _putchar_r
0c01cfe8 g     F .text	00000090 alt_find_dev
0c00e77c g     F .text	00000148 memcpy
0c016934 g     F .text	0000025c __hexnan
0c00d110 g     F .text	0000000c _cleanup_r
0c01a554 g     F .text	000000dc .hidden __floatsidf
0c01ccc4 g     F .text	0000007c alt_io_redirect
0c019278 g     F .text	000000f4 .hidden __ltdf2
0c01d674 g       *ABS*	00000000 __DTOR_END__
0c0050e4 g     F .text	00000014 puts
0c01d244 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0c00e520 g     F .text	000000d8 mbrtowc
0c0104bc g     F .text	00000074 __fpclassifyd
0c00b410 g     F .text	0000004c _vfscanf_r
0c00f9e4 g     F .text	000000a4 __ratio
0c0158bc g     F .text	0000001c __vfiprintf_internal
0c01bdac g     F .text	0000021c altera_avalon_jtag_uart_read
0c004764 g     F .text	00000014 malloc
0c004f98 g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0c004680 g     F .text	00000064 .hidden __udivsi3
0c01ab54 g     F .text	000000ac isatty
0c00e1ac g     F .text	00000030 iswspace
0c01dd8c g     O .rodata	000000c8 __mprec_tens
0c00e258 g     F .text	0000000c __locale_charset
0c017dd0 g     F .text	000000c8 .hidden __lesf2
0c017068 g     F .text	00000074 .hidden __fixunsdfsi
0c021d80 g     O .bss	00000004 __malloc_top_pad
0c000fe8 g     F .text	00000060 TetrisInputLeft
0c012770 g     F .text	0000001c strtoul
0c01fef8 g     O .rwdata	00000001 usb_task_state
0c01ff10 g     O .rwdata	00000004 __mb_cur_max
0c00e288 g     F .text	0000000c _localeconv_r
0c01278c g     F .text	00000320 _strtoull_r
0c00ef7c g     F .text	0000003c __i2b
0c00db5c g     F .text	000004c8 __sfvwrite_r
0c005174 g     F .text	00000054 _sbrk_r
0c016c44 g     F .text	00000060 _read_r
0c0034f8 g     F .text	00000094 MAX3421E_init
0c001680 g     F .text	00000034 setKeycode
0c01ff2c g     O .rwdata	00000004 alt_max_fd
0c015c7c g     F .text	000000f0 _fclose_r
0c00d0d8 g     F .text	00000030 fflush
0c021d7c g     O .bss	00000004 __malloc_max_sbrked_mem
0c017e98 g     F .text	000008ac .hidden __adddf3
0c017c9c g     F .text	00000078 .hidden __nesf2
0c00f78c g     F .text	0000010c __b2d
0c0176d8 g     F .text	000005c4 .hidden __umoddi3
0c01ad28 g     F .text	000000dc lseek
0c01ff08 g     O .rwdata	00000004 _global_impure_ptr
0c00fd68 g     F .text	00000564 _realloc_r
0c022048 g       *ABS*	00000000 __bss_end
0c01caf0 g     F .text	000000f0 alt_iic_isr_register
0c01b440 g     F .text	00000108 alt_tick
0c01def4 g     O .rodata	00000100 __hexdig
0c0170dc g     F .text	000005fc .hidden __udivdi3
0c015ee4 g     F .text	00000024 _fputwc_r
0c01dd64 g     O .rodata	00000028 __mprec_bigtens
0c00ed60 g     F .text	00000104 __s2b
0c01a630 g     F .text	000000a8 .hidden __floatunsidf
0c00f4cc g     F .text	00000060 __mcmp
0c00d488 g     F .text	00000018 __fp_lock_all
0c01caa4 g     F .text	0000004c alt_ic_irq_enabled
0c01b3a4 g     F .text	0000009c alt_alarm_stop
0c0121d8 g     F .text	0000001c strtol
0c021da8 g     O .bss	00000004 alt_irq_active
0c004448 g     F .text	0000002c DummyProbe
0c0000fc g     F .exceptions	000000d4 alt_irq_handler
0c000dc8 g     F .text	00000108 TetrisClearLine
0c01ecdc g     O .rwdata	00000028 alt_dev_null
0c002d64 g     F .text	00000088 mousePoll
0c00334c g     F .text	00000024 Vbus_power
0c01c760 g     F .text	00000020 alt_dcache_flush_all
0c00ee64 g     F .text	00000068 __hi0bits
0c01a4d4 g     F .text	00000080 .hidden __fixdfsi
0c011e68 g     F .text	00000018 strtod
0c01ff44 g       *ABS*	00000000 __ram_rwdata_end
0c01ff24 g     O .rwdata	00000008 alt_dev_list
0c01b5b4 g     F .text	00000100 write
0c00fc00 g     F .text	000000a0 _putc_r
0c017d14 g     F .text	000000bc .hidden __gtsf2
0c01e128 g       *ABS*	00000000 __ram_rodata_end
0c021d75 g     O .bss	00000001 usb_error
0c01aa60 g     F .text	000000b8 fstat
0c019278 g     F .text	000000f4 .hidden __ledf2
0c00f244 g     F .text	00000140 __pow5mult
0c0143b0 g     F .text	0000150c ___vfiprintf_internal_r
0c021d90 g     O .bss	00000004 __nlocale_changed
0c0046e4 g     F .text	00000058 .hidden __umodsi3
0c000324 g     F .text	00000118 TetrisInitialize
0c005204 g     F .text	00000030 _scanf_r
0c022048 g       *ABS*	00000000 end
0c00026c g     F .text	000000b8 TetrisGetRandomTetrisBlock
0c01b8e8 g     F .text	000000c0 altera_avalon_jtag_uart_init
0c0001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0c003998 g     F .text	0000017c XferDispatchPkt
0c01d674 g       *ABS*	00000000 __CTOR_LIST__
10000000 g       *ABS*	00000000 __alt_stack_pointer
0c01c460 g     F .text	0000007c alt_avalon_timer_sc_init
0c01a880 g     F .text	00000064 .hidden __clzsi2
0c01bfc8 g     F .text	00000224 altera_avalon_jtag_uart_write
0c00d478 g     F .text	00000004 __sfp_lock_acquire
0c00e698 g     F .text	000000e4 memchr
0c00764c g     F .text	000022dc ___vfprintf_internal_r
0c0036bc g     F .text	00000034 MaxGpxHandler
0c005234 g     F .text	00000058 _sprintf_r
0c00d84c g     F .text	00000310 _free_r
0c01aec8 g     F .text	0000022c alt_printf
0c00e264 g     F .text	00000010 __locale_mb_cur_max
0c01d4c0 g     F .text	00000180 __call_exitprocs
0c021d8c g     O .bss	00000004 __mlocale_changed
0c01fefc g     O .rwdata	00000004 __malloc_sbrk_base
0c000230 g     F .text	0000003c _start
0c021da0 g     O .bss	00000004 _alt_tick_rate
0c0031a4 g     F .text	00000108 MAXbytes_rd
0c0121f4 g     F .text	00000304 _strtoll_r
0c005110 g     F .text	00000064 rand
0c00f384 g     F .text	00000148 __lshift
0c01c1ec g     F .text	000001fc alt_avalon_spi_command
0c021da4 g     O .bss	00000004 _alt_nticks
0c01b16c g     F .text	00000104 read
0c01b720 g     F .text	00000064 alt_sys_init
0c012aac g     F .text	000001d0 __ssprint_r
0c021f00 g     O .bss	00000048 devtable
0c01d3a8 g     F .text	00000118 __register_exitproc
0c00291c g     F .text	00000408 HIDKProbe
0c021dc0 g     O .bss	00000018 msd_ep
0c001048 g     F .text	00000060 TetrisInputRight
0c016ca4 g     F .text	000000d0 strncmp
0c00efb8 g     F .text	0000028c __multiply
0c01bc54 g     F .text	00000068 altera_avalon_jtag_uart_close
0c003ca4 g     F .text	00000098 USB_init
0c021e00 g     O .bss	00000100 bigbuf
0c00473c g     F .text	00000028 .hidden __mulsi3
0c01e128 g       *ABS*	00000000 __ram_rwdata_start
0c01d674 g       *ABS*	00000000 __ram_rodata_start
0c021dd8 g     O .bss	00000028 __malloc_current_mallinfo
0c017c9c g     F .text	00000078 .hidden __eqsf2
0c021d6c g     O .bss	00000001 last_usb_task_state
0c00f898 g     F .text	0000014c __d2b
0c021d64 g     O .bss	00000008 dev0ep
0c0013e8 g     F .text	00000048 clearLED
0c01b784 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0c0124f8 g     F .text	00000278 _strtoul_r
0c01d180 g     F .text	000000c4 alt_get_fd
0c01c608 g     F .text	00000158 alt_busy_sleep
0c0043ac g     F .text	00000038 MSDEventHandler
0c015b4c g     F .text	00000054 _close_r
0c01d32c g     F .text	0000007c memcmp
0c01b844 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0c022048 g       *ABS*	00000000 __alt_stack_base
0c01b894 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0c00b45c g     F .text	00000154 __swsetup_r
0c018744 g     F .text	000009d0 .hidden __divdf3
0c00d338 g     F .text	00000118 __sfp
0c00fafc g     F .text	00000078 __copybits
0c01e438 g     O .rwdata	00000408 __malloc_av_
0c00d484 g     F .text	00000004 __sinit_lock_release
0c004410 g     F .text	00000038 CDCEventHandler
0c01936c g     F .text	0000086c .hidden __muldf3
0c004474 g     F .text	00000038 DummyEventHandler
0c010608 g     F .text	00000054 __sread
0c00d6f4 g     F .text	00000034 fread
0c01d078 g     F .text	00000108 alt_find_file
0c01c7bc g     F .text	000000a4 alt_dev_llist_insert
0c01ae80 g     F .text	00000024 __malloc_lock
0c01b2f4 g     F .text	000000b0 sbrk
0c005390 g     F .text	000022bc ___svfprintf_internal_r
0c00d07c g     F .text	0000005c _fflush_r
0c015ba0 g     F .text	000000dc _calloc_r
0c021d60 g       *ABS*	00000000 __bss_start
0c003370 g     F .text	00000188 MAX_busprobe
0c021d60 g     O .bss	00000002 hid_device
0c00ea20 g     F .text	00000128 memset
0c001c9c g     F .text	00000118 main
0c00358c g     F .text	00000064 MAX3421E_Task
0c021d9c g     O .bss	00000004 alt_envp
0c021d78 g     O .bss	00000004 __malloc_max_total_mem
0c01b7e4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0c015ad4 g     F .text	00000018 __swbuf
0c0050f8 g     F .text	00000018 srand
0c004504 g     F .text	00000084 ConvUTF8ToStr
0c017dd0 g     F .text	000000c8 .hidden __ltsf2
0c00d4b8 g     F .text	0000023c _fread_r
0c000ab8 g     F .text	000002a0 TetrisRotateBlock
0c000870 g     F .text	000000e4 TetrisCreateBlock
0c01073c g     F .text	00000008 __sclose
10000000 g       *ABS*	00000000 __alt_heap_limit
0c00203c g     F .text	00000100 screenVGAinitializer
0c015d6c g     F .text	00000014 fclose
0c0023f0 g     F .text	0000006c VGADrawColorBox
0c011f80 g     F .text	00000258 _strtol_r
0c01a6d8 g     F .text	000001a8 .hidden __truncdfsf2
0c00b7d8 g     F .text	00001688 _dtoa_r
0c00478c g     F .text	0000080c _malloc_r
0c016ed0 g     F .text	00000030 __ascii_wctomb
0c01ff30 g     O .rwdata	00000004 alt_errno
0c01401c g     F .text	000000d4 __submore
0c00e024 g     F .text	000000c4 _fwalk
0c00e63c g     F .text	0000005c _mbtowc_r
0c00fca0 g     F .text	000000c8 putc
0c004588 g     F .text	00000084 .hidden __divsi3
0c003b14 g     F .text	00000190 XferInTransfer
0c001f14 g     F .text	00000128 setColorPalette
0c001548 g     F .text	00000138 printSignedHex1
0c00d728 g     F .text	00000124 _malloc_trim_r
0c01d674 g       *ABS*	00000000 __CTOR_END__
0c0004c0 g     F .text	00000200 TetrisPrintBoard
0c0044cc g     F .text	00000038 GetDevtable
0c010744 g     F .text	000000dc strcmp
0c01d674 g       *ABS*	00000000 __flash_rodata_start
0c01d674 g       *ABS*	00000000 __DTOR_LIST__
0c003924 g     F .text	00000074 XferCtrlND
0c019114 g     F .text	00000088 .hidden __nedf2
0c0032ac g     F .text	000000a0 MAX3421E_reset
0c01b6e8 g     F .text	00000038 alt_irq_init
0c01b270 g     F .text	00000084 alt_release_fd
0c00528c g     F .text	0000006c sprintf
0c01dff4 g     O .rodata	00000100 .hidden __clz_tab
0c021d88 g     O .bss	00000004 _PathLocale
0c011e80 g     F .text	00000100 strtof
0c01d2e0 g     F .text	00000014 atexit
0c017d14 g     F .text	000000bc .hidden __gesf2
0c015aec g     F .text	00000060 _write_r
0c00e294 g     F .text	00000018 setlocale
0c0051c8 g     F .text	0000003c scanf
0c000d58 g     F .text	00000070 TetrisFallBlocks
0c010600 g     F .text	00000008 nanf
0c01ff0c g     O .rwdata	00000004 _impure_ptr
0c021d94 g     O .bss	00000004 alt_argc
0c00ce60 g     F .text	0000021c __sflush_r
0c00e474 g     F .text	000000ac _mbrtowc_r
0c01c8c0 g     F .text	00000060 _do_dtors
0c00e280 g     F .text	00000008 __locale_cjk_lang
0c002fc8 g     F .text	00000168 MAXbytes_wr
0c0102e8 g     F .text	000001d4 __srefill_r
0c000020 g       .exceptions	00000000 alt_irq_entry
0c00e5f8 g     F .text	00000044 __ascii_mbtowc
0c00f728 g     F .text	00000064 __ulp
0c00d4a0 g     F .text	00000018 __fp_unlock_all
0c01ff1c g     O .rwdata	00000008 alt_fs_list
0c0043e4 g     F .text	0000002c CDCProbe
0c000020 g       *ABS*	00000000 __ram_exceptions_start
0c00e2ac g     F .text	0000000c localeconv
0c0013a4 g     F .text	00000044 setLED
0c0044ac g     F .text	00000020 GetUsbTaskState
0c001aac g     F .text	000001f0 paintScreen
0c01c940 g     F .text	00000050 alt_ic_isr_register
0c01d7d4 g     O .rodata	00000010 devclasses
0c01ff44 g       *ABS*	00000000 _edata
0c002eac g     F .text	00000038 HIDKEventHandler
0c022048 g       *ABS*	00000000 _end
0c0035f0 g     F .text	000000cc MaxIntHandler
0c015d80 g     F .text	00000164 __fputwc
0c000230 g       *ABS*	00000000 __ram_exceptions_end
0c00b38c g     F .text	00000068 vfscanf
0c01bcbc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0c001e04 g     F .text	00000110 textVGADrawColorText
0c002ee4 g     F .text	00000034 SPI_init
0c01ca18 g     F .text	0000008c alt_ic_irq_disable
0c010664 g     F .text	0000007c __swrite
0c01ff00 g     O .rwdata	00000004 __malloc_trim_threshold
0c00e274 g     F .text	0000000c __locale_msgcharset
0c01d2f4 g     F .text	00000038 exit
0c00e0e8 g     F .text	000000c4 _fwalk_reent
0c00f52c g     F .text	000001fc __mdiff
0c00460c g     F .text	00000074 .hidden __modsi3
0c01ff04 g     O .rwdata	00000004 __ctype_ptr__
10000000 g       *ABS*	00000000 __alt_data_end
0c000020 g     F .exceptions	00000000 alt_exception
0c00d47c g     F .text	00000004 __sfp_lock_release
0c000000 g       *ABS*	00000000 __alt_mem_sdram
0c010530 g     F .text	000000d0 __sccl
0c01da8c g     O .rodata	00000101 _ctype_
0c01ff14 g     O .rwdata	00000004 __mbtowc
0c002e74 g     F .text	00000038 HIDMEventHandler
0c01d640 g     F .text	00000034 _exit
0c01c4dc g     F .text	0000012c alt_alarm_start
0c001430 g     F .text	00000118 printSignedHex0
0c016f5c g     F .text	0000010c .hidden __muldi3
0c00e2b8 g     F .text	000001bc __smakebuf_r
0c0052f8 g     F .text	00000098 strlen
0c01ce68 g     F .text	0000015c open
0c01919c g     F .text	000000dc .hidden __gedf2
0c01b0f4 g     F .text	0000003c alt_putchar
0c0160e4 g     F .text	00000850 __gethex
0c01ff18 g     O .rwdata	00000004 __wctomb
0c014398 g     F .text	00000018 __sprint_r
0c01c920 g     F .text	00000020 alt_icache_flush_all
0c01ff40 g     O .rwdata	00000004 alt_priority_mask
0c01c990 g     F .text	00000088 alt_ic_irq_enable
0c009928 g     F .text	0000001c __vfprintf_internal
0c002514 g     F .text	00000408 HIDMProbe
0c016f00 g     F .text	0000005c _wctomb_r
0c002f18 g     F .text	00000028 SPI_wr
0c019bd8 g     F .text	000008fc .hidden __subdf3
0c00eecc g     F .text	000000b0 __lo0bits
0c009a00 g     F .text	0000198c __svfscanf_r
0c01ff38 g     O .rwdata	00000008 alt_alarm_list
0c0140f0 g     F .text	00000194 _ungetc_r
0c01c860 g     F .text	00000060 _do_ctors
0c016e10 g     F .text	000000c0 wcrtomb
0c01a920 g     F .text	000000d8 close
0c01ac68 g     F .text	00000084 alt_load
0c015f08 g     F .text	00000080 fputwc
0c004778 g     F .text	00000014 free
0c00d480 g     F .text	00000004 __sinit_lock_acquire
0c0036f0 g     F .text	0000014c XferCtrlReq
0c00ec18 g     F .text	00000148 __multadd
0c00ebf0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

0c000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 c000000:	00430034 	movhi	at,3072
    ori r1, r1, %lo(_start)
 c000004:	08408c14 	ori	at,at,560
    jmp r1
 c000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

0c000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 c000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 c000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 c000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 c00002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 c000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 c000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 c000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 c00003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 c000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 c000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 c000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 c00004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 c000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 c000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 c000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 c00005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 c000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 c000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 c000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 c00006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 c000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 c000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 c000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 c00007c:	10000326 	beq	r2,zero,c00008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 c000080:	20000226 	beq	r4,zero,c00008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 c000084:	c0000fc0 	call	c0000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 c000088:	00000706 	br	c0000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 c00008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 c000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 c000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 c000098:	c0001d00 	call	c0001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 c00009c:	1000021e 	bne	r2,zero,c0000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 c0000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 c0000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 c0000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 c0000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 c0000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 c0000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 c0000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 c0000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 c0000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 c0000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 c0000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 c0000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 c0000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 c0000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 c0000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 c0000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 c0000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 c0000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 c0000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 c0000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 c0000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 c0000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 c0000f8:	ef80083a 	eret

0c0000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 c0000fc:	defff904 	addi	sp,sp,-28
 c000100:	dfc00615 	stw	ra,24(sp)
 c000104:	df000515 	stw	fp,20(sp)
 c000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 c00010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 c000110:	0005313a 	rdctl	r2,ipending
 c000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 c000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 c00011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 c000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 c000124:	00800044 	movi	r2,1
 c000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 c00012c:	e0fffb17 	ldw	r3,-20(fp)
 c000130:	e0bffc17 	ldw	r2,-16(fp)
 c000134:	1884703a 	and	r2,r3,r2
 c000138:	10001426 	beq	r2,zero,c00018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 c00013c:	008300b4 	movhi	r2,3074
 c000140:	1087d204 	addi	r2,r2,8008
 c000144:	e0fffd17 	ldw	r3,-12(fp)
 c000148:	180690fa 	slli	r3,r3,3
 c00014c:	10c5883a 	add	r2,r2,r3
 c000150:	10c00017 	ldw	r3,0(r2)
 c000154:	008300b4 	movhi	r2,3074
 c000158:	1087d204 	addi	r2,r2,8008
 c00015c:	e13ffd17 	ldw	r4,-12(fp)
 c000160:	200890fa 	slli	r4,r4,3
 c000164:	1105883a 	add	r2,r2,r4
 c000168:	10800104 	addi	r2,r2,4
 c00016c:	10800017 	ldw	r2,0(r2)
 c000170:	1009883a 	mov	r4,r2
 c000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 c000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 c00017c:	0005313a 	rdctl	r2,ipending
 c000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 c000184:	e0bfff17 	ldw	r2,-4(fp)
 c000188:	00000706 	br	c0001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 c00018c:	e0bffc17 	ldw	r2,-16(fp)
 c000190:	1085883a 	add	r2,r2,r2
 c000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 c000198:	e0bffd17 	ldw	r2,-12(fp)
 c00019c:	10800044 	addi	r2,r2,1
 c0001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 c0001a4:	003fe106 	br	c00012c <__alt_data_end+0xfc00012c>

    active = alt_irq_pending ();
 c0001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 c0001ac:	e0bffb17 	ldw	r2,-20(fp)
 c0001b0:	103fdb1e 	bne	r2,zero,c000120 <__alt_data_end+0xfc000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 c0001b4:	0001883a 	nop
}
 c0001b8:	0001883a 	nop
 c0001bc:	e037883a 	mov	sp,fp
 c0001c0:	dfc00117 	ldw	ra,4(sp)
 c0001c4:	df000017 	ldw	fp,0(sp)
 c0001c8:	dec00204 	addi	sp,sp,8
 c0001cc:	f800283a 	ret

0c0001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 c0001d0:	defffb04 	addi	sp,sp,-20
 c0001d4:	dfc00415 	stw	ra,16(sp)
 c0001d8:	df000315 	stw	fp,12(sp)
 c0001dc:	df000304 	addi	fp,sp,12
 c0001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 c0001e4:	00bfffc4 	movi	r2,-1
 c0001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 c0001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 c0001f0:	d0a7b217 	ldw	r2,-24888(gp)
 c0001f4:	10000726 	beq	r2,zero,c000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 c0001f8:	d0a7b217 	ldw	r2,-24888(gp)
 c0001fc:	e0fffd17 	ldw	r3,-12(fp)
 c000200:	e1bffe17 	ldw	r6,-8(fp)
 c000204:	e17fff17 	ldw	r5,-4(fp)
 c000208:	1809883a 	mov	r4,r3
 c00020c:	103ee83a 	callr	r2
 c000210:	00000206 	br	c00021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 c000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 c000218:	0005883a 	mov	r2,zero
}
 c00021c:	e037883a 	mov	sp,fp
 c000220:	dfc00117 	ldw	ra,4(sp)
 c000224:	df000017 	ldw	fp,0(sp)
 c000228:	dec00204 	addi	sp,sp,8
 c00022c:	f800283a 	ret

Disassembly of section .text:

0c000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 c000230:	06c40034 	movhi	sp,4096
    ori sp, sp, %lo(__alt_stack_pointer)
 c000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 c000238:	068300b4 	movhi	gp,3074
    ori gp, gp, %lo(_gp)
 c00023c:	d69fb914 	ori	gp,gp,32484
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 c000240:	008300b4 	movhi	r2,3074
    ori r2, r2, %lo(__bss_start)
 c000244:	10875814 	ori	r2,r2,7520

    movhi r3, %hi(__bss_end)
 c000248:	00c300b4 	movhi	r3,3074
    ori r3, r3, %lo(__bss_end)
 c00024c:	18c81214 	ori	r3,r3,8264

    beq r2, r3, 1f
 c000250:	10c00326 	beq	r2,r3,c000260 <_start+0x30>

0:
    stw zero, (r2)
 c000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 c000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 c00025c:	10fffd36 	bltu	r2,r3,c000254 <__alt_data_end+0xfc000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 c000260:	c01ac680 	call	c01ac68 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 c000264:	c01ae040 	call	c01ae04 <alt_main>

0c000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 c000268:	003fff06 	br	c000268 <__alt_data_end+0xfc000268>

0c00026c <TetrisGetRandomTetrisBlock>:
    int activeBlockX;
    int activeBlockY;
} TetrisGameState;

TetrisBlock TetrisGetRandomTetrisBlock()
{
 c00026c:	defffa04 	addi	sp,sp,-24
 c000270:	dfc00515 	stw	ra,20(sp)
 c000274:	df000415 	stw	fp,16(sp)
 c000278:	dc400315 	stw	r17,12(sp)
 c00027c:	dc000215 	stw	r16,8(sp)
 c000280:	df000404 	addi	fp,sp,16
 c000284:	e13ffd15 	stw	r4,-12(fp)
    const int tetrisBlockCount = sizeof(tetrisBlocks) / sizeof(TetrisBlock);
 c000288:	00800184 	movi	r2,6
 c00028c:	e0bffc15 	stw	r2,-16(fp)
    return tetrisBlocks[rand() % tetrisBlockCount];
 c000290:	c0051100 	call	c005110 <rand>
 c000294:	e17ffc17 	ldw	r5,-16(fp)
 c000298:	1009883a 	mov	r4,r2
 c00029c:	c00460c0 	call	c00460c <__modsi3>
 c0002a0:	e43ffd17 	ldw	r16,-12(fp)
 c0002a4:	044300b4 	movhi	r17,3074
 c0002a8:	8c759d04 	addi	r17,r17,-10636
 c0002ac:	01400904 	movi	r5,36
 c0002b0:	1009883a 	mov	r4,r2
 c0002b4:	c00473c0 	call	c00473c <__mulsi3>
 c0002b8:	8885883a 	add	r2,r17,r2
 c0002bc:	10c00017 	ldw	r3,0(r2)
 c0002c0:	80c00015 	stw	r3,0(r16)
 c0002c4:	10c00117 	ldw	r3,4(r2)
 c0002c8:	80c00115 	stw	r3,4(r16)
 c0002cc:	10c00217 	ldw	r3,8(r2)
 c0002d0:	80c00215 	stw	r3,8(r16)
 c0002d4:	10c00317 	ldw	r3,12(r2)
 c0002d8:	80c00315 	stw	r3,12(r16)
 c0002dc:	10c00417 	ldw	r3,16(r2)
 c0002e0:	80c00415 	stw	r3,16(r16)
 c0002e4:	10c00517 	ldw	r3,20(r2)
 c0002e8:	80c00515 	stw	r3,20(r16)
 c0002ec:	10c00617 	ldw	r3,24(r2)
 c0002f0:	80c00615 	stw	r3,24(r16)
 c0002f4:	10c00717 	ldw	r3,28(r2)
 c0002f8:	80c00715 	stw	r3,28(r16)
 c0002fc:	10800817 	ldw	r2,32(r2)
 c000300:	80800815 	stw	r2,32(r16)
}
 c000304:	e0bffd17 	ldw	r2,-12(fp)
 c000308:	e6fffe04 	addi	sp,fp,-8
 c00030c:	dfc00317 	ldw	ra,12(sp)
 c000310:	df000217 	ldw	fp,8(sp)
 c000314:	dc400117 	ldw	r17,4(sp)
 c000318:	dc000017 	ldw	r16,0(sp)
 c00031c:	dec00404 	addi	sp,sp,16
 c000320:	f800283a 	ret

0c000324 <TetrisInitialize>:

void TetrisInitialize(TetrisGameState* state, int width, int height)
{
 c000324:	defff804 	addi	sp,sp,-32
 c000328:	dfc00715 	stw	ra,28(sp)
 c00032c:	df000615 	stw	fp,24(sp)
 c000330:	dc000515 	stw	r16,20(sp)
 c000334:	df000604 	addi	fp,sp,24
 c000338:	e13ffc15 	stw	r4,-16(fp)
 c00033c:	e17ffd15 	stw	r5,-12(fp)
 c000340:	e1bffe15 	stw	r6,-8(fp)
    int x, y;

    state->completedLines = 0;
 c000344:	e0bffc17 	ldw	r2,-16(fp)
 c000348:	10000415 	stw	zero,16(r2)
    state->dead = 0;
 c00034c:	e0bffc17 	ldw	r2,-16(fp)
 c000350:	10000315 	stw	zero,12(r2)
    state->boardWidth = width;
 c000354:	e0bffc17 	ldw	r2,-16(fp)
 c000358:	e0fffd17 	ldw	r3,-12(fp)
 c00035c:	10c00115 	stw	r3,4(r2)
    state->boardHeight = height;
 c000360:	e0bffc17 	ldw	r2,-16(fp)
 c000364:	e0fffe17 	ldw	r3,-8(fp)
 c000368:	10c00215 	stw	r3,8(r2)
    state->board = (char**)malloc(sizeof(char*) * width);
 c00036c:	e0bffd17 	ldw	r2,-12(fp)
 c000370:	1085883a 	add	r2,r2,r2
 c000374:	1085883a 	add	r2,r2,r2
 c000378:	1009883a 	mov	r4,r2
 c00037c:	c0047640 	call	c004764 <malloc>
 c000380:	1007883a 	mov	r3,r2
 c000384:	e0bffc17 	ldw	r2,-16(fp)
 c000388:	10c00015 	stw	r3,0(r2)

    for (x = 0; x < width; ++x)
 c00038c:	e03ffa15 	stw	zero,-24(fp)
 c000390:	00002006 	br	c000414 <TetrisInitialize+0xf0>
    {
        state->board[x] = (char*)malloc(sizeof(char) * height);
 c000394:	e0bffc17 	ldw	r2,-16(fp)
 c000398:	10c00017 	ldw	r3,0(r2)
 c00039c:	e0bffa17 	ldw	r2,-24(fp)
 c0003a0:	1085883a 	add	r2,r2,r2
 c0003a4:	1085883a 	add	r2,r2,r2
 c0003a8:	18a1883a 	add	r16,r3,r2
 c0003ac:	e0bffe17 	ldw	r2,-8(fp)
 c0003b0:	1009883a 	mov	r4,r2
 c0003b4:	c0047640 	call	c004764 <malloc>
 c0003b8:	80800015 	stw	r2,0(r16)

        for (y = 0; y < height; ++y)
 c0003bc:	e03ffb15 	stw	zero,-20(fp)
 c0003c0:	00000e06 	br	c0003fc <TetrisInitialize+0xd8>
        {
            state->board[x][y] = ' ';
 c0003c4:	e0bffc17 	ldw	r2,-16(fp)
 c0003c8:	10c00017 	ldw	r3,0(r2)
 c0003cc:	e0bffa17 	ldw	r2,-24(fp)
 c0003d0:	1085883a 	add	r2,r2,r2
 c0003d4:	1085883a 	add	r2,r2,r2
 c0003d8:	1885883a 	add	r2,r3,r2
 c0003dc:	10c00017 	ldw	r3,0(r2)
 c0003e0:	e0bffb17 	ldw	r2,-20(fp)
 c0003e4:	1885883a 	add	r2,r3,r2
 c0003e8:	00c00804 	movi	r3,32
 c0003ec:	10c00005 	stb	r3,0(r2)

    for (x = 0; x < width; ++x)
    {
        state->board[x] = (char*)malloc(sizeof(char) * height);

        for (y = 0; y < height; ++y)
 c0003f0:	e0bffb17 	ldw	r2,-20(fp)
 c0003f4:	10800044 	addi	r2,r2,1
 c0003f8:	e0bffb15 	stw	r2,-20(fp)
 c0003fc:	e0fffb17 	ldw	r3,-20(fp)
 c000400:	e0bffe17 	ldw	r2,-8(fp)
 c000404:	18bfef16 	blt	r3,r2,c0003c4 <__alt_data_end+0xfc0003c4>
    state->dead = 0;
    state->boardWidth = width;
    state->boardHeight = height;
    state->board = (char**)malloc(sizeof(char*) * width);

    for (x = 0; x < width; ++x)
 c000408:	e0bffa17 	ldw	r2,-24(fp)
 c00040c:	10800044 	addi	r2,r2,1
 c000410:	e0bffa15 	stw	r2,-24(fp)
 c000414:	e0fffa17 	ldw	r3,-24(fp)
 c000418:	e0bffd17 	ldw	r2,-12(fp)
 c00041c:	18bfdd16 	blt	r3,r2,c000394 <__alt_data_end+0xfc000394>
        for (y = 0; y < height; ++y)
        {
            state->board[x][y] = ' ';
        }
    }
}
 c000420:	0001883a 	nop
 c000424:	e6ffff04 	addi	sp,fp,-4
 c000428:	dfc00217 	ldw	ra,8(sp)
 c00042c:	df000117 	ldw	fp,4(sp)
 c000430:	dc000017 	ldw	r16,0(sp)
 c000434:	dec00304 	addi	sp,sp,12
 c000438:	f800283a 	ret

0c00043c <TetrisCleanup>:

void TetrisCleanup(TetrisGameState* state)
{
 c00043c:	defffc04 	addi	sp,sp,-16
 c000440:	dfc00315 	stw	ra,12(sp)
 c000444:	df000215 	stw	fp,8(sp)
 c000448:	df000204 	addi	fp,sp,8
 c00044c:	e13fff15 	stw	r4,-4(fp)
    int x;

    for (x = 0; x < state->boardWidth; ++x)
 c000450:	e03ffe15 	stw	zero,-8(fp)
 c000454:	00000c06 	br	c000488 <TetrisCleanup+0x4c>
    {
        free(state->board[x]);
 c000458:	e0bfff17 	ldw	r2,-4(fp)
 c00045c:	10c00017 	ldw	r3,0(r2)
 c000460:	e0bffe17 	ldw	r2,-8(fp)
 c000464:	1085883a 	add	r2,r2,r2
 c000468:	1085883a 	add	r2,r2,r2
 c00046c:	1885883a 	add	r2,r3,r2
 c000470:	10800017 	ldw	r2,0(r2)
 c000474:	1009883a 	mov	r4,r2
 c000478:	c0047780 	call	c004778 <free>

void TetrisCleanup(TetrisGameState* state)
{
    int x;

    for (x = 0; x < state->boardWidth; ++x)
 c00047c:	e0bffe17 	ldw	r2,-8(fp)
 c000480:	10800044 	addi	r2,r2,1
 c000484:	e0bffe15 	stw	r2,-8(fp)
 c000488:	e0bfff17 	ldw	r2,-4(fp)
 c00048c:	10800117 	ldw	r2,4(r2)
 c000490:	e0fffe17 	ldw	r3,-8(fp)
 c000494:	18bff016 	blt	r3,r2,c000458 <__alt_data_end+0xfc000458>
    {
        free(state->board[x]);
    }

    free(state->board);
 c000498:	e0bfff17 	ldw	r2,-4(fp)
 c00049c:	10800017 	ldw	r2,0(r2)
 c0004a0:	1009883a 	mov	r4,r2
 c0004a4:	c0047780 	call	c004778 <free>
}
 c0004a8:	0001883a 	nop
 c0004ac:	e037883a 	mov	sp,fp
 c0004b0:	dfc00117 	ldw	ra,4(sp)
 c0004b4:	df000017 	ldw	fp,0(sp)
 c0004b8:	dec00204 	addi	sp,sp,8
 c0004bc:	f800283a 	ret

0c0004c0 <TetrisPrintBoard>:

void TetrisPrintBoard(TetrisGameState* state)
{
 c0004c0:	defff904 	addi	sp,sp,-28
 c0004c4:	dfc00615 	stw	ra,24(sp)
 c0004c8:	df000515 	stw	fp,20(sp)
 c0004cc:	dc400415 	stw	r17,16(sp)
 c0004d0:	dc000315 	stw	r16,12(sp)
 c0004d4:	df000504 	addi	fp,sp,20
 c0004d8:	e13ffd15 	stw	r4,-12(fp)
    int x, y;

    for (x = 0; x < 30; ++x)
 c0004dc:	e03ffb15 	stw	zero,-20(fp)
 c0004e0:	00000506 	br	c0004f8 <TetrisPrintBoard+0x38>
    {
        printf("\n");
 c0004e4:	01000284 	movi	r4,10
 c0004e8:	c00500c0 	call	c00500c <putchar>

void TetrisPrintBoard(TetrisGameState* state)
{
    int x, y;

    for (x = 0; x < 30; ++x)
 c0004ec:	e0bffb17 	ldw	r2,-20(fp)
 c0004f0:	10800044 	addi	r2,r2,1
 c0004f4:	e0bffb15 	stw	r2,-20(fp)
 c0004f8:	e0bffb17 	ldw	r2,-20(fp)
 c0004fc:	10800790 	cmplti	r2,r2,30
 c000500:	103ff81e 	bne	r2,zero,c0004e4 <__alt_data_end+0xfc0004e4>
    {
        printf("\n");
    }

    printf("%d line(s) completed\n\n", state->completedLines);
 c000504:	e0bffd17 	ldw	r2,-12(fp)
 c000508:	10800417 	ldw	r2,16(r2)
 c00050c:	100b883a 	mov	r5,r2
 c000510:	010300b4 	movhi	r4,3074
 c000514:	2135d304 	addi	r4,r4,-10420
 c000518:	c004fc80 	call	c004fc8 <printf>

    for (y = 0; y < state->boardHeight; ++y)
 c00051c:	e03ffc15 	stw	zero,-16(fp)
 c000520:	00004d06 	br	c000658 <TetrisPrintBoard+0x198>
    {
        printf("|");
 c000524:	01001f04 	movi	r4,124
 c000528:	c00500c0 	call	c00500c <putchar>

        for (x = 0; x < state->boardWidth; ++x)
 c00052c:	e03ffb15 	stw	zero,-20(fp)
 c000530:	00003f06 	br	c000630 <TetrisPrintBoard+0x170>
        {
            if (x >= state->activeBlockX &&                              //
 c000534:	e0bffd17 	ldw	r2,-12(fp)
 c000538:	10800e17 	ldw	r2,56(r2)
 c00053c:	e0fffb17 	ldw	r3,-20(fp)
 c000540:	18802916 	blt	r3,r2,c0005e8 <TetrisPrintBoard+0x128>
                y >= state->activeBlockY &&                              //
 c000544:	e0bffd17 	ldw	r2,-12(fp)
 c000548:	10800f17 	ldw	r2,60(r2)
    {
        printf("|");

        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
 c00054c:	e0fffc17 	ldw	r3,-16(fp)
 c000550:	18802516 	blt	r3,r2,c0005e8 <TetrisPrintBoard+0x128>
                y >= state->activeBlockY &&                              //
                x < (state->activeBlockX + state->activeBlock.width) &&  //
 c000554:	e0bffd17 	ldw	r2,-12(fp)
 c000558:	10c00e17 	ldw	r3,56(r2)
 c00055c:	e0bffd17 	ldw	r2,-12(fp)
 c000560:	10800517 	ldw	r2,20(r2)
 c000564:	1885883a 	add	r2,r3,r2
        printf("|");

        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
                y >= state->activeBlockY &&                              //
 c000568:	e0fffb17 	ldw	r3,-20(fp)
 c00056c:	18801e0e 	bge	r3,r2,c0005e8 <TetrisPrintBoard+0x128>
                x < (state->activeBlockX + state->activeBlock.width) &&  //
                y < (state->activeBlockY + state->activeBlock.height) && //
 c000570:	e0bffd17 	ldw	r2,-12(fp)
 c000574:	10c00f17 	ldw	r3,60(r2)
 c000578:	e0bffd17 	ldw	r2,-12(fp)
 c00057c:	10800617 	ldw	r2,24(r2)
 c000580:	1885883a 	add	r2,r3,r2

        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
                y >= state->activeBlockY &&                              //
                x < (state->activeBlockX + state->activeBlock.width) &&  //
 c000584:	e0fffc17 	ldw	r3,-16(fp)
 c000588:	1880170e 	bge	r3,r2,c0005e8 <TetrisPrintBoard+0x128>
                y < (state->activeBlockY + state->activeBlock.height) && //
                state->activeBlock.data[y - state->activeBlockY]
 c00058c:	e0bffd17 	ldw	r2,-12(fp)
 c000590:	10800f17 	ldw	r2,60(r2)
 c000594:	e0fffc17 	ldw	r3,-16(fp)
 c000598:	1889c83a 	sub	r4,r3,r2
                                       [x - state->activeBlockX] != ' ')
 c00059c:	e0bffd17 	ldw	r2,-12(fp)
 c0005a0:	10800e17 	ldw	r2,56(r2)
 c0005a4:	e0fffb17 	ldw	r3,-20(fp)
 c0005a8:	18a1c83a 	sub	r16,r3,r2
 c0005ac:	e47ffd17 	ldw	r17,-12(fp)
 c0005b0:	01400144 	movi	r5,5
 c0005b4:	c00473c0 	call	c00473c <__mulsi3>
 c0005b8:	8885883a 	add	r2,r17,r2
 c0005bc:	1405883a 	add	r2,r2,r16
 c0005c0:	10800704 	addi	r2,r2,28
 c0005c4:	10800003 	ldbu	r2,0(r2)
        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
                y >= state->activeBlockY &&                              //
                x < (state->activeBlockX + state->activeBlock.width) &&  //
                y < (state->activeBlockY + state->activeBlock.height) && //
 c0005c8:	10803fcc 	andi	r2,r2,255
 c0005cc:	1080201c 	xori	r2,r2,128
 c0005d0:	10bfe004 	addi	r2,r2,-128
 c0005d4:	10800820 	cmpeqi	r2,r2,32
 c0005d8:	1000031e 	bne	r2,zero,c0005e8 <TetrisPrintBoard+0x128>
                state->activeBlock.data[y - state->activeBlockY]
                                       [x - state->activeBlockX] != ' ')
            {
                printf("X");
 c0005dc:	01001604 	movi	r4,88
 c0005e0:	c00500c0 	call	c00500c <putchar>
 c0005e4:	00000f06 	br	c000624 <TetrisPrintBoard+0x164>
            }
            else
            {
                printf("%c", state->board[x][y]);
 c0005e8:	e0bffd17 	ldw	r2,-12(fp)
 c0005ec:	10c00017 	ldw	r3,0(r2)
 c0005f0:	e0bffb17 	ldw	r2,-20(fp)
 c0005f4:	1085883a 	add	r2,r2,r2
 c0005f8:	1085883a 	add	r2,r2,r2
 c0005fc:	1885883a 	add	r2,r3,r2
 c000600:	10c00017 	ldw	r3,0(r2)
 c000604:	e0bffc17 	ldw	r2,-16(fp)
 c000608:	1885883a 	add	r2,r3,r2
 c00060c:	10800003 	ldbu	r2,0(r2)
 c000610:	10803fcc 	andi	r2,r2,255
 c000614:	1080201c 	xori	r2,r2,128
 c000618:	10bfe004 	addi	r2,r2,-128
 c00061c:	1009883a 	mov	r4,r2
 c000620:	c00500c0 	call	c00500c <putchar>

    for (y = 0; y < state->boardHeight; ++y)
    {
        printf("|");

        for (x = 0; x < state->boardWidth; ++x)
 c000624:	e0bffb17 	ldw	r2,-20(fp)
 c000628:	10800044 	addi	r2,r2,1
 c00062c:	e0bffb15 	stw	r2,-20(fp)
 c000630:	e0bffd17 	ldw	r2,-12(fp)
 c000634:	10800117 	ldw	r2,4(r2)
 c000638:	e0fffb17 	ldw	r3,-20(fp)
 c00063c:	18bfbd16 	blt	r3,r2,c000534 <__alt_data_end+0xfc000534>
            {
                printf("%c", state->board[x][y]);
            }
        }

        printf("|\n");
 c000640:	010300b4 	movhi	r4,3074
 c000644:	2135d904 	addi	r4,r4,-10396
 c000648:	c0050e40 	call	c0050e4 <puts>
        printf("\n");
    }

    printf("%d line(s) completed\n\n", state->completedLines);

    for (y = 0; y < state->boardHeight; ++y)
 c00064c:	e0bffc17 	ldw	r2,-16(fp)
 c000650:	10800044 	addi	r2,r2,1
 c000654:	e0bffc15 	stw	r2,-16(fp)
 c000658:	e0bffd17 	ldw	r2,-12(fp)
 c00065c:	10800217 	ldw	r2,8(r2)
 c000660:	e0fffc17 	ldw	r3,-16(fp)
 c000664:	18bfaf16 	blt	r3,r2,c000524 <__alt_data_end+0xfc000524>
        }

        printf("|\n");
    }

    for (x = 0; x < state->boardWidth + 2; ++x)
 c000668:	e03ffb15 	stw	zero,-20(fp)
 c00066c:	00000506 	br	c000684 <TetrisPrintBoard+0x1c4>
    {
        printf("-");
 c000670:	01000b44 	movi	r4,45
 c000674:	c00500c0 	call	c00500c <putchar>
        }

        printf("|\n");
    }

    for (x = 0; x < state->boardWidth + 2; ++x)
 c000678:	e0bffb17 	ldw	r2,-20(fp)
 c00067c:	10800044 	addi	r2,r2,1
 c000680:	e0bffb15 	stw	r2,-20(fp)
 c000684:	e0bffd17 	ldw	r2,-12(fp)
 c000688:	10800117 	ldw	r2,4(r2)
 c00068c:	10800084 	addi	r2,r2,2
 c000690:	e0fffb17 	ldw	r3,-20(fp)
 c000694:	18bff616 	blt	r3,r2,c000670 <__alt_data_end+0xfc000670>
    {
        printf("-");
    }

    printf("\n");
 c000698:	01000284 	movi	r4,10
 c00069c:	c00500c0 	call	c00500c <putchar>
}
 c0006a0:	0001883a 	nop
 c0006a4:	e6fffe04 	addi	sp,fp,-8
 c0006a8:	dfc00317 	ldw	ra,12(sp)
 c0006ac:	df000217 	ldw	fp,8(sp)
 c0006b0:	dc400117 	ldw	r17,4(sp)
 c0006b4:	dc000017 	ldw	r16,0(sp)
 c0006b8:	dec00404 	addi	sp,sp,16
 c0006bc:	f800283a 	ret

0c0006c0 <TetrisCheckCollision>:

int TetrisCheckCollision(TetrisGameState* state)
{
 c0006c0:	defff004 	addi	sp,sp,-64
 c0006c4:	dfc00f15 	stw	ra,60(sp)
 c0006c8:	df000e15 	stw	fp,56(sp)
 c0006cc:	df000e04 	addi	fp,sp,56
 c0006d0:	e13fff15 	stw	r4,-4(fp)
    int x, y, X, Y;

    TetrisBlock b = state->activeBlock;
 c0006d4:	e0bfff17 	ldw	r2,-4(fp)
 c0006d8:	10c00517 	ldw	r3,20(r2)
 c0006dc:	e0fff615 	stw	r3,-40(fp)
 c0006e0:	10c00617 	ldw	r3,24(r2)
 c0006e4:	e0fff715 	stw	r3,-36(fp)
 c0006e8:	10c00717 	ldw	r3,28(r2)
 c0006ec:	e0fff815 	stw	r3,-32(fp)
 c0006f0:	10c00817 	ldw	r3,32(r2)
 c0006f4:	e0fff915 	stw	r3,-28(fp)
 c0006f8:	10c00917 	ldw	r3,36(r2)
 c0006fc:	e0fffa15 	stw	r3,-24(fp)
 c000700:	10c00a17 	ldw	r3,40(r2)
 c000704:	e0fffb15 	stw	r3,-20(fp)
 c000708:	10c00b17 	ldw	r3,44(r2)
 c00070c:	e0fffc15 	stw	r3,-16(fp)
 c000710:	10c00c17 	ldw	r3,48(r2)
 c000714:	e0fffd15 	stw	r3,-12(fp)
 c000718:	10800d17 	ldw	r2,52(r2)
 c00071c:	e0bffe15 	stw	r2,-8(fp)

    for (x = 0; x < b.width; ++x)
 c000720:	e03ff215 	stw	zero,-56(fp)
 c000724:	00004906 	br	c00084c <TetrisCheckCollision+0x18c>
    {
        for (y = 0; y < b.height; ++y)
 c000728:	e03ff315 	stw	zero,-52(fp)
 c00072c:	00004106 	br	c000834 <TetrisCheckCollision+0x174>
        {
            X = state->activeBlockX + x;
 c000730:	e0bfff17 	ldw	r2,-4(fp)
 c000734:	10c00e17 	ldw	r3,56(r2)
 c000738:	e0bff217 	ldw	r2,-56(fp)
 c00073c:	1885883a 	add	r2,r3,r2
 c000740:	e0bff415 	stw	r2,-48(fp)
            Y = state->activeBlockY + y;
 c000744:	e0bfff17 	ldw	r2,-4(fp)
 c000748:	10c00f17 	ldw	r3,60(r2)
 c00074c:	e0bff317 	ldw	r2,-52(fp)
 c000750:	1885883a 	add	r2,r3,r2
 c000754:	e0bff515 	stw	r2,-44(fp)

            if (X < 0 || X >= state->boardWidth)
 c000758:	e0bff417 	ldw	r2,-48(fp)
 c00075c:	10000416 	blt	r2,zero,c000770 <TetrisCheckCollision+0xb0>
 c000760:	e0bfff17 	ldw	r2,-4(fp)
 c000764:	10800117 	ldw	r2,4(r2)
 c000768:	e0fff417 	ldw	r3,-48(fp)
 c00076c:	18800216 	blt	r3,r2,c000778 <TetrisCheckCollision+0xb8>
            {
                return 1;
 c000770:	00800044 	movi	r2,1
 c000774:	00003906 	br	c00085c <TetrisCheckCollision+0x19c>
            }

            if (b.data[y][x] != ' ')
 c000778:	e0bff317 	ldw	r2,-52(fp)
 c00077c:	01400144 	movi	r5,5
 c000780:	1009883a 	mov	r4,r2
 c000784:	c00473c0 	call	c00473c <__mulsi3>
 c000788:	e13ff204 	addi	r4,fp,-56
 c00078c:	2087883a 	add	r3,r4,r2
 c000790:	e0bff217 	ldw	r2,-56(fp)
 c000794:	1885883a 	add	r2,r3,r2
 c000798:	10800604 	addi	r2,r2,24
 c00079c:	10800003 	ldbu	r2,0(r2)
 c0007a0:	10803fcc 	andi	r2,r2,255
 c0007a4:	1080201c 	xori	r2,r2,128
 c0007a8:	10bfe004 	addi	r2,r2,-128
 c0007ac:	10800820 	cmpeqi	r2,r2,32
 c0007b0:	10001d1e 	bne	r2,zero,c000828 <TetrisCheckCollision+0x168>
            {
                if ((Y >= state->boardHeight) ||
 c0007b4:	e0bfff17 	ldw	r2,-4(fp)
 c0007b8:	10800217 	ldw	r2,8(r2)
 c0007bc:	e0fff517 	ldw	r3,-44(fp)
 c0007c0:	1880170e 	bge	r3,r2,c000820 <TetrisCheckCollision+0x160>
 c0007c4:	e0bff417 	ldw	r2,-48(fp)
 c0007c8:	10001716 	blt	r2,zero,c000828 <TetrisCheckCollision+0x168>
                    (X >= 0 && X < state->boardWidth && Y >= 0 &&
 c0007cc:	e0bfff17 	ldw	r2,-4(fp)
 c0007d0:	10800117 	ldw	r2,4(r2)
 c0007d4:	e0fff417 	ldw	r3,-48(fp)
 c0007d8:	1880130e 	bge	r3,r2,c000828 <TetrisCheckCollision+0x168>
 c0007dc:	e0bff517 	ldw	r2,-44(fp)
 c0007e0:	10001116 	blt	r2,zero,c000828 <TetrisCheckCollision+0x168>
                        state->board[X][Y] != ' '))
 c0007e4:	e0bfff17 	ldw	r2,-4(fp)
 c0007e8:	10c00017 	ldw	r3,0(r2)
 c0007ec:	e0bff417 	ldw	r2,-48(fp)
 c0007f0:	1085883a 	add	r2,r2,r2
 c0007f4:	1085883a 	add	r2,r2,r2
 c0007f8:	1885883a 	add	r2,r3,r2
 c0007fc:	10c00017 	ldw	r3,0(r2)
 c000800:	e0bff517 	ldw	r2,-44(fp)
 c000804:	1885883a 	add	r2,r3,r2
 c000808:	10800003 	ldbu	r2,0(r2)
            }

            if (b.data[y][x] != ' ')
            {
                if ((Y >= state->boardHeight) ||
                    (X >= 0 && X < state->boardWidth && Y >= 0 &&
 c00080c:	10803fcc 	andi	r2,r2,255
 c000810:	1080201c 	xori	r2,r2,128
 c000814:	10bfe004 	addi	r2,r2,-128
 c000818:	10800820 	cmpeqi	r2,r2,32
 c00081c:	1000021e 	bne	r2,zero,c000828 <TetrisCheckCollision+0x168>
                        state->board[X][Y] != ' '))
                {
                    return 1;
 c000820:	00800044 	movi	r2,1
 c000824:	00000d06 	br	c00085c <TetrisCheckCollision+0x19c>

    TetrisBlock b = state->activeBlock;

    for (x = 0; x < b.width; ++x)
    {
        for (y = 0; y < b.height; ++y)
 c000828:	e0bff317 	ldw	r2,-52(fp)
 c00082c:	10800044 	addi	r2,r2,1
 c000830:	e0bff315 	stw	r2,-52(fp)
 c000834:	e0bff717 	ldw	r2,-36(fp)
 c000838:	e0fff317 	ldw	r3,-52(fp)
 c00083c:	18bfbc16 	blt	r3,r2,c000730 <__alt_data_end+0xfc000730>
{
    int x, y, X, Y;

    TetrisBlock b = state->activeBlock;

    for (x = 0; x < b.width; ++x)
 c000840:	e0bff217 	ldw	r2,-56(fp)
 c000844:	10800044 	addi	r2,r2,1
 c000848:	e0bff215 	stw	r2,-56(fp)
 c00084c:	e0bff617 	ldw	r2,-40(fp)
 c000850:	e0fff217 	ldw	r3,-56(fp)
 c000854:	18bfb416 	blt	r3,r2,c000728 <__alt_data_end+0xfc000728>
                }
            }
        }
    }

    return 0;
 c000858:	0005883a 	mov	r2,zero
}
 c00085c:	e037883a 	mov	sp,fp
 c000860:	dfc00117 	ldw	ra,4(sp)
 c000864:	df000017 	ldw	fp,0(sp)
 c000868:	dec00204 	addi	sp,sp,8
 c00086c:	f800283a 	ret

0c000870 <TetrisCreateBlock>:

void TetrisCreateBlock(TetrisGameState* state)
{
 c000870:	defff304 	addi	sp,sp,-52
 c000874:	dfc00c15 	stw	ra,48(sp)
 c000878:	df000b15 	stw	fp,44(sp)
 c00087c:	dc000a15 	stw	r16,40(sp)
 c000880:	df000b04 	addi	fp,sp,44
 c000884:	e13ff515 	stw	r4,-44(fp)
    state->activeBlock = TetrisGetRandomTetrisBlock();
 c000888:	e43ff517 	ldw	r16,-44(fp)
 c00088c:	e0bff604 	addi	r2,fp,-40
 c000890:	1009883a 	mov	r4,r2
 c000894:	c00026c0 	call	c00026c <TetrisGetRandomTetrisBlock>
 c000898:	e0bff617 	ldw	r2,-40(fp)
 c00089c:	80800515 	stw	r2,20(r16)
 c0008a0:	e0bff717 	ldw	r2,-36(fp)
 c0008a4:	80800615 	stw	r2,24(r16)
 c0008a8:	e0bff817 	ldw	r2,-32(fp)
 c0008ac:	80800715 	stw	r2,28(r16)
 c0008b0:	e0bff917 	ldw	r2,-28(fp)
 c0008b4:	80800815 	stw	r2,32(r16)
 c0008b8:	e0bffa17 	ldw	r2,-24(fp)
 c0008bc:	80800915 	stw	r2,36(r16)
 c0008c0:	e0bffb17 	ldw	r2,-20(fp)
 c0008c4:	80800a15 	stw	r2,40(r16)
 c0008c8:	e0bffc17 	ldw	r2,-16(fp)
 c0008cc:	80800b15 	stw	r2,44(r16)
 c0008d0:	e0bffd17 	ldw	r2,-12(fp)
 c0008d4:	80800c15 	stw	r2,48(r16)
 c0008d8:	e0bffe17 	ldw	r2,-8(fp)
 c0008dc:	80800d15 	stw	r2,52(r16)

    state->activeBlockX =
        (state->boardWidth / 2) - (state->activeBlock.width / 2);
 c0008e0:	e0bff517 	ldw	r2,-44(fp)
 c0008e4:	10800117 	ldw	r2,4(r2)
 c0008e8:	1006d7fa 	srli	r3,r2,31
 c0008ec:	1885883a 	add	r2,r3,r2
 c0008f0:	1005d07a 	srai	r2,r2,1
 c0008f4:	1009883a 	mov	r4,r2
 c0008f8:	e0bff517 	ldw	r2,-44(fp)
 c0008fc:	10800517 	ldw	r2,20(r2)
 c000900:	1006d7fa 	srli	r3,r2,31
 c000904:	1885883a 	add	r2,r3,r2
 c000908:	1005d07a 	srai	r2,r2,1
 c00090c:	2087c83a 	sub	r3,r4,r2

void TetrisCreateBlock(TetrisGameState* state)
{
    state->activeBlock = TetrisGetRandomTetrisBlock();

    state->activeBlockX =
 c000910:	e0bff517 	ldw	r2,-44(fp)
 c000914:	10c00e15 	stw	r3,56(r2)
        (state->boardWidth / 2) - (state->activeBlock.width / 2);

    state->activeBlockY = 0;
 c000918:	e0bff517 	ldw	r2,-44(fp)
 c00091c:	10000f15 	stw	zero,60(r2)

    if (TetrisCheckCollision(state))
 c000920:	e13ff517 	ldw	r4,-44(fp)
 c000924:	c0006c00 	call	c0006c0 <TetrisCheckCollision>
 c000928:	10000326 	beq	r2,zero,c000938 <TetrisCreateBlock+0xc8>
    {
        state->dead = 1;
 c00092c:	e0bff517 	ldw	r2,-44(fp)
 c000930:	00c00044 	movi	r3,1
 c000934:	10c00315 	stw	r3,12(r2)
    }
}
 c000938:	0001883a 	nop
 c00093c:	e6ffff04 	addi	sp,fp,-4
 c000940:	dfc00217 	ldw	ra,8(sp)
 c000944:	df000117 	ldw	fp,4(sp)
 c000948:	dc000017 	ldw	r16,0(sp)
 c00094c:	dec00304 	addi	sp,sp,12
 c000950:	f800283a 	ret

0c000954 <TetrisPrintBlock>:

void TetrisPrintBlock(TetrisGameState* state)
{
 c000954:	defff104 	addi	sp,sp,-60
 c000958:	dfc00e15 	stw	ra,56(sp)
 c00095c:	df000d15 	stw	fp,52(sp)
 c000960:	dc000c15 	stw	r16,48(sp)
 c000964:	df000d04 	addi	fp,sp,52
 c000968:	e13ffe15 	stw	r4,-8(fp)
    TetrisBlock b = state->activeBlock;
 c00096c:	e0bffe17 	ldw	r2,-8(fp)
 c000970:	10c00517 	ldw	r3,20(r2)
 c000974:	e0fff515 	stw	r3,-44(fp)
 c000978:	10c00617 	ldw	r3,24(r2)
 c00097c:	e0fff615 	stw	r3,-40(fp)
 c000980:	10c00717 	ldw	r3,28(r2)
 c000984:	e0fff715 	stw	r3,-36(fp)
 c000988:	10c00817 	ldw	r3,32(r2)
 c00098c:	e0fff815 	stw	r3,-32(fp)
 c000990:	10c00917 	ldw	r3,36(r2)
 c000994:	e0fff915 	stw	r3,-28(fp)
 c000998:	10c00a17 	ldw	r3,40(r2)
 c00099c:	e0fffa15 	stw	r3,-24(fp)
 c0009a0:	10c00b17 	ldw	r3,44(r2)
 c0009a4:	e0fffb15 	stw	r3,-20(fp)
 c0009a8:	10c00c17 	ldw	r3,48(r2)
 c0009ac:	e0fffc15 	stw	r3,-16(fp)
 c0009b0:	10800d17 	ldw	r2,52(r2)
 c0009b4:	e0bffd15 	stw	r2,-12(fp)

    int x, y;

    for (x = 0; x < b.width; ++x)
 c0009b8:	e03ff315 	stw	zero,-52(fp)
 c0009bc:	00003406 	br	c000a90 <TetrisPrintBlock+0x13c>
    {
        for (y = 0; y < b.height; ++y)
 c0009c0:	e03ff415 	stw	zero,-48(fp)
 c0009c4:	00002c06 	br	c000a78 <TetrisPrintBlock+0x124>
        {
            if (b.data[y][x] != ' ')
 c0009c8:	e0bff417 	ldw	r2,-48(fp)
 c0009cc:	01400144 	movi	r5,5
 c0009d0:	1009883a 	mov	r4,r2
 c0009d4:	c00473c0 	call	c00473c <__mulsi3>
 c0009d8:	e13ff304 	addi	r4,fp,-52
 c0009dc:	2087883a 	add	r3,r4,r2
 c0009e0:	e0bff317 	ldw	r2,-52(fp)
 c0009e4:	1885883a 	add	r2,r3,r2
 c0009e8:	10800404 	addi	r2,r2,16
 c0009ec:	10800003 	ldbu	r2,0(r2)
 c0009f0:	10803fcc 	andi	r2,r2,255
 c0009f4:	1080201c 	xori	r2,r2,128
 c0009f8:	10bfe004 	addi	r2,r2,-128
 c0009fc:	10800820 	cmpeqi	r2,r2,32
 c000a00:	10001a1e 	bne	r2,zero,c000a6c <TetrisPrintBlock+0x118>
            {
                state->board[state->activeBlockX + x][state->activeBlockY + y] =
 c000a04:	e0bffe17 	ldw	r2,-8(fp)
 c000a08:	10c00017 	ldw	r3,0(r2)
 c000a0c:	e0bffe17 	ldw	r2,-8(fp)
 c000a10:	11000e17 	ldw	r4,56(r2)
 c000a14:	e0bff317 	ldw	r2,-52(fp)
 c000a18:	2085883a 	add	r2,r4,r2
 c000a1c:	1085883a 	add	r2,r2,r2
 c000a20:	1085883a 	add	r2,r2,r2
 c000a24:	1885883a 	add	r2,r3,r2
 c000a28:	10800017 	ldw	r2,0(r2)
 c000a2c:	e0fffe17 	ldw	r3,-8(fp)
 c000a30:	19000f17 	ldw	r4,60(r3)
 c000a34:	e0fff417 	ldw	r3,-48(fp)
 c000a38:	20c7883a 	add	r3,r4,r3
 c000a3c:	10e1883a 	add	r16,r2,r3
                    b.data[y][x];
 c000a40:	e0bff417 	ldw	r2,-48(fp)
 c000a44:	01400144 	movi	r5,5
 c000a48:	1009883a 	mov	r4,r2
 c000a4c:	c00473c0 	call	c00473c <__mulsi3>
 c000a50:	e13ff304 	addi	r4,fp,-52
 c000a54:	2087883a 	add	r3,r4,r2
 c000a58:	e0bff317 	ldw	r2,-52(fp)
 c000a5c:	1885883a 	add	r2,r3,r2
 c000a60:	10800404 	addi	r2,r2,16
 c000a64:	10800003 	ldbu	r2,0(r2)
    {
        for (y = 0; y < b.height; ++y)
        {
            if (b.data[y][x] != ' ')
            {
                state->board[state->activeBlockX + x][state->activeBlockY + y] =
 c000a68:	80800005 	stb	r2,0(r16)

    int x, y;

    for (x = 0; x < b.width; ++x)
    {
        for (y = 0; y < b.height; ++y)
 c000a6c:	e0bff417 	ldw	r2,-48(fp)
 c000a70:	10800044 	addi	r2,r2,1
 c000a74:	e0bff415 	stw	r2,-48(fp)
 c000a78:	e0bff617 	ldw	r2,-40(fp)
 c000a7c:	e0fff417 	ldw	r3,-48(fp)
 c000a80:	18bfd116 	blt	r3,r2,c0009c8 <__alt_data_end+0xfc0009c8>
{
    TetrisBlock b = state->activeBlock;

    int x, y;

    for (x = 0; x < b.width; ++x)
 c000a84:	e0bff317 	ldw	r2,-52(fp)
 c000a88:	10800044 	addi	r2,r2,1
 c000a8c:	e0bff315 	stw	r2,-52(fp)
 c000a90:	e0bff517 	ldw	r2,-44(fp)
 c000a94:	e0fff317 	ldw	r3,-52(fp)
 c000a98:	18bfc916 	blt	r3,r2,c0009c0 <__alt_data_end+0xfc0009c0>
                state->board[state->activeBlockX + x][state->activeBlockY + y] =
                    b.data[y][x];
            }
        }
    }
}
 c000a9c:	0001883a 	nop
 c000aa0:	e6ffff04 	addi	sp,fp,-4
 c000aa4:	dfc00217 	ldw	ra,8(sp)
 c000aa8:	df000117 	ldw	fp,4(sp)
 c000aac:	dc000017 	ldw	r16,0(sp)
 c000ab0:	dec00304 	addi	sp,sp,12
 c000ab4:	f800283a 	ret

0c000ab8 <TetrisRotateBlock>:

void TetrisRotateBlock(TetrisGameState* state)
{
 c000ab8:	deffe804 	addi	sp,sp,-96
 c000abc:	dfc01715 	stw	ra,92(sp)
 c000ac0:	df001615 	stw	fp,88(sp)
 c000ac4:	dc001515 	stw	r16,84(sp)
 c000ac8:	df001604 	addi	fp,sp,88
 c000acc:	e13ffe15 	stw	r4,-8(fp)
    TetrisBlock b = state->activeBlock;
 c000ad0:	e0bffe17 	ldw	r2,-8(fp)
 c000ad4:	10c00517 	ldw	r3,20(r2)
 c000ad8:	e0ffec15 	stw	r3,-80(fp)
 c000adc:	10c00617 	ldw	r3,24(r2)
 c000ae0:	e0ffed15 	stw	r3,-76(fp)
 c000ae4:	10c00717 	ldw	r3,28(r2)
 c000ae8:	e0ffee15 	stw	r3,-72(fp)
 c000aec:	10c00817 	ldw	r3,32(r2)
 c000af0:	e0ffef15 	stw	r3,-68(fp)
 c000af4:	10c00917 	ldw	r3,36(r2)
 c000af8:	e0fff015 	stw	r3,-64(fp)
 c000afc:	10c00a17 	ldw	r3,40(r2)
 c000b00:	e0fff115 	stw	r3,-60(fp)
 c000b04:	10c00b17 	ldw	r3,44(r2)
 c000b08:	e0fff215 	stw	r3,-56(fp)
 c000b0c:	10c00c17 	ldw	r3,48(r2)
 c000b10:	e0fff315 	stw	r3,-52(fp)
 c000b14:	10800d17 	ldw	r2,52(r2)
 c000b18:	e0bff415 	stw	r2,-48(fp)
    TetrisBlock s = b;
 c000b1c:	e0bfec17 	ldw	r2,-80(fp)
 c000b20:	e0bff515 	stw	r2,-44(fp)
 c000b24:	e0bfed17 	ldw	r2,-76(fp)
 c000b28:	e0bff615 	stw	r2,-40(fp)
 c000b2c:	e0bfee17 	ldw	r2,-72(fp)
 c000b30:	e0bff715 	stw	r2,-36(fp)
 c000b34:	e0bfef17 	ldw	r2,-68(fp)
 c000b38:	e0bff815 	stw	r2,-32(fp)
 c000b3c:	e0bff017 	ldw	r2,-64(fp)
 c000b40:	e0bff915 	stw	r2,-28(fp)
 c000b44:	e0bff117 	ldw	r2,-60(fp)
 c000b48:	e0bffa15 	stw	r2,-24(fp)
 c000b4c:	e0bff217 	ldw	r2,-56(fp)
 c000b50:	e0bffb15 	stw	r2,-20(fp)
 c000b54:	e0bff317 	ldw	r2,-52(fp)
 c000b58:	e0bffc15 	stw	r2,-16(fp)
 c000b5c:	e0bff417 	ldw	r2,-48(fp)
 c000b60:	e0bffd15 	stw	r2,-12(fp)

    int x, y;

    b.width = s.height;
 c000b64:	e0bff617 	ldw	r2,-40(fp)
 c000b68:	e0bfec15 	stw	r2,-80(fp)
    b.height = s.width;
 c000b6c:	e0bff517 	ldw	r2,-44(fp)
 c000b70:	e0bfed15 	stw	r2,-76(fp)

    for (x = 0; x < s.width; ++x)
 c000b74:	e03fea15 	stw	zero,-88(fp)
 c000b78:	00002206 	br	c000c04 <TetrisRotateBlock+0x14c>
    {
        for (y = 0; y < s.height; ++y)
 c000b7c:	e03feb15 	stw	zero,-84(fp)
 c000b80:	00001a06 	br	c000bec <TetrisRotateBlock+0x134>
        {
            b.data[x][y] = s.data[s.height - y - 1][x];
 c000b84:	e0fff617 	ldw	r3,-40(fp)
 c000b88:	e0bfeb17 	ldw	r2,-84(fp)
 c000b8c:	1885c83a 	sub	r2,r3,r2
 c000b90:	10bfffc4 	addi	r2,r2,-1
 c000b94:	01400144 	movi	r5,5
 c000b98:	1009883a 	mov	r4,r2
 c000b9c:	c00473c0 	call	c00473c <__mulsi3>
 c000ba0:	e13fea04 	addi	r4,fp,-88
 c000ba4:	2087883a 	add	r3,r4,r2
 c000ba8:	e0bfea17 	ldw	r2,-88(fp)
 c000bac:	1885883a 	add	r2,r3,r2
 c000bb0:	10800d04 	addi	r2,r2,52
 c000bb4:	14000003 	ldbu	r16,0(r2)
 c000bb8:	e0bfea17 	ldw	r2,-88(fp)
 c000bbc:	01400144 	movi	r5,5
 c000bc0:	1009883a 	mov	r4,r2
 c000bc4:	c00473c0 	call	c00473c <__mulsi3>
 c000bc8:	e13fea04 	addi	r4,fp,-88
 c000bcc:	2087883a 	add	r3,r4,r2
 c000bd0:	e0bfeb17 	ldw	r2,-84(fp)
 c000bd4:	1885883a 	add	r2,r3,r2
 c000bd8:	10800404 	addi	r2,r2,16
 c000bdc:	14000005 	stb	r16,0(r2)
    b.width = s.height;
    b.height = s.width;

    for (x = 0; x < s.width; ++x)
    {
        for (y = 0; y < s.height; ++y)
 c000be0:	e0bfeb17 	ldw	r2,-84(fp)
 c000be4:	10800044 	addi	r2,r2,1
 c000be8:	e0bfeb15 	stw	r2,-84(fp)
 c000bec:	e0bff617 	ldw	r2,-40(fp)
 c000bf0:	e0ffeb17 	ldw	r3,-84(fp)
 c000bf4:	18bfe316 	blt	r3,r2,c000b84 <__alt_data_end+0xfc000b84>
    int x, y;

    b.width = s.height;
    b.height = s.width;

    for (x = 0; x < s.width; ++x)
 c000bf8:	e0bfea17 	ldw	r2,-88(fp)
 c000bfc:	10800044 	addi	r2,r2,1
 c000c00:	e0bfea15 	stw	r2,-88(fp)
 c000c04:	e0bff517 	ldw	r2,-44(fp)
 c000c08:	e0ffea17 	ldw	r3,-88(fp)
 c000c0c:	18bfdb16 	blt	r3,r2,c000b7c <__alt_data_end+0xfc000b7c>
        {
            b.data[x][y] = s.data[s.height - y - 1][x];
        }
    }

    x = state->activeBlockX;
 c000c10:	e0bffe17 	ldw	r2,-8(fp)
 c000c14:	10800e17 	ldw	r2,56(r2)
 c000c18:	e0bfea15 	stw	r2,-88(fp)
    y = state->activeBlockY;
 c000c1c:	e0bffe17 	ldw	r2,-8(fp)
 c000c20:	10800f17 	ldw	r2,60(r2)
 c000c24:	e0bfeb15 	stw	r2,-84(fp)

    state->activeBlockX -= (b.width - s.width) / 2;
 c000c28:	e0bffe17 	ldw	r2,-8(fp)
 c000c2c:	10c00e17 	ldw	r3,56(r2)
 c000c30:	e13fec17 	ldw	r4,-80(fp)
 c000c34:	e0bff517 	ldw	r2,-44(fp)
 c000c38:	2085c83a 	sub	r2,r4,r2
 c000c3c:	1008d7fa 	srli	r4,r2,31
 c000c40:	2085883a 	add	r2,r4,r2
 c000c44:	1005d07a 	srai	r2,r2,1
 c000c48:	1887c83a 	sub	r3,r3,r2
 c000c4c:	e0bffe17 	ldw	r2,-8(fp)
 c000c50:	10c00e15 	stw	r3,56(r2)
    state->activeBlockY -= (b.height - s.height) / 2;
 c000c54:	e0bffe17 	ldw	r2,-8(fp)
 c000c58:	10c00f17 	ldw	r3,60(r2)
 c000c5c:	e13fed17 	ldw	r4,-76(fp)
 c000c60:	e0bff617 	ldw	r2,-40(fp)
 c000c64:	2085c83a 	sub	r2,r4,r2
 c000c68:	1008d7fa 	srli	r4,r2,31
 c000c6c:	2085883a 	add	r2,r4,r2
 c000c70:	1005d07a 	srai	r2,r2,1
 c000c74:	1887c83a 	sub	r3,r3,r2
 c000c78:	e0bffe17 	ldw	r2,-8(fp)
 c000c7c:	10c00f15 	stw	r3,60(r2)
    state->activeBlock = b;
 c000c80:	e0bffe17 	ldw	r2,-8(fp)
 c000c84:	e0ffec17 	ldw	r3,-80(fp)
 c000c88:	10c00515 	stw	r3,20(r2)
 c000c8c:	e0ffed17 	ldw	r3,-76(fp)
 c000c90:	10c00615 	stw	r3,24(r2)
 c000c94:	e0ffee17 	ldw	r3,-72(fp)
 c000c98:	10c00715 	stw	r3,28(r2)
 c000c9c:	e0ffef17 	ldw	r3,-68(fp)
 c000ca0:	10c00815 	stw	r3,32(r2)
 c000ca4:	e0fff017 	ldw	r3,-64(fp)
 c000ca8:	10c00915 	stw	r3,36(r2)
 c000cac:	e0fff117 	ldw	r3,-60(fp)
 c000cb0:	10c00a15 	stw	r3,40(r2)
 c000cb4:	e0fff217 	ldw	r3,-56(fp)
 c000cb8:	10c00b15 	stw	r3,44(r2)
 c000cbc:	e0fff317 	ldw	r3,-52(fp)
 c000cc0:	10c00c15 	stw	r3,48(r2)
 c000cc4:	e0fff417 	ldw	r3,-48(fp)
 c000cc8:	10c00d15 	stw	r3,52(r2)

    if (TetrisCheckCollision(state))
 c000ccc:	e13ffe17 	ldw	r4,-8(fp)
 c000cd0:	c0006c00 	call	c0006c0 <TetrisCheckCollision>
 c000cd4:	10001926 	beq	r2,zero,c000d3c <TetrisRotateBlock+0x284>
    {
        state->activeBlock = s;
 c000cd8:	e0bffe17 	ldw	r2,-8(fp)
 c000cdc:	e0fff517 	ldw	r3,-44(fp)
 c000ce0:	10c00515 	stw	r3,20(r2)
 c000ce4:	e0fff617 	ldw	r3,-40(fp)
 c000ce8:	10c00615 	stw	r3,24(r2)
 c000cec:	e0fff717 	ldw	r3,-36(fp)
 c000cf0:	10c00715 	stw	r3,28(r2)
 c000cf4:	e0fff817 	ldw	r3,-32(fp)
 c000cf8:	10c00815 	stw	r3,32(r2)
 c000cfc:	e0fff917 	ldw	r3,-28(fp)
 c000d00:	10c00915 	stw	r3,36(r2)
 c000d04:	e0fffa17 	ldw	r3,-24(fp)
 c000d08:	10c00a15 	stw	r3,40(r2)
 c000d0c:	e0fffb17 	ldw	r3,-20(fp)
 c000d10:	10c00b15 	stw	r3,44(r2)
 c000d14:	e0fffc17 	ldw	r3,-16(fp)
 c000d18:	10c00c15 	stw	r3,48(r2)
 c000d1c:	e0fffd17 	ldw	r3,-12(fp)
 c000d20:	10c00d15 	stw	r3,52(r2)
        state->activeBlockX = x;
 c000d24:	e0bffe17 	ldw	r2,-8(fp)
 c000d28:	e0ffea17 	ldw	r3,-88(fp)
 c000d2c:	10c00e15 	stw	r3,56(r2)
        state->activeBlockY = y;
 c000d30:	e0bffe17 	ldw	r2,-8(fp)
 c000d34:	e0ffeb17 	ldw	r3,-84(fp)
 c000d38:	10c00f15 	stw	r3,60(r2)
    }
}
 c000d3c:	0001883a 	nop
 c000d40:	e6ffff04 	addi	sp,fp,-4
 c000d44:	dfc00217 	ldw	ra,8(sp)
 c000d48:	df000117 	ldw	fp,4(sp)
 c000d4c:	dc000017 	ldw	r16,0(sp)
 c000d50:	dec00304 	addi	sp,sp,12
 c000d54:	f800283a 	ret

0c000d58 <TetrisFallBlocks>:

void TetrisFallBlocks(TetrisGameState* state)
{
 c000d58:	defffd04 	addi	sp,sp,-12
 c000d5c:	dfc00215 	stw	ra,8(sp)
 c000d60:	df000115 	stw	fp,4(sp)
 c000d64:	df000104 	addi	fp,sp,4
 c000d68:	e13fff15 	stw	r4,-4(fp)
	++state->activeBlockY;
 c000d6c:	e0bfff17 	ldw	r2,-4(fp)
 c000d70:	10800f17 	ldw	r2,60(r2)
 c000d74:	10c00044 	addi	r3,r2,1
 c000d78:	e0bfff17 	ldw	r2,-4(fp)
 c000d7c:	10c00f15 	stw	r3,60(r2)

	if (TetrisCheckCollision(state))
 c000d80:	e13fff17 	ldw	r4,-4(fp)
 c000d84:	c0006c00 	call	c0006c0 <TetrisCheckCollision>
 c000d88:	10000926 	beq	r2,zero,c000db0 <TetrisFallBlocks+0x58>
	{
		--state->activeBlockY;
 c000d8c:	e0bfff17 	ldw	r2,-4(fp)
 c000d90:	10800f17 	ldw	r2,60(r2)
 c000d94:	10ffffc4 	addi	r3,r2,-1
 c000d98:	e0bfff17 	ldw	r2,-4(fp)
 c000d9c:	10c00f15 	stw	r3,60(r2)
		TetrisPrintBlock(state);
 c000da0:	e13fff17 	ldw	r4,-4(fp)
 c000da4:	c0009540 	call	c000954 <TetrisPrintBlock>
		TetrisCreateBlock(state);
 c000da8:	e13fff17 	ldw	r4,-4(fp)
 c000dac:	c0008700 	call	c000870 <TetrisCreateBlock>
	}
}
 c000db0:	0001883a 	nop
 c000db4:	e037883a 	mov	sp,fp
 c000db8:	dfc00117 	ldw	ra,4(sp)
 c000dbc:	df000017 	ldw	fp,0(sp)
 c000dc0:	dec00204 	addi	sp,sp,8
 c000dc4:	f800283a 	ret

0c000dc8 <TetrisClearLine>:

void TetrisClearLine(TetrisGameState* state, int l)
{
 c000dc8:	defffb04 	addi	sp,sp,-20
 c000dcc:	df000415 	stw	fp,16(sp)
 c000dd0:	df000404 	addi	fp,sp,16
 c000dd4:	e13ffe15 	stw	r4,-8(fp)
 c000dd8:	e17fff15 	stw	r5,-4(fp)
    int x, y;

    for (y = l; y > 0; --y)
 c000ddc:	e0bfff17 	ldw	r2,-4(fp)
 c000de0:	e0bffd15 	stw	r2,-12(fp)
 c000de4:	00002106 	br	c000e6c <TetrisClearLine+0xa4>
    {
        for (x = 0; x < state->boardWidth; ++x)
 c000de8:	e03ffc15 	stw	zero,-16(fp)
 c000dec:	00001806 	br	c000e50 <TetrisClearLine+0x88>
        {
            state->board[x][y] = state->board[x][y - 1];
 c000df0:	e0bffe17 	ldw	r2,-8(fp)
 c000df4:	10c00017 	ldw	r3,0(r2)
 c000df8:	e0bffc17 	ldw	r2,-16(fp)
 c000dfc:	1085883a 	add	r2,r2,r2
 c000e00:	1085883a 	add	r2,r2,r2
 c000e04:	1885883a 	add	r2,r3,r2
 c000e08:	10c00017 	ldw	r3,0(r2)
 c000e0c:	e0bffd17 	ldw	r2,-12(fp)
 c000e10:	1887883a 	add	r3,r3,r2
 c000e14:	e0bffe17 	ldw	r2,-8(fp)
 c000e18:	11000017 	ldw	r4,0(r2)
 c000e1c:	e0bffc17 	ldw	r2,-16(fp)
 c000e20:	1085883a 	add	r2,r2,r2
 c000e24:	1085883a 	add	r2,r2,r2
 c000e28:	2085883a 	add	r2,r4,r2
 c000e2c:	11000017 	ldw	r4,0(r2)
 c000e30:	e0bffd17 	ldw	r2,-12(fp)
 c000e34:	10bfffc4 	addi	r2,r2,-1
 c000e38:	2085883a 	add	r2,r4,r2
 c000e3c:	10800003 	ldbu	r2,0(r2)
 c000e40:	18800005 	stb	r2,0(r3)
{
    int x, y;

    for (y = l; y > 0; --y)
    {
        for (x = 0; x < state->boardWidth; ++x)
 c000e44:	e0bffc17 	ldw	r2,-16(fp)
 c000e48:	10800044 	addi	r2,r2,1
 c000e4c:	e0bffc15 	stw	r2,-16(fp)
 c000e50:	e0bffe17 	ldw	r2,-8(fp)
 c000e54:	10800117 	ldw	r2,4(r2)
 c000e58:	e0fffc17 	ldw	r3,-16(fp)
 c000e5c:	18bfe416 	blt	r3,r2,c000df0 <__alt_data_end+0xfc000df0>

void TetrisClearLine(TetrisGameState* state, int l)
{
    int x, y;

    for (y = l; y > 0; --y)
 c000e60:	e0bffd17 	ldw	r2,-12(fp)
 c000e64:	10bfffc4 	addi	r2,r2,-1
 c000e68:	e0bffd15 	stw	r2,-12(fp)
 c000e6c:	e0bffd17 	ldw	r2,-12(fp)
 c000e70:	00bfdd16 	blt	zero,r2,c000de8 <__alt_data_end+0xfc000de8>
        {
            state->board[x][y] = state->board[x][y - 1];
        }
    }

    for (x = 0; x < state->boardWidth; ++x)
 c000e74:	e03ffc15 	stw	zero,-16(fp)
 c000e78:	00000c06 	br	c000eac <TetrisClearLine+0xe4>
    {
        state->board[x][0] = ' ';
 c000e7c:	e0bffe17 	ldw	r2,-8(fp)
 c000e80:	10c00017 	ldw	r3,0(r2)
 c000e84:	e0bffc17 	ldw	r2,-16(fp)
 c000e88:	1085883a 	add	r2,r2,r2
 c000e8c:	1085883a 	add	r2,r2,r2
 c000e90:	1885883a 	add	r2,r3,r2
 c000e94:	10800017 	ldw	r2,0(r2)
 c000e98:	00c00804 	movi	r3,32
 c000e9c:	10c00005 	stb	r3,0(r2)
        {
            state->board[x][y] = state->board[x][y - 1];
        }
    }

    for (x = 0; x < state->boardWidth; ++x)
 c000ea0:	e0bffc17 	ldw	r2,-16(fp)
 c000ea4:	10800044 	addi	r2,r2,1
 c000ea8:	e0bffc15 	stw	r2,-16(fp)
 c000eac:	e0bffe17 	ldw	r2,-8(fp)
 c000eb0:	10800117 	ldw	r2,4(r2)
 c000eb4:	e0fffc17 	ldw	r3,-16(fp)
 c000eb8:	18bff016 	blt	r3,r2,c000e7c <__alt_data_end+0xfc000e7c>
    {
        state->board[x][0] = ' ';
    }
}
 c000ebc:	0001883a 	nop
 c000ec0:	e037883a 	mov	sp,fp
 c000ec4:	df000017 	ldw	fp,0(sp)
 c000ec8:	dec00104 	addi	sp,sp,4
 c000ecc:	f800283a 	ret

0c000ed0 <TetrisCheckLineComplete>:

void TetrisCheckLineComplete(TetrisGameState* state)
{
 c000ed0:	defffa04 	addi	sp,sp,-24
 c000ed4:	dfc00515 	stw	ra,20(sp)
 c000ed8:	df000415 	stw	fp,16(sp)
 c000edc:	df000404 	addi	fp,sp,16
 c000ee0:	e13fff15 	stw	r4,-4(fp)
    int x, y, l;

    for (y = state->boardHeight - 1; y >= 0; --y)
 c000ee4:	e0bfff17 	ldw	r2,-4(fp)
 c000ee8:	10800217 	ldw	r2,8(r2)
 c000eec:	10bfffc4 	addi	r2,r2,-1
 c000ef0:	e0bffd15 	stw	r2,-12(fp)
 c000ef4:	00003406 	br	c000fc8 <TetrisCheckLineComplete+0xf8>
    {
        l = 1;
 c000ef8:	00800044 	movi	r2,1
 c000efc:	e0bffe15 	stw	r2,-8(fp)

        for (x = 0; x < state->boardWidth && l; ++x)
 c000f00:	e03ffc15 	stw	zero,-16(fp)
 c000f04:	00001306 	br	c000f54 <TetrisCheckLineComplete+0x84>
        {
            if (state->board[x][y] == ' ')
 c000f08:	e0bfff17 	ldw	r2,-4(fp)
 c000f0c:	10c00017 	ldw	r3,0(r2)
 c000f10:	e0bffc17 	ldw	r2,-16(fp)
 c000f14:	1085883a 	add	r2,r2,r2
 c000f18:	1085883a 	add	r2,r2,r2
 c000f1c:	1885883a 	add	r2,r3,r2
 c000f20:	10c00017 	ldw	r3,0(r2)
 c000f24:	e0bffd17 	ldw	r2,-12(fp)
 c000f28:	1885883a 	add	r2,r3,r2
 c000f2c:	10800003 	ldbu	r2,0(r2)
 c000f30:	10803fcc 	andi	r2,r2,255
 c000f34:	1080201c 	xori	r2,r2,128
 c000f38:	10bfe004 	addi	r2,r2,-128
 c000f3c:	10800818 	cmpnei	r2,r2,32
 c000f40:	1000011e 	bne	r2,zero,c000f48 <TetrisCheckLineComplete+0x78>
            //if (state->colorValue[x][y] == ' ')
            {
                l = 0;
 c000f44:	e03ffe15 	stw	zero,-8(fp)

    for (y = state->boardHeight - 1; y >= 0; --y)
    {
        l = 1;

        for (x = 0; x < state->boardWidth && l; ++x)
 c000f48:	e0bffc17 	ldw	r2,-16(fp)
 c000f4c:	10800044 	addi	r2,r2,1
 c000f50:	e0bffc15 	stw	r2,-16(fp)
 c000f54:	e0bfff17 	ldw	r2,-4(fp)
 c000f58:	10800117 	ldw	r2,4(r2)
 c000f5c:	e0fffc17 	ldw	r3,-16(fp)
 c000f60:	1880020e 	bge	r3,r2,c000f6c <TetrisCheckLineComplete+0x9c>
 c000f64:	e0bffe17 	ldw	r2,-8(fp)
 c000f68:	103fe71e 	bne	r2,zero,c000f08 <__alt_data_end+0xfc000f08>
            {
                l = 0;
            }
        }

        if (l)
 c000f6c:	e0bffe17 	ldw	r2,-8(fp)
 c000f70:	10001226 	beq	r2,zero,c000fbc <TetrisCheckLineComplete+0xec>
        {
            ++(state->completedLines);
 c000f74:	e0bfff17 	ldw	r2,-4(fp)
 c000f78:	10800417 	ldw	r2,16(r2)
 c000f7c:	10c00044 	addi	r3,r2,1
 c000f80:	e0bfff17 	ldw	r2,-4(fp)
 c000f84:	10c00415 	stw	r3,16(r2)
            TetrisClearLine(state, y);
 c000f88:	e17ffd17 	ldw	r5,-12(fp)
 c000f8c:	e13fff17 	ldw	r4,-4(fp)
 c000f90:	c000dc80 	call	c000dc8 <TetrisClearLine>
            printf("%d line(s) completed at %d\n\n", state->completedLines, y);
 c000f94:	e0bfff17 	ldw	r2,-4(fp)
 c000f98:	10800417 	ldw	r2,16(r2)
 c000f9c:	e1bffd17 	ldw	r6,-12(fp)
 c000fa0:	100b883a 	mov	r5,r2
 c000fa4:	010300b4 	movhi	r4,3074
 c000fa8:	2135da04 	addi	r4,r4,-10392
 c000fac:	c004fc80 	call	c004fc8 <printf>
            ++y;
 c000fb0:	e0bffd17 	ldw	r2,-12(fp)
 c000fb4:	10800044 	addi	r2,r2,1
 c000fb8:	e0bffd15 	stw	r2,-12(fp)

void TetrisCheckLineComplete(TetrisGameState* state)
{
    int x, y, l;

    for (y = state->boardHeight - 1; y >= 0; --y)
 c000fbc:	e0bffd17 	ldw	r2,-12(fp)
 c000fc0:	10bfffc4 	addi	r2,r2,-1
 c000fc4:	e0bffd15 	stw	r2,-12(fp)
 c000fc8:	e0bffd17 	ldw	r2,-12(fp)
 c000fcc:	103fca0e 	bge	r2,zero,c000ef8 <__alt_data_end+0xfc000ef8>
            TetrisClearLine(state, y);
            printf("%d line(s) completed at %d\n\n", state->completedLines, y);
            ++y;
        }
    }
}
 c000fd0:	0001883a 	nop
 c000fd4:	e037883a 	mov	sp,fp
 c000fd8:	dfc00117 	ldw	ra,4(sp)
 c000fdc:	df000017 	ldw	fp,0(sp)
 c000fe0:	dec00204 	addi	sp,sp,8
 c000fe4:	f800283a 	ret

0c000fe8 <TetrisInputLeft>:

void TetrisInputLeft(TetrisGameState* state)
{
 c000fe8:	defffd04 	addi	sp,sp,-12
 c000fec:	dfc00215 	stw	ra,8(sp)
 c000ff0:	df000115 	stw	fp,4(sp)
 c000ff4:	df000104 	addi	fp,sp,4
 c000ff8:	e13fff15 	stw	r4,-4(fp)
    --state->activeBlockX;
 c000ffc:	e0bfff17 	ldw	r2,-4(fp)
 c001000:	10800e17 	ldw	r2,56(r2)
 c001004:	10ffffc4 	addi	r3,r2,-1
 c001008:	e0bfff17 	ldw	r2,-4(fp)
 c00100c:	10c00e15 	stw	r3,56(r2)

    if (TetrisCheckCollision(state))
 c001010:	e13fff17 	ldw	r4,-4(fp)
 c001014:	c0006c00 	call	c0006c0 <TetrisCheckCollision>
 c001018:	10000526 	beq	r2,zero,c001030 <TetrisInputLeft+0x48>
    {
        ++state->activeBlockX;
 c00101c:	e0bfff17 	ldw	r2,-4(fp)
 c001020:	10800e17 	ldw	r2,56(r2)
 c001024:	10c00044 	addi	r3,r2,1
 c001028:	e0bfff17 	ldw	r2,-4(fp)
 c00102c:	10c00e15 	stw	r3,56(r2)
    }
}
 c001030:	0001883a 	nop
 c001034:	e037883a 	mov	sp,fp
 c001038:	dfc00117 	ldw	ra,4(sp)
 c00103c:	df000017 	ldw	fp,0(sp)
 c001040:	dec00204 	addi	sp,sp,8
 c001044:	f800283a 	ret

0c001048 <TetrisInputRight>:

void TetrisInputRight(TetrisGameState* state)
{
 c001048:	defffd04 	addi	sp,sp,-12
 c00104c:	dfc00215 	stw	ra,8(sp)
 c001050:	df000115 	stw	fp,4(sp)
 c001054:	df000104 	addi	fp,sp,4
 c001058:	e13fff15 	stw	r4,-4(fp)
    ++state->activeBlockX;
 c00105c:	e0bfff17 	ldw	r2,-4(fp)
 c001060:	10800e17 	ldw	r2,56(r2)
 c001064:	10c00044 	addi	r3,r2,1
 c001068:	e0bfff17 	ldw	r2,-4(fp)
 c00106c:	10c00e15 	stw	r3,56(r2)

    if (TetrisCheckCollision(state))
 c001070:	e13fff17 	ldw	r4,-4(fp)
 c001074:	c0006c00 	call	c0006c0 <TetrisCheckCollision>
 c001078:	10000526 	beq	r2,zero,c001090 <TetrisInputRight+0x48>
    {
        --state->activeBlockX;
 c00107c:	e0bfff17 	ldw	r2,-4(fp)
 c001080:	10800e17 	ldw	r2,56(r2)
 c001084:	10ffffc4 	addi	r3,r2,-1
 c001088:	e0bfff17 	ldw	r2,-4(fp)
 c00108c:	10c00e15 	stw	r3,56(r2)
    }
}
 c001090:	0001883a 	nop
 c001094:	e037883a 	mov	sp,fp
 c001098:	dfc00117 	ldw	ra,4(sp)
 c00109c:	df000017 	ldw	fp,0(sp)
 c0010a0:	dec00204 	addi	sp,sp,8
 c0010a4:	f800283a 	ret

0c0010a8 <TetrisMain>:

void TetrisMain(int boardWidth, int boardHeight)
{
 c0010a8:	deffeb04 	addi	sp,sp,-84
 c0010ac:	dfc01415 	stw	ra,80(sp)
 c0010b0:	df001315 	stw	fp,76(sp)
 c0010b4:	df001304 	addi	fp,sp,76
 c0010b8:	e13ffe15 	stw	r4,-8(fp)
 c0010bc:	e17fff15 	stw	r5,-4(fp)
    TetrisGameState state;

    TetrisInitialize(&state, boardWidth, boardHeight);
 c0010c0:	e1bfff17 	ldw	r6,-4(fp)
 c0010c4:	e17ffe17 	ldw	r5,-8(fp)
 c0010c8:	e13fed04 	addi	r4,fp,-76
 c0010cc:	c0003240 	call	c000324 <TetrisInitialize>
    TetrisCreateBlock(&state);
 c0010d0:	e13fed04 	addi	r4,fp,-76
 c0010d4:	c0008700 	call	c000870 <TetrisCreateBlock>

    while (!state.dead)
 c0010d8:	00002706 	br	c001178 <TetrisMain+0xd0>
    {
        TetrisPrintBoard(&state);
 c0010dc:	e13fed04 	addi	r4,fp,-76
 c0010e0:	c0004c00 	call	c0004c0 <TetrisPrintBoard>
        TetrisFallBlocks(&state);
 c0010e4:	e13fed04 	addi	r4,fp,-76
 c0010e8:	c000d580 	call	c000d58 <TetrisFallBlocks>
        TetrisCheckLineComplete(&state);
 c0010ec:	e13fed04 	addi	r4,fp,-76
 c0010f0:	c000ed00 	call	c000ed0 <TetrisCheckLineComplete>

        char cmd;
        scanf("%c", &cmd);
 c0010f4:	e0bffd04 	addi	r2,fp,-12
 c0010f8:	100b883a 	mov	r5,r2
 c0010fc:	010300b4 	movhi	r4,3074
 c001100:	2135e204 	addi	r4,r4,-10360
 c001104:	c0051c80 	call	c0051c8 <scanf>

        switch (cmd)
 c001108:	e0bffd03 	ldbu	r2,-12(fp)
 c00110c:	10803fcc 	andi	r2,r2,255
 c001110:	1080201c 	xori	r2,r2,128
 c001114:	10bfe004 	addi	r2,r2,-128
 c001118:	10c01920 	cmpeqi	r3,r2,100
 c00111c:	18000d1e 	bne	r3,zero,c001154 <TetrisMain+0xac>
 c001120:	10c01948 	cmpgei	r3,r2,101
 c001124:	1800031e 	bne	r3,zero,c001134 <TetrisMain+0x8c>
 c001128:	10801860 	cmpeqi	r2,r2,97
 c00112c:	1000061e 	bne	r2,zero,c001148 <TetrisMain+0xa0>
 c001130:	00001106 	br	c001178 <TetrisMain+0xd0>
 c001134:	10c01ce0 	cmpeqi	r3,r2,115
 c001138:	1800091e 	bne	r3,zero,c001160 <TetrisMain+0xb8>
 c00113c:	10801de0 	cmpeqi	r2,r2,119
 c001140:	10000a1e 	bne	r2,zero,c00116c <TetrisMain+0xc4>
 c001144:	00000c06 	br	c001178 <TetrisMain+0xd0>
        {
            case 'a':
            {
                TetrisInputLeft(&state);
 c001148:	e13fed04 	addi	r4,fp,-76
 c00114c:	c000fe80 	call	c000fe8 <TetrisInputLeft>
                break;
 c001150:	00000906 	br	c001178 <TetrisMain+0xd0>
            }

            case 'd':
            {
                TetrisInputRight(&state);
 c001154:	e13fed04 	addi	r4,fp,-76
 c001158:	c0010480 	call	c001048 <TetrisInputRight>
                break;
 c00115c:	00000606 	br	c001178 <TetrisMain+0xd0>
            }

            case 's':
            {
                TetrisFallBlocks(&state);
 c001160:	e13fed04 	addi	r4,fp,-76
 c001164:	c000d580 	call	c000d58 <TetrisFallBlocks>
                break;
 c001168:	00000306 	br	c001178 <TetrisMain+0xd0>
            }

            case 'w':
            {
                TetrisRotateBlock(&state);
 c00116c:	e13fed04 	addi	r4,fp,-76
 c001170:	c000ab80 	call	c000ab8 <TetrisRotateBlock>
                break;
 c001174:	0001883a 	nop
    TetrisGameState state;

    TetrisInitialize(&state, boardWidth, boardHeight);
    TetrisCreateBlock(&state);

    while (!state.dead)
 c001178:	e0bff017 	ldw	r2,-64(fp)
 c00117c:	103fd726 	beq	r2,zero,c0010dc <__alt_data_end+0xfc0010dc>
                break;
            }
        }
    }

    TetrisPrintBoard(&state);
 c001180:	e13fed04 	addi	r4,fp,-76
 c001184:	c0004c00 	call	c0004c0 <TetrisPrintBoard>
    printf("GAME OVER\n");
 c001188:	010300b4 	movhi	r4,3074
 c00118c:	2135e304 	addi	r4,r4,-10356
 c001190:	c0050e40 	call	c0050e4 <puts>

    TetrisCleanup(&state);
 c001194:	e13fed04 	addi	r4,fp,-76
 c001198:	c00043c0 	call	c00043c <TetrisCleanup>
}
 c00119c:	0001883a 	nop
 c0011a0:	e037883a 	mov	sp,fp
 c0011a4:	dfc00117 	ldw	ra,4(sp)
 c0011a8:	df000017 	ldw	fp,0(sp)
 c0011ac:	dec00204 	addi	sp,sp,8
 c0011b0:	f800283a 	ret

0c0011b4 <GetDriverandReport>:

static BYTE addr = 1; 				//hard-wired USB address
const char* const devclasses[] = { " Uninitialized", " HID Keyboard", " HID Mouse", " Mass storage" };


BYTE GetDriverandReport() {
 c0011b4:	defff604 	addi	sp,sp,-40
 c0011b8:	dfc00915 	stw	ra,36(sp)
 c0011bc:	df000815 	stw	fp,32(sp)
 c0011c0:	df000804 	addi	fp,sp,32
	BYTE i;
	BYTE rcode;
	BYTE device = 0xFF;
 c0011c4:	00bfffc4 	movi	r2,-1
 c0011c8:	e0bffd45 	stb	r2,-11(fp)
	BYTE tmpbyte;

	DEV_RECORD* tpl_ptr;
	printf("Reached USB_STATE_RUNNING (0x40)\n");
 c0011cc:	010300b4 	movhi	r4,3074
 c0011d0:	2135f904 	addi	r4,r4,-10268
 c0011d4:	c0050e40 	call	c0050e4 <puts>
	for (i = 1; i < USB_NUMDEVICES; i++) {
 c0011d8:	00800044 	movi	r2,1
 c0011dc:	e0bffd05 	stb	r2,-12(fp)
 c0011e0:	00001f06 	br	c001260 <GetDriverandReport+0xac>
		tpl_ptr = GetDevtable(i);
 c0011e4:	e0bffd03 	ldbu	r2,-12(fp)
 c0011e8:	1009883a 	mov	r4,r2
 c0011ec:	c0044cc0 	call	c0044cc <GetDevtable>
 c0011f0:	e0bffe15 	stw	r2,-8(fp)
		if (tpl_ptr->epinfo != NULL) {
 c0011f4:	e0bffe17 	ldw	r2,-8(fp)
 c0011f8:	10800017 	ldw	r2,0(r2)
 c0011fc:	10001526 	beq	r2,zero,c001254 <GetDriverandReport+0xa0>
			printf("Device: %d", i);
 c001200:	e0bffd03 	ldbu	r2,-12(fp)
 c001204:	100b883a 	mov	r5,r2
 c001208:	010300b4 	movhi	r4,3074
 c00120c:	21360204 	addi	r4,r4,-10232
 c001210:	c004fc80 	call	c004fc8 <printf>
			printf("%s \n", devclasses[tpl_ptr->devclass]);
 c001214:	e0bffe17 	ldw	r2,-8(fp)
 c001218:	10800103 	ldbu	r2,4(r2)
 c00121c:	10c03fcc 	andi	r3,r2,255
 c001220:	008300b4 	movhi	r2,3074
 c001224:	10b5f504 	addi	r2,r2,-10284
 c001228:	18c7883a 	add	r3,r3,r3
 c00122c:	18c7883a 	add	r3,r3,r3
 c001230:	10c5883a 	add	r2,r2,r3
 c001234:	10800017 	ldw	r2,0(r2)
 c001238:	100b883a 	mov	r5,r2
 c00123c:	010300b4 	movhi	r4,3074
 c001240:	21360504 	addi	r4,r4,-10220
 c001244:	c004fc80 	call	c004fc8 <printf>
			device = tpl_ptr->devclass;
 c001248:	e0bffe17 	ldw	r2,-8(fp)
 c00124c:	10800103 	ldbu	r2,4(r2)
 c001250:	e0bffd45 	stb	r2,-11(fp)
	BYTE device = 0xFF;
	BYTE tmpbyte;

	DEV_RECORD* tpl_ptr;
	printf("Reached USB_STATE_RUNNING (0x40)\n");
	for (i = 1; i < USB_NUMDEVICES; i++) {
 c001254:	e0bffd03 	ldbu	r2,-12(fp)
 c001258:	10800044 	addi	r2,r2,1
 c00125c:	e0bffd05 	stb	r2,-12(fp)
 c001260:	e0bffd03 	ldbu	r2,-12(fp)
 c001264:	10800230 	cmpltui	r2,r2,8
 c001268:	103fde1e 	bne	r2,zero,c0011e4 <__alt_data_end+0xfc0011e4>
			printf("%s \n", devclasses[tpl_ptr->devclass]);
			device = tpl_ptr->devclass;
		}
	}
	//Query rate and protocol
	rcode = XferGetIdle(addr, 0, hid_device.interface, 0, &tmpbyte);
 c00126c:	d0a00003 	ldbu	r2,-32768(gp)
 c001270:	11003fcc 	andi	r4,r2,255
 c001274:	d0a79f43 	ldbu	r2,-24963(gp)
 c001278:	10803fcc 	andi	r2,r2,255
 c00127c:	e0ffff44 	addi	r3,fp,-3
 c001280:	d8c00415 	stw	r3,16(sp)
 c001284:	00c00044 	movi	r3,1
 c001288:	d8c00315 	stw	r3,12(sp)
 c00128c:	d8800215 	stw	r2,8(sp)
 c001290:	d8000115 	stw	zero,4(sp)
 c001294:	d8000015 	stw	zero,0(sp)
 c001298:	01c00084 	movi	r7,2
 c00129c:	01802844 	movi	r6,161
 c0012a0:	000b883a 	mov	r5,zero
 c0012a4:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c0012a8:	e0bfff05 	stb	r2,-4(fp)
	if (rcode) {   //error handling
 c0012ac:	e0bfff03 	ldbu	r2,-4(fp)
 c0012b0:	10000926 	beq	r2,zero,c0012d8 <GetDriverandReport+0x124>
		printf("GetIdle Error. Error code: ");
 c0012b4:	010300b4 	movhi	r4,3074
 c0012b8:	21360704 	addi	r4,r4,-10212
 c0012bc:	c004fc80 	call	c004fc8 <printf>
		printf("%x \n", rcode);
 c0012c0:	e0bfff03 	ldbu	r2,-4(fp)
 c0012c4:	100b883a 	mov	r5,r2
 c0012c8:	010300b4 	movhi	r4,3074
 c0012cc:	21360e04 	addi	r4,r4,-10184
 c0012d0:	c004fc80 	call	c004fc8 <printf>
 c0012d4:	00000906 	br	c0012fc <GetDriverandReport+0x148>
	} else {
		printf("Update rate: ");
 c0012d8:	010300b4 	movhi	r4,3074
 c0012dc:	21361004 	addi	r4,r4,-10176
 c0012e0:	c004fc80 	call	c004fc8 <printf>
		printf("%x \n", tmpbyte);
 c0012e4:	e0bfff43 	ldbu	r2,-3(fp)
 c0012e8:	10803fcc 	andi	r2,r2,255
 c0012ec:	100b883a 	mov	r5,r2
 c0012f0:	010300b4 	movhi	r4,3074
 c0012f4:	21360e04 	addi	r4,r4,-10184
 c0012f8:	c004fc80 	call	c004fc8 <printf>
	}
	printf("Protocol: ");
 c0012fc:	010300b4 	movhi	r4,3074
 c001300:	21361404 	addi	r4,r4,-10160
 c001304:	c004fc80 	call	c004fc8 <printf>
	rcode = XferGetProto(addr, 0, hid_device.interface, &tmpbyte);
 c001308:	d0a00003 	ldbu	r2,-32768(gp)
 c00130c:	11003fcc 	andi	r4,r2,255
 c001310:	d0a79f43 	ldbu	r2,-24963(gp)
 c001314:	10803fcc 	andi	r2,r2,255
 c001318:	e0ffff44 	addi	r3,fp,-3
 c00131c:	d8c00415 	stw	r3,16(sp)
 c001320:	00c00044 	movi	r3,1
 c001324:	d8c00315 	stw	r3,12(sp)
 c001328:	d8800215 	stw	r2,8(sp)
 c00132c:	d8000115 	stw	zero,4(sp)
 c001330:	d8000015 	stw	zero,0(sp)
 c001334:	01c000c4 	movi	r7,3
 c001338:	01802844 	movi	r6,161
 c00133c:	000b883a 	mov	r5,zero
 c001340:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c001344:	e0bfff05 	stb	r2,-4(fp)
	if (rcode) {   //error handling
 c001348:	e0bfff03 	ldbu	r2,-4(fp)
 c00134c:	10000926 	beq	r2,zero,c001374 <GetDriverandReport+0x1c0>
		printf("GetProto Error. Error code ");
 c001350:	010300b4 	movhi	r4,3074
 c001354:	21361704 	addi	r4,r4,-10148
 c001358:	c004fc80 	call	c004fc8 <printf>
		printf("%x \n", rcode);
 c00135c:	e0bfff03 	ldbu	r2,-4(fp)
 c001360:	100b883a 	mov	r5,r2
 c001364:	010300b4 	movhi	r4,3074
 c001368:	21360e04 	addi	r4,r4,-10184
 c00136c:	c004fc80 	call	c004fc8 <printf>
 c001370:	00000606 	br	c00138c <GetDriverandReport+0x1d8>
	} else {
		printf("%d \n", tmpbyte);
 c001374:	e0bfff43 	ldbu	r2,-3(fp)
 c001378:	10803fcc 	andi	r2,r2,255
 c00137c:	100b883a 	mov	r5,r2
 c001380:	010300b4 	movhi	r4,3074
 c001384:	21361e04 	addi	r4,r4,-10120
 c001388:	c004fc80 	call	c004fc8 <printf>
	}
	return device;
 c00138c:	e0bffd43 	ldbu	r2,-11(fp)
}
 c001390:	e037883a 	mov	sp,fp
 c001394:	dfc00117 	ldw	ra,4(sp)
 c001398:	df000017 	ldw	fp,0(sp)
 c00139c:	dec00204 	addi	sp,sp,8
 c0013a0:	f800283a 	ret

0c0013a4 <setLED>:

void setLED(int LED) {
 c0013a4:	defffe04 	addi	sp,sp,-8
 c0013a8:	df000115 	stw	fp,4(sp)
 c0013ac:	df000104 	addi	fp,sp,4
 c0013b0:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(LEDS_PIO_BASE,
 c0013b4:	00806804 	movi	r2,416
 c0013b8:	10c00037 	ldwio	r3,0(r2)
 c0013bc:	01000044 	movi	r4,1
 c0013c0:	e0bfff17 	ldw	r2,-4(fp)
 c0013c4:	2084983a 	sll	r2,r4,r2
 c0013c8:	1886b03a 	or	r3,r3,r2
 c0013cc:	00806804 	movi	r2,416
 c0013d0:	10c00035 	stwio	r3,0(r2)
			(IORD_ALTERA_AVALON_PIO_DATA(LEDS_PIO_BASE) | (0x001 << LED)));
}
 c0013d4:	0001883a 	nop
 c0013d8:	e037883a 	mov	sp,fp
 c0013dc:	df000017 	ldw	fp,0(sp)
 c0013e0:	dec00104 	addi	sp,sp,4
 c0013e4:	f800283a 	ret

0c0013e8 <clearLED>:

void clearLED(int LED) {
 c0013e8:	defffe04 	addi	sp,sp,-8
 c0013ec:	df000115 	stw	fp,4(sp)
 c0013f0:	df000104 	addi	fp,sp,4
 c0013f4:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(LEDS_PIO_BASE,
 c0013f8:	00806804 	movi	r2,416
 c0013fc:	10c00037 	ldwio	r3,0(r2)
 c001400:	01000044 	movi	r4,1
 c001404:	e0bfff17 	ldw	r2,-4(fp)
 c001408:	2084983a 	sll	r2,r4,r2
 c00140c:	0084303a 	nor	r2,zero,r2
 c001410:	1886703a 	and	r3,r3,r2
 c001414:	00806804 	movi	r2,416
 c001418:	10c00035 	stwio	r3,0(r2)
			(IORD_ALTERA_AVALON_PIO_DATA(LEDS_PIO_BASE) & ~(0x001 << LED)));

}
 c00141c:	0001883a 	nop
 c001420:	e037883a 	mov	sp,fp
 c001424:	df000017 	ldw	fp,0(sp)
 c001428:	dec00104 	addi	sp,sp,4
 c00142c:	f800283a 	ret

0c001430 <printSignedHex0>:

void printSignedHex0(signed char value) {
 c001430:	defffc04 	addi	sp,sp,-16
 c001434:	dfc00315 	stw	ra,12(sp)
 c001438:	df000215 	stw	fp,8(sp)
 c00143c:	df000204 	addi	fp,sp,8
 c001440:	2005883a 	mov	r2,r4
 c001444:	e0bfff05 	stb	r2,-4(fp)
	BYTE tens = 0;
 c001448:	e03ffe05 	stb	zero,-8(fp)
	BYTE ones = 0;
 c00144c:	e03ffe45 	stb	zero,-7(fp)
	WORD pio_val = IORD_ALTERA_AVALON_PIO_DATA(HEX_DIGITS_PIO_BASE);
 c001450:	00805404 	movi	r2,336
 c001454:	10800037 	ldwio	r2,0(r2)
 c001458:	e0bffe8d 	sth	r2,-6(fp)
	if (value < 0) {
 c00145c:	e0bfff07 	ldb	r2,-4(fp)
 c001460:	1000060e 	bge	r2,zero,c00147c <printSignedHex0+0x4c>
		setLED(11);
 c001464:	010002c4 	movi	r4,11
 c001468:	c0013a40 	call	c0013a4 <setLED>
		value = -value;
 c00146c:	e0bfff03 	ldbu	r2,-4(fp)
 c001470:	0085c83a 	sub	r2,zero,r2
 c001474:	e0bfff05 	stb	r2,-4(fp)
 c001478:	00000206 	br	c001484 <printSignedHex0+0x54>
	} else {
		clearLED(11);
 c00147c:	010002c4 	movi	r4,11
 c001480:	c0013e80 	call	c0013e8 <clearLED>
	}
	//handled hundreds
	if (value / 100)
 c001484:	e0bfff03 	ldbu	r2,-4(fp)
 c001488:	108018c4 	addi	r2,r2,99
 c00148c:	10803fcc 	andi	r2,r2,255
 c001490:	108031f0 	cmpltui	r2,r2,199
 c001494:	1000031e 	bne	r2,zero,c0014a4 <printSignedHex0+0x74>
		setLED(13);
 c001498:	01000344 	movi	r4,13
 c00149c:	c0013a40 	call	c0013a4 <setLED>
 c0014a0:	00000206 	br	c0014ac <printSignedHex0+0x7c>
	else
		clearLED(13);
 c0014a4:	01000344 	movi	r4,13
 c0014a8:	c0013e80 	call	c0013e8 <clearLED>

	value = value % 100;
 c0014ac:	e0bfff07 	ldb	r2,-4(fp)
 c0014b0:	01401904 	movi	r5,100
 c0014b4:	1009883a 	mov	r4,r2
 c0014b8:	c00460c0 	call	c00460c <__modsi3>
 c0014bc:	e0bfff05 	stb	r2,-4(fp)
	tens = value / 10;
 c0014c0:	e0bfff07 	ldb	r2,-4(fp)
 c0014c4:	01400284 	movi	r5,10
 c0014c8:	1009883a 	mov	r4,r2
 c0014cc:	c0045880 	call	c004588 <__divsi3>
 c0014d0:	e0bffe05 	stb	r2,-8(fp)
	ones = value % 10;
 c0014d4:	e0bfff07 	ldb	r2,-4(fp)
 c0014d8:	01400284 	movi	r5,10
 c0014dc:	1009883a 	mov	r4,r2
 c0014e0:	c00460c0 	call	c00460c <__modsi3>
 c0014e4:	e0bffe45 	stb	r2,-7(fp)

	pio_val &= 0x00FF;
 c0014e8:	e0bffe8b 	ldhu	r2,-6(fp)
 c0014ec:	10803fcc 	andi	r2,r2,255
 c0014f0:	e0bffe8d 	sth	r2,-6(fp)
	pio_val |= (tens << 12);
 c0014f4:	e0bffe03 	ldbu	r2,-8(fp)
 c0014f8:	1004933a 	slli	r2,r2,12
 c0014fc:	1007883a 	mov	r3,r2
 c001500:	e0bffe8b 	ldhu	r2,-6(fp)
 c001504:	1884b03a 	or	r2,r3,r2
 c001508:	e0bffe8d 	sth	r2,-6(fp)
	pio_val |= (ones << 8);
 c00150c:	e0bffe43 	ldbu	r2,-7(fp)
 c001510:	1004923a 	slli	r2,r2,8
 c001514:	1007883a 	mov	r3,r2
 c001518:	e0bffe8b 	ldhu	r2,-6(fp)
 c00151c:	1884b03a 	or	r2,r3,r2
 c001520:	e0bffe8d 	sth	r2,-6(fp)

	IOWR_ALTERA_AVALON_PIO_DATA(HEX_DIGITS_PIO_BASE, pio_val);
 c001524:	e0fffe8b 	ldhu	r3,-6(fp)
 c001528:	00805404 	movi	r2,336
 c00152c:	10c00035 	stwio	r3,0(r2)
}
 c001530:	0001883a 	nop
 c001534:	e037883a 	mov	sp,fp
 c001538:	dfc00117 	ldw	ra,4(sp)
 c00153c:	df000017 	ldw	fp,0(sp)
 c001540:	dec00204 	addi	sp,sp,8
 c001544:	f800283a 	ret

0c001548 <printSignedHex1>:

void printSignedHex1(signed char value) {
 c001548:	defffb04 	addi	sp,sp,-20
 c00154c:	dfc00415 	stw	ra,16(sp)
 c001550:	df000315 	stw	fp,12(sp)
 c001554:	df000304 	addi	fp,sp,12
 c001558:	2005883a 	mov	r2,r4
 c00155c:	e0bfff05 	stb	r2,-4(fp)
	BYTE tens = 0;
 c001560:	e03ffd05 	stb	zero,-12(fp)
	BYTE ones = 0;
 c001564:	e03ffd45 	stb	zero,-11(fp)
	DWORD pio_val = IORD_ALTERA_AVALON_PIO_DATA(HEX_DIGITS_PIO_BASE);
 c001568:	00805404 	movi	r2,336
 c00156c:	10800037 	ldwio	r2,0(r2)
 c001570:	e0bffe15 	stw	r2,-8(fp)
	if (value < 0) {
 c001574:	e0bfff07 	ldb	r2,-4(fp)
 c001578:	1000060e 	bge	r2,zero,c001594 <printSignedHex1+0x4c>
		setLED(10);
 c00157c:	01000284 	movi	r4,10
 c001580:	c0013a40 	call	c0013a4 <setLED>
		value = -value;
 c001584:	e0bfff03 	ldbu	r2,-4(fp)
 c001588:	0085c83a 	sub	r2,zero,r2
 c00158c:	e0bfff05 	stb	r2,-4(fp)
 c001590:	00000206 	br	c00159c <printSignedHex1+0x54>
	} else {
		clearLED(10);
 c001594:	01000284 	movi	r4,10
 c001598:	c0013e80 	call	c0013e8 <clearLED>
	}
	//handled hundreds
	if (value / 100)
 c00159c:	e0bfff03 	ldbu	r2,-4(fp)
 c0015a0:	108018c4 	addi	r2,r2,99
 c0015a4:	10803fcc 	andi	r2,r2,255
 c0015a8:	108031f0 	cmpltui	r2,r2,199
 c0015ac:	1000031e 	bne	r2,zero,c0015bc <printSignedHex1+0x74>
		setLED(12);
 c0015b0:	01000304 	movi	r4,12
 c0015b4:	c0013a40 	call	c0013a4 <setLED>
 c0015b8:	00000206 	br	c0015c4 <printSignedHex1+0x7c>
	else
		clearLED(12);
 c0015bc:	01000304 	movi	r4,12
 c0015c0:	c0013e80 	call	c0013e8 <clearLED>

	value = value % 100;
 c0015c4:	e0bfff07 	ldb	r2,-4(fp)
 c0015c8:	01401904 	movi	r5,100
 c0015cc:	1009883a 	mov	r4,r2
 c0015d0:	c00460c0 	call	c00460c <__modsi3>
 c0015d4:	e0bfff05 	stb	r2,-4(fp)
	tens = value / 10;
 c0015d8:	e0bfff07 	ldb	r2,-4(fp)
 c0015dc:	01400284 	movi	r5,10
 c0015e0:	1009883a 	mov	r4,r2
 c0015e4:	c0045880 	call	c004588 <__divsi3>
 c0015e8:	e0bffd05 	stb	r2,-12(fp)
	ones = value % 10;
 c0015ec:	e0bfff07 	ldb	r2,-4(fp)
 c0015f0:	01400284 	movi	r5,10
 c0015f4:	1009883a 	mov	r4,r2
 c0015f8:	c00460c0 	call	c00460c <__modsi3>
 c0015fc:	e0bffd45 	stb	r2,-11(fp)
	tens = value / 10;
 c001600:	e0bfff07 	ldb	r2,-4(fp)
 c001604:	01400284 	movi	r5,10
 c001608:	1009883a 	mov	r4,r2
 c00160c:	c0045880 	call	c004588 <__divsi3>
 c001610:	e0bffd05 	stb	r2,-12(fp)
	ones = value % 10;
 c001614:	e0bfff07 	ldb	r2,-4(fp)
 c001618:	01400284 	movi	r5,10
 c00161c:	1009883a 	mov	r4,r2
 c001620:	c00460c0 	call	c00460c <__modsi3>
 c001624:	e0bffd45 	stb	r2,-11(fp)

	pio_val &= 0xFF00;
 c001628:	e0bffe17 	ldw	r2,-8(fp)
 c00162c:	10bfc00c 	andi	r2,r2,65280
 c001630:	e0bffe15 	stw	r2,-8(fp)
	pio_val |= (tens << 4);
 c001634:	e0bffd03 	ldbu	r2,-12(fp)
 c001638:	1004913a 	slli	r2,r2,4
 c00163c:	1007883a 	mov	r3,r2
 c001640:	e0bffe17 	ldw	r2,-8(fp)
 c001644:	10c4b03a 	or	r2,r2,r3
 c001648:	e0bffe15 	stw	r2,-8(fp)
	pio_val |= (ones << 0);
 c00164c:	e0bffd43 	ldbu	r2,-11(fp)
 c001650:	e0fffe17 	ldw	r3,-8(fp)
 c001654:	1884b03a 	or	r2,r3,r2
 c001658:	e0bffe15 	stw	r2,-8(fp)

	IOWR_ALTERA_AVALON_PIO_DATA(HEX_DIGITS_PIO_BASE, pio_val);
 c00165c:	e0fffe17 	ldw	r3,-8(fp)
 c001660:	00805404 	movi	r2,336
 c001664:	10c00035 	stwio	r3,0(r2)
}
 c001668:	0001883a 	nop
 c00166c:	e037883a 	mov	sp,fp
 c001670:	dfc00117 	ldw	ra,4(sp)
 c001674:	df000017 	ldw	fp,0(sp)
 c001678:	dec00204 	addi	sp,sp,8
 c00167c:	f800283a 	ret

0c001680 <setKeycode>:

void setKeycode(WORD keycode) {
 c001680:	defffe04 	addi	sp,sp,-8
 c001684:	df000115 	stw	fp,4(sp)
 c001688:	df000104 	addi	fp,sp,4
 c00168c:	2005883a 	mov	r2,r4
 c001690:	e0bfff0d 	sth	r2,-4(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(0x00000160, keycode);
 c001694:	e0ffff0b 	ldhu	r3,-4(fp)
 c001698:	00805804 	movi	r2,352
 c00169c:	10c00035 	stwio	r3,0(r2)
}
 c0016a0:	0001883a 	nop
 c0016a4:	e037883a 	mov	sp,fp
 c0016a8:	df000017 	ldw	fp,0(sp)
 c0016ac:	dec00104 	addi	sp,sp,4
 c0016b0:	f800283a 	ret

0c0016b4 <keyInput>:



void keyInput() {
 c0016b4:	deffe604 	addi	sp,sp,-104
 c0016b8:	dfc01915 	stw	ra,100(sp)
 c0016bc:	df001815 	stw	fp,96(sp)
 c0016c0:	df001804 	addi	fp,sp,96
	TetrisGameState state;

    TetrisInitialize(&state, 10, 24);
 c0016c4:	e0bfec04 	addi	r2,fp,-80
 c0016c8:	01800604 	movi	r6,24
 c0016cc:	01400284 	movi	r5,10
 c0016d0:	1009883a 	mov	r4,r2
 c0016d4:	c0003240 	call	c000324 <TetrisInitialize>
    TetrisCreateBlock(&state);
 c0016d8:	e0bfec04 	addi	r2,fp,-80
 c0016dc:	1009883a 	mov	r4,r2
 c0016e0:	c0008700 	call	c000870 <TetrisCreateBlock>

	BYTE rcode;
	BOOT_MOUSE_REPORT buf;		//USB mouse report
	BOOT_KBD_REPORT kbdbuf;

	BYTE runningdebugflag = 0;//flag to dump out a bunch of information when we first get to USB_STATE_RUNNING
 c0016e4:	e03fe805 	stb	zero,-96(fp)
	BYTE errorflag = 0; //flag once we get an error device so we don't keep dumping out state info
 c0016e8:	e03fe845 	stb	zero,-95(fp)
	BYTE device;
	WORD keycode;

	printf("initializing MAX3421E...\n");
 c0016ec:	010300b4 	movhi	r4,3074
 c0016f0:	21362004 	addi	r4,r4,-10112
 c0016f4:	c0050e40 	call	c0050e4 <puts>
	MAX3421E_init();
 c0016f8:	c0034f80 	call	c0034f8 <MAX3421E_init>
	printf("initializing USB...\n");
 c0016fc:	010300b4 	movhi	r4,3074
 c001700:	21362704 	addi	r4,r4,-10084
 c001704:	c0050e40 	call	c0050e4 <puts>
	USB_init();
 c001708:	c003ca40 	call	c003ca4 <USB_init>
	int count = 0;
 c00170c:	e03fe915 	stw	zero,-92(fp)
	while (!state.dead) {
 c001710:	0000de06 	br	c001a8c <keyInput+0x3d8>

        //TetrisPrintBoard(&state);
		count++;
 c001714:	e0bfe917 	ldw	r2,-92(fp)
 c001718:	10800044 	addi	r2,r2,1
 c00171c:	e0bfe915 	stw	r2,-92(fp)
		if (count %2 == 0) {
 c001720:	e0bfe917 	ldw	r2,-92(fp)
 c001724:	1080004c 	andi	r2,r2,1
 c001728:	1000041e 	bne	r2,zero,c00173c <keyInput+0x88>
			//printf("cout %d", count);
			count = 0;
 c00172c:	e03fe915 	stw	zero,-92(fp)
			TetrisFallBlocks(&state);
 c001730:	e0bfec04 	addi	r2,fp,-80
 c001734:	1009883a 	mov	r4,r2
 c001738:	c000d580 	call	c000d58 <TetrisFallBlocks>
		}
		paintScreen(&state);
 c00173c:	e0bfec04 	addi	r2,fp,-80
 c001740:	1009883a 	mov	r4,r2
 c001744:	c001aac0 	call	c001aac <paintScreen>
		TetrisCheckLineComplete(&state);
 c001748:	e0bfec04 	addi	r2,fp,-80
 c00174c:	1009883a 	mov	r4,r2
 c001750:	c000ed00 	call	c000ed0 <TetrisCheckLineComplete>

		//printf(".");
		MAX3421E_Task();
 c001754:	c00358c0 	call	c00358c <MAX3421E_Task>
		USB_Task();
 c001758:	c003d3c0 	call	c003d3c <USB_Task>
		//usleep (500000);
		if (GetUsbTaskState() == USB_STATE_RUNNING) {
 c00175c:	c0044ac0 	call	c0044ac <GetUsbTaskState>
 c001760:	10803fcc 	andi	r2,r2,255
 c001764:	10801018 	cmpnei	r2,r2,64
 c001768:	1000a91e 	bne	r2,zero,c001a10 <keyInput+0x35c>
			if (!runningdebugflag) {
 c00176c:	e0bfe803 	ldbu	r2,-96(fp)
 c001770:	1000071e 	bne	r2,zero,c001790 <keyInput+0xdc>
				runningdebugflag = 1;
 c001774:	00800044 	movi	r2,1
 c001778:	e0bfe805 	stb	r2,-96(fp)
				setLED(9);
 c00177c:	01000244 	movi	r4,9
 c001780:	c0013a40 	call	c0013a4 <setLED>
				device = GetDriverandReport();
 c001784:	c0011b40 	call	c0011b4 <GetDriverandReport>
 c001788:	e0bfe885 	stb	r2,-94(fp)
 c00178c:	0000bf06 	br	c001a8c <keyInput+0x3d8>
			} else if (device == 1) {
 c001790:	e0bfe883 	ldbu	r2,-94(fp)
 c001794:	10800058 	cmpnei	r2,r2,1
 c001798:	1000bc1e 	bne	r2,zero,c001a8c <keyInput+0x3d8>
				//run keyboard debug polling
				rcode = kbdPoll(&kbdbuf);
 c00179c:	e0bffe04 	addi	r2,fp,-8
 c0017a0:	1009883a 	mov	r4,r2
 c0017a4:	c002dec0 	call	c002dec <kbdPoll>
 c0017a8:	e0bfeb05 	stb	r2,-84(fp)
				if (rcode == hrNAK) {
 c0017ac:	e0bfeb03 	ldbu	r2,-84(fp)
 c0017b0:	10800118 	cmpnei	r2,r2,4
 c0017b4:	1000011e 	bne	r2,zero,c0017bc <keyInput+0x108>
					continue; //NAK means no new data
 c0017b8:	0000b406 	br	c001a8c <keyInput+0x3d8>
				} else if (rcode) {
 c0017bc:	e0bfeb03 	ldbu	r2,-84(fp)
 c0017c0:	10000926 	beq	r2,zero,c0017e8 <keyInput+0x134>
					printf("Rcode: ");
 c0017c4:	010300b4 	movhi	r4,3074
 c0017c8:	21362c04 	addi	r4,r4,-10064
 c0017cc:	c004fc80 	call	c004fc8 <printf>
					printf("%x \n", rcode);
 c0017d0:	e0bfeb03 	ldbu	r2,-84(fp)
 c0017d4:	100b883a 	mov	r5,r2
 c0017d8:	010300b4 	movhi	r4,3074
 c0017dc:	21360e04 	addi	r4,r4,-10184
 c0017e0:	c004fc80 	call	c004fc8 <printf>
					continue;
 c0017e4:	0000a906 	br	c001a8c <keyInput+0x3d8>
				}
				//printf("keycodes: ");
				for (int i = 0; i < 6; i++) {
 c0017e8:	e03fea15 	stw	zero,-88(fp)
 c0017ec:	00007406 	br	c0019c0 <keyInput+0x30c>
					if (kbdbuf.keycode[i] != 0) {
 c0017f0:	e0fffe84 	addi	r3,fp,-6
 c0017f4:	e0bfea17 	ldw	r2,-88(fp)
 c0017f8:	1885883a 	add	r2,r3,r2
 c0017fc:	10800003 	ldbu	r2,0(r2)
 c001800:	10803fcc 	andi	r2,r2,255
 c001804:	10006b26 	beq	r2,zero,c0019b4 <keyInput+0x300>
						//printf("%x - ", kbdbuf.keycode[i]);
						if (kbdbuf.keycode[i] == 26 || kbdbuf.keycode[i] == 82) { //W
 c001808:	e0fffe84 	addi	r3,fp,-6
 c00180c:	e0bfea17 	ldw	r2,-88(fp)
 c001810:	1885883a 	add	r2,r3,r2
 c001814:	10800003 	ldbu	r2,0(r2)
 c001818:	10803fcc 	andi	r2,r2,255
 c00181c:	108006a0 	cmpeqi	r2,r2,26
 c001820:	1000071e 	bne	r2,zero,c001840 <keyInput+0x18c>
 c001824:	e0fffe84 	addi	r3,fp,-6
 c001828:	e0bfea17 	ldw	r2,-88(fp)
 c00182c:	1885883a 	add	r2,r3,r2
 c001830:	10800003 	ldbu	r2,0(r2)
 c001834:	10803fcc 	andi	r2,r2,255
 c001838:	10801498 	cmpnei	r2,r2,82
 c00183c:	1000071e 	bne	r2,zero,c00185c <keyInput+0x1a8>
							printf("W - ");
 c001840:	010300b4 	movhi	r4,3074
 c001844:	21362e04 	addi	r4,r4,-10056
 c001848:	c004fc80 	call	c004fc8 <printf>
			                TetrisRotateBlock(&state);
 c00184c:	e0bfec04 	addi	r2,fp,-80
 c001850:	1009883a 	mov	r4,r2
 c001854:	c000ab80 	call	c000ab8 <TetrisRotateBlock>
 c001858:	00005606 	br	c0019b4 <keyInput+0x300>
						} else if (kbdbuf.keycode[i] == 4 || kbdbuf.keycode[i] == 80) { //A
 c00185c:	e0fffe84 	addi	r3,fp,-6
 c001860:	e0bfea17 	ldw	r2,-88(fp)
 c001864:	1885883a 	add	r2,r3,r2
 c001868:	10800003 	ldbu	r2,0(r2)
 c00186c:	10803fcc 	andi	r2,r2,255
 c001870:	10800120 	cmpeqi	r2,r2,4
 c001874:	1000071e 	bne	r2,zero,c001894 <keyInput+0x1e0>
 c001878:	e0fffe84 	addi	r3,fp,-6
 c00187c:	e0bfea17 	ldw	r2,-88(fp)
 c001880:	1885883a 	add	r2,r3,r2
 c001884:	10800003 	ldbu	r2,0(r2)
 c001888:	10803fcc 	andi	r2,r2,255
 c00188c:	10801418 	cmpnei	r2,r2,80
 c001890:	1000071e 	bne	r2,zero,c0018b0 <keyInput+0x1fc>
							printf("A - ");
 c001894:	010300b4 	movhi	r4,3074
 c001898:	21363004 	addi	r4,r4,-10048
 c00189c:	c004fc80 	call	c004fc8 <printf>
			                TetrisInputLeft(&state);
 c0018a0:	e0bfec04 	addi	r2,fp,-80
 c0018a4:	1009883a 	mov	r4,r2
 c0018a8:	c000fe80 	call	c000fe8 <TetrisInputLeft>
 c0018ac:	00004106 	br	c0019b4 <keyInput+0x300>
						} else if (kbdbuf.keycode[i] == 22 || kbdbuf.keycode[i] == 81) { //S
 c0018b0:	e0fffe84 	addi	r3,fp,-6
 c0018b4:	e0bfea17 	ldw	r2,-88(fp)
 c0018b8:	1885883a 	add	r2,r3,r2
 c0018bc:	10800003 	ldbu	r2,0(r2)
 c0018c0:	10803fcc 	andi	r2,r2,255
 c0018c4:	108005a0 	cmpeqi	r2,r2,22
 c0018c8:	1000071e 	bne	r2,zero,c0018e8 <keyInput+0x234>
 c0018cc:	e0fffe84 	addi	r3,fp,-6
 c0018d0:	e0bfea17 	ldw	r2,-88(fp)
 c0018d4:	1885883a 	add	r2,r3,r2
 c0018d8:	10800003 	ldbu	r2,0(r2)
 c0018dc:	10803fcc 	andi	r2,r2,255
 c0018e0:	10801458 	cmpnei	r2,r2,81
 c0018e4:	1000071e 	bne	r2,zero,c001904 <keyInput+0x250>
							printf("S - ");
 c0018e8:	010300b4 	movhi	r4,3074
 c0018ec:	21363204 	addi	r4,r4,-10040
 c0018f0:	c004fc80 	call	c004fc8 <printf>
			                TetrisFallBlocks(&state);
 c0018f4:	e0bfec04 	addi	r2,fp,-80
 c0018f8:	1009883a 	mov	r4,r2
 c0018fc:	c000d580 	call	c000d58 <TetrisFallBlocks>
 c001900:	00002c06 	br	c0019b4 <keyInput+0x300>
						} else if (kbdbuf.keycode[i] == 7 || kbdbuf.keycode[i] == 79) { //D
 c001904:	e0fffe84 	addi	r3,fp,-6
 c001908:	e0bfea17 	ldw	r2,-88(fp)
 c00190c:	1885883a 	add	r2,r3,r2
 c001910:	10800003 	ldbu	r2,0(r2)
 c001914:	10803fcc 	andi	r2,r2,255
 c001918:	108001e0 	cmpeqi	r2,r2,7
 c00191c:	1000071e 	bne	r2,zero,c00193c <keyInput+0x288>
 c001920:	e0fffe84 	addi	r3,fp,-6
 c001924:	e0bfea17 	ldw	r2,-88(fp)
 c001928:	1885883a 	add	r2,r3,r2
 c00192c:	10800003 	ldbu	r2,0(r2)
 c001930:	10803fcc 	andi	r2,r2,255
 c001934:	108013d8 	cmpnei	r2,r2,79
 c001938:	1000071e 	bne	r2,zero,c001958 <keyInput+0x2a4>
							printf("D - ");
 c00193c:	010300b4 	movhi	r4,3074
 c001940:	21363404 	addi	r4,r4,-10032
 c001944:	c004fc80 	call	c004fc8 <printf>
			                TetrisInputRight(&state);
 c001948:	e0bfec04 	addi	r2,fp,-80
 c00194c:	1009883a 	mov	r4,r2
 c001950:	c0010480 	call	c001048 <TetrisInputRight>
 c001954:	00001706 	br	c0019b4 <keyInput+0x300>
						} else if (kbdbuf.keycode[i] == 41) { //esc
 c001958:	e0fffe84 	addi	r3,fp,-6
 c00195c:	e0bfea17 	ldw	r2,-88(fp)
 c001960:	1885883a 	add	r2,r3,r2
 c001964:	10800003 	ldbu	r2,0(r2)
 c001968:	10803fcc 	andi	r2,r2,255
 c00196c:	10800a58 	cmpnei	r2,r2,41
 c001970:	1000061e 	bne	r2,zero,c00198c <keyInput+0x2d8>
							state.dead = 1;
 c001974:	00800044 	movi	r2,1
 c001978:	e0bfef15 	stw	r2,-68(fp)
							printf("end game");
 c00197c:	010300b4 	movhi	r4,3074
 c001980:	21363604 	addi	r4,r4,-10024
 c001984:	c004fc80 	call	c004fc8 <printf>
 c001988:	00000a06 	br	c0019b4 <keyInput+0x300>
						} else if (kbdbuf.keycode[i] == 40) { //enter
 c00198c:	e0fffe84 	addi	r3,fp,-6
 c001990:	e0bfea17 	ldw	r2,-88(fp)
 c001994:	1885883a 	add	r2,r3,r2
 c001998:	10800003 	ldbu	r2,0(r2)
 c00199c:	10803fcc 	andi	r2,r2,255
 c0019a0:	10800a18 	cmpnei	r2,r2,40
 c0019a4:	1000031e 	bne	r2,zero,c0019b4 <keyInput+0x300>
							printf("enter");
 c0019a8:	010300b4 	movhi	r4,3074
 c0019ac:	21363904 	addi	r4,r4,-10012
 c0019b0:	c004fc80 	call	c004fc8 <printf>
					printf("Rcode: ");
					printf("%x \n", rcode);
					continue;
				}
				//printf("keycodes: ");
				for (int i = 0; i < 6; i++) {
 c0019b4:	e0bfea17 	ldw	r2,-88(fp)
 c0019b8:	10800044 	addi	r2,r2,1
 c0019bc:	e0bfea15 	stw	r2,-88(fp)
 c0019c0:	e0bfea17 	ldw	r2,-88(fp)
 c0019c4:	10800190 	cmplti	r2,r2,6
 c0019c8:	103f891e 	bne	r2,zero,c0017f0 <__alt_data_end+0xfc0017f0>
						}
					}
				}


				setKeycode(kbdbuf.keycode[0]);
 c0019cc:	e0bffe83 	ldbu	r2,-6(fp)
 c0019d0:	10803fcc 	andi	r2,r2,255
 c0019d4:	1009883a 	mov	r4,r2
 c0019d8:	c0016800 	call	c001680 <setKeycode>
				printSignedHex0(kbdbuf.keycode[0]);
 c0019dc:	e0bffe83 	ldbu	r2,-6(fp)
 c0019e0:	10803fcc 	andi	r2,r2,255
 c0019e4:	1080201c 	xori	r2,r2,128
 c0019e8:	10bfe004 	addi	r2,r2,-128
 c0019ec:	1009883a 	mov	r4,r2
 c0019f0:	c0014300 	call	c001430 <printSignedHex0>
				printSignedHex1(kbdbuf.keycode[1]);
 c0019f4:	e0bffec3 	ldbu	r2,-5(fp)
 c0019f8:	10803fcc 	andi	r2,r2,255
 c0019fc:	1080201c 	xori	r2,r2,128
 c001a00:	10bfe004 	addi	r2,r2,-128
 c001a04:	1009883a 	mov	r4,r2
 c001a08:	c0015480 	call	c001548 <printSignedHex1>
 c001a0c:	00001f06 	br	c001a8c <keyInput+0x3d8>
			}
		} else if (GetUsbTaskState() == USB_STATE_ERROR) {
 c001a10:	c0044ac0 	call	c0044ac <GetUsbTaskState>
 c001a14:	10803fcc 	andi	r2,r2,255
 c001a18:	10803fd8 	cmpnei	r2,r2,255
 c001a1c:	10000a1e 	bne	r2,zero,c001a48 <keyInput+0x394>
			if (!errorflag) {
 c001a20:	e0bfe843 	ldbu	r2,-95(fp)
 c001a24:	1000191e 	bne	r2,zero,c001a8c <keyInput+0x3d8>
				errorflag = 1;
 c001a28:	00800044 	movi	r2,1
 c001a2c:	e0bfe845 	stb	r2,-95(fp)
				clearLED(9);
 c001a30:	01000244 	movi	r4,9
 c001a34:	c0013e80 	call	c0013e8 <clearLED>
				printf("USB Error State\n");
 c001a38:	010300b4 	movhi	r4,3074
 c001a3c:	21363b04 	addi	r4,r4,-10004
 c001a40:	c0050e40 	call	c0050e4 <puts>
 c001a44:	00001106 	br	c001a8c <keyInput+0x3d8>
				//print out string descriptor here
			}
		} else { //not in USB running state

			printf("USB task state: ");
 c001a48:	010300b4 	movhi	r4,3074
 c001a4c:	21363f04 	addi	r4,r4,-9988
 c001a50:	c004fc80 	call	c004fc8 <printf>
			printf("%x\n", GetUsbTaskState());
 c001a54:	c0044ac0 	call	c0044ac <GetUsbTaskState>
 c001a58:	10803fcc 	andi	r2,r2,255
 c001a5c:	100b883a 	mov	r5,r2
 c001a60:	010300b4 	movhi	r4,3074
 c001a64:	21364404 	addi	r4,r4,-9968
 c001a68:	c004fc80 	call	c004fc8 <printf>
			if (runningdebugflag) {	//previously running, reset USB hardware just to clear out any funky state, HS/FS etc
 c001a6c:	e0bfe803 	ldbu	r2,-96(fp)
 c001a70:	10000326 	beq	r2,zero,c001a80 <keyInput+0x3cc>
				runningdebugflag = 0;
 c001a74:	e03fe805 	stb	zero,-96(fp)
				MAX3421E_init();
 c001a78:	c0034f80 	call	c0034f8 <MAX3421E_init>
				USB_init();
 c001a7c:	c003ca40 	call	c003ca4 <USB_init>
			}
			errorflag = 0;
 c001a80:	e03fe845 	stb	zero,-95(fp)
			clearLED(9);
 c001a84:	01000244 	movi	r4,9
 c001a88:	c0013e80 	call	c0013e8 <clearLED>
	printf("initializing MAX3421E...\n");
	MAX3421E_init();
	printf("initializing USB...\n");
	USB_init();
	int count = 0;
	while (!state.dead) {
 c001a8c:	e0bfef17 	ldw	r2,-68(fp)
 c001a90:	103f2026 	beq	r2,zero,c001714 <__alt_data_end+0xfc001714>
			}
			errorflag = 0;
			clearLED(9);
		}
	}
}
 c001a94:	0001883a 	nop
 c001a98:	e037883a 	mov	sp,fp
 c001a9c:	dfc00117 	ldw	ra,4(sp)
 c001aa0:	df000017 	ldw	fp,0(sp)
 c001aa4:	dec00204 	addi	sp,sp,8
 c001aa8:	f800283a 	ret

0c001aac <paintScreen>:


void paintScreen(TetrisGameState* state) {
 c001aac:	defff904 	addi	sp,sp,-28
 c001ab0:	dfc00615 	stw	ra,24(sp)
 c001ab4:	df000515 	stw	fp,20(sp)
 c001ab8:	dc400415 	stw	r17,16(sp)
 c001abc:	dc000315 	stw	r16,12(sp)
 c001ac0:	df000504 	addi	fp,sp,20
 c001ac4:	e13ffd15 	stw	r4,-12(fp)
    int x, y;

    for (x = 0; x < 30; ++x)
 c001ac8:	e03ffb15 	stw	zero,-20(fp)
 c001acc:	00000306 	br	c001adc <paintScreen+0x30>
 c001ad0:	e0bffb17 	ldw	r2,-20(fp)
 c001ad4:	10800044 	addi	r2,r2,1
 c001ad8:	e0bffb15 	stw	r2,-20(fp)
 c001adc:	e0bffb17 	ldw	r2,-20(fp)
 c001ae0:	10800790 	cmplti	r2,r2,30
 c001ae4:	103ffa1e 	bne	r2,zero,c001ad0 <__alt_data_end+0xfc001ad0>
        //printf("\n");
    }

    //printf("%d line(s) completed\n\n", state->completedLines);

    for (y = 0; y < state->boardHeight; ++y)
 c001ae8:	e03ffc15 	stw	zero,-16(fp)
 c001aec:	00005f06 	br	c001c6c <paintScreen+0x1c0>
    {
        //printf("|");

        for (x = 0; x < state->boardWidth; ++x)
 c001af0:	e03ffb15 	stw	zero,-20(fp)
 c001af4:	00005606 	br	c001c50 <paintScreen+0x1a4>
        {
            if (x >= state->activeBlockX &&                              //
 c001af8:	e0bffd17 	ldw	r2,-12(fp)
 c001afc:	10800e17 	ldw	r2,56(r2)
 c001b00:	e0fffb17 	ldw	r3,-20(fp)
 c001b04:	18802f16 	blt	r3,r2,c001bc4 <paintScreen+0x118>
                y >= state->activeBlockY &&                              //
 c001b08:	e0bffd17 	ldw	r2,-12(fp)
 c001b0c:	10800f17 	ldw	r2,60(r2)
    {
        //printf("|");

        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
 c001b10:	e0fffc17 	ldw	r3,-16(fp)
 c001b14:	18802b16 	blt	r3,r2,c001bc4 <paintScreen+0x118>
                y >= state->activeBlockY &&                              //
                x < (state->activeBlockX + state->activeBlock.width) &&  //
 c001b18:	e0bffd17 	ldw	r2,-12(fp)
 c001b1c:	10c00e17 	ldw	r3,56(r2)
 c001b20:	e0bffd17 	ldw	r2,-12(fp)
 c001b24:	10800517 	ldw	r2,20(r2)
 c001b28:	1885883a 	add	r2,r3,r2
        //printf("|");

        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
                y >= state->activeBlockY &&                              //
 c001b2c:	e0fffb17 	ldw	r3,-20(fp)
 c001b30:	1880240e 	bge	r3,r2,c001bc4 <paintScreen+0x118>
                x < (state->activeBlockX + state->activeBlock.width) &&  //
                y < (state->activeBlockY + state->activeBlock.height) && //
 c001b34:	e0bffd17 	ldw	r2,-12(fp)
 c001b38:	10c00f17 	ldw	r3,60(r2)
 c001b3c:	e0bffd17 	ldw	r2,-12(fp)
 c001b40:	10800617 	ldw	r2,24(r2)
 c001b44:	1885883a 	add	r2,r3,r2

        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
                y >= state->activeBlockY &&                              //
                x < (state->activeBlockX + state->activeBlock.width) &&  //
 c001b48:	e0fffc17 	ldw	r3,-16(fp)
 c001b4c:	18801d0e 	bge	r3,r2,c001bc4 <paintScreen+0x118>
                y < (state->activeBlockY + state->activeBlock.height) && //
                state->activeBlock.data[y - state->activeBlockY]
 c001b50:	e0bffd17 	ldw	r2,-12(fp)
 c001b54:	10800f17 	ldw	r2,60(r2)
 c001b58:	e0fffc17 	ldw	r3,-16(fp)
 c001b5c:	1889c83a 	sub	r4,r3,r2
                                       [x - state->activeBlockX] != ' ')
 c001b60:	e0bffd17 	ldw	r2,-12(fp)
 c001b64:	10800e17 	ldw	r2,56(r2)
 c001b68:	e0fffb17 	ldw	r3,-20(fp)
 c001b6c:	18a1c83a 	sub	r16,r3,r2
 c001b70:	e47ffd17 	ldw	r17,-12(fp)
 c001b74:	01400144 	movi	r5,5
 c001b78:	c00473c0 	call	c00473c <__mulsi3>
 c001b7c:	8885883a 	add	r2,r17,r2
 c001b80:	1405883a 	add	r2,r2,r16
 c001b84:	10800704 	addi	r2,r2,28
 c001b88:	10800003 	ldbu	r2,0(r2)
        for (x = 0; x < state->boardWidth; ++x)
        {
            if (x >= state->activeBlockX &&                              //
                y >= state->activeBlockY &&                              //
                x < (state->activeBlockX + state->activeBlock.width) &&  //
                y < (state->activeBlockY + state->activeBlock.height) && //
 c001b8c:	10803fcc 	andi	r2,r2,255
 c001b90:	1080201c 	xori	r2,r2,128
 c001b94:	10bfe004 	addi	r2,r2,-128
 c001b98:	10800820 	cmpeqi	r2,r2,32
 c001b9c:	1000091e 	bne	r2,zero,c001bc4 <paintScreen+0x118>
                state->activeBlock.data[y - state->activeBlockY]
                                       [x - state->activeBlockX] != ' ')
            {
            	VGADrawColorBox(20+x,10+y,2);
 c001ba0:	e0bffb17 	ldw	r2,-20(fp)
 c001ba4:	10c00504 	addi	r3,r2,20
 c001ba8:	e0bffc17 	ldw	r2,-16(fp)
 c001bac:	10800284 	addi	r2,r2,10
 c001bb0:	01800084 	movi	r6,2
 c001bb4:	100b883a 	mov	r5,r2
 c001bb8:	1809883a 	mov	r4,r3
 c001bbc:	c0023f00 	call	c0023f0 <VGADrawColorBox>
                y >= state->activeBlockY &&                              //
                x < (state->activeBlockX + state->activeBlock.width) &&  //
                y < (state->activeBlockY + state->activeBlock.height) && //
                state->activeBlock.data[y - state->activeBlockY]
                                       [x - state->activeBlockX] != ' ')
            {
 c001bc0:	00002006 	br	c001c44 <paintScreen+0x198>
            	VGADrawColorBox(20+x,10+y,2);
            }
            else
            {
                if(state->board[x][y] == ' ') VGADrawColorBox(20+x,10+y,11);
 c001bc4:	e0bffd17 	ldw	r2,-12(fp)
 c001bc8:	10c00017 	ldw	r3,0(r2)
 c001bcc:	e0bffb17 	ldw	r2,-20(fp)
 c001bd0:	1085883a 	add	r2,r2,r2
 c001bd4:	1085883a 	add	r2,r2,r2
 c001bd8:	1885883a 	add	r2,r3,r2
 c001bdc:	10c00017 	ldw	r3,0(r2)
 c001be0:	e0bffc17 	ldw	r2,-16(fp)
 c001be4:	1885883a 	add	r2,r3,r2
 c001be8:	10800003 	ldbu	r2,0(r2)
 c001bec:	10803fcc 	andi	r2,r2,255
 c001bf0:	1080201c 	xori	r2,r2,128
 c001bf4:	10bfe004 	addi	r2,r2,-128
 c001bf8:	10800818 	cmpnei	r2,r2,32
 c001bfc:	1000091e 	bne	r2,zero,c001c24 <paintScreen+0x178>
 c001c00:	e0bffb17 	ldw	r2,-20(fp)
 c001c04:	10c00504 	addi	r3,r2,20
 c001c08:	e0bffc17 	ldw	r2,-16(fp)
 c001c0c:	10800284 	addi	r2,r2,10
 c001c10:	018002c4 	movi	r6,11
 c001c14:	100b883a 	mov	r5,r2
 c001c18:	1809883a 	mov	r4,r3
 c001c1c:	c0023f00 	call	c0023f0 <VGADrawColorBox>
 c001c20:	00000806 	br	c001c44 <paintScreen+0x198>
                else VGADrawColorBox(20+x,10+y,2);
 c001c24:	e0bffb17 	ldw	r2,-20(fp)
 c001c28:	10c00504 	addi	r3,r2,20
 c001c2c:	e0bffc17 	ldw	r2,-16(fp)
 c001c30:	10800284 	addi	r2,r2,10
 c001c34:	01800084 	movi	r6,2
 c001c38:	100b883a 	mov	r5,r2
 c001c3c:	1809883a 	mov	r4,r3
 c001c40:	c0023f00 	call	c0023f0 <VGADrawColorBox>

    for (y = 0; y < state->boardHeight; ++y)
    {
        //printf("|");

        for (x = 0; x < state->boardWidth; ++x)
 c001c44:	e0bffb17 	ldw	r2,-20(fp)
 c001c48:	10800044 	addi	r2,r2,1
 c001c4c:	e0bffb15 	stw	r2,-20(fp)
 c001c50:	e0bffd17 	ldw	r2,-12(fp)
 c001c54:	10800117 	ldw	r2,4(r2)
 c001c58:	e0fffb17 	ldw	r3,-20(fp)
 c001c5c:	18bfa616 	blt	r3,r2,c001af8 <__alt_data_end+0xfc001af8>
        //printf("\n");
    }

    //printf("%d line(s) completed\n\n", state->completedLines);

    for (y = 0; y < state->boardHeight; ++y)
 c001c60:	e0bffc17 	ldw	r2,-16(fp)
 c001c64:	10800044 	addi	r2,r2,1
 c001c68:	e0bffc15 	stw	r2,-16(fp)
 c001c6c:	e0bffd17 	ldw	r2,-12(fp)
 c001c70:	10800217 	ldw	r2,8(r2)
 c001c74:	e0fffc17 	ldw	r3,-16(fp)
 c001c78:	18bf9d16 	blt	r3,r2,c001af0 <__alt_data_end+0xfc001af0>
                else VGADrawColorBox(20+x,10+y,2);
            }
        }
    }

}
 c001c7c:	0001883a 	nop
 c001c80:	e6fffe04 	addi	sp,fp,-8
 c001c84:	dfc00317 	ldw	ra,12(sp)
 c001c88:	df000217 	ldw	fp,8(sp)
 c001c8c:	dc400117 	ldw	r17,4(sp)
 c001c90:	dc000017 	ldw	r16,0(sp)
 c001c94:	dec00404 	addi	sp,sp,16
 c001c98:	f800283a 	ret

0c001c9c <main>:

#define COLUMNS 80
#define ROWS 60
#include "text_mode_vga_color.h"

int main() {
 c001c9c:	defffa04 	addi	sp,sp,-24
 c001ca0:	dfc00515 	stw	ra,20(sp)
 c001ca4:	df000415 	stw	fp,16(sp)
 c001ca8:	df000404 	addi	fp,sp,16
	screenVGAinitializer();
 c001cac:	c00203c0 	call	c00203c <screenVGAinitializer>
	for (int i = 0; i < 80; i++) {
 c001cb0:	e03ffc15 	stw	zero,-16(fp)
 c001cb4:	00000b06 	br	c001ce4 <main+0x48>
		VGADrawColorBox(i,0,15);
 c001cb8:	018003c4 	movi	r6,15
 c001cbc:	000b883a 	mov	r5,zero
 c001cc0:	e13ffc17 	ldw	r4,-16(fp)
 c001cc4:	c0023f00 	call	c0023f0 <VGADrawColorBox>
		VGADrawColorBox(i,59,15);
 c001cc8:	018003c4 	movi	r6,15
 c001ccc:	01400ec4 	movi	r5,59
 c001cd0:	e13ffc17 	ldw	r4,-16(fp)
 c001cd4:	c0023f00 	call	c0023f0 <VGADrawColorBox>
#define ROWS 60
#include "text_mode_vga_color.h"

int main() {
	screenVGAinitializer();
	for (int i = 0; i < 80; i++) {
 c001cd8:	e0bffc17 	ldw	r2,-16(fp)
 c001cdc:	10800044 	addi	r2,r2,1
 c001ce0:	e0bffc15 	stw	r2,-16(fp)
 c001ce4:	e0bffc17 	ldw	r2,-16(fp)
 c001ce8:	10801410 	cmplti	r2,r2,80
 c001cec:	103ff21e 	bne	r2,zero,c001cb8 <__alt_data_end+0xfc001cb8>
		VGADrawColorBox(i,0,15);
		VGADrawColorBox(i,59,15);
	}
	for (int i = 0; i < 60; i++) {
 c001cf0:	e03ffd15 	stw	zero,-12(fp)
 c001cf4:	00000b06 	br	c001d24 <main+0x88>
		VGADrawColorBox(0,i,15);
 c001cf8:	018003c4 	movi	r6,15
 c001cfc:	e17ffd17 	ldw	r5,-12(fp)
 c001d00:	0009883a 	mov	r4,zero
 c001d04:	c0023f00 	call	c0023f0 <VGADrawColorBox>
		VGADrawColorBox(79,i,15);
 c001d08:	018003c4 	movi	r6,15
 c001d0c:	e17ffd17 	ldw	r5,-12(fp)
 c001d10:	010013c4 	movi	r4,79
 c001d14:	c0023f00 	call	c0023f0 <VGADrawColorBox>
	screenVGAinitializer();
	for (int i = 0; i < 80; i++) {
		VGADrawColorBox(i,0,15);
		VGADrawColorBox(i,59,15);
	}
	for (int i = 0; i < 60; i++) {
 c001d18:	e0bffd17 	ldw	r2,-12(fp)
 c001d1c:	10800044 	addi	r2,r2,1
 c001d20:	e0bffd15 	stw	r2,-12(fp)
 c001d24:	e0bffd17 	ldw	r2,-12(fp)
 c001d28:	10800f10 	cmplti	r2,r2,60
 c001d2c:	103ff21e 	bne	r2,zero,c001cf8 <__alt_data_end+0xfc001cf8>
		VGADrawColorBox(0,i,15);
		VGADrawColorBox(79,i,15);
	}
	for (int i = 20; i < 20+10; i++) {
 c001d30:	00800504 	movi	r2,20
 c001d34:	e0bffe15 	stw	r2,-8(fp)
 c001d38:	00001406 	br	c001d8c <main+0xf0>
		for (int j = 10; j < 10+24; j++) {
 c001d3c:	00800284 	movi	r2,10
 c001d40:	e0bfff15 	stw	r2,-4(fp)
 c001d44:	00000b06 	br	c001d74 <main+0xd8>
			VGADrawColorBox(i,j,11);
 c001d48:	018002c4 	movi	r6,11
 c001d4c:	e17fff17 	ldw	r5,-4(fp)
 c001d50:	e13ffe17 	ldw	r4,-8(fp)
 c001d54:	c0023f00 	call	c0023f0 <VGADrawColorBox>
			VGADrawColorBox(i,j,11);
 c001d58:	018002c4 	movi	r6,11
 c001d5c:	e17fff17 	ldw	r5,-4(fp)
 c001d60:	e13ffe17 	ldw	r4,-8(fp)
 c001d64:	c0023f00 	call	c0023f0 <VGADrawColorBox>
	for (int i = 0; i < 60; i++) {
		VGADrawColorBox(0,i,15);
		VGADrawColorBox(79,i,15);
	}
	for (int i = 20; i < 20+10; i++) {
		for (int j = 10; j < 10+24; j++) {
 c001d68:	e0bfff17 	ldw	r2,-4(fp)
 c001d6c:	10800044 	addi	r2,r2,1
 c001d70:	e0bfff15 	stw	r2,-4(fp)
 c001d74:	e0bfff17 	ldw	r2,-4(fp)
 c001d78:	10800890 	cmplti	r2,r2,34
 c001d7c:	103ff21e 	bne	r2,zero,c001d48 <__alt_data_end+0xfc001d48>
	}
	for (int i = 0; i < 60; i++) {
		VGADrawColorBox(0,i,15);
		VGADrawColorBox(79,i,15);
	}
	for (int i = 20; i < 20+10; i++) {
 c001d80:	e0bffe17 	ldw	r2,-8(fp)
 c001d84:	10800044 	addi	r2,r2,1
 c001d88:	e0bffe15 	stw	r2,-8(fp)
 c001d8c:	e0bffe17 	ldw	r2,-8(fp)
 c001d90:	10800790 	cmplti	r2,r2,30
 c001d94:	103fe91e 	bne	r2,zero,c001d3c <__alt_data_end+0xfc001d3c>
			VGADrawColorBox(i,j,11);
			VGADrawColorBox(i,j,11);
		}
	}

	keyInput();
 c001d98:	c0016b40 	call	c0016b4 <keyInput>
	return 1;
 c001d9c:	00800044 	movi	r2,1
}
 c001da0:	e037883a 	mov	sp,fp
 c001da4:	dfc00117 	ldw	ra,4(sp)
 c001da8:	df000017 	ldw	fp,0(sp)
 c001dac:	dec00204 	addi	sp,sp,8
 c001db0:	f800283a 	ret

0c001db4 <textVGAColorClr>:
#include <string.h>
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
 c001db4:	defffe04 	addi	sp,sp,-8
 c001db8:	df000115 	stw	fp,4(sp)
 c001dbc:	df000104 	addi	fp,sp,4
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
 c001dc0:	e03fff15 	stw	zero,-4(fp)
 c001dc4:	00000706 	br	c001de4 <textVGAColorClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
 c001dc8:	d0e00217 	ldw	r3,-32760(gp)
 c001dcc:	e0bfff17 	ldw	r2,-4(fp)
 c001dd0:	1885883a 	add	r2,r3,r2
 c001dd4:	10000005 	stb	zero,0(r2)
#include <alt_types.h>
#include "text_mode_vga_color.h"

void textVGAColorClr()
{
	for (int i = 0; i<(ROWS*COLUMNS) * 2; i++)
 c001dd8:	e0bfff17 	ldw	r2,-4(fp)
 c001ddc:	10800044 	addi	r2,r2,1
 c001de0:	e0bfff15 	stw	r2,-4(fp)
 c001de4:	e0bfff17 	ldw	r2,-4(fp)
 c001de8:	10896010 	cmplti	r2,r2,9600
 c001dec:	103ff61e 	bne	r2,zero,c001dc8 <__alt_data_end+0xfc001dc8>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
}
 c001df0:	0001883a 	nop
 c001df4:	e037883a 	mov	sp,fp
 c001df8:	df000017 	ldw	fp,0(sp)
 c001dfc:	dec00104 	addi	sp,sp,4
 c001e00:	f800283a 	ret

0c001e04 <textVGADrawColorText>:

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
 c001e04:	defff704 	addi	sp,sp,-36
 c001e08:	dfc00815 	stw	ra,32(sp)
 c001e0c:	df000715 	stw	fp,28(sp)
 c001e10:	dc000615 	stw	r16,24(sp)
 c001e14:	df000704 	addi	fp,sp,28
 c001e18:	e13ffa15 	stw	r4,-24(fp)
 c001e1c:	e17ffb15 	stw	r5,-20(fp)
 c001e20:	e1bffc15 	stw	r6,-16(fp)
 c001e24:	3807883a 	mov	r3,r7
 c001e28:	e0800217 	ldw	r2,8(fp)
 c001e2c:	e0fffd05 	stb	r3,-12(fp)
 c001e30:	e0bffe05 	stb	r2,-8(fp)
	int i = 0;
 c001e34:	e03ff915 	stw	zero,-28(fp)
	while (str[i]!=0)
 c001e38:	00002706 	br	c001ed8 <textVGADrawColorText+0xd4>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
 c001e3c:	d4200217 	ldw	r16,-32760(gp)
 c001e40:	01401404 	movi	r5,80
 c001e44:	e13ffc17 	ldw	r4,-16(fp)
 c001e48:	c00473c0 	call	c00473c <__mulsi3>
 c001e4c:	1007883a 	mov	r3,r2
 c001e50:	e0bffb17 	ldw	r2,-20(fp)
 c001e54:	1887883a 	add	r3,r3,r2
 c001e58:	e0bff917 	ldw	r2,-28(fp)
 c001e5c:	1885883a 	add	r2,r3,r2
 c001e60:	1085883a 	add	r2,r2,r2
 c001e64:	1009883a 	mov	r4,r2
 c001e68:	e0bffe03 	ldbu	r2,-8(fp)
 c001e6c:	1004913a 	slli	r2,r2,4
 c001e70:	1007883a 	mov	r3,r2
 c001e74:	e0bffd03 	ldbu	r2,-12(fp)
 c001e78:	1884b03a 	or	r2,r3,r2
 c001e7c:	1007883a 	mov	r3,r2
 c001e80:	8105883a 	add	r2,r16,r4
 c001e84:	10c00005 	stb	r3,0(r2)
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
 c001e88:	d4200217 	ldw	r16,-32760(gp)
 c001e8c:	01401404 	movi	r5,80
 c001e90:	e13ffc17 	ldw	r4,-16(fp)
 c001e94:	c00473c0 	call	c00473c <__mulsi3>
 c001e98:	1007883a 	mov	r3,r2
 c001e9c:	e0bffb17 	ldw	r2,-20(fp)
 c001ea0:	1887883a 	add	r3,r3,r2
 c001ea4:	e0bff917 	ldw	r2,-28(fp)
 c001ea8:	1885883a 	add	r2,r3,r2
 c001eac:	1085883a 	add	r2,r2,r2
 c001eb0:	10800044 	addi	r2,r2,1
 c001eb4:	e0fff917 	ldw	r3,-28(fp)
 c001eb8:	e13ffa17 	ldw	r4,-24(fp)
 c001ebc:	20c7883a 	add	r3,r4,r3
 c001ec0:	18c00003 	ldbu	r3,0(r3)
 c001ec4:	8085883a 	add	r2,r16,r2
 c001ec8:	10c00005 	stb	r3,0(r2)
		i++;
 c001ecc:	e0bff917 	ldw	r2,-28(fp)
 c001ed0:	10800044 	addi	r2,r2,1
 c001ed4:	e0bff915 	stw	r2,-28(fp)
}

void textVGADrawColorText(char* str, int x, int y, alt_u8 background, alt_u8 foreground)
{
	int i = 0;
	while (str[i]!=0)
 c001ed8:	e0bff917 	ldw	r2,-28(fp)
 c001edc:	e0fffa17 	ldw	r3,-24(fp)
 c001ee0:	1885883a 	add	r2,r3,r2
 c001ee4:	10800003 	ldbu	r2,0(r2)
 c001ee8:	10803fcc 	andi	r2,r2,255
 c001eec:	1080201c 	xori	r2,r2,128
 c001ef0:	10bfe004 	addi	r2,r2,-128
 c001ef4:	103fd11e 	bne	r2,zero,c001e3c <__alt_data_end+0xfc001e3c>
	{
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2] = foreground << 4 | background;
		vga_ctrl->VRAM[(y*COLUMNS + x + i) * 2 + 1] = str[i];
		i++;
	}
}
 c001ef8:	0001883a 	nop
 c001efc:	e6ffff04 	addi	sp,fp,-4
 c001f00:	dfc00217 	ldw	ra,8(sp)
 c001f04:	df000117 	ldw	fp,4(sp)
 c001f08:	dc000017 	ldw	r16,0(sp)
 c001f0c:	dec00304 	addi	sp,sp,12
 c001f10:	f800283a 	ret

0c001f14 <setColorPalette>:

void setColorPalette (alt_u8 color, alt_u8 red, alt_u8 green, alt_u8 blue)
{
 c001f14:	defff904 	addi	sp,sp,-28
 c001f18:	df000615 	stw	fp,24(sp)
 c001f1c:	df000604 	addi	fp,sp,24
 c001f20:	2011883a 	mov	r8,r4
 c001f24:	2809883a 	mov	r4,r5
 c001f28:	3007883a 	mov	r3,r6
 c001f2c:	3805883a 	mov	r2,r7
 c001f30:	e23ffc05 	stb	r8,-16(fp)
 c001f34:	e13ffd05 	stb	r4,-12(fp)
 c001f38:	e0fffe05 	stb	r3,-8(fp)
 c001f3c:	e0bfff05 	stb	r2,-4(fp)
	alt_u32 shifts;
	alt_u32 original;
	original = vga_ctrl->palette[color/2];
 c001f40:	d0e00217 	ldw	r3,-32760(gp)
 c001f44:	e0bffc03 	ldbu	r2,-16(fp)
 c001f48:	1004d07a 	srli	r2,r2,1
 c001f4c:	10803fcc 	andi	r2,r2,255
 c001f50:	10830004 	addi	r2,r2,3072
 c001f54:	1085883a 	add	r2,r2,r2
 c001f58:	1085883a 	add	r2,r2,r2
 c001f5c:	1885883a 	add	r2,r3,r2
 c001f60:	10800017 	ldw	r2,0(r2)
 c001f64:	e0bffb15 	stw	r2,-20(fp)
	shifts = red;
 c001f68:	e0bffd03 	ldbu	r2,-12(fp)
 c001f6c:	e0bffa15 	stw	r2,-24(fp)
	shifts = shifts << 4;
 c001f70:	e0bffa17 	ldw	r2,-24(fp)
 c001f74:	1004913a 	slli	r2,r2,4
 c001f78:	e0bffa15 	stw	r2,-24(fp)
	shifts = shifts | green;
 c001f7c:	e0bffe03 	ldbu	r2,-8(fp)
 c001f80:	e0fffa17 	ldw	r3,-24(fp)
 c001f84:	1884b03a 	or	r2,r3,r2
 c001f88:	e0bffa15 	stw	r2,-24(fp)
	shifts = shifts << 4;
 c001f8c:	e0bffa17 	ldw	r2,-24(fp)
 c001f90:	1004913a 	slli	r2,r2,4
 c001f94:	e0bffa15 	stw	r2,-24(fp)
	shifts = shifts | blue;
 c001f98:	e0bfff03 	ldbu	r2,-4(fp)
 c001f9c:	e0fffa17 	ldw	r3,-24(fp)
 c001fa0:	1884b03a 	or	r2,r3,r2
 c001fa4:	e0bffa15 	stw	r2,-24(fp)
	if (color %2 ==0){
 c001fa8:	e0bffc03 	ldbu	r2,-16(fp)
 c001fac:	1080004c 	andi	r2,r2,1
 c001fb0:	10803fcc 	andi	r2,r2,255
 c001fb4:	1000081e 	bne	r2,zero,c001fd8 <setColorPalette+0xc4>
		original = original & 0xFFFFE000;
 c001fb8:	e0fffb17 	ldw	r3,-20(fp)
 c001fbc:	00b80004 	movi	r2,-8192
 c001fc0:	1884703a 	and	r2,r3,r2
 c001fc4:	e0bffb15 	stw	r2,-20(fp)
		shifts = shifts << 1;
 c001fc8:	e0bffa17 	ldw	r2,-24(fp)
 c001fcc:	1085883a 	add	r2,r2,r2
 c001fd0:	e0bffa15 	stw	r2,-24(fp)
 c001fd4:	00000606 	br	c001ff0 <setColorPalette+0xdc>
	} else {
		original = original & 0x00001FFF;
 c001fd8:	e0bffb17 	ldw	r2,-20(fp)
 c001fdc:	1087ffcc 	andi	r2,r2,8191
 c001fe0:	e0bffb15 	stw	r2,-20(fp)
		shifts = shifts << 13;
 c001fe4:	e0bffa17 	ldw	r2,-24(fp)
 c001fe8:	1004937a 	slli	r2,r2,13
 c001fec:	e0bffa15 	stw	r2,-24(fp)
	}
	original = original | shifts;
 c001ff0:	e0fffb17 	ldw	r3,-20(fp)
 c001ff4:	e0bffa17 	ldw	r2,-24(fp)
 c001ff8:	1884b03a 	or	r2,r3,r2
 c001ffc:	e0bffb15 	stw	r2,-20(fp)
	vga_ctrl->palette[color/2] = original;
 c002000:	d0e00217 	ldw	r3,-32760(gp)
 c002004:	e0bffc03 	ldbu	r2,-16(fp)
 c002008:	1004d07a 	srli	r2,r2,1
 c00200c:	10803fcc 	andi	r2,r2,255
 c002010:	10830004 	addi	r2,r2,3072
 c002014:	1085883a 	add	r2,r2,r2
 c002018:	1085883a 	add	r2,r2,r2
 c00201c:	1885883a 	add	r2,r3,r2
 c002020:	e0fffb17 	ldw	r3,-20(fp)
 c002024:	10c00015 	stw	r3,0(r2)
}
 c002028:	0001883a 	nop
 c00202c:	e037883a 	mov	sp,fp
 c002030:	df000017 	ldw	fp,0(sp)
 c002034:	dec00104 	addi	sp,sp,4
 c002038:	f800283a 	ret

0c00203c <screenVGAinitializer>:

void screenVGAinitializer() {
 c00203c:	defff904 	addi	sp,sp,-28
 c002040:	dfc00615 	stw	ra,24(sp)
 c002044:	df000515 	stw	fp,20(sp)
 c002048:	dcc00415 	stw	r19,16(sp)
 c00204c:	dc800315 	stw	r18,12(sp)
 c002050:	dc400215 	stw	r17,8(sp)
 c002054:	dc000115 	stw	r16,4(sp)
 c002058:	df000504 	addi	fp,sp,20
	textVGAColorClr();
 c00205c:	c001db40 	call	c001db4 <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
 c002060:	e03ffb15 	stw	zero,-20(fp)
 c002064:	00002806 	br	c002108 <screenVGAinitializer+0xcc>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
 c002068:	e0bffb17 	ldw	r2,-20(fp)
 c00206c:	14403fcc 	andi	r17,r2,255
 c002070:	040300b4 	movhi	r16,3074
 c002074:	8438a604 	addi	r16,r16,-7528
 c002078:	e0bffb17 	ldw	r2,-20(fp)
 c00207c:	014005c4 	movi	r5,23
 c002080:	1009883a 	mov	r4,r2
 c002084:	c00473c0 	call	c00473c <__mulsi3>
 c002088:	8085883a 	add	r2,r16,r2
 c00208c:	10800504 	addi	r2,r2,20
 c002090:	10800003 	ldbu	r2,0(r2)
 c002094:	14803fcc 	andi	r18,r2,255
 c002098:	040300b4 	movhi	r16,3074
 c00209c:	8438a604 	addi	r16,r16,-7528
 c0020a0:	e0bffb17 	ldw	r2,-20(fp)
 c0020a4:	014005c4 	movi	r5,23
 c0020a8:	1009883a 	mov	r4,r2
 c0020ac:	c00473c0 	call	c00473c <__mulsi3>
 c0020b0:	8085883a 	add	r2,r16,r2
 c0020b4:	10800544 	addi	r2,r2,21
 c0020b8:	10800003 	ldbu	r2,0(r2)
 c0020bc:	14c03fcc 	andi	r19,r2,255
 c0020c0:	040300b4 	movhi	r16,3074
 c0020c4:	8438a604 	addi	r16,r16,-7528
 c0020c8:	e0bffb17 	ldw	r2,-20(fp)
 c0020cc:	014005c4 	movi	r5,23
 c0020d0:	1009883a 	mov	r4,r2
 c0020d4:	c00473c0 	call	c00473c <__mulsi3>
 c0020d8:	8085883a 	add	r2,r16,r2
 c0020dc:	10800584 	addi	r2,r2,22
 c0020e0:	10800003 	ldbu	r2,0(r2)
 c0020e4:	10803fcc 	andi	r2,r2,255
 c0020e8:	100f883a 	mov	r7,r2
 c0020ec:	980d883a 	mov	r6,r19
 c0020f0:	900b883a 	mov	r5,r18
 c0020f4:	8809883a 	mov	r4,r17
 c0020f8:	c001f140 	call	c001f14 <setColorPalette>
}

void screenVGAinitializer() {
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
 c0020fc:	e0bffb17 	ldw	r2,-20(fp)
 c002100:	10800044 	addi	r2,r2,1
 c002104:	e0bffb15 	stw	r2,-20(fp)
 c002108:	e0bffb17 	ldw	r2,-20(fp)
 c00210c:	10800410 	cmplti	r2,r2,16
 c002110:	103fd51e 	bne	r2,zero,c002068 <__alt_data_end+0xfc002068>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}

}
 c002114:	0001883a 	nop
 c002118:	e6fffc04 	addi	sp,fp,-16
 c00211c:	dfc00517 	ldw	ra,20(sp)
 c002120:	df000417 	ldw	fp,16(sp)
 c002124:	dcc00317 	ldw	r19,12(sp)
 c002128:	dc800217 	ldw	r18,8(sp)
 c00212c:	dc400117 	ldw	r17,4(sp)
 c002130:	dc000017 	ldw	r16,0(sp)
 c002134:	dec00604 	addi	sp,sp,24
 c002138:	f800283a 	ret

0c00213c <textVGAColorScreenSaver>:

void textVGAColorScreenSaver()
{
 c00213c:	deffde04 	addi	sp,sp,-136
 c002140:	dfc02115 	stw	ra,132(sp)
 c002144:	df002015 	stw	fp,128(sp)
 c002148:	dcc01f15 	stw	r19,124(sp)
 c00214c:	dc801e15 	stw	r18,120(sp)
 c002150:	dc401d15 	stw	r17,116(sp)
 c002154:	dc001c15 	stw	r16,112(sp)
 c002158:	df002004 	addi	fp,sp,128
	//This is the function you call for your week 2 demo
	int flag = 0;
 c00215c:	e03fe415 	stw	zero,-112(fp)
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
 c002160:	c001db40 	call	c001db4 <textVGAColorClr>
	//initialize palette
	for (int i = 0; i < 16; i++)
 c002164:	e03fe315 	stw	zero,-116(fp)
 c002168:	00002806 	br	c00220c <textVGAColorScreenSaver+0xd0>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
 c00216c:	e0bfe317 	ldw	r2,-116(fp)
 c002170:	14403fcc 	andi	r17,r2,255
 c002174:	040300b4 	movhi	r16,3074
 c002178:	8438a604 	addi	r16,r16,-7528
 c00217c:	e0bfe317 	ldw	r2,-116(fp)
 c002180:	014005c4 	movi	r5,23
 c002184:	1009883a 	mov	r4,r2
 c002188:	c00473c0 	call	c00473c <__mulsi3>
 c00218c:	8085883a 	add	r2,r16,r2
 c002190:	10800504 	addi	r2,r2,20
 c002194:	10800003 	ldbu	r2,0(r2)
 c002198:	14803fcc 	andi	r18,r2,255
 c00219c:	040300b4 	movhi	r16,3074
 c0021a0:	8438a604 	addi	r16,r16,-7528
 c0021a4:	e0bfe317 	ldw	r2,-116(fp)
 c0021a8:	014005c4 	movi	r5,23
 c0021ac:	1009883a 	mov	r4,r2
 c0021b0:	c00473c0 	call	c00473c <__mulsi3>
 c0021b4:	8085883a 	add	r2,r16,r2
 c0021b8:	10800544 	addi	r2,r2,21
 c0021bc:	10800003 	ldbu	r2,0(r2)
 c0021c0:	14c03fcc 	andi	r19,r2,255
 c0021c4:	040300b4 	movhi	r16,3074
 c0021c8:	8438a604 	addi	r16,r16,-7528
 c0021cc:	e0bfe317 	ldw	r2,-116(fp)
 c0021d0:	014005c4 	movi	r5,23
 c0021d4:	1009883a 	mov	r4,r2
 c0021d8:	c00473c0 	call	c00473c <__mulsi3>
 c0021dc:	8085883a 	add	r2,r16,r2
 c0021e0:	10800584 	addi	r2,r2,22
 c0021e4:	10800003 	ldbu	r2,0(r2)
 c0021e8:	10803fcc 	andi	r2,r2,255
 c0021ec:	100f883a 	mov	r7,r2
 c0021f0:	980d883a 	mov	r6,r19
 c0021f4:	900b883a 	mov	r5,r18
 c0021f8:	8809883a 	mov	r4,r17
 c0021fc:	c001f140 	call	c001f14 <setColorPalette>
	int flag = 0;
	char color_string[80];
    int fg, bg, x, y;
	textVGAColorClr();
	//initialize palette
	for (int i = 0; i < 16; i++)
 c002200:	e0bfe317 	ldw	r2,-116(fp)
 c002204:	10800044 	addi	r2,r2,1
 c002208:	e0bfe315 	stw	r2,-116(fp)
 c00220c:	e0bfe317 	ldw	r2,-116(fp)
 c002210:	10800410 	cmplti	r2,r2,16
 c002214:	103fd51e 	bne	r2,zero,c00216c <__alt_data_end+0xfc00216c>
	{
		setColorPalette (i, colors[i].red, colors[i].green, colors[i].blue);
	}
	int count =0;
 c002218:	e03fe515 	stw	zero,-108(fp)
	while (1) {
	//for(int y = 0; y < COLUMNS; y++){
		fg = rand() % 16;
 c00221c:	c0051100 	call	c005110 <rand>
 c002220:	1007883a 	mov	r3,r2
 c002224:	00a00034 	movhi	r2,32768
 c002228:	108003c4 	addi	r2,r2,15
 c00222c:	1884703a 	and	r2,r3,r2
 c002230:	1000040e 	bge	r2,zero,c002244 <textVGAColorScreenSaver+0x108>
 c002234:	10bfffc4 	addi	r2,r2,-1
 c002238:	00fffc04 	movi	r3,-16
 c00223c:	10c4b03a 	or	r2,r2,r3
 c002240:	10800044 	addi	r2,r2,1
 c002244:	e0bfe115 	stw	r2,-124(fp)
		bg = rand() % 16;
 c002248:	c0051100 	call	c005110 <rand>
 c00224c:	1007883a 	mov	r3,r2
 c002250:	00a00034 	movhi	r2,32768
 c002254:	108003c4 	addi	r2,r2,15
 c002258:	1884703a 	and	r2,r3,r2
 c00225c:	1000040e 	bge	r2,zero,c002270 <textVGAColorScreenSaver+0x134>
 c002260:	10bfffc4 	addi	r2,r2,-1
 c002264:	00fffc04 	movi	r3,-16
 c002268:	10c4b03a 	or	r2,r2,r3
 c00226c:	10800044 	addi	r2,r2,1
 c002270:	e0bfe215 	stw	r2,-120(fp)
		while (fg == bg)
 c002274:	00001606 	br	c0022d0 <textVGAColorScreenSaver+0x194>
		{
			fg = rand() % 16;
 c002278:	c0051100 	call	c005110 <rand>
 c00227c:	1007883a 	mov	r3,r2
 c002280:	00a00034 	movhi	r2,32768
 c002284:	108003c4 	addi	r2,r2,15
 c002288:	1884703a 	and	r2,r3,r2
 c00228c:	1000040e 	bge	r2,zero,c0022a0 <textVGAColorScreenSaver+0x164>
 c002290:	10bfffc4 	addi	r2,r2,-1
 c002294:	00fffc04 	movi	r3,-16
 c002298:	10c4b03a 	or	r2,r2,r3
 c00229c:	10800044 	addi	r2,r2,1
 c0022a0:	e0bfe115 	stw	r2,-124(fp)
			bg = rand() % 16;
 c0022a4:	c0051100 	call	c005110 <rand>
 c0022a8:	1007883a 	mov	r3,r2
 c0022ac:	00a00034 	movhi	r2,32768
 c0022b0:	108003c4 	addi	r2,r2,15
 c0022b4:	1884703a 	and	r2,r3,r2
 c0022b8:	1000040e 	bge	r2,zero,c0022cc <textVGAColorScreenSaver+0x190>
 c0022bc:	10bfffc4 	addi	r2,r2,-1
 c0022c0:	00fffc04 	movi	r3,-16
 c0022c4:	10c4b03a 	or	r2,r2,r3
 c0022c8:	10800044 	addi	r2,r2,1
 c0022cc:	e0bfe215 	stw	r2,-120(fp)
	int count =0;
	while (1) {
	//for(int y = 0; y < COLUMNS; y++){
		fg = rand() % 16;
		bg = rand() % 16;
		while (fg == bg)
 c0022d0:	e0ffe117 	ldw	r3,-124(fp)
 c0022d4:	e0bfe217 	ldw	r2,-120(fp)
 c0022d8:	18bfe726 	beq	r3,r2,c002278 <__alt_data_end+0xfc002278>
		{
			fg = rand() % 16;
			bg = rand() % 16;
		}
		//sprintf(color_string," ttttttt ");
		sprintf(color_string, "Drawing %s text with %s background", colors[fg].name, colors[bg].name);
 c0022dc:	014005c4 	movi	r5,23
 c0022e0:	e13fe117 	ldw	r4,-124(fp)
 c0022e4:	c00473c0 	call	c00473c <__mulsi3>
 c0022e8:	1007883a 	mov	r3,r2
 c0022ec:	008300b4 	movhi	r2,3074
 c0022f0:	10b8a604 	addi	r2,r2,-7528
 c0022f4:	18a1883a 	add	r16,r3,r2
 c0022f8:	014005c4 	movi	r5,23
 c0022fc:	e13fe217 	ldw	r4,-120(fp)
 c002300:	c00473c0 	call	c00473c <__mulsi3>
 c002304:	1007883a 	mov	r3,r2
 c002308:	008300b4 	movhi	r2,3074
 c00230c:	10b8a604 	addi	r2,r2,-7528
 c002310:	1887883a 	add	r3,r3,r2
 c002314:	e0bfe804 	addi	r2,fp,-96
 c002318:	180f883a 	mov	r7,r3
 c00231c:	800d883a 	mov	r6,r16
 c002320:	014300b4 	movhi	r5,3074
 c002324:	29764504 	addi	r5,r5,-9964
 c002328:	1009883a 	mov	r4,r2
 c00232c:	c00528c0 	call	c00528c <sprintf>
		x = rand() % (ROWS-strlen(color_string));
 c002330:	c0051100 	call	c005110 <rand>
 c002334:	1021883a 	mov	r16,r2
 c002338:	e0bfe804 	addi	r2,fp,-96
 c00233c:	1009883a 	mov	r4,r2
 c002340:	c0052f80 	call	c0052f8 <strlen>
 c002344:	1007883a 	mov	r3,r2
 c002348:	00800f04 	movi	r2,60
 c00234c:	10c5c83a 	sub	r2,r2,r3
 c002350:	100b883a 	mov	r5,r2
 c002354:	8009883a 	mov	r4,r16
 c002358:	c0046e40 	call	c0046e4 <__umodsi3>
 c00235c:	e0bfe615 	stw	r2,-104(fp)
		y = rand() % 60;
 c002360:	c0051100 	call	c005110 <rand>
 c002364:	01400f04 	movi	r5,60
 c002368:	1009883a 	mov	r4,r2
 c00236c:	c00460c0 	call	c00460c <__modsi3>
 c002370:	e0bfe715 	stw	r2,-100(fp)
		if (y %2==0) {
 c002374:	e0bfe717 	ldw	r2,-100(fp)
 c002378:	1080004c 	andi	r2,r2,1
 c00237c:	1000181e 	bne	r2,zero,c0023e0 <textVGAColorScreenSaver+0x2a4>
			textVGADrawColorText (color_string, x, y, bg, fg);
 c002380:	e0bfe217 	ldw	r2,-120(fp)
 c002384:	11003fcc 	andi	r4,r2,255
 c002388:	e0bfe117 	ldw	r2,-124(fp)
 c00238c:	10803fcc 	andi	r2,r2,255
 c002390:	e0ffe804 	addi	r3,fp,-96
 c002394:	d8800015 	stw	r2,0(sp)
 c002398:	200f883a 	mov	r7,r4
 c00239c:	e1bfe717 	ldw	r6,-100(fp)
 c0023a0:	e17fe617 	ldw	r5,-104(fp)
 c0023a4:	1809883a 	mov	r4,r3
 c0023a8:	c001e040 	call	c001e04 <textVGADrawColorText>
			textVGADrawColorText (color_string, x, y+1, bg, fg);
 c0023ac:	e0bfe717 	ldw	r2,-100(fp)
 c0023b0:	11000044 	addi	r4,r2,1
 c0023b4:	e0bfe217 	ldw	r2,-120(fp)
 c0023b8:	11403fcc 	andi	r5,r2,255
 c0023bc:	e0bfe117 	ldw	r2,-124(fp)
 c0023c0:	10803fcc 	andi	r2,r2,255
 c0023c4:	e0ffe804 	addi	r3,fp,-96
 c0023c8:	d8800015 	stw	r2,0(sp)
 c0023cc:	280f883a 	mov	r7,r5
 c0023d0:	200d883a 	mov	r6,r4
 c0023d4:	e17fe617 	ldw	r5,-104(fp)
 c0023d8:	1809883a 	mov	r4,r3
 c0023dc:	c001e040 	call	c001e04 <textVGADrawColorText>

		}
		usleep (100000);
 c0023e0:	010000b4 	movhi	r4,2
 c0023e4:	2121a804 	addi	r4,r4,-31072
 c0023e8:	c01b5480 	call	c01b548 <usleep>
	//}
	}
 c0023ec:	003f8b06 	br	c00221c <__alt_data_end+0xfc00221c>

0c0023f0 <VGADrawColorBox>:
	//VGADrawColorBox(2,2,15,0);
	//VGADrawColorBox(ROWS/2,COLUMNS/2,3,0);
}

void VGADrawColorBox(int x, int y, alt_u8 background)
{
 c0023f0:	defffa04 	addi	sp,sp,-24
 c0023f4:	dfc00515 	stw	ra,20(sp)
 c0023f8:	df000415 	stw	fp,16(sp)
 c0023fc:	dc000315 	stw	r16,12(sp)
 c002400:	df000404 	addi	fp,sp,16
 c002404:	e13ffc15 	stw	r4,-16(fp)
 c002408:	e17ffd15 	stw	r5,-12(fp)
 c00240c:	3005883a 	mov	r2,r6
 c002410:	e0bffe05 	stb	r2,-8(fp)
	vga_ctrl->VRAM[(y*COLUMNS + x) * 2] = 0 << 4 | background;
 c002414:	d4200217 	ldw	r16,-32760(gp)
 c002418:	01401404 	movi	r5,80
 c00241c:	e13ffd17 	ldw	r4,-12(fp)
 c002420:	c00473c0 	call	c00473c <__mulsi3>
 c002424:	1007883a 	mov	r3,r2
 c002428:	e0bffc17 	ldw	r2,-16(fp)
 c00242c:	1885883a 	add	r2,r3,r2
 c002430:	1085883a 	add	r2,r2,r2
 c002434:	8085883a 	add	r2,r16,r2
 c002438:	e0fffe03 	ldbu	r3,-8(fp)
 c00243c:	10c00005 	stb	r3,0(r2)
}
 c002440:	0001883a 	nop
 c002444:	e6ffff04 	addi	sp,fp,-4
 c002448:	dfc00217 	ldw	ra,8(sp)
 c00244c:	df000117 	ldw	fp,4(sp)
 c002450:	dc000017 	ldw	r16,0(sp)
 c002454:	dec00304 	addi	sp,sp,12
 c002458:	f800283a 	ret

0c00245c <VGAwriteText>:

void VGAwriteText(int x, int y, int colorFG, int colorBG, char text[]) {
 c00245c:	defff904 	addi	sp,sp,-28
 c002460:	dfc00615 	stw	ra,24(sp)
 c002464:	df000515 	stw	fp,20(sp)
 c002468:	df000504 	addi	fp,sp,20
 c00246c:	e13ffc15 	stw	r4,-16(fp)
 c002470:	e17ffd15 	stw	r5,-12(fp)
 c002474:	e1bffe15 	stw	r6,-8(fp)
 c002478:	e1ffff15 	stw	r7,-4(fp)
		textVGADrawColorText (text, x, (y/2)*2, colorBG, colorFG);
 c00247c:	e0bffd17 	ldw	r2,-12(fp)
 c002480:	1006d7fa 	srli	r3,r2,31
 c002484:	1885883a 	add	r2,r3,r2
 c002488:	1005d07a 	srai	r2,r2,1
 c00248c:	1085883a 	add	r2,r2,r2
 c002490:	1009883a 	mov	r4,r2
 c002494:	e0bfff17 	ldw	r2,-4(fp)
 c002498:	10c03fcc 	andi	r3,r2,255
 c00249c:	e0bffe17 	ldw	r2,-8(fp)
 c0024a0:	10803fcc 	andi	r2,r2,255
 c0024a4:	d8800015 	stw	r2,0(sp)
 c0024a8:	180f883a 	mov	r7,r3
 c0024ac:	200d883a 	mov	r6,r4
 c0024b0:	e17ffc17 	ldw	r5,-16(fp)
 c0024b4:	e1000217 	ldw	r4,8(fp)
 c0024b8:	c001e040 	call	c001e04 <textVGADrawColorText>
		textVGADrawColorText (text, x, (y/2)*2+1, colorBG, colorFG);
 c0024bc:	e0bffd17 	ldw	r2,-12(fp)
 c0024c0:	1006d7fa 	srli	r3,r2,31
 c0024c4:	1885883a 	add	r2,r3,r2
 c0024c8:	1005d07a 	srai	r2,r2,1
 c0024cc:	1085883a 	add	r2,r2,r2
 c0024d0:	10c00044 	addi	r3,r2,1
 c0024d4:	e0bfff17 	ldw	r2,-4(fp)
 c0024d8:	11003fcc 	andi	r4,r2,255
 c0024dc:	e0bffe17 	ldw	r2,-8(fp)
 c0024e0:	10803fcc 	andi	r2,r2,255
 c0024e4:	d8800015 	stw	r2,0(sp)
 c0024e8:	200f883a 	mov	r7,r4
 c0024ec:	180d883a 	mov	r6,r3
 c0024f0:	e17ffc17 	ldw	r5,-16(fp)
 c0024f4:	e1000217 	ldw	r4,8(fp)
 c0024f8:	c001e040 	call	c001e04 <textVGADrawColorText>
}
 c0024fc:	0001883a 	nop
 c002500:	e037883a 	mov	sp,fp
 c002504:	dfc00117 	ldw	ra,4(sp)
 c002508:	df000017 	ldw	fp,0(sp)
 c00250c:	dec00204 	addi	sp,sp,8
 c002510:	f800283a 	ret

0c002514 <HIDMProbe>:
 c002514:	defff204 	addi	sp,sp,-56
 c002518:	dfc00d15 	stw	ra,52(sp)
 c00251c:	df000c15 	stw	fp,48(sp)
 c002520:	df000c04 	addi	fp,sp,48
 c002524:	2005883a 	mov	r2,r4
 c002528:	e17fff15 	stw	r5,-4(fp)
 c00252c:	e0bffe05 	stb	r2,-8(fp)
 c002530:	008300b4 	movhi	r2,3074
 c002534:	10878004 	addi	r2,r2,7680
 c002538:	e0bffa15 	stw	r2,-24(fp)
 c00253c:	008300b4 	movhi	r2,3074
 c002540:	10878004 	addi	r2,r2,7680
 c002544:	e0bffb15 	stw	r2,-20(fp)
 c002548:	e0fffe03 	ldbu	r3,-8(fp)
 c00254c:	008300b4 	movhi	r2,3074
 c002550:	10878004 	addi	r2,r2,7680
 c002554:	d8800415 	stw	r2,16(sp)
 c002558:	00800244 	movi	r2,9
 c00255c:	d8800315 	stw	r2,12(sp)
 c002560:	d8000215 	stw	zero,8(sp)
 c002564:	00800084 	movi	r2,2
 c002568:	d8800115 	stw	r2,4(sp)
 c00256c:	d8000015 	stw	zero,0(sp)
 c002570:	01c00184 	movi	r7,6
 c002574:	01802004 	movi	r6,128
 c002578:	000b883a 	mov	r5,zero
 c00257c:	1809883a 	mov	r4,r3
 c002580:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c002584:	e0bffc05 	stb	r2,-16(fp)
 c002588:	e0bffc03 	ldbu	r2,-16(fp)
 c00258c:	10000226 	beq	r2,zero,c002598 <HIDMProbe+0x84>
 c002590:	0005883a 	mov	r2,zero
 c002594:	0000dc06 	br	c002908 <HIDMProbe+0x3f4>
 c002598:	e0bffa17 	ldw	r2,-24(fp)
 c00259c:	1080008b 	ldhu	r2,2(r2)
 c0025a0:	10bfffcc 	andi	r2,r2,65535
 c0025a4:	10804070 	cmpltui	r2,r2,257
 c0025a8:	1000031e 	bne	r2,zero,c0025b8 <HIDMProbe+0xa4>
 c0025ac:	00804004 	movi	r2,256
 c0025b0:	e0bff90d 	sth	r2,-28(fp)
 c0025b4:	00000306 	br	c0025c4 <HIDMProbe+0xb0>
 c0025b8:	e0bffa17 	ldw	r2,-24(fp)
 c0025bc:	1080008b 	ldhu	r2,2(r2)
 c0025c0:	e0bff90d 	sth	r2,-28(fp)
 c0025c4:	e13ffe03 	ldbu	r4,-8(fp)
 c0025c8:	e0fff90b 	ldhu	r3,-28(fp)
 c0025cc:	008300b4 	movhi	r2,3074
 c0025d0:	10878004 	addi	r2,r2,7680
 c0025d4:	d8800415 	stw	r2,16(sp)
 c0025d8:	d8c00315 	stw	r3,12(sp)
 c0025dc:	d8000215 	stw	zero,8(sp)
 c0025e0:	00800084 	movi	r2,2
 c0025e4:	d8800115 	stw	r2,4(sp)
 c0025e8:	d8000015 	stw	zero,0(sp)
 c0025ec:	01c00184 	movi	r7,6
 c0025f0:	01802004 	movi	r6,128
 c0025f4:	000b883a 	mov	r5,zero
 c0025f8:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c0025fc:	e0bffc05 	stb	r2,-16(fp)
 c002600:	e0bffc03 	ldbu	r2,-16(fp)
 c002604:	10000226 	beq	r2,zero,c002610 <HIDMProbe+0xfc>
 c002608:	0005883a 	mov	r2,zero
 c00260c:	0000be06 	br	c002908 <HIDMProbe+0x3f4>
 c002610:	e0bffa17 	ldw	r2,-24(fp)
 c002614:	10800143 	ldbu	r2,5(r2)
 c002618:	e0bffc45 	stb	r2,-15(fp)
 c00261c:	0000b306 	br	c0028ec <HIDMProbe+0x3d8>
 c002620:	e0bffa17 	ldw	r2,-24(fp)
 c002624:	10800043 	ldbu	r2,1(r2)
 c002628:	10803fcc 	andi	r2,r2,255
 c00262c:	10800120 	cmpeqi	r2,r2,4
 c002630:	1000091e 	bne	r2,zero,c002658 <HIDMProbe+0x144>
 c002634:	e0bffa17 	ldw	r2,-24(fp)
 c002638:	10800003 	ldbu	r2,0(r2)
 c00263c:	10803fcc 	andi	r2,r2,255
 c002640:	e0fffb17 	ldw	r3,-20(fp)
 c002644:	1885883a 	add	r2,r3,r2
 c002648:	e0bffb15 	stw	r2,-20(fp)
 c00264c:	e0bffb17 	ldw	r2,-20(fp)
 c002650:	e0bffa15 	stw	r2,-24(fp)
 c002654:	0000a506 	br	c0028ec <HIDMProbe+0x3d8>
 c002658:	e0bffa17 	ldw	r2,-24(fp)
 c00265c:	10800143 	ldbu	r2,5(r2)
 c002660:	e0bffc85 	stb	r2,-14(fp)
 c002664:	e0bffa17 	ldw	r2,-24(fp)
 c002668:	10800183 	ldbu	r2,6(r2)
 c00266c:	e0bffcc5 	stb	r2,-13(fp)
 c002670:	e0bffa17 	ldw	r2,-24(fp)
 c002674:	108001c3 	ldbu	r2,7(r2)
 c002678:	e0bffd05 	stb	r2,-12(fp)
 c00267c:	e0bffc83 	ldbu	r2,-14(fp)
 c002680:	108000d8 	cmpnei	r2,r2,3
 c002684:	1000971e 	bne	r2,zero,c0028e4 <HIDMProbe+0x3d0>
 c002688:	e0bffcc3 	ldbu	r2,-13(fp)
 c00268c:	10800058 	cmpnei	r2,r2,1
 c002690:	1000941e 	bne	r2,zero,c0028e4 <HIDMProbe+0x3d0>
 c002694:	e0bffd03 	ldbu	r2,-12(fp)
 c002698:	10800098 	cmpnei	r2,r2,2
 c00269c:	1000911e 	bne	r2,zero,c0028e4 <HIDMProbe+0x3d0>
 c0026a0:	e0fffe03 	ldbu	r3,-8(fp)
 c0026a4:	008300b4 	movhi	r2,3074
 c0026a8:	1087c004 	addi	r2,r2,7936
 c0026ac:	180690fa 	slli	r3,r3,3
 c0026b0:	10c5883a 	add	r2,r2,r3
 c0026b4:	10800104 	addi	r2,r2,4
 c0026b8:	00c00084 	movi	r3,2
 c0026bc:	10c00005 	stb	r3,0(r2)
 c0026c0:	e0fffe03 	ldbu	r3,-8(fp)
 c0026c4:	008300b4 	movhi	r2,3074
 c0026c8:	1087c004 	addi	r2,r2,7936
 c0026cc:	180690fa 	slli	r3,r3,3
 c0026d0:	10c5883a 	add	r2,r2,r3
 c0026d4:	10800017 	ldw	r2,0(r2)
 c0026d8:	1080008b 	ldhu	r2,2(r2)
 c0026dc:	e0bffd45 	stb	r2,-11(fp)
 c0026e0:	c002d240 	call	c002d24 <HID_init>
 c0026e4:	e0fffe03 	ldbu	r3,-8(fp)
 c0026e8:	008300b4 	movhi	r2,3074
 c0026ec:	1087c004 	addi	r2,r2,7936
 c0026f0:	180690fa 	slli	r3,r3,3
 c0026f4:	10c7883a 	add	r3,r2,r3
 c0026f8:	008300b4 	movhi	r2,3074
 c0026fc:	10876c04 	addi	r2,r2,7600
 c002700:	18800015 	stw	r2,0(r3)
 c002704:	e0fffe03 	ldbu	r3,-8(fp)
 c002708:	008300b4 	movhi	r2,3074
 c00270c:	1087c004 	addi	r2,r2,7936
 c002710:	180690fa 	slli	r3,r3,3
 c002714:	10c5883a 	add	r2,r2,r3
 c002718:	10800017 	ldw	r2,0(r2)
 c00271c:	e0fffd43 	ldbu	r3,-11(fp)
 c002720:	10c0008d 	sth	r3,2(r2)
 c002724:	e0bffa17 	ldw	r2,-24(fp)
 c002728:	10800083 	ldbu	r2,2(r2)
 c00272c:	d0a79f45 	stb	r2,-24963(gp)
 c002730:	e0bffe03 	ldbu	r2,-8(fp)
 c002734:	d0a79f05 	stb	r2,-24964(gp)
 c002738:	e0bffa17 	ldw	r2,-24(fp)
 c00273c:	10800003 	ldbu	r2,0(r2)
 c002740:	10803fcc 	andi	r2,r2,255
 c002744:	e0fffb17 	ldw	r3,-20(fp)
 c002748:	1885883a 	add	r2,r3,r2
 c00274c:	e0bffb15 	stw	r2,-20(fp)
 c002750:	e0bffb17 	ldw	r2,-20(fp)
 c002754:	e0bffa15 	stw	r2,-24(fp)
 c002758:	00005b06 	br	c0028c8 <HIDMProbe+0x3b4>
 c00275c:	e0bffa17 	ldw	r2,-24(fp)
 c002760:	10800043 	ldbu	r2,1(r2)
 c002764:	10803fcc 	andi	r2,r2,255
 c002768:	10800160 	cmpeqi	r2,r2,5
 c00276c:	1000091e 	bne	r2,zero,c002794 <HIDMProbe+0x280>
 c002770:	e0bffa17 	ldw	r2,-24(fp)
 c002774:	10800003 	ldbu	r2,0(r2)
 c002778:	10803fcc 	andi	r2,r2,255
 c00277c:	e0fffb17 	ldw	r3,-20(fp)
 c002780:	1885883a 	add	r2,r3,r2
 c002784:	e0bffb15 	stw	r2,-20(fp)
 c002788:	e0bffb17 	ldw	r2,-20(fp)
 c00278c:	e0bffa15 	stw	r2,-24(fp)
 c002790:	00004d06 	br	c0028c8 <HIDMProbe+0x3b4>
 c002794:	e0fffe03 	ldbu	r3,-8(fp)
 c002798:	008300b4 	movhi	r2,3074
 c00279c:	1087c004 	addi	r2,r2,7936
 c0027a0:	180690fa 	slli	r3,r3,3
 c0027a4:	10c5883a 	add	r2,r2,r3
 c0027a8:	10800017 	ldw	r2,0(r2)
 c0027ac:	10800204 	addi	r2,r2,8
 c0027b0:	e0fffa17 	ldw	r3,-24(fp)
 c0027b4:	18c00083 	ldbu	r3,2(r3)
 c0027b8:	10c00005 	stb	r3,0(r2)
 c0027bc:	e0fffe03 	ldbu	r3,-8(fp)
 c0027c0:	008300b4 	movhi	r2,3074
 c0027c4:	1087c004 	addi	r2,r2,7936
 c0027c8:	180690fa 	slli	r3,r3,3
 c0027cc:	10c5883a 	add	r2,r2,r3
 c0027d0:	10800017 	ldw	r2,0(r2)
 c0027d4:	10800204 	addi	r2,r2,8
 c0027d8:	e0fffa17 	ldw	r3,-24(fp)
 c0027dc:	18c000c3 	ldbu	r3,3(r3)
 c0027e0:	10c00045 	stb	r3,1(r2)
 c0027e4:	e0fffe03 	ldbu	r3,-8(fp)
 c0027e8:	008300b4 	movhi	r2,3074
 c0027ec:	1087c004 	addi	r2,r2,7936
 c0027f0:	180690fa 	slli	r3,r3,3
 c0027f4:	10c5883a 	add	r2,r2,r3
 c0027f8:	10800017 	ldw	r2,0(r2)
 c0027fc:	10800204 	addi	r2,r2,8
 c002800:	e0fffa17 	ldw	r3,-24(fp)
 c002804:	18c0010b 	ldhu	r3,4(r3)
 c002808:	10c0008d 	sth	r3,2(r2)
 c00280c:	e0fffe03 	ldbu	r3,-8(fp)
 c002810:	008300b4 	movhi	r2,3074
 c002814:	1087c004 	addi	r2,r2,7936
 c002818:	180690fa 	slli	r3,r3,3
 c00281c:	10c5883a 	add	r2,r2,r3
 c002820:	10800017 	ldw	r2,0(r2)
 c002824:	10800204 	addi	r2,r2,8
 c002828:	e0fffa17 	ldw	r3,-24(fp)
 c00282c:	18c00183 	ldbu	r3,6(r3)
 c002830:	10c00105 	stb	r3,4(r2)
 c002834:	e0fffe03 	ldbu	r3,-8(fp)
 c002838:	e0bffc43 	ldbu	r2,-15(fp)
 c00283c:	d8000415 	stw	zero,16(sp)
 c002840:	d8000315 	stw	zero,12(sp)
 c002844:	d8000215 	stw	zero,8(sp)
 c002848:	d8000115 	stw	zero,4(sp)
 c00284c:	d8800015 	stw	r2,0(sp)
 c002850:	01c00244 	movi	r7,9
 c002854:	000d883a 	mov	r6,zero
 c002858:	000b883a 	mov	r5,zero
 c00285c:	1809883a 	mov	r4,r3
 c002860:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c002864:	e0bffc05 	stb	r2,-16(fp)
 c002868:	e0bffc03 	ldbu	r2,-16(fp)
 c00286c:	10000226 	beq	r2,zero,c002878 <HIDMProbe+0x364>
 c002870:	0005883a 	mov	r2,zero
 c002874:	00002406 	br	c002908 <HIDMProbe+0x3f4>
 c002878:	e0fffe03 	ldbu	r3,-8(fp)
 c00287c:	d0a79f43 	ldbu	r2,-24963(gp)
 c002880:	10803fcc 	andi	r2,r2,255
 c002884:	d8000415 	stw	zero,16(sp)
 c002888:	d8000315 	stw	zero,12(sp)
 c00288c:	d8800215 	stw	r2,8(sp)
 c002890:	d8000115 	stw	zero,4(sp)
 c002894:	d8000015 	stw	zero,0(sp)
 c002898:	01c002c4 	movi	r7,11
 c00289c:	01800844 	movi	r6,33
 c0028a0:	000b883a 	mov	r5,zero
 c0028a4:	1809883a 	mov	r4,r3
 c0028a8:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c0028ac:	e0bffc05 	stb	r2,-16(fp)
 c0028b0:	e0bffc03 	ldbu	r2,-16(fp)
 c0028b4:	10000226 	beq	r2,zero,c0028c0 <HIDMProbe+0x3ac>
 c0028b8:	0005883a 	mov	r2,zero
 c0028bc:	00001206 	br	c002908 <HIDMProbe+0x3f4>
 c0028c0:	00800044 	movi	r2,1
 c0028c4:	00001006 	br	c002908 <HIDMProbe+0x3f4>
 c0028c8:	e0fff90b 	ldhu	r3,-28(fp)
 c0028cc:	008300b4 	movhi	r2,3074
 c0028d0:	10878004 	addi	r2,r2,7680
 c0028d4:	1885883a 	add	r2,r3,r2
 c0028d8:	e0fffb17 	ldw	r3,-20(fp)
 c0028dc:	18bf9f36 	bltu	r3,r2,c00275c <__alt_data_end+0xfc00275c>
 c0028e0:	00000206 	br	c0028ec <HIDMProbe+0x3d8>
 c0028e4:	0005883a 	mov	r2,zero
 c0028e8:	00000706 	br	c002908 <HIDMProbe+0x3f4>
 c0028ec:	e0fff90b 	ldhu	r3,-28(fp)
 c0028f0:	008300b4 	movhi	r2,3074
 c0028f4:	10878004 	addi	r2,r2,7680
 c0028f8:	1885883a 	add	r2,r3,r2
 c0028fc:	e0fffb17 	ldw	r3,-20(fp)
 c002900:	18bf4736 	bltu	r3,r2,c002620 <__alt_data_end+0xfc002620>
 c002904:	0005883a 	mov	r2,zero
 c002908:	e037883a 	mov	sp,fp
 c00290c:	dfc00117 	ldw	ra,4(sp)
 c002910:	df000017 	ldw	fp,0(sp)
 c002914:	dec00204 	addi	sp,sp,8
 c002918:	f800283a 	ret

0c00291c <HIDKProbe>:
 c00291c:	defff204 	addi	sp,sp,-56
 c002920:	dfc00d15 	stw	ra,52(sp)
 c002924:	df000c15 	stw	fp,48(sp)
 c002928:	df000c04 	addi	fp,sp,48
 c00292c:	2005883a 	mov	r2,r4
 c002930:	e17fff15 	stw	r5,-4(fp)
 c002934:	e0bffe05 	stb	r2,-8(fp)
 c002938:	008300b4 	movhi	r2,3074
 c00293c:	10878004 	addi	r2,r2,7680
 c002940:	e0bffa15 	stw	r2,-24(fp)
 c002944:	008300b4 	movhi	r2,3074
 c002948:	10878004 	addi	r2,r2,7680
 c00294c:	e0bffb15 	stw	r2,-20(fp)
 c002950:	e0fffe03 	ldbu	r3,-8(fp)
 c002954:	008300b4 	movhi	r2,3074
 c002958:	10878004 	addi	r2,r2,7680
 c00295c:	d8800415 	stw	r2,16(sp)
 c002960:	00800244 	movi	r2,9
 c002964:	d8800315 	stw	r2,12(sp)
 c002968:	d8000215 	stw	zero,8(sp)
 c00296c:	00800084 	movi	r2,2
 c002970:	d8800115 	stw	r2,4(sp)
 c002974:	d8000015 	stw	zero,0(sp)
 c002978:	01c00184 	movi	r7,6
 c00297c:	01802004 	movi	r6,128
 c002980:	000b883a 	mov	r5,zero
 c002984:	1809883a 	mov	r4,r3
 c002988:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c00298c:	e0bffc05 	stb	r2,-16(fp)
 c002990:	e0bffc03 	ldbu	r2,-16(fp)
 c002994:	10000226 	beq	r2,zero,c0029a0 <HIDKProbe+0x84>
 c002998:	0005883a 	mov	r2,zero
 c00299c:	0000dc06 	br	c002d10 <HIDKProbe+0x3f4>
 c0029a0:	e0bffa17 	ldw	r2,-24(fp)
 c0029a4:	1080008b 	ldhu	r2,2(r2)
 c0029a8:	10bfffcc 	andi	r2,r2,65535
 c0029ac:	10804070 	cmpltui	r2,r2,257
 c0029b0:	1000031e 	bne	r2,zero,c0029c0 <HIDKProbe+0xa4>
 c0029b4:	00804004 	movi	r2,256
 c0029b8:	e0bff90d 	sth	r2,-28(fp)
 c0029bc:	00000306 	br	c0029cc <HIDKProbe+0xb0>
 c0029c0:	e0bffa17 	ldw	r2,-24(fp)
 c0029c4:	1080008b 	ldhu	r2,2(r2)
 c0029c8:	e0bff90d 	sth	r2,-28(fp)
 c0029cc:	e13ffe03 	ldbu	r4,-8(fp)
 c0029d0:	e0fff90b 	ldhu	r3,-28(fp)
 c0029d4:	008300b4 	movhi	r2,3074
 c0029d8:	10878004 	addi	r2,r2,7680
 c0029dc:	d8800415 	stw	r2,16(sp)
 c0029e0:	d8c00315 	stw	r3,12(sp)
 c0029e4:	d8000215 	stw	zero,8(sp)
 c0029e8:	00800084 	movi	r2,2
 c0029ec:	d8800115 	stw	r2,4(sp)
 c0029f0:	d8000015 	stw	zero,0(sp)
 c0029f4:	01c00184 	movi	r7,6
 c0029f8:	01802004 	movi	r6,128
 c0029fc:	000b883a 	mov	r5,zero
 c002a00:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c002a04:	e0bffc05 	stb	r2,-16(fp)
 c002a08:	e0bffc03 	ldbu	r2,-16(fp)
 c002a0c:	10000226 	beq	r2,zero,c002a18 <HIDKProbe+0xfc>
 c002a10:	0005883a 	mov	r2,zero
 c002a14:	0000be06 	br	c002d10 <HIDKProbe+0x3f4>
 c002a18:	e0bffa17 	ldw	r2,-24(fp)
 c002a1c:	10800143 	ldbu	r2,5(r2)
 c002a20:	e0bffc45 	stb	r2,-15(fp)
 c002a24:	0000b306 	br	c002cf4 <HIDKProbe+0x3d8>
 c002a28:	e0bffa17 	ldw	r2,-24(fp)
 c002a2c:	10800043 	ldbu	r2,1(r2)
 c002a30:	10803fcc 	andi	r2,r2,255
 c002a34:	10800120 	cmpeqi	r2,r2,4
 c002a38:	1000091e 	bne	r2,zero,c002a60 <HIDKProbe+0x144>
 c002a3c:	e0bffa17 	ldw	r2,-24(fp)
 c002a40:	10800003 	ldbu	r2,0(r2)
 c002a44:	10803fcc 	andi	r2,r2,255
 c002a48:	e0fffb17 	ldw	r3,-20(fp)
 c002a4c:	1885883a 	add	r2,r3,r2
 c002a50:	e0bffb15 	stw	r2,-20(fp)
 c002a54:	e0bffb17 	ldw	r2,-20(fp)
 c002a58:	e0bffa15 	stw	r2,-24(fp)
 c002a5c:	0000a506 	br	c002cf4 <HIDKProbe+0x3d8>
 c002a60:	e0bffa17 	ldw	r2,-24(fp)
 c002a64:	10800143 	ldbu	r2,5(r2)
 c002a68:	e0bffc85 	stb	r2,-14(fp)
 c002a6c:	e0bffa17 	ldw	r2,-24(fp)
 c002a70:	10800183 	ldbu	r2,6(r2)
 c002a74:	e0bffcc5 	stb	r2,-13(fp)
 c002a78:	e0bffa17 	ldw	r2,-24(fp)
 c002a7c:	108001c3 	ldbu	r2,7(r2)
 c002a80:	e0bffd05 	stb	r2,-12(fp)
 c002a84:	e0bffc83 	ldbu	r2,-14(fp)
 c002a88:	108000d8 	cmpnei	r2,r2,3
 c002a8c:	1000971e 	bne	r2,zero,c002cec <HIDKProbe+0x3d0>
 c002a90:	e0bffcc3 	ldbu	r2,-13(fp)
 c002a94:	10800058 	cmpnei	r2,r2,1
 c002a98:	1000941e 	bne	r2,zero,c002cec <HIDKProbe+0x3d0>
 c002a9c:	e0bffd03 	ldbu	r2,-12(fp)
 c002aa0:	10800058 	cmpnei	r2,r2,1
 c002aa4:	1000911e 	bne	r2,zero,c002cec <HIDKProbe+0x3d0>
 c002aa8:	e0fffe03 	ldbu	r3,-8(fp)
 c002aac:	008300b4 	movhi	r2,3074
 c002ab0:	1087c004 	addi	r2,r2,7936
 c002ab4:	180690fa 	slli	r3,r3,3
 c002ab8:	10c5883a 	add	r2,r2,r3
 c002abc:	10800104 	addi	r2,r2,4
 c002ac0:	00c00044 	movi	r3,1
 c002ac4:	10c00005 	stb	r3,0(r2)
 c002ac8:	e0fffe03 	ldbu	r3,-8(fp)
 c002acc:	008300b4 	movhi	r2,3074
 c002ad0:	1087c004 	addi	r2,r2,7936
 c002ad4:	180690fa 	slli	r3,r3,3
 c002ad8:	10c5883a 	add	r2,r2,r3
 c002adc:	10800017 	ldw	r2,0(r2)
 c002ae0:	1080008b 	ldhu	r2,2(r2)
 c002ae4:	e0bffd45 	stb	r2,-11(fp)
 c002ae8:	c002d240 	call	c002d24 <HID_init>
 c002aec:	e0fffe03 	ldbu	r3,-8(fp)
 c002af0:	008300b4 	movhi	r2,3074
 c002af4:	1087c004 	addi	r2,r2,7936
 c002af8:	180690fa 	slli	r3,r3,3
 c002afc:	10c7883a 	add	r3,r2,r3
 c002b00:	008300b4 	movhi	r2,3074
 c002b04:	10876c04 	addi	r2,r2,7600
 c002b08:	18800015 	stw	r2,0(r3)
 c002b0c:	e0fffe03 	ldbu	r3,-8(fp)
 c002b10:	008300b4 	movhi	r2,3074
 c002b14:	1087c004 	addi	r2,r2,7936
 c002b18:	180690fa 	slli	r3,r3,3
 c002b1c:	10c5883a 	add	r2,r2,r3
 c002b20:	10800017 	ldw	r2,0(r2)
 c002b24:	e0fffd43 	ldbu	r3,-11(fp)
 c002b28:	10c0008d 	sth	r3,2(r2)
 c002b2c:	e0bffa17 	ldw	r2,-24(fp)
 c002b30:	10800083 	ldbu	r2,2(r2)
 c002b34:	d0a79f45 	stb	r2,-24963(gp)
 c002b38:	e0bffe03 	ldbu	r2,-8(fp)
 c002b3c:	d0a79f05 	stb	r2,-24964(gp)
 c002b40:	e0bffa17 	ldw	r2,-24(fp)
 c002b44:	10800003 	ldbu	r2,0(r2)
 c002b48:	10803fcc 	andi	r2,r2,255
 c002b4c:	e0fffb17 	ldw	r3,-20(fp)
 c002b50:	1885883a 	add	r2,r3,r2
 c002b54:	e0bffb15 	stw	r2,-20(fp)
 c002b58:	e0bffb17 	ldw	r2,-20(fp)
 c002b5c:	e0bffa15 	stw	r2,-24(fp)
 c002b60:	00005b06 	br	c002cd0 <HIDKProbe+0x3b4>
 c002b64:	e0bffa17 	ldw	r2,-24(fp)
 c002b68:	10800043 	ldbu	r2,1(r2)
 c002b6c:	10803fcc 	andi	r2,r2,255
 c002b70:	10800160 	cmpeqi	r2,r2,5
 c002b74:	1000091e 	bne	r2,zero,c002b9c <HIDKProbe+0x280>
 c002b78:	e0bffa17 	ldw	r2,-24(fp)
 c002b7c:	10800003 	ldbu	r2,0(r2)
 c002b80:	10803fcc 	andi	r2,r2,255
 c002b84:	e0fffb17 	ldw	r3,-20(fp)
 c002b88:	1885883a 	add	r2,r3,r2
 c002b8c:	e0bffb15 	stw	r2,-20(fp)
 c002b90:	e0bffb17 	ldw	r2,-20(fp)
 c002b94:	e0bffa15 	stw	r2,-24(fp)
 c002b98:	00004d06 	br	c002cd0 <HIDKProbe+0x3b4>
 c002b9c:	e0fffe03 	ldbu	r3,-8(fp)
 c002ba0:	008300b4 	movhi	r2,3074
 c002ba4:	1087c004 	addi	r2,r2,7936
 c002ba8:	180690fa 	slli	r3,r3,3
 c002bac:	10c5883a 	add	r2,r2,r3
 c002bb0:	10800017 	ldw	r2,0(r2)
 c002bb4:	10800204 	addi	r2,r2,8
 c002bb8:	e0fffa17 	ldw	r3,-24(fp)
 c002bbc:	18c00083 	ldbu	r3,2(r3)
 c002bc0:	10c00005 	stb	r3,0(r2)
 c002bc4:	e0fffe03 	ldbu	r3,-8(fp)
 c002bc8:	008300b4 	movhi	r2,3074
 c002bcc:	1087c004 	addi	r2,r2,7936
 c002bd0:	180690fa 	slli	r3,r3,3
 c002bd4:	10c5883a 	add	r2,r2,r3
 c002bd8:	10800017 	ldw	r2,0(r2)
 c002bdc:	10800204 	addi	r2,r2,8
 c002be0:	e0fffa17 	ldw	r3,-24(fp)
 c002be4:	18c000c3 	ldbu	r3,3(r3)
 c002be8:	10c00045 	stb	r3,1(r2)
 c002bec:	e0fffe03 	ldbu	r3,-8(fp)
 c002bf0:	008300b4 	movhi	r2,3074
 c002bf4:	1087c004 	addi	r2,r2,7936
 c002bf8:	180690fa 	slli	r3,r3,3
 c002bfc:	10c5883a 	add	r2,r2,r3
 c002c00:	10800017 	ldw	r2,0(r2)
 c002c04:	10800204 	addi	r2,r2,8
 c002c08:	e0fffa17 	ldw	r3,-24(fp)
 c002c0c:	18c0010b 	ldhu	r3,4(r3)
 c002c10:	10c0008d 	sth	r3,2(r2)
 c002c14:	e0fffe03 	ldbu	r3,-8(fp)
 c002c18:	008300b4 	movhi	r2,3074
 c002c1c:	1087c004 	addi	r2,r2,7936
 c002c20:	180690fa 	slli	r3,r3,3
 c002c24:	10c5883a 	add	r2,r2,r3
 c002c28:	10800017 	ldw	r2,0(r2)
 c002c2c:	10800204 	addi	r2,r2,8
 c002c30:	e0fffa17 	ldw	r3,-24(fp)
 c002c34:	18c00183 	ldbu	r3,6(r3)
 c002c38:	10c00105 	stb	r3,4(r2)
 c002c3c:	e0fffe03 	ldbu	r3,-8(fp)
 c002c40:	e0bffc43 	ldbu	r2,-15(fp)
 c002c44:	d8000415 	stw	zero,16(sp)
 c002c48:	d8000315 	stw	zero,12(sp)
 c002c4c:	d8000215 	stw	zero,8(sp)
 c002c50:	d8000115 	stw	zero,4(sp)
 c002c54:	d8800015 	stw	r2,0(sp)
 c002c58:	01c00244 	movi	r7,9
 c002c5c:	000d883a 	mov	r6,zero
 c002c60:	000b883a 	mov	r5,zero
 c002c64:	1809883a 	mov	r4,r3
 c002c68:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c002c6c:	e0bffc05 	stb	r2,-16(fp)
 c002c70:	e0bffc03 	ldbu	r2,-16(fp)
 c002c74:	10000226 	beq	r2,zero,c002c80 <HIDKProbe+0x364>
 c002c78:	0005883a 	mov	r2,zero
 c002c7c:	00002406 	br	c002d10 <HIDKProbe+0x3f4>
 c002c80:	e0fffe03 	ldbu	r3,-8(fp)
 c002c84:	d0a79f43 	ldbu	r2,-24963(gp)
 c002c88:	10803fcc 	andi	r2,r2,255
 c002c8c:	d8000415 	stw	zero,16(sp)
 c002c90:	d8000315 	stw	zero,12(sp)
 c002c94:	d8800215 	stw	r2,8(sp)
 c002c98:	d8000115 	stw	zero,4(sp)
 c002c9c:	d8000015 	stw	zero,0(sp)
 c002ca0:	01c002c4 	movi	r7,11
 c002ca4:	01800844 	movi	r6,33
 c002ca8:	000b883a 	mov	r5,zero
 c002cac:	1809883a 	mov	r4,r3
 c002cb0:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c002cb4:	e0bffc05 	stb	r2,-16(fp)
 c002cb8:	e0bffc03 	ldbu	r2,-16(fp)
 c002cbc:	10000226 	beq	r2,zero,c002cc8 <HIDKProbe+0x3ac>
 c002cc0:	0005883a 	mov	r2,zero
 c002cc4:	00001206 	br	c002d10 <HIDKProbe+0x3f4>
 c002cc8:	00800044 	movi	r2,1
 c002ccc:	00001006 	br	c002d10 <HIDKProbe+0x3f4>
 c002cd0:	e0fff90b 	ldhu	r3,-28(fp)
 c002cd4:	008300b4 	movhi	r2,3074
 c002cd8:	10878004 	addi	r2,r2,7680
 c002cdc:	1885883a 	add	r2,r3,r2
 c002ce0:	e0fffb17 	ldw	r3,-20(fp)
 c002ce4:	18bf9f36 	bltu	r3,r2,c002b64 <__alt_data_end+0xfc002b64>
 c002ce8:	00000206 	br	c002cf4 <HIDKProbe+0x3d8>
 c002cec:	0005883a 	mov	r2,zero
 c002cf0:	00000706 	br	c002d10 <HIDKProbe+0x3f4>
 c002cf4:	e0fff90b 	ldhu	r3,-28(fp)
 c002cf8:	008300b4 	movhi	r2,3074
 c002cfc:	10878004 	addi	r2,r2,7680
 c002d00:	1885883a 	add	r2,r3,r2
 c002d04:	e0fffb17 	ldw	r3,-20(fp)
 c002d08:	18bf4736 	bltu	r3,r2,c002a28 <__alt_data_end+0xfc002a28>
 c002d0c:	0005883a 	mov	r2,zero
 c002d10:	e037883a 	mov	sp,fp
 c002d14:	dfc00117 	ldw	ra,4(sp)
 c002d18:	df000017 	ldw	fp,0(sp)
 c002d1c:	dec00204 	addi	sp,sp,8
 c002d20:	f800283a 	ret

0c002d24 <HID_init>:
 c002d24:	deffff04 	addi	sp,sp,-4
 c002d28:	df000015 	stw	fp,0(sp)
 c002d2c:	d839883a 	mov	fp,sp
 c002d30:	008300b4 	movhi	r2,3074
 c002d34:	10876c04 	addi	r2,r2,7600
 c002d38:	00c01004 	movi	r3,64
 c002d3c:	10c00345 	stb	r3,13(r2)
 c002d40:	008300b4 	movhi	r2,3074
 c002d44:	10876c04 	addi	r2,r2,7600
 c002d48:	00c00404 	movi	r3,16
 c002d4c:	10c00385 	stb	r3,14(r2)
 c002d50:	0001883a 	nop
 c002d54:	e037883a 	mov	sp,fp
 c002d58:	df000017 	ldw	fp,0(sp)
 c002d5c:	dec00104 	addi	sp,sp,4
 c002d60:	f800283a 	ret

0c002d64 <mousePoll>:
 c002d64:	defffb04 	addi	sp,sp,-20
 c002d68:	dfc00415 	stw	ra,16(sp)
 c002d6c:	df000315 	stw	fp,12(sp)
 c002d70:	df000304 	addi	fp,sp,12
 c002d74:	e13fff15 	stw	r4,-4(fp)
 c002d78:	d0a79f03 	ldbu	r2,-24964(gp)
 c002d7c:	10803fcc 	andi	r2,r2,255
 c002d80:	100b883a 	mov	r5,r2
 c002d84:	01003804 	movi	r4,224
 c002d88:	c002f400 	call	c002f40 <MAXreg_wr>
 c002d8c:	d0a79f03 	ldbu	r2,-24964(gp)
 c002d90:	11003fcc 	andi	r4,r2,255
 c002d94:	d0a79f03 	ldbu	r2,-24964(gp)
 c002d98:	10c03fcc 	andi	r3,r2,255
 c002d9c:	008300b4 	movhi	r2,3074
 c002da0:	1087c004 	addi	r2,r2,7936
 c002da4:	180690fa 	slli	r3,r3,3
 c002da8:	10c5883a 	add	r2,r2,r3
 c002dac:	10800017 	ldw	r2,0(r2)
 c002db0:	10800204 	addi	r2,r2,8
 c002db4:	1080008b 	ldhu	r2,2(r2)
 c002db8:	10803fcc 	andi	r2,r2,255
 c002dbc:	d8800015 	stw	r2,0(sp)
 c002dc0:	e1ffff17 	ldw	r7,-4(fp)
 c002dc4:	01800204 	movi	r6,8
 c002dc8:	01400044 	movi	r5,1
 c002dcc:	c003b140 	call	c003b14 <XferInTransfer>
 c002dd0:	e0bffe05 	stb	r2,-8(fp)
 c002dd4:	e0bffe03 	ldbu	r2,-8(fp)
 c002dd8:	e037883a 	mov	sp,fp
 c002ddc:	dfc00117 	ldw	ra,4(sp)
 c002de0:	df000017 	ldw	fp,0(sp)
 c002de4:	dec00204 	addi	sp,sp,8
 c002de8:	f800283a 	ret

0c002dec <kbdPoll>:
 c002dec:	defffb04 	addi	sp,sp,-20
 c002df0:	dfc00415 	stw	ra,16(sp)
 c002df4:	df000315 	stw	fp,12(sp)
 c002df8:	df000304 	addi	fp,sp,12
 c002dfc:	e13fff15 	stw	r4,-4(fp)
 c002e00:	d0a79f03 	ldbu	r2,-24964(gp)
 c002e04:	10803fcc 	andi	r2,r2,255
 c002e08:	100b883a 	mov	r5,r2
 c002e0c:	01003804 	movi	r4,224
 c002e10:	c002f400 	call	c002f40 <MAXreg_wr>
 c002e14:	d0a79f03 	ldbu	r2,-24964(gp)
 c002e18:	11003fcc 	andi	r4,r2,255
 c002e1c:	d0a79f03 	ldbu	r2,-24964(gp)
 c002e20:	10c03fcc 	andi	r3,r2,255
 c002e24:	008300b4 	movhi	r2,3074
 c002e28:	1087c004 	addi	r2,r2,7936
 c002e2c:	180690fa 	slli	r3,r3,3
 c002e30:	10c5883a 	add	r2,r2,r3
 c002e34:	10800017 	ldw	r2,0(r2)
 c002e38:	10800204 	addi	r2,r2,8
 c002e3c:	1080008b 	ldhu	r2,2(r2)
 c002e40:	10803fcc 	andi	r2,r2,255
 c002e44:	d8800015 	stw	r2,0(sp)
 c002e48:	e1ffff17 	ldw	r7,-4(fp)
 c002e4c:	01800204 	movi	r6,8
 c002e50:	01400044 	movi	r5,1
 c002e54:	c003b140 	call	c003b14 <XferInTransfer>
 c002e58:	e0bffe05 	stb	r2,-8(fp)
 c002e5c:	e0bffe03 	ldbu	r2,-8(fp)
 c002e60:	e037883a 	mov	sp,fp
 c002e64:	dfc00117 	ldw	ra,4(sp)
 c002e68:	df000017 	ldw	fp,0(sp)
 c002e6c:	dec00204 	addi	sp,sp,8
 c002e70:	f800283a 	ret

0c002e74 <HIDMEventHandler>:
 c002e74:	defffb04 	addi	sp,sp,-20
 c002e78:	df000415 	stw	fp,16(sp)
 c002e7c:	df000404 	addi	fp,sp,16
 c002e80:	2007883a 	mov	r3,r4
 c002e84:	2805883a 	mov	r2,r5
 c002e88:	e1bffe15 	stw	r6,-8(fp)
 c002e8c:	e1ffff15 	stw	r7,-4(fp)
 c002e90:	e0fffc05 	stb	r3,-16(fp)
 c002e94:	e0bffd05 	stb	r2,-12(fp)
 c002e98:	0005883a 	mov	r2,zero
 c002e9c:	e037883a 	mov	sp,fp
 c002ea0:	df000017 	ldw	fp,0(sp)
 c002ea4:	dec00104 	addi	sp,sp,4
 c002ea8:	f800283a 	ret

0c002eac <HIDKEventHandler>:
 c002eac:	defffb04 	addi	sp,sp,-20
 c002eb0:	df000415 	stw	fp,16(sp)
 c002eb4:	df000404 	addi	fp,sp,16
 c002eb8:	2007883a 	mov	r3,r4
 c002ebc:	2805883a 	mov	r2,r5
 c002ec0:	e1bffe15 	stw	r6,-8(fp)
 c002ec4:	e1ffff15 	stw	r7,-4(fp)
 c002ec8:	e0fffc05 	stb	r3,-16(fp)
 c002ecc:	e0bffd05 	stb	r2,-12(fp)
 c002ed0:	0005883a 	mov	r2,zero
 c002ed4:	e037883a 	mov	sp,fp
 c002ed8:	df000017 	ldw	fp,0(sp)
 c002edc:	dec00104 	addi	sp,sp,4
 c002ee0:	f800283a 	ret

0c002ee4 <SPI_init>:
 c002ee4:	defffc04 	addi	sp,sp,-16
 c002ee8:	df000315 	stw	fp,12(sp)
 c002eec:	df000304 	addi	fp,sp,12
 c002ef0:	2807883a 	mov	r3,r5
 c002ef4:	3005883a 	mov	r2,r6
 c002ef8:	e13ffd05 	stb	r4,-12(fp)
 c002efc:	e0fffe05 	stb	r3,-8(fp)
 c002f00:	e0bfff05 	stb	r2,-4(fp)
 c002f04:	0001883a 	nop
 c002f08:	e037883a 	mov	sp,fp
 c002f0c:	df000017 	ldw	fp,0(sp)
 c002f10:	dec00104 	addi	sp,sp,4
 c002f14:	f800283a 	ret

0c002f18 <SPI_wr>:
 c002f18:	defffe04 	addi	sp,sp,-8
 c002f1c:	df000115 	stw	fp,4(sp)
 c002f20:	df000104 	addi	fp,sp,4
 c002f24:	2005883a 	mov	r2,r4
 c002f28:	e0bfff05 	stb	r2,-4(fp)
 c002f2c:	0001883a 	nop
 c002f30:	e037883a 	mov	sp,fp
 c002f34:	df000017 	ldw	fp,0(sp)
 c002f38:	dec00104 	addi	sp,sp,4
 c002f3c:	f800283a 	ret

0c002f40 <MAXreg_wr>:
 c002f40:	defff704 	addi	sp,sp,-36
 c002f44:	dfc00815 	stw	ra,32(sp)
 c002f48:	df000715 	stw	fp,28(sp)
 c002f4c:	df000704 	addi	fp,sp,28
 c002f50:	2007883a 	mov	r3,r4
 c002f54:	2805883a 	mov	r2,r5
 c002f58:	e0fffe05 	stb	r3,-8(fp)
 c002f5c:	e0bfff05 	stb	r2,-4(fp)
 c002f60:	e0bffe03 	ldbu	r2,-8(fp)
 c002f64:	10800084 	addi	r2,r2,2
 c002f68:	e0bffd05 	stb	r2,-12(fp)
 c002f6c:	e0bfff03 	ldbu	r2,-4(fp)
 c002f70:	e0bffd45 	stb	r2,-11(fp)
 c002f74:	e0bffd04 	addi	r2,fp,-12
 c002f78:	d8000215 	stw	zero,8(sp)
 c002f7c:	d8000115 	stw	zero,4(sp)
 c002f80:	d8000015 	stw	zero,0(sp)
 c002f84:	100f883a 	mov	r7,r2
 c002f88:	01800084 	movi	r6,2
 c002f8c:	000b883a 	mov	r5,zero
 c002f90:	01003004 	movi	r4,192
 c002f94:	c01c1ec0 	call	c01c1ec <alt_avalon_spi_command>
 c002f98:	e0bffc15 	stw	r2,-16(fp)
 c002f9c:	e0bffc17 	ldw	r2,-16(fp)
 c002fa0:	1000030e 	bge	r2,zero,c002fb0 <MAXreg_wr+0x70>
 c002fa4:	010300b4 	movhi	r4,3074
 c002fa8:	21364e04 	addi	r4,r4,-9928
 c002fac:	c01aec80 	call	c01aec8 <alt_printf>
 c002fb0:	0001883a 	nop
 c002fb4:	e037883a 	mov	sp,fp
 c002fb8:	dfc00117 	ldw	ra,4(sp)
 c002fbc:	df000017 	ldw	fp,0(sp)
 c002fc0:	dec00204 	addi	sp,sp,8
 c002fc4:	f800283a 	ret

0c002fc8 <MAXbytes_wr>:
 c002fc8:	defff304 	addi	sp,sp,-52
 c002fcc:	dfc00c15 	stw	ra,48(sp)
 c002fd0:	df000b15 	stw	fp,44(sp)
 c002fd4:	dc000a15 	stw	r16,40(sp)
 c002fd8:	df000b04 	addi	fp,sp,44
 c002fdc:	201b883a 	mov	r13,r4
 c002fe0:	2809883a 	mov	r4,r5
 c002fe4:	e1bffe15 	stw	r6,-8(fp)
 c002fe8:	e37ffc05 	stb	r13,-16(fp)
 c002fec:	e13ffd05 	stb	r4,-12(fp)
 c002ff0:	d809883a 	mov	r4,sp
 c002ff4:	2021883a 	mov	r16,r4
 c002ff8:	e13ffd03 	ldbu	r4,-12(fp)
 c002ffc:	21000044 	addi	r4,r4,1
 c003000:	217fffc4 	addi	r5,r4,-1
 c003004:	e17ff915 	stw	r5,-28(fp)
 c003008:	200b883a 	mov	r5,r4
 c00300c:	2817883a 	mov	r11,r5
 c003010:	0019883a 	mov	r12,zero
 c003014:	580ad77a 	srli	r5,r11,29
 c003018:	601090fa 	slli	r8,r12,3
 c00301c:	2a10b03a 	or	r8,r5,r8
 c003020:	580e90fa 	slli	r7,r11,3
 c003024:	200b883a 	mov	r5,r4
 c003028:	2813883a 	mov	r9,r5
 c00302c:	0015883a 	mov	r10,zero
 c003030:	480ad77a 	srli	r5,r9,29
 c003034:	500690fa 	slli	r3,r10,3
 c003038:	28c6b03a 	or	r3,r5,r3
 c00303c:	480490fa 	slli	r2,r9,3
 c003040:	2005883a 	mov	r2,r4
 c003044:	108000c4 	addi	r2,r2,3
 c003048:	1004d0ba 	srli	r2,r2,2
 c00304c:	1085883a 	add	r2,r2,r2
 c003050:	1085883a 	add	r2,r2,r2
 c003054:	d8b7c83a 	sub	sp,sp,r2
 c003058:	d8800304 	addi	r2,sp,12
 c00305c:	1005883a 	mov	r2,r2
 c003060:	e0bffa15 	stw	r2,-24(fp)
 c003064:	e0bffc03 	ldbu	r2,-16(fp)
 c003068:	10800084 	addi	r2,r2,2
 c00306c:	1007883a 	mov	r3,r2
 c003070:	e0bffa17 	ldw	r2,-24(fp)
 c003074:	10c00005 	stb	r3,0(r2)
 c003078:	00800044 	movi	r2,1
 c00307c:	e0bff815 	stw	r2,-32(fp)
 c003080:	00000c06 	br	c0030b4 <MAXbytes_wr+0xec>
 c003084:	e0bff817 	ldw	r2,-32(fp)
 c003088:	10bfffc4 	addi	r2,r2,-1
 c00308c:	e0fffe17 	ldw	r3,-8(fp)
 c003090:	1885883a 	add	r2,r3,r2
 c003094:	10c00003 	ldbu	r3,0(r2)
 c003098:	e13ffa17 	ldw	r4,-24(fp)
 c00309c:	e0bff817 	ldw	r2,-32(fp)
 c0030a0:	2085883a 	add	r2,r4,r2
 c0030a4:	10c00005 	stb	r3,0(r2)
 c0030a8:	e0bff817 	ldw	r2,-32(fp)
 c0030ac:	10800044 	addi	r2,r2,1
 c0030b0:	e0bff815 	stw	r2,-32(fp)
 c0030b4:	e0fffd03 	ldbu	r3,-12(fp)
 c0030b8:	e0bff817 	ldw	r2,-32(fp)
 c0030bc:	18bff10e 	bge	r3,r2,c003084 <__alt_data_end+0xfc003084>
 c0030c0:	e0bffd03 	ldbu	r2,-12(fp)
 c0030c4:	10800044 	addi	r2,r2,1
 c0030c8:	1007883a 	mov	r3,r2
 c0030cc:	e0bffa17 	ldw	r2,-24(fp)
 c0030d0:	d8000215 	stw	zero,8(sp)
 c0030d4:	d8000115 	stw	zero,4(sp)
 c0030d8:	d8000015 	stw	zero,0(sp)
 c0030dc:	100f883a 	mov	r7,r2
 c0030e0:	180d883a 	mov	r6,r3
 c0030e4:	000b883a 	mov	r5,zero
 c0030e8:	01003004 	movi	r4,192
 c0030ec:	c01c1ec0 	call	c01c1ec <alt_avalon_spi_command>
 c0030f0:	e0bffb15 	stw	r2,-20(fp)
 c0030f4:	e0bffb17 	ldw	r2,-20(fp)
 c0030f8:	1000030e 	bge	r2,zero,c003108 <MAXbytes_wr+0x140>
 c0030fc:	010300b4 	movhi	r4,3074
 c003100:	21364e04 	addi	r4,r4,-9928
 c003104:	c01aec80 	call	c01aec8 <alt_printf>
 c003108:	e0bffd03 	ldbu	r2,-12(fp)
 c00310c:	e0fffe17 	ldw	r3,-8(fp)
 c003110:	1885883a 	add	r2,r3,r2
 c003114:	8037883a 	mov	sp,r16
 c003118:	e6ffff04 	addi	sp,fp,-4
 c00311c:	dfc00217 	ldw	ra,8(sp)
 c003120:	df000117 	ldw	fp,4(sp)
 c003124:	dc000017 	ldw	r16,0(sp)
 c003128:	dec00304 	addi	sp,sp,12
 c00312c:	f800283a 	ret

0c003130 <MAXreg_rd>:
 c003130:	defff804 	addi	sp,sp,-32
 c003134:	dfc00715 	stw	ra,28(sp)
 c003138:	df000615 	stw	fp,24(sp)
 c00313c:	df000604 	addi	fp,sp,24
 c003140:	2005883a 	mov	r2,r4
 c003144:	e0bfff05 	stb	r2,-4(fp)
 c003148:	e0ffff04 	addi	r3,fp,-4
 c00314c:	d8000215 	stw	zero,8(sp)
 c003150:	e0bffe04 	addi	r2,fp,-8
 c003154:	d8800115 	stw	r2,4(sp)
 c003158:	00800044 	movi	r2,1
 c00315c:	d8800015 	stw	r2,0(sp)
 c003160:	180f883a 	mov	r7,r3
 c003164:	01800044 	movi	r6,1
 c003168:	000b883a 	mov	r5,zero
 c00316c:	01003004 	movi	r4,192
 c003170:	c01c1ec0 	call	c01c1ec <alt_avalon_spi_command>
 c003174:	e0bffd15 	stw	r2,-12(fp)
 c003178:	e0bffd17 	ldw	r2,-12(fp)
 c00317c:	1000030e 	bge	r2,zero,c00318c <MAXreg_rd+0x5c>
 c003180:	010300b4 	movhi	r4,3074
 c003184:	21364e04 	addi	r4,r4,-9928
 c003188:	c01aec80 	call	c01aec8 <alt_printf>
 c00318c:	e0bffe03 	ldbu	r2,-8(fp)
 c003190:	e037883a 	mov	sp,fp
 c003194:	dfc00117 	ldw	ra,4(sp)
 c003198:	df000017 	ldw	fp,0(sp)
 c00319c:	dec00204 	addi	sp,sp,8
 c0031a0:	f800283a 	ret

0c0031a4 <MAXbytes_rd>:
 c0031a4:	defff404 	addi	sp,sp,-48
 c0031a8:	dfc00b15 	stw	ra,44(sp)
 c0031ac:	df000a15 	stw	fp,40(sp)
 c0031b0:	dc000915 	stw	r16,36(sp)
 c0031b4:	df000a04 	addi	fp,sp,40
 c0031b8:	201b883a 	mov	r13,r4
 c0031bc:	2809883a 	mov	r4,r5
 c0031c0:	e1bffe15 	stw	r6,-8(fp)
 c0031c4:	e37ffc05 	stb	r13,-16(fp)
 c0031c8:	e13ffd05 	stb	r4,-12(fp)
 c0031cc:	d809883a 	mov	r4,sp
 c0031d0:	2021883a 	mov	r16,r4
 c0031d4:	e13ffd03 	ldbu	r4,-12(fp)
 c0031d8:	21403fcc 	andi	r5,r4,255
 c0031dc:	297fffc4 	addi	r5,r5,-1
 c0031e0:	e17ff915 	stw	r5,-28(fp)
 c0031e4:	21403fcc 	andi	r5,r4,255
 c0031e8:	2817883a 	mov	r11,r5
 c0031ec:	0019883a 	mov	r12,zero
 c0031f0:	580ad77a 	srli	r5,r11,29
 c0031f4:	601090fa 	slli	r8,r12,3
 c0031f8:	2a10b03a 	or	r8,r5,r8
 c0031fc:	580e90fa 	slli	r7,r11,3
 c003200:	21403fcc 	andi	r5,r4,255
 c003204:	2813883a 	mov	r9,r5
 c003208:	0015883a 	mov	r10,zero
 c00320c:	480ad77a 	srli	r5,r9,29
 c003210:	500690fa 	slli	r3,r10,3
 c003214:	28c6b03a 	or	r3,r5,r3
 c003218:	480490fa 	slli	r2,r9,3
 c00321c:	20803fcc 	andi	r2,r4,255
 c003220:	108000c4 	addi	r2,r2,3
 c003224:	1004d0ba 	srli	r2,r2,2
 c003228:	1085883a 	add	r2,r2,r2
 c00322c:	1085883a 	add	r2,r2,r2
 c003230:	d8b7c83a 	sub	sp,sp,r2
 c003234:	d8800304 	addi	r2,sp,12
 c003238:	1005883a 	mov	r2,r2
 c00323c:	e0bffa15 	stw	r2,-24(fp)
 c003240:	e0bffd03 	ldbu	r2,-12(fp)
 c003244:	e13ffc04 	addi	r4,fp,-16
 c003248:	d8000215 	stw	zero,8(sp)
 c00324c:	e0fffe17 	ldw	r3,-8(fp)
 c003250:	d8c00115 	stw	r3,4(sp)
 c003254:	d8800015 	stw	r2,0(sp)
 c003258:	200f883a 	mov	r7,r4
 c00325c:	01800044 	movi	r6,1
 c003260:	000b883a 	mov	r5,zero
 c003264:	01003004 	movi	r4,192
 c003268:	c01c1ec0 	call	c01c1ec <alt_avalon_spi_command>
 c00326c:	e0bffb15 	stw	r2,-20(fp)
 c003270:	e0bffb17 	ldw	r2,-20(fp)
 c003274:	1000030e 	bge	r2,zero,c003284 <MAXbytes_rd+0xe0>
 c003278:	010300b4 	movhi	r4,3074
 c00327c:	21364e04 	addi	r4,r4,-9928
 c003280:	c01aec80 	call	c01aec8 <alt_printf>
 c003284:	e0bffd03 	ldbu	r2,-12(fp)
 c003288:	e0fffe17 	ldw	r3,-8(fp)
 c00328c:	1885883a 	add	r2,r3,r2
 c003290:	8037883a 	mov	sp,r16
 c003294:	e6ffff04 	addi	sp,fp,-4
 c003298:	dfc00217 	ldw	ra,8(sp)
 c00329c:	df000117 	ldw	fp,4(sp)
 c0032a0:	dc000017 	ldw	r16,0(sp)
 c0032a4:	dec00304 	addi	sp,sp,12
 c0032a8:	f800283a 	ret

0c0032ac <MAX3421E_reset>:
 c0032ac:	defffd04 	addi	sp,sp,-12
 c0032b0:	dfc00215 	stw	ra,8(sp)
 c0032b4:	df000115 	stw	fp,4(sp)
 c0032b8:	df000104 	addi	fp,sp,4
 c0032bc:	0007883a 	mov	r3,zero
 c0032c0:	00805804 	movi	r2,352
 c0032c4:	10c00035 	stwio	r3,0(r2)
 c0032c8:	010003f4 	movhi	r4,15
 c0032cc:	21109004 	addi	r4,r4,16960
 c0032d0:	c01b5480 	call	c01b548 <usleep>
 c0032d4:	00c00044 	movi	r3,1
 c0032d8:	00805804 	movi	r2,352
 c0032dc:	10c00035 	stwio	r3,0(r2)
 c0032e0:	e03fff05 	stb	zero,-4(fp)
 c0032e4:	01400804 	movi	r5,32
 c0032e8:	01001e04 	movi	r4,120
 c0032ec:	c002f400 	call	c002f40 <MAXreg_wr>
 c0032f0:	000b883a 	mov	r5,zero
 c0032f4:	01001e04 	movi	r4,120
 c0032f8:	c002f400 	call	c002f40 <MAXreg_wr>
 c0032fc:	00000806 	br	c003320 <MAX3421E_reset+0x74>
 c003300:	e0bfff03 	ldbu	r2,-4(fp)
 c003304:	10800044 	addi	r2,r2,1
 c003308:	e0bfff05 	stb	r2,-4(fp)
 c00330c:	e0bfff03 	ldbu	r2,-4(fp)
 c003310:	1000031e 	bne	r2,zero,c003320 <MAX3421E_reset+0x74>
 c003314:	010300b4 	movhi	r4,3074
 c003318:	21365004 	addi	r4,r4,-9920
 c00331c:	c004fc80 	call	c004fc8 <printf>
 c003320:	01001a04 	movi	r4,104
 c003324:	c0031300 	call	c003130 <MAXreg_rd>
 c003328:	10803fcc 	andi	r2,r2,255
 c00332c:	1080004c 	andi	r2,r2,1
 c003330:	103ff326 	beq	r2,zero,c003300 <__alt_data_end+0xfc003300>
 c003334:	0001883a 	nop
 c003338:	e037883a 	mov	sp,fp
 c00333c:	dfc00117 	ldw	ra,4(sp)
 c003340:	df000017 	ldw	fp,0(sp)
 c003344:	dec00204 	addi	sp,sp,8
 c003348:	f800283a 	ret

0c00334c <Vbus_power>:
 c00334c:	defffe04 	addi	sp,sp,-8
 c003350:	df000115 	stw	fp,4(sp)
 c003354:	df000104 	addi	fp,sp,4
 c003358:	e13fff15 	stw	r4,-4(fp)
 c00335c:	00800044 	movi	r2,1
 c003360:	e037883a 	mov	sp,fp
 c003364:	df000017 	ldw	fp,0(sp)
 c003368:	dec00104 	addi	sp,sp,4
 c00336c:	f800283a 	ret

0c003370 <MAX_busprobe>:
 c003370:	defffd04 	addi	sp,sp,-12
 c003374:	dfc00215 	stw	ra,8(sp)
 c003378:	df000115 	stw	fp,4(sp)
 c00337c:	df000104 	addi	fp,sp,4
 c003380:	01003e04 	movi	r4,248
 c003384:	c0031300 	call	c003130 <MAXreg_rd>
 c003388:	e0bfff05 	stb	r2,-4(fp)
 c00338c:	e0ffff03 	ldbu	r3,-4(fp)
 c003390:	00bff004 	movi	r2,-64
 c003394:	1884703a 	and	r2,r3,r2
 c003398:	e0bfff05 	stb	r2,-4(fp)
 c00339c:	e0bfff03 	ldbu	r2,-4(fp)
 c0033a0:	10c01020 	cmpeqi	r3,r2,64
 c0033a4:	1800221e 	bne	r3,zero,c003430 <MAX_busprobe+0xc0>
 c0033a8:	10c01048 	cmpgei	r3,r2,65
 c0033ac:	1800021e 	bne	r3,zero,c0033b8 <MAX_busprobe+0x48>
 c0033b0:	10003b26 	beq	r2,zero,c0034a0 <MAX_busprobe+0x130>
 c0033b4:	00004a06 	br	c0034e0 <MAX_busprobe+0x170>
 c0033b8:	10c02020 	cmpeqi	r3,r2,128
 c0033bc:	1800031e 	bne	r3,zero,c0033cc <MAX_busprobe+0x5c>
 c0033c0:	10803020 	cmpeqi	r2,r2,192
 c0033c4:	1000331e 	bne	r2,zero,c003494 <MAX_busprobe+0x124>
 c0033c8:	00004506 	br	c0034e0 <MAX_busprobe+0x170>
 c0033cc:	d0a00503 	ldbu	r2,-32748(gp)
 c0033d0:	10803fcc 	andi	r2,r2,255
 c0033d4:	108004e0 	cmpeqi	r2,r2,19
 c0033d8:	10003e1e 	bne	r2,zero,c0034d4 <MAX_busprobe+0x164>
 c0033dc:	01003604 	movi	r4,216
 c0033e0:	c0031300 	call	c003130 <MAXreg_rd>
 c0033e4:	10803fcc 	andi	r2,r2,255
 c0033e8:	1080008c 	andi	r2,r2,2
 c0033ec:	1000071e 	bne	r2,zero,c00340c <MAX_busprobe+0x9c>
 c0033f0:	01403244 	movi	r5,201
 c0033f4:	01003604 	movi	r4,216
 c0033f8:	c002f400 	call	c002f40 <MAXreg_wr>
 c0033fc:	010300b4 	movhi	r4,3074
 c003400:	21365404 	addi	r4,r4,-9904
 c003404:	c0050e40 	call	c0050e4 <puts>
 c003408:	00000606 	br	c003424 <MAX_busprobe+0xb4>
 c00340c:	014032c4 	movi	r5,203
 c003410:	01003604 	movi	r4,216
 c003414:	c002f400 	call	c002f40 <MAXreg_wr>
 c003418:	010300b4 	movhi	r4,3074
 c00341c:	21365a04 	addi	r4,r4,-9880
 c003420:	c0050e40 	call	c0050e4 <puts>
 c003424:	00800404 	movi	r2,16
 c003428:	d0a00505 	stb	r2,-32748(gp)
 c00342c:	00002906 	br	c0034d4 <MAX_busprobe+0x164>
 c003430:	d0a00503 	ldbu	r2,-32748(gp)
 c003434:	10803fcc 	andi	r2,r2,255
 c003438:	108004e0 	cmpeqi	r2,r2,19
 c00343c:	1000271e 	bne	r2,zero,c0034dc <MAX_busprobe+0x16c>
 c003440:	01003604 	movi	r4,216
 c003444:	c0031300 	call	c003130 <MAXreg_rd>
 c003448:	10803fcc 	andi	r2,r2,255
 c00344c:	1080008c 	andi	r2,r2,2
 c003450:	1000071e 	bne	r2,zero,c003470 <MAX_busprobe+0x100>
 c003454:	014032c4 	movi	r5,203
 c003458:	01003604 	movi	r4,216
 c00345c:	c002f400 	call	c002f40 <MAXreg_wr>
 c003460:	010300b4 	movhi	r4,3074
 c003464:	21365a04 	addi	r4,r4,-9880
 c003468:	c0050e40 	call	c0050e4 <puts>
 c00346c:	00000606 	br	c003488 <MAX_busprobe+0x118>
 c003470:	01403244 	movi	r5,201
 c003474:	01003604 	movi	r4,216
 c003478:	c002f400 	call	c002f40 <MAXreg_wr>
 c00347c:	010300b4 	movhi	r4,3074
 c003480:	21365404 	addi	r4,r4,-9904
 c003484:	c0050e40 	call	c0050e4 <puts>
 c003488:	00800404 	movi	r2,16
 c00348c:	d0a00505 	stb	r2,-32748(gp)
 c003490:	00001206 	br	c0034dc <MAX_busprobe+0x16c>
 c003494:	00800104 	movi	r2,4
 c003498:	d0a00505 	stb	r2,-32748(gp)
 c00349c:	00001006 	br	c0034e0 <MAX_busprobe+0x170>
 c0034a0:	d0a00503 	ldbu	r2,-32748(gp)
 c0034a4:	10803fcc 	andi	r2,r2,255
 c0034a8:	10803c0c 	andi	r2,r2,240
 c0034ac:	10000326 	beq	r2,zero,c0034bc <MAX_busprobe+0x14c>
 c0034b0:	00800044 	movi	r2,1
 c0034b4:	d0a00505 	stb	r2,-32748(gp)
 c0034b8:	00000906 	br	c0034e0 <MAX_busprobe+0x170>
 c0034bc:	01403244 	movi	r5,201
 c0034c0:	01003604 	movi	r4,216
 c0034c4:	c002f400 	call	c002f40 <MAXreg_wr>
 c0034c8:	008000c4 	movi	r2,3
 c0034cc:	d0a00505 	stb	r2,-32748(gp)
 c0034d0:	00000306 	br	c0034e0 <MAX_busprobe+0x170>
 c0034d4:	0001883a 	nop
 c0034d8:	00000106 	br	c0034e0 <MAX_busprobe+0x170>
 c0034dc:	0001883a 	nop
 c0034e0:	0001883a 	nop
 c0034e4:	e037883a 	mov	sp,fp
 c0034e8:	dfc00117 	ldw	ra,4(sp)
 c0034ec:	df000017 	ldw	fp,0(sp)
 c0034f0:	dec00204 	addi	sp,sp,8
 c0034f4:	f800283a 	ret

0c0034f8 <MAX3421E_init>:
 c0034f8:	defffe04 	addi	sp,sp,-8
 c0034fc:	dfc00115 	stw	ra,4(sp)
 c003500:	df000015 	stw	fp,0(sp)
 c003504:	d839883a 	mov	fp,sp
 c003508:	01400684 	movi	r5,26
 c00350c:	01002204 	movi	r4,136
 c003510:	c002f400 	call	c002f40 <MAXreg_wr>
 c003514:	c0032ac0 	call	c0032ac <MAX3421E_reset>
 c003518:	0009883a 	mov	r4,zero
 c00351c:	c00334c0 	call	c00334c <Vbus_power>
 c003520:	01402004 	movi	r5,128
 c003524:	01002e04 	movi	r4,184
 c003528:	c002f400 	call	c002f40 <MAXreg_wr>
 c00352c:	01000044 	movi	r4,1
 c003530:	c00334c0 	call	c00334c <Vbus_power>
 c003534:	01403444 	movi	r5,209
 c003538:	01003604 	movi	r4,216
 c00353c:	c002f400 	call	c002f40 <MAXreg_wr>
 c003540:	01400804 	movi	r5,32
 c003544:	01003404 	movi	r4,208
 c003548:	c002f400 	call	c002f40 <MAXreg_wr>
 c00354c:	01400104 	movi	r5,4
 c003550:	01003a04 	movi	r4,232
 c003554:	c002f400 	call	c002f40 <MAXreg_wr>
 c003558:	c0033700 	call	c003370 <MAX_busprobe>
 c00355c:	01400804 	movi	r5,32
 c003560:	01003204 	movi	r4,200
 c003564:	c002f400 	call	c002f40 <MAXreg_wr>
 c003568:	01400044 	movi	r5,1
 c00356c:	01002004 	movi	r4,128
 c003570:	c002f400 	call	c002f40 <MAXreg_wr>
 c003574:	0001883a 	nop
 c003578:	e037883a 	mov	sp,fp
 c00357c:	dfc00117 	ldw	ra,4(sp)
 c003580:	df000017 	ldw	fp,0(sp)
 c003584:	dec00204 	addi	sp,sp,8
 c003588:	f800283a 	ret

0c00358c <MAX3421E_Task>:
 c00358c:	defffe04 	addi	sp,sp,-8
 c003590:	dfc00115 	stw	ra,4(sp)
 c003594:	df000015 	stw	fp,0(sp)
 c003598:	d839883a 	mov	fp,sp
 c00359c:	00806404 	movi	r2,400
 c0035a0:	10800037 	ldwio	r2,0(r2)
 c0035a4:	1000041e 	bne	r2,zero,c0035b8 <MAX3421E_Task+0x2c>
 c0035a8:	010300b4 	movhi	r4,3074
 c0035ac:	21366004 	addi	r4,r4,-9856
 c0035b0:	c004fc80 	call	c004fc8 <printf>
 c0035b4:	c0035f00 	call	c0035f0 <MaxIntHandler>
 c0035b8:	00806004 	movi	r2,384
 c0035bc:	10800037 	ldwio	r2,0(r2)
 c0035c0:	10800058 	cmpnei	r2,r2,1
 c0035c4:	1000041e 	bne	r2,zero,c0035d8 <MAX3421E_Task+0x4c>
 c0035c8:	010300b4 	movhi	r4,3074
 c0035cc:	21366404 	addi	r4,r4,-9840
 c0035d0:	c004fc80 	call	c004fc8 <printf>
 c0035d4:	c0036bc0 	call	c0036bc <MaxGpxHandler>
 c0035d8:	0001883a 	nop
 c0035dc:	e037883a 	mov	sp,fp
 c0035e0:	dfc00117 	ldw	ra,4(sp)
 c0035e4:	df000017 	ldw	fp,0(sp)
 c0035e8:	dec00204 	addi	sp,sp,8
 c0035ec:	f800283a 	ret

0c0035f0 <MaxIntHandler>:
 c0035f0:	defffd04 	addi	sp,sp,-12
 c0035f4:	dfc00215 	stw	ra,8(sp)
 c0035f8:	df000115 	stw	fp,4(sp)
 c0035fc:	df000104 	addi	fp,sp,4
 c003600:	e03fff05 	stb	zero,-4(fp)
 c003604:	01003204 	movi	r4,200
 c003608:	c0031300 	call	c003130 <MAXreg_rd>
 c00360c:	e0bfff45 	stb	r2,-3(fp)
 c003610:	e0bfff43 	ldbu	r2,-3(fp)
 c003614:	100b883a 	mov	r5,r2
 c003618:	010300b4 	movhi	r4,3074
 c00361c:	21366804 	addi	r4,r4,-9824
 c003620:	c004fc80 	call	c004fc8 <printf>
 c003624:	e0bfff43 	ldbu	r2,-3(fp)
 c003628:	1080100c 	andi	r2,r2,64
 c00362c:	10000326 	beq	r2,zero,c00363c <MaxIntHandler+0x4c>
 c003630:	e0bfff03 	ldbu	r2,-4(fp)
 c003634:	10801014 	ori	r2,r2,64
 c003638:	e0bfff05 	stb	r2,-4(fp)
 c00363c:	e0bfff43 	ldbu	r2,-3(fp)
 c003640:	1080080c 	andi	r2,r2,32
 c003644:	10000426 	beq	r2,zero,c003658 <MaxIntHandler+0x68>
 c003648:	c0033700 	call	c003370 <MAX_busprobe>
 c00364c:	e0bfff03 	ldbu	r2,-4(fp)
 c003650:	10800814 	ori	r2,r2,32
 c003654:	e0bfff05 	stb	r2,-4(fp)
 c003658:	e0bfff43 	ldbu	r2,-3(fp)
 c00365c:	1080020c 	andi	r2,r2,8
 c003660:	10000326 	beq	r2,zero,c003670 <MaxIntHandler+0x80>
 c003664:	000b883a 	mov	r5,zero
 c003668:	01000e04 	movi	r4,56
 c00366c:	c002f400 	call	c002f40 <MAXreg_wr>
 c003670:	e0bfff43 	ldbu	r2,-3(fp)
 c003674:	1080004c 	andi	r2,r2,1
 c003678:	10000626 	beq	r2,zero,c003694 <MaxIntHandler+0xa4>
 c00367c:	d0a00503 	ldbu	r2,-32748(gp)
 c003680:	10800044 	addi	r2,r2,1
 c003684:	d0a00505 	stb	r2,-32748(gp)
 c003688:	e0bfff03 	ldbu	r2,-4(fp)
 c00368c:	10800054 	ori	r2,r2,1
 c003690:	e0bfff05 	stb	r2,-4(fp)
 c003694:	e0bfff03 	ldbu	r2,-4(fp)
 c003698:	100b883a 	mov	r5,r2
 c00369c:	01003204 	movi	r4,200
 c0036a0:	c002f400 	call	c002f40 <MAXreg_wr>
 c0036a4:	0001883a 	nop
 c0036a8:	e037883a 	mov	sp,fp
 c0036ac:	dfc00117 	ldw	ra,4(sp)
 c0036b0:	df000017 	ldw	fp,0(sp)
 c0036b4:	dec00204 	addi	sp,sp,8
 c0036b8:	f800283a 	ret

0c0036bc <MaxGpxHandler>:
 c0036bc:	defffd04 	addi	sp,sp,-12
 c0036c0:	dfc00215 	stw	ra,8(sp)
 c0036c4:	df000115 	stw	fp,4(sp)
 c0036c8:	df000104 	addi	fp,sp,4
 c0036cc:	01002c04 	movi	r4,176
 c0036d0:	c0031300 	call	c003130 <MAXreg_rd>
 c0036d4:	e0bfff05 	stb	r2,-4(fp)
 c0036d8:	0001883a 	nop
 c0036dc:	e037883a 	mov	sp,fp
 c0036e0:	dfc00117 	ldw	ra,4(sp)
 c0036e4:	df000017 	ldw	fp,0(sp)
 c0036e8:	dec00204 	addi	sp,sp,8
 c0036ec:	f800283a 	ret

0c0036f0 <XferCtrlReq>:
 c0036f0:	defff104 	addi	sp,sp,-60
 c0036f4:	dfc00e15 	stw	ra,56(sp)
 c0036f8:	df000d15 	stw	fp,52(sp)
 c0036fc:	df000d04 	addi	fp,sp,52
 c003700:	2015883a 	mov	r10,r4
 c003704:	2813883a 	mov	r9,r5
 c003708:	3011883a 	mov	r8,r6
 c00370c:	380d883a 	mov	r6,r7
 c003710:	e1400217 	ldw	r5,8(fp)
 c003714:	e1000317 	ldw	r4,12(fp)
 c003718:	e0c00417 	ldw	r3,16(fp)
 c00371c:	e0800517 	ldw	r2,20(fp)
 c003720:	e2bff805 	stb	r10,-32(fp)
 c003724:	e27ff905 	stb	r9,-28(fp)
 c003728:	e23ffa05 	stb	r8,-24(fp)
 c00372c:	e1bffb05 	stb	r6,-20(fp)
 c003730:	e17ffc05 	stb	r5,-16(fp)
 c003734:	e13ffd05 	stb	r4,-12(fp)
 c003738:	e0fffe0d 	sth	r3,-8(fp)
 c00373c:	e0bfff0d 	sth	r2,-4(fp)
 c003740:	e03ff415 	stw	zero,-48(fp)
 c003744:	00800044 	movi	r2,1
 c003748:	e0bff505 	stb	r2,-44(fp)
 c00374c:	e0800617 	ldw	r2,24(fp)
 c003750:	1000011e 	bne	r2,zero,c003758 <XferCtrlReq+0x68>
 c003754:	e03ff505 	stb	zero,-44(fp)
 c003758:	e0bff803 	ldbu	r2,-32(fp)
 c00375c:	100b883a 	mov	r5,r2
 c003760:	01003804 	movi	r4,224
 c003764:	c002f400 	call	c002f40 <MAXreg_wr>
 c003768:	e0bffa03 	ldbu	r2,-24(fp)
 c00376c:	10803fcc 	andi	r2,r2,255
 c003770:	1080201c 	xori	r2,r2,128
 c003774:	10bfe004 	addi	r2,r2,-128
 c003778:	1000020e 	bge	r2,zero,c003784 <XferCtrlReq+0x94>
 c00377c:	00800044 	movi	r2,1
 c003780:	e0bff415 	stw	r2,-48(fp)
 c003784:	e0bffa03 	ldbu	r2,-24(fp)
 c003788:	e0bff585 	stb	r2,-42(fp)
 c00378c:	e0bffb03 	ldbu	r2,-20(fp)
 c003790:	e0bff5c5 	stb	r2,-41(fp)
 c003794:	e0bffc03 	ldbu	r2,-16(fp)
 c003798:	e0bff605 	stb	r2,-40(fp)
 c00379c:	e0bffd03 	ldbu	r2,-12(fp)
 c0037a0:	e0bff645 	stb	r2,-39(fp)
 c0037a4:	e0bffe0b 	ldhu	r2,-8(fp)
 c0037a8:	e0bff68d 	sth	r2,-38(fp)
 c0037ac:	e0bfff0b 	ldhu	r2,-4(fp)
 c0037b0:	e0bff70d 	sth	r2,-36(fp)
 c0037b4:	e0bff584 	addi	r2,fp,-42
 c0037b8:	100d883a 	mov	r6,r2
 c0037bc:	01400204 	movi	r5,8
 c0037c0:	01000804 	movi	r4,32
 c0037c4:	c002fc80 	call	c002fc8 <MAXbytes_wr>
 c0037c8:	e0bff903 	ldbu	r2,-28(fp)
 c0037cc:	100b883a 	mov	r5,r2
 c0037d0:	01000404 	movi	r4,16
 c0037d4:	c0039980 	call	c003998 <XferDispatchPkt>
 c0037d8:	e0bff545 	stb	r2,-43(fp)
 c0037dc:	e0bff543 	ldbu	r2,-43(fp)
 c0037e0:	10000226 	beq	r2,zero,c0037ec <XferCtrlReq+0xfc>
 c0037e4:	e0bff543 	ldbu	r2,-43(fp)
 c0037e8:	00000f06 	br	c003828 <XferCtrlReq+0x138>
 c0037ec:	e0bff503 	ldbu	r2,-44(fp)
 c0037f0:	1085883a 	add	r2,r2,r2
 c0037f4:	1087883a 	add	r3,r2,r2
 c0037f8:	d0a00304 	addi	r2,gp,-32756
 c0037fc:	1885883a 	add	r2,r3,r2
 c003800:	10800017 	ldw	r2,0(r2)
 c003804:	e13ff803 	ldbu	r4,-32(fp)
 c003808:	e17ff903 	ldbu	r5,-28(fp)
 c00380c:	e1bfff0b 	ldhu	r6,-4(fp)
 c003810:	e0fff417 	ldw	r3,-48(fp)
 c003814:	d8c00015 	stw	r3,0(sp)
 c003818:	e1c00617 	ldw	r7,24(fp)
 c00381c:	103ee83a 	callr	r2
 c003820:	e0bff545 	stb	r2,-43(fp)
 c003824:	e0bff543 	ldbu	r2,-43(fp)
 c003828:	e037883a 	mov	sp,fp
 c00382c:	dfc00117 	ldw	ra,4(sp)
 c003830:	df000017 	ldw	fp,0(sp)
 c003834:	dec00204 	addi	sp,sp,8
 c003838:	f800283a 	ret

0c00383c <XferCtrlData>:
 c00383c:	defff804 	addi	sp,sp,-32
 c003840:	dfc00715 	stw	ra,28(sp)
 c003844:	df000615 	stw	fp,24(sp)
 c003848:	df000604 	addi	fp,sp,24
 c00384c:	2807883a 	mov	r3,r5
 c003850:	3005883a 	mov	r2,r6
 c003854:	e1ffff15 	stw	r7,-4(fp)
 c003858:	e13ffc05 	stb	r4,-16(fp)
 c00385c:	e0fffd05 	stb	r3,-12(fp)
 c003860:	e0bffe0d 	sth	r2,-8(fp)
 c003864:	e0800217 	ldw	r2,8(fp)
 c003868:	10002826 	beq	r2,zero,c00390c <XferCtrlData+0xd0>
 c00386c:	e0fffc03 	ldbu	r3,-16(fp)
 c003870:	008300b4 	movhi	r2,3074
 c003874:	1087c004 	addi	r2,r2,7936
 c003878:	180690fa 	slli	r3,r3,3
 c00387c:	10c5883a 	add	r2,r2,r3
 c003880:	10c00017 	ldw	r3,0(r2)
 c003884:	e0bffd03 	ldbu	r2,-12(fp)
 c003888:	100490fa 	slli	r2,r2,3
 c00388c:	1885883a 	add	r2,r3,r2
 c003890:	00c00804 	movi	r3,32
 c003894:	10c00185 	stb	r3,6(r2)
 c003898:	e13ffc03 	ldbu	r4,-16(fp)
 c00389c:	e17ffd03 	ldbu	r5,-12(fp)
 c0038a0:	e1bffe0b 	ldhu	r6,-8(fp)
 c0038a4:	e0fffc03 	ldbu	r3,-16(fp)
 c0038a8:	008300b4 	movhi	r2,3074
 c0038ac:	1087c004 	addi	r2,r2,7936
 c0038b0:	180690fa 	slli	r3,r3,3
 c0038b4:	10c5883a 	add	r2,r2,r3
 c0038b8:	10c00017 	ldw	r3,0(r2)
 c0038bc:	e0bffd03 	ldbu	r2,-12(fp)
 c0038c0:	100490fa 	slli	r2,r2,3
 c0038c4:	1885883a 	add	r2,r3,r2
 c0038c8:	1080008b 	ldhu	r2,2(r2)
 c0038cc:	10803fcc 	andi	r2,r2,255
 c0038d0:	d8800015 	stw	r2,0(sp)
 c0038d4:	e1ffff17 	ldw	r7,-4(fp)
 c0038d8:	c003b140 	call	c003b14 <XferInTransfer>
 c0038dc:	e0bffb05 	stb	r2,-20(fp)
 c0038e0:	e0bffb03 	ldbu	r2,-20(fp)
 c0038e4:	10000226 	beq	r2,zero,c0038f0 <XferCtrlData+0xb4>
 c0038e8:	e0bffb03 	ldbu	r2,-20(fp)
 c0038ec:	00000806 	br	c003910 <XferCtrlData+0xd4>
 c0038f0:	e0bffd03 	ldbu	r2,-12(fp)
 c0038f4:	100b883a 	mov	r5,r2
 c0038f8:	01002804 	movi	r4,160
 c0038fc:	c0039980 	call	c003998 <XferDispatchPkt>
 c003900:	e0bffb05 	stb	r2,-20(fp)
 c003904:	e0bffb03 	ldbu	r2,-20(fp)
 c003908:	00000106 	br	c003910 <XferCtrlData+0xd4>
 c00390c:	00bfffc4 	movi	r2,-1
 c003910:	e037883a 	mov	sp,fp
 c003914:	dfc00117 	ldw	ra,4(sp)
 c003918:	df000017 	ldw	fp,0(sp)
 c00391c:	dec00204 	addi	sp,sp,8
 c003920:	f800283a 	ret

0c003924 <XferCtrlND>:
 c003924:	defff904 	addi	sp,sp,-28
 c003928:	dfc00615 	stw	ra,24(sp)
 c00392c:	df000515 	stw	fp,20(sp)
 c003930:	df000504 	addi	fp,sp,20
 c003934:	2807883a 	mov	r3,r5
 c003938:	3005883a 	mov	r2,r6
 c00393c:	e1ffff15 	stw	r7,-4(fp)
 c003940:	e13ffc05 	stb	r4,-16(fp)
 c003944:	e0fffd05 	stb	r3,-12(fp)
 c003948:	e0bffe0d 	sth	r2,-8(fp)
 c00394c:	e0800217 	ldw	r2,8(fp)
 c003950:	10000626 	beq	r2,zero,c00396c <XferCtrlND+0x48>
 c003954:	e0bffd03 	ldbu	r2,-12(fp)
 c003958:	100b883a 	mov	r5,r2
 c00395c:	01002804 	movi	r4,160
 c003960:	c0039980 	call	c003998 <XferDispatchPkt>
 c003964:	e0bffb05 	stb	r2,-20(fp)
 c003968:	00000506 	br	c003980 <XferCtrlND+0x5c>
 c00396c:	e0bffd03 	ldbu	r2,-12(fp)
 c003970:	100b883a 	mov	r5,r2
 c003974:	01002004 	movi	r4,128
 c003978:	c0039980 	call	c003998 <XferDispatchPkt>
 c00397c:	e0bffb05 	stb	r2,-20(fp)
 c003980:	e0bffb03 	ldbu	r2,-20(fp)
 c003984:	e037883a 	mov	sp,fp
 c003988:	dfc00117 	ldw	ra,4(sp)
 c00398c:	df000017 	ldw	fp,0(sp)
 c003990:	dec00204 	addi	sp,sp,8
 c003994:	f800283a 	ret

0c003998 <XferDispatchPkt>:
 c003998:	defff904 	addi	sp,sp,-28
 c00399c:	dfc00615 	stw	ra,24(sp)
 c0039a0:	df000515 	stw	fp,20(sp)
 c0039a4:	df000504 	addi	fp,sp,20
 c0039a8:	2007883a 	mov	r3,r4
 c0039ac:	2805883a 	mov	r2,r5
 c0039b0:	e0fffe05 	stb	r3,-8(fp)
 c0039b4:	e0bfff05 	stb	r2,-4(fp)
 c0039b8:	d0a7b017 	ldw	r2,-24896(gp)
 c0039bc:	0140fa04 	movi	r5,1000
 c0039c0:	1009883a 	mov	r4,r2
 c0039c4:	c00473c0 	call	c00473c <__mulsi3>
 c0039c8:	1007883a 	mov	r3,r2
 c0039cc:	d0a7af17 	ldw	r2,-24900(gp)
 c0039d0:	100b883a 	mov	r5,r2
 c0039d4:	1809883a 	mov	r4,r3
 c0039d8:	c0046800 	call	c004680 <__udivsi3>
 c0039dc:	1084e204 	addi	r2,r2,5000
 c0039e0:	e0bffc15 	stw	r2,-16(fp)
 c0039e4:	e03ffb45 	stb	zero,-19(fp)
 c0039e8:	e03ffb85 	stb	zero,-18(fp)
 c0039ec:	e0fffe03 	ldbu	r3,-8(fp)
 c0039f0:	e0bfff03 	ldbu	r2,-4(fp)
 c0039f4:	1884b03a 	or	r2,r3,r2
 c0039f8:	10803fcc 	andi	r2,r2,255
 c0039fc:	100b883a 	mov	r5,r2
 c003a00:	01003c04 	movi	r4,240
 c003a04:	c002f400 	call	c002f40 <MAXreg_wr>
 c003a08:	00bfffc4 	movi	r2,-1
 c003a0c:	e0bffb05 	stb	r2,-20(fp)
 c003a10:	00000d06 	br	c003a48 <XferDispatchPkt+0xb0>
 c003a14:	01003204 	movi	r4,200
 c003a18:	c0031300 	call	c003130 <MAXreg_rd>
 c003a1c:	e0bffd05 	stb	r2,-12(fp)
 c003a20:	e0bffd03 	ldbu	r2,-12(fp)
 c003a24:	10803fcc 	andi	r2,r2,255
 c003a28:	1080201c 	xori	r2,r2,128
 c003a2c:	10bfe004 	addi	r2,r2,-128
 c003a30:	1000050e 	bge	r2,zero,c003a48 <XferDispatchPkt+0xb0>
 c003a34:	01402004 	movi	r5,128
 c003a38:	01003204 	movi	r4,200
 c003a3c:	c002f400 	call	c002f40 <MAXreg_wr>
 c003a40:	e03ffb05 	stb	zero,-20(fp)
 c003a44:	00000c06 	br	c003a78 <XferDispatchPkt+0xe0>
 c003a48:	d0a7b017 	ldw	r2,-24896(gp)
 c003a4c:	0140fa04 	movi	r5,1000
 c003a50:	1009883a 	mov	r4,r2
 c003a54:	c00473c0 	call	c00473c <__mulsi3>
 c003a58:	1007883a 	mov	r3,r2
 c003a5c:	d0a7af17 	ldw	r2,-24900(gp)
 c003a60:	100b883a 	mov	r5,r2
 c003a64:	1809883a 	mov	r4,r3
 c003a68:	c0046800 	call	c004680 <__udivsi3>
 c003a6c:	1007883a 	mov	r3,r2
 c003a70:	e0bffc17 	ldw	r2,-16(fp)
 c003a74:	18bfe736 	bltu	r3,r2,c003a14 <__alt_data_end+0xfc003a14>
 c003a78:	e0bffb03 	ldbu	r2,-20(fp)
 c003a7c:	10000226 	beq	r2,zero,c003a88 <XferDispatchPkt+0xf0>
 c003a80:	e0bffb03 	ldbu	r2,-20(fp)
 c003a84:	00001e06 	br	c003b00 <XferDispatchPkt+0x168>
 c003a88:	01003e04 	movi	r4,248
 c003a8c:	c0031300 	call	c003130 <MAXreg_rd>
 c003a90:	108003cc 	andi	r2,r2,15
 c003a94:	e0bffb05 	stb	r2,-20(fp)
 c003a98:	e0bffb03 	ldbu	r2,-20(fp)
 c003a9c:	10800118 	cmpnei	r2,r2,4
 c003aa0:	1000071e 	bne	r2,zero,c003ac0 <XferDispatchPkt+0x128>
 c003aa4:	e0bffb83 	ldbu	r2,-18(fp)
 c003aa8:	10800044 	addi	r2,r2,1
 c003aac:	e0bffb85 	stb	r2,-18(fp)
 c003ab0:	e0bffb83 	ldbu	r2,-18(fp)
 c003ab4:	10803218 	cmpnei	r2,r2,200
 c003ab8:	10000b1e 	bne	r2,zero,c003ae8 <XferDispatchPkt+0x150>
 c003abc:	00000f06 	br	c003afc <XferDispatchPkt+0x164>
 c003ac0:	e0bffb03 	ldbu	r2,-20(fp)
 c003ac4:	10800398 	cmpnei	r2,r2,14
 c003ac8:	1000091e 	bne	r2,zero,c003af0 <XferDispatchPkt+0x158>
 c003acc:	e0bffb43 	ldbu	r2,-19(fp)
 c003ad0:	10800044 	addi	r2,r2,1
 c003ad4:	e0bffb45 	stb	r2,-19(fp)
 c003ad8:	e0bffb47 	ldb	r2,-19(fp)
 c003adc:	108000d8 	cmpnei	r2,r2,3
 c003ae0:	10000526 	beq	r2,zero,c003af8 <XferDispatchPkt+0x160>
 c003ae4:	00000106 	br	c003aec <XferDispatchPkt+0x154>
 c003ae8:	0001883a 	nop
 c003aec:	003fbf06 	br	c0039ec <__alt_data_end+0xfc0039ec>
 c003af0:	0001883a 	nop
 c003af4:	00000106 	br	c003afc <XferDispatchPkt+0x164>
 c003af8:	0001883a 	nop
 c003afc:	e0bffb03 	ldbu	r2,-20(fp)
 c003b00:	e037883a 	mov	sp,fp
 c003b04:	dfc00117 	ldw	ra,4(sp)
 c003b08:	df000017 	ldw	fp,0(sp)
 c003b0c:	dec00204 	addi	sp,sp,8
 c003b10:	f800283a 	ret

0c003b14 <XferInTransfer>:
 c003b14:	defff804 	addi	sp,sp,-32
 c003b18:	dfc00715 	stw	ra,28(sp)
 c003b1c:	df000615 	stw	fp,24(sp)
 c003b20:	df000604 	addi	fp,sp,24
 c003b24:	2011883a 	mov	r8,r4
 c003b28:	2809883a 	mov	r4,r5
 c003b2c:	3007883a 	mov	r3,r6
 c003b30:	e1fffe15 	stw	r7,-8(fp)
 c003b34:	e0800217 	ldw	r2,8(fp)
 c003b38:	e23ffb05 	stb	r8,-20(fp)
 c003b3c:	e13ffc05 	stb	r4,-16(fp)
 c003b40:	e0fffd0d 	sth	r3,-12(fp)
 c003b44:	e0bfff05 	stb	r2,-4(fp)
 c003b48:	e03ffa0d 	sth	zero,-24(fp)
 c003b4c:	e0fffb03 	ldbu	r3,-20(fp)
 c003b50:	008300b4 	movhi	r2,3074
 c003b54:	1087c004 	addi	r2,r2,7936
 c003b58:	180690fa 	slli	r3,r3,3
 c003b5c:	10c5883a 	add	r2,r2,r3
 c003b60:	10c00017 	ldw	r3,0(r2)
 c003b64:	e0bffc03 	ldbu	r2,-16(fp)
 c003b68:	100490fa 	slli	r2,r2,3
 c003b6c:	1885883a 	add	r2,r3,r2
 c003b70:	10800183 	ldbu	r2,6(r2)
 c003b74:	10803fcc 	andi	r2,r2,255
 c003b78:	100b883a 	mov	r5,r2
 c003b7c:	01003a04 	movi	r4,232
 c003b80:	c002f400 	call	c002f40 <MAXreg_wr>
 c003b84:	e0bffc03 	ldbu	r2,-16(fp)
 c003b88:	100b883a 	mov	r5,r2
 c003b8c:	0009883a 	mov	r4,zero
 c003b90:	c0039980 	call	c003998 <XferDispatchPkt>
 c003b94:	e0bffa85 	stb	r2,-22(fp)
 c003b98:	e0bffa83 	ldbu	r2,-22(fp)
 c003b9c:	10000226 	beq	r2,zero,c003ba8 <XferInTransfer+0x94>
 c003ba0:	e0bffa83 	ldbu	r2,-22(fp)
 c003ba4:	00003a06 	br	c003c90 <XferInTransfer+0x17c>
 c003ba8:	01003204 	movi	r4,200
 c003bac:	c0031300 	call	c003130 <MAXreg_rd>
 c003bb0:	10803fcc 	andi	r2,r2,255
 c003bb4:	1080010c 	andi	r2,r2,4
 c003bb8:	1000021e 	bne	r2,zero,c003bc4 <XferInTransfer+0xb0>
 c003bbc:	00bffc04 	movi	r2,-16
 c003bc0:	00003306 	br	c003c90 <XferInTransfer+0x17c>
 c003bc4:	01000c04 	movi	r4,48
 c003bc8:	c0031300 	call	c003130 <MAXreg_rd>
 c003bcc:	e0bffac5 	stb	r2,-21(fp)
 c003bd0:	e0bffac3 	ldbu	r2,-21(fp)
 c003bd4:	e1bffe17 	ldw	r6,-8(fp)
 c003bd8:	100b883a 	mov	r5,r2
 c003bdc:	01000204 	movi	r4,8
 c003be0:	c0031a40 	call	c0031a4 <MAXbytes_rd>
 c003be4:	e0bffe15 	stw	r2,-8(fp)
 c003be8:	01400104 	movi	r5,4
 c003bec:	01003204 	movi	r4,200
 c003bf0:	c002f400 	call	c002f40 <MAXreg_wr>
 c003bf4:	e0fffac3 	ldbu	r3,-21(fp)
 c003bf8:	e0bffa0b 	ldhu	r2,-24(fp)
 c003bfc:	1885883a 	add	r2,r3,r2
 c003c00:	e0bffa0d 	sth	r2,-24(fp)
 c003c04:	e0fffac3 	ldbu	r3,-21(fp)
 c003c08:	e0bfff03 	ldbu	r2,-4(fp)
 c003c0c:	18800336 	bltu	r3,r2,c003c1c <XferInTransfer+0x108>
 c003c10:	e0fffa0b 	ldhu	r3,-24(fp)
 c003c14:	e0bffd0b 	ldhu	r2,-12(fp)
 c003c18:	18bfda36 	bltu	r3,r2,c003b84 <__alt_data_end+0xfc003b84>
 c003c1c:	01003e04 	movi	r4,248
 c003c20:	c0031300 	call	c003130 <MAXreg_rd>
 c003c24:	10803fcc 	andi	r2,r2,255
 c003c28:	1080040c 	andi	r2,r2,16
 c003c2c:	10000c26 	beq	r2,zero,c003c60 <XferInTransfer+0x14c>
 c003c30:	e0fffb03 	ldbu	r3,-20(fp)
 c003c34:	008300b4 	movhi	r2,3074
 c003c38:	1087c004 	addi	r2,r2,7936
 c003c3c:	180690fa 	slli	r3,r3,3
 c003c40:	10c5883a 	add	r2,r2,r3
 c003c44:	10c00017 	ldw	r3,0(r2)
 c003c48:	e0bffc03 	ldbu	r2,-16(fp)
 c003c4c:	100490fa 	slli	r2,r2,3
 c003c50:	1885883a 	add	r2,r3,r2
 c003c54:	00c00804 	movi	r3,32
 c003c58:	10c00185 	stb	r3,6(r2)
 c003c5c:	00000b06 	br	c003c8c <XferInTransfer+0x178>
 c003c60:	e0fffb03 	ldbu	r3,-20(fp)
 c003c64:	008300b4 	movhi	r2,3074
 c003c68:	1087c004 	addi	r2,r2,7936
 c003c6c:	180690fa 	slli	r3,r3,3
 c003c70:	10c5883a 	add	r2,r2,r3
 c003c74:	10c00017 	ldw	r3,0(r2)
 c003c78:	e0bffc03 	ldbu	r2,-16(fp)
 c003c7c:	100490fa 	slli	r2,r2,3
 c003c80:	1885883a 	add	r2,r3,r2
 c003c84:	00c00404 	movi	r3,16
 c003c88:	10c00185 	stb	r3,6(r2)
 c003c8c:	0005883a 	mov	r2,zero
 c003c90:	e037883a 	mov	sp,fp
 c003c94:	dfc00117 	ldw	ra,4(sp)
 c003c98:	df000017 	ldw	fp,0(sp)
 c003c9c:	dec00204 	addi	sp,sp,8
 c003ca0:	f800283a 	ret

0c003ca4 <USB_init>:
 c003ca4:	defffe04 	addi	sp,sp,-8
 c003ca8:	df000115 	stw	fp,4(sp)
 c003cac:	df000104 	addi	fp,sp,4
 c003cb0:	e03fff05 	stb	zero,-4(fp)
 c003cb4:	00001006 	br	c003cf8 <USB_init+0x54>
 c003cb8:	e0ffff03 	ldbu	r3,-4(fp)
 c003cbc:	008300b4 	movhi	r2,3074
 c003cc0:	1087c004 	addi	r2,r2,7936
 c003cc4:	180690fa 	slli	r3,r3,3
 c003cc8:	10c5883a 	add	r2,r2,r3
 c003ccc:	10000015 	stw	zero,0(r2)
 c003cd0:	e0ffff03 	ldbu	r3,-4(fp)
 c003cd4:	008300b4 	movhi	r2,3074
 c003cd8:	1087c004 	addi	r2,r2,7936
 c003cdc:	180690fa 	slli	r3,r3,3
 c003ce0:	10c5883a 	add	r2,r2,r3
 c003ce4:	10800104 	addi	r2,r2,4
 c003ce8:	10000005 	stb	zero,0(r2)
 c003cec:	e0bfff03 	ldbu	r2,-4(fp)
 c003cf0:	10800044 	addi	r2,r2,1
 c003cf4:	e0bfff05 	stb	r2,-4(fp)
 c003cf8:	e0bfff03 	ldbu	r2,-4(fp)
 c003cfc:	10800270 	cmpltui	r2,r2,9
 c003d00:	103fed1e 	bne	r2,zero,c003cb8 <__alt_data_end+0xfc003cb8>
 c003d04:	008300b4 	movhi	r2,3074
 c003d08:	1087c004 	addi	r2,r2,7936
 c003d0c:	d0e7a004 	addi	r3,gp,-24960
 c003d10:	10c00015 	stw	r3,0(r2)
 c003d14:	d027a08d 	sth	zero,-24958(gp)
 c003d18:	00801004 	movi	r2,64
 c003d1c:	d0a7a145 	stb	r2,-24955(gp)
 c003d20:	00800404 	movi	r2,16
 c003d24:	d0a7a185 	stb	r2,-24954(gp)
 c003d28:	0001883a 	nop
 c003d2c:	e037883a 	mov	sp,fp
 c003d30:	df000017 	ldw	fp,0(sp)
 c003d34:	dec00104 	addi	sp,sp,4
 c003d38:	f800283a 	ret

0c003d3c <USB_Task>:
 c003d3c:	deffb204 	addi	sp,sp,-312
 c003d40:	dfc04d15 	stw	ra,308(sp)
 c003d44:	df004c15 	stw	fp,304(sp)
 c003d48:	dc004b15 	stw	r16,300(sp)
 c003d4c:	df004c04 	addi	fp,sp,304
 c003d50:	d0a00503 	ldbu	r2,-32748(gp)
 c003d54:	10803fcc 	andi	r2,r2,255
 c003d58:	10803c0c 	andi	r2,r2,240
 c003d5c:	10c00820 	cmpeqi	r3,r2,32
 c003d60:	1801121e 	bne	r3,zero,c0041ac <USB_Task+0x470>
 c003d64:	10c00848 	cmpgei	r3,r2,33
 c003d68:	1800041e 	bne	r3,zero,c003d7c <USB_Task+0x40>
 c003d6c:	10000a26 	beq	r2,zero,c003d98 <USB_Task+0x5c>
 c003d70:	10800420 	cmpeqi	r2,r2,16
 c003d74:	10001b1e 	bne	r2,zero,c003de4 <USB_Task+0xa8>
 c003d78:	00017a06 	br	c004364 <USB_Task+0x628>
 c003d7c:	10c01020 	cmpeqi	r3,r2,64
 c003d80:	18016f1e 	bne	r3,zero,c004340 <USB_Task+0x604>
 c003d84:	10c03fe0 	cmpeqi	r3,r2,255
 c003d88:	18016f1e 	bne	r3,zero,c004348 <USB_Task+0x60c>
 c003d8c:	10800c20 	cmpeqi	r2,r2,48
 c003d90:	1001441e 	bne	r2,zero,c0042a4 <USB_Task+0x568>
 c003d94:	00017306 	br	c004364 <USB_Task+0x628>
 c003d98:	d0a00503 	ldbu	r2,-32748(gp)
 c003d9c:	10803fcc 	andi	r2,r2,255
 c003da0:	10c000e0 	cmpeqi	r3,r2,3
 c003da4:	1800091e 	bne	r3,zero,c003dcc <USB_Task+0x90>
 c003da8:	10c00120 	cmpeqi	r3,r2,4
 c003dac:	18000b1e 	bne	r3,zero,c003ddc <USB_Task+0xa0>
 c003db0:	10800060 	cmpeqi	r2,r2,1
 c003db4:	1000011e 	bne	r2,zero,c003dbc <USB_Task+0x80>
 c003db8:	00016a06 	br	c004364 <USB_Task+0x628>
 c003dbc:	c003ca40 	call	c003ca4 <USB_init>
 c003dc0:	008000c4 	movi	r2,3
 c003dc4:	d0a00505 	stb	r2,-32748(gp)
 c003dc8:	00000506 	br	c003de0 <USB_Task+0xa4>
 c003dcc:	01400104 	movi	r5,4
 c003dd0:	01003a04 	movi	r4,232
 c003dd4:	c002f400 	call	c002f40 <MAXreg_wr>
 c003dd8:	00000106 	br	c003de0 <USB_Task+0xa4>
 c003ddc:	0001883a 	nop
 c003de0:	00016006 	br	c004364 <USB_Task+0x628>
 c003de4:	d0a00503 	ldbu	r2,-32748(gp)
 c003de8:	10803fcc 	andi	r2,r2,255
 c003dec:	10bffc04 	addi	r2,r2,-16
 c003df0:	10c001a8 	cmpgeui	r3,r2,6
 c003df4:	1801561e 	bne	r3,zero,c004350 <USB_Task+0x614>
 c003df8:	100690ba 	slli	r3,r2,2
 c003dfc:	00830034 	movhi	r2,3072
 c003e00:	108f8404 	addi	r2,r2,15888
 c003e04:	1885883a 	add	r2,r3,r2
 c003e08:	10800017 	ldw	r2,0(r2)
 c003e0c:	1000683a 	jmp	r2
 c003e10:	0c003e28 	cmpgeui	r16,at,248
 c003e14:	0c003e60 	cmpeqi	r16,at,249
 c003e18:	0c003e9c 	xori	r16,at,250
 c003e1c:	0c003ec0 	call	c003ec <__alt_mem_onchip_memory2_0+0xc003ec>
 c003e20:	0c003f00 	call	c003f0 <__alt_mem_onchip_memory2_0+0xc003f0>
 c003e24:	0c003f14 	ori	r16,at,252
 c003e28:	d0a7b017 	ldw	r2,-24896(gp)
 c003e2c:	0140fa04 	movi	r5,1000
 c003e30:	1009883a 	mov	r4,r2
 c003e34:	c00473c0 	call	c00473c <__mulsi3>
 c003e38:	1007883a 	mov	r3,r2
 c003e3c:	d0a7af17 	ldw	r2,-24900(gp)
 c003e40:	100b883a 	mov	r5,r2
 c003e44:	1809883a 	mov	r4,r3
 c003e48:	c0046800 	call	c004680 <__udivsi3>
 c003e4c:	10803204 	addi	r2,r2,200
 c003e50:	d0a7a315 	stw	r2,-24948(gp)
 c003e54:	00800444 	movi	r2,17
 c003e58:	d0a00505 	stb	r2,-32748(gp)
 c003e5c:	0000d206 	br	c0041a8 <USB_Task+0x46c>
 c003e60:	d0a7b017 	ldw	r2,-24896(gp)
 c003e64:	0140fa04 	movi	r5,1000
 c003e68:	1009883a 	mov	r4,r2
 c003e6c:	c00473c0 	call	c00473c <__mulsi3>
 c003e70:	1007883a 	mov	r3,r2
 c003e74:	d0a7af17 	ldw	r2,-24900(gp)
 c003e78:	100b883a 	mov	r5,r2
 c003e7c:	1809883a 	mov	r4,r3
 c003e80:	c0046800 	call	c004680 <__udivsi3>
 c003e84:	1007883a 	mov	r3,r2
 c003e88:	d0a7a317 	ldw	r2,-24948(gp)
 c003e8c:	10c0c32e 	bgeu	r2,r3,c00419c <USB_Task+0x460>
 c003e90:	00800484 	movi	r2,18
 c003e94:	d0a00505 	stb	r2,-32748(gp)
 c003e98:	0000c006 	br	c00419c <USB_Task+0x460>
 c003e9c:	01400044 	movi	r5,1
 c003ea0:	01003204 	movi	r4,200
 c003ea4:	c002f400 	call	c002f40 <MAXreg_wr>
 c003ea8:	01400044 	movi	r5,1
 c003eac:	01003a04 	movi	r4,232
 c003eb0:	c002f400 	call	c002f40 <MAXreg_wr>
 c003eb4:	008004c4 	movi	r2,19
 c003eb8:	d0a00505 	stb	r2,-32748(gp)
 c003ebc:	0000ba06 	br	c0041a8 <USB_Task+0x46c>
 c003ec0:	01003a04 	movi	r4,232
 c003ec4:	c0031300 	call	c003130 <MAXreg_rd>
 c003ec8:	10803fcc 	andi	r2,r2,255
 c003ecc:	1080004c 	andi	r2,r2,1
 c003ed0:	1000b41e 	bne	r2,zero,c0041a4 <USB_Task+0x468>
 c003ed4:	01003604 	movi	r4,216
 c003ed8:	c0031300 	call	c003130 <MAXreg_rd>
 c003edc:	10800214 	ori	r2,r2,8
 c003ee0:	e0bfb945 	stb	r2,-283(fp)
 c003ee4:	e0bfb943 	ldbu	r2,-283(fp)
 c003ee8:	100b883a 	mov	r5,r2
 c003eec:	01003604 	movi	r4,216
 c003ef0:	c002f400 	call	c002f40 <MAXreg_wr>
 c003ef4:	00800504 	movi	r2,20
 c003ef8:	d0a00505 	stb	r2,-32748(gp)
 c003efc:	0000a906 	br	c0041a4 <USB_Task+0x468>
 c003f00:	01003204 	movi	r4,200
 c003f04:	c0031300 	call	c003130 <MAXreg_rd>
 c003f08:	00800544 	movi	r2,21
 c003f0c:	d0a00505 	stb	r2,-32748(gp)
 c003f10:	0000a506 	br	c0041a8 <USB_Task+0x46c>
 c003f14:	008300b4 	movhi	r2,3074
 c003f18:	1087c004 	addi	r2,r2,7936
 c003f1c:	10800017 	ldw	r2,0(r2)
 c003f20:	00c00204 	movi	r3,8
 c003f24:	10c0008d 	sth	r3,2(r2)
 c003f28:	e0bfba04 	addi	r2,fp,-280
 c003f2c:	d8800415 	stw	r2,16(sp)
 c003f30:	00800204 	movi	r2,8
 c003f34:	d8800315 	stw	r2,12(sp)
 c003f38:	d8000215 	stw	zero,8(sp)
 c003f3c:	00800044 	movi	r2,1
 c003f40:	d8800115 	stw	r2,4(sp)
 c003f44:	d8000015 	stw	zero,0(sp)
 c003f48:	01c00184 	movi	r7,6
 c003f4c:	01802004 	movi	r6,128
 c003f50:	000b883a 	mov	r5,zero
 c003f54:	0009883a 	mov	r4,zero
 c003f58:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c003f5c:	e0bfb985 	stb	r2,-282(fp)
 c003f60:	e0bfb983 	ldbu	r2,-282(fp)
 c003f64:	1000861e 	bne	r2,zero,c004180 <USB_Task+0x444>
 c003f68:	008300b4 	movhi	r2,3074
 c003f6c:	1087c004 	addi	r2,r2,7936
 c003f70:	10800017 	ldw	r2,0(r2)
 c003f74:	e0ffbbc3 	ldbu	r3,-273(fp)
 c003f78:	18c03fcc 	andi	r3,r3,255
 c003f7c:	10c0008d 	sth	r3,2(r2)
 c003f80:	e0bfba03 	ldbu	r2,-280(fp)
 c003f84:	10803fcc 	andi	r2,r2,255
 c003f88:	e0ffba04 	addi	r3,fp,-280
 c003f8c:	d8c00415 	stw	r3,16(sp)
 c003f90:	d8800315 	stw	r2,12(sp)
 c003f94:	d8000215 	stw	zero,8(sp)
 c003f98:	00800044 	movi	r2,1
 c003f9c:	d8800115 	stw	r2,4(sp)
 c003fa0:	d8000015 	stw	zero,0(sp)
 c003fa4:	01c00184 	movi	r7,6
 c003fa8:	01802004 	movi	r6,128
 c003fac:	000b883a 	mov	r5,zero
 c003fb0:	0009883a 	mov	r4,zero
 c003fb4:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c003fb8:	e0bfb985 	stb	r2,-282(fp)
 c003fbc:	e0bfbd83 	ldbu	r2,-266(fp)
 c003fc0:	10803fcc 	andi	r2,r2,255
 c003fc4:	10003426 	beq	r2,zero,c004098 <USB_Task+0x35c>
 c003fc8:	e0bfbd83 	ldbu	r2,-266(fp)
 c003fcc:	10803fcc 	andi	r2,r2,255
 c003fd0:	e0ffbe84 	addi	r3,fp,-262
 c003fd4:	d8c00415 	stw	r3,16(sp)
 c003fd8:	00c00084 	movi	r3,2
 c003fdc:	d8c00315 	stw	r3,12(sp)
 c003fe0:	00c10244 	movi	r3,1033
 c003fe4:	d8c00215 	stw	r3,8(sp)
 c003fe8:	00c000c4 	movi	r3,3
 c003fec:	d8c00115 	stw	r3,4(sp)
 c003ff0:	d8800015 	stw	r2,0(sp)
 c003ff4:	01c00184 	movi	r7,6
 c003ff8:	01802004 	movi	r6,128
 c003ffc:	000b883a 	mov	r5,zero
 c004000:	0009883a 	mov	r4,zero
 c004004:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c004008:	e0bfb985 	stb	r2,-282(fp)
 c00400c:	e0bfbd83 	ldbu	r2,-266(fp)
 c004010:	10803fcc 	andi	r2,r2,255
 c004014:	e0ffbe83 	ldbu	r3,-262(fp)
 c004018:	18c03fcc 	andi	r3,r3,255
 c00401c:	e13fbe84 	addi	r4,fp,-262
 c004020:	d9000415 	stw	r4,16(sp)
 c004024:	d8c00315 	stw	r3,12(sp)
 c004028:	00c10244 	movi	r3,1033
 c00402c:	d8c00215 	stw	r3,8(sp)
 c004030:	00c000c4 	movi	r3,3
 c004034:	d8c00115 	stw	r3,4(sp)
 c004038:	d8800015 	stw	r2,0(sp)
 c00403c:	01c00184 	movi	r7,6
 c004040:	01802004 	movi	r6,128
 c004044:	000b883a 	mov	r5,zero
 c004048:	0009883a 	mov	r4,zero
 c00404c:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c004050:	e0bfb985 	stb	r2,-282(fp)
 c004054:	e0bfbd83 	ldbu	r2,-266(fp)
 c004058:	14003fcc 	andi	r16,r2,255
 c00405c:	e0bfbe83 	ldbu	r2,-262(fp)
 c004060:	10803fcc 	andi	r2,r2,255
 c004064:	1004d07a 	srli	r2,r2,1
 c004068:	10bfffc4 	addi	r2,r2,-1
 c00406c:	10c03fcc 	andi	r3,r2,255
 c004070:	e0bfbe84 	addi	r2,fp,-262
 c004074:	10800084 	addi	r2,r2,2
 c004078:	180b883a 	mov	r5,r3
 c00407c:	1009883a 	mov	r4,r2
 c004080:	c0045040 	call	c004504 <ConvUTF8ToStr>
 c004084:	100d883a 	mov	r6,r2
 c004088:	800b883a 	mov	r5,r16
 c00408c:	010300b4 	movhi	r4,3074
 c004090:	21366b04 	addi	r4,r4,-9812
 c004094:	c004fc80 	call	c004fc8 <printf>
 c004098:	e0bfbdc3 	ldbu	r2,-265(fp)
 c00409c:	10803fcc 	andi	r2,r2,255
 c0040a0:	10003426 	beq	r2,zero,c004174 <USB_Task+0x438>
 c0040a4:	e0bfbdc3 	ldbu	r2,-265(fp)
 c0040a8:	10803fcc 	andi	r2,r2,255
 c0040ac:	e0ffbe84 	addi	r3,fp,-262
 c0040b0:	d8c00415 	stw	r3,16(sp)
 c0040b4:	00c00084 	movi	r3,2
 c0040b8:	d8c00315 	stw	r3,12(sp)
 c0040bc:	00c10244 	movi	r3,1033
 c0040c0:	d8c00215 	stw	r3,8(sp)
 c0040c4:	00c000c4 	movi	r3,3
 c0040c8:	d8c00115 	stw	r3,4(sp)
 c0040cc:	d8800015 	stw	r2,0(sp)
 c0040d0:	01c00184 	movi	r7,6
 c0040d4:	01802004 	movi	r6,128
 c0040d8:	000b883a 	mov	r5,zero
 c0040dc:	0009883a 	mov	r4,zero
 c0040e0:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c0040e4:	e0bfb985 	stb	r2,-282(fp)
 c0040e8:	e0bfbdc3 	ldbu	r2,-265(fp)
 c0040ec:	10803fcc 	andi	r2,r2,255
 c0040f0:	e0ffbe83 	ldbu	r3,-262(fp)
 c0040f4:	18c03fcc 	andi	r3,r3,255
 c0040f8:	e13fbe84 	addi	r4,fp,-262
 c0040fc:	d9000415 	stw	r4,16(sp)
 c004100:	d8c00315 	stw	r3,12(sp)
 c004104:	00c10244 	movi	r3,1033
 c004108:	d8c00215 	stw	r3,8(sp)
 c00410c:	00c000c4 	movi	r3,3
 c004110:	d8c00115 	stw	r3,4(sp)
 c004114:	d8800015 	stw	r2,0(sp)
 c004118:	01c00184 	movi	r7,6
 c00411c:	01802004 	movi	r6,128
 c004120:	000b883a 	mov	r5,zero
 c004124:	0009883a 	mov	r4,zero
 c004128:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c00412c:	e0bfb985 	stb	r2,-282(fp)
 c004130:	e0bfbdc3 	ldbu	r2,-265(fp)
 c004134:	14003fcc 	andi	r16,r2,255
 c004138:	e0bfbe83 	ldbu	r2,-262(fp)
 c00413c:	10803fcc 	andi	r2,r2,255
 c004140:	1004d07a 	srli	r2,r2,1
 c004144:	10bfffc4 	addi	r2,r2,-1
 c004148:	10c03fcc 	andi	r3,r2,255
 c00414c:	e0bfbe84 	addi	r2,fp,-262
 c004150:	10800084 	addi	r2,r2,2
 c004154:	180b883a 	mov	r5,r3
 c004158:	1009883a 	mov	r4,r2
 c00415c:	c0045040 	call	c004504 <ConvUTF8ToStr>
 c004160:	100d883a 	mov	r6,r2
 c004164:	800b883a 	mov	r5,r16
 c004168:	010300b4 	movhi	r4,3074
 c00416c:	21367104 	addi	r4,r4,-9788
 c004170:	c004fc80 	call	c004fc8 <printf>
 c004174:	00800804 	movi	r2,32
 c004178:	d0a00505 	stb	r2,-32748(gp)
 c00417c:	00000a06 	br	c0041a8 <USB_Task+0x46c>
 c004180:	e0bfb983 	ldbu	r2,-282(fp)
 c004184:	d0a7a445 	stb	r2,-24943(gp)
 c004188:	d0a00503 	ldbu	r2,-32748(gp)
 c00418c:	d0a7a205 	stb	r2,-24952(gp)
 c004190:	00bfffc4 	movi	r2,-1
 c004194:	d0a00505 	stb	r2,-32748(gp)
 c004198:	00000306 	br	c0041a8 <USB_Task+0x46c>
 c00419c:	0001883a 	nop
 c0041a0:	00006b06 	br	c004350 <USB_Task+0x614>
 c0041a4:	0001883a 	nop
 c0041a8:	00006906 	br	c004350 <USB_Task+0x614>
 c0041ac:	00800044 	movi	r2,1
 c0041b0:	e0bfb905 	stb	r2,-284(fp)
 c0041b4:	00002d06 	br	c00426c <USB_Task+0x530>
 c0041b8:	e0ffb903 	ldbu	r3,-284(fp)
 c0041bc:	008300b4 	movhi	r2,3074
 c0041c0:	1087c004 	addi	r2,r2,7936
 c0041c4:	180690fa 	slli	r3,r3,3
 c0041c8:	10c5883a 	add	r2,r2,r3
 c0041cc:	10800017 	ldw	r2,0(r2)
 c0041d0:	1000231e 	bne	r2,zero,c004260 <USB_Task+0x524>
 c0041d4:	e13fb903 	ldbu	r4,-284(fp)
 c0041d8:	008300b4 	movhi	r2,3074
 c0041dc:	1087c004 	addi	r2,r2,7936
 c0041e0:	10c00017 	ldw	r3,0(r2)
 c0041e4:	008300b4 	movhi	r2,3074
 c0041e8:	1087c004 	addi	r2,r2,7936
 c0041ec:	200890fa 	slli	r4,r4,3
 c0041f0:	1105883a 	add	r2,r2,r4
 c0041f4:	10c00015 	stw	r3,0(r2)
 c0041f8:	e0bfb903 	ldbu	r2,-284(fp)
 c0041fc:	d8000415 	stw	zero,16(sp)
 c004200:	d8000315 	stw	zero,12(sp)
 c004204:	d8000215 	stw	zero,8(sp)
 c004208:	d8000115 	stw	zero,4(sp)
 c00420c:	d8800015 	stw	r2,0(sp)
 c004210:	01c00144 	movi	r7,5
 c004214:	000d883a 	mov	r6,zero
 c004218:	000b883a 	mov	r5,zero
 c00421c:	0009883a 	mov	r4,zero
 c004220:	c0036f00 	call	c0036f0 <XferCtrlReq>
 c004224:	e0bfb985 	stb	r2,-282(fp)
 c004228:	e0bfb983 	ldbu	r2,-282(fp)
 c00422c:	1000051e 	bne	r2,zero,c004244 <USB_Task+0x508>
 c004230:	e0bfb903 	ldbu	r2,-284(fp)
 c004234:	d0a7a405 	stb	r2,-24944(gp)
 c004238:	00800c04 	movi	r2,48
 c00423c:	d0a00505 	stb	r2,-32748(gp)
 c004240:	00000d06 	br	c004278 <USB_Task+0x53c>
 c004244:	e0bfb983 	ldbu	r2,-282(fp)
 c004248:	d0a7a445 	stb	r2,-24943(gp)
 c00424c:	d0a00503 	ldbu	r2,-32748(gp)
 c004250:	d0a7a205 	stb	r2,-24952(gp)
 c004254:	00bfffc4 	movi	r2,-1
 c004258:	d0a00505 	stb	r2,-32748(gp)
 c00425c:	00000606 	br	c004278 <USB_Task+0x53c>
 c004260:	e0bfb903 	ldbu	r2,-284(fp)
 c004264:	10800044 	addi	r2,r2,1
 c004268:	e0bfb905 	stb	r2,-284(fp)
 c00426c:	e0bfb903 	ldbu	r2,-284(fp)
 c004270:	10800230 	cmpltui	r2,r2,8
 c004274:	103fd01e 	bne	r2,zero,c0041b8 <__alt_data_end+0xfc0041b8>
 c004278:	d0a00503 	ldbu	r2,-32748(gp)
 c00427c:	10803fcc 	andi	r2,r2,255
 c004280:	10800818 	cmpnei	r2,r2,32
 c004284:	1000341e 	bne	r2,zero,c004358 <USB_Task+0x61c>
 c004288:	00bfff84 	movi	r2,-2
 c00428c:	d0a7a445 	stb	r2,-24943(gp)
 c004290:	d0a00503 	ldbu	r2,-32748(gp)
 c004294:	d0a7a205 	stb	r2,-24952(gp)
 c004298:	00bfffc4 	movi	r2,-1
 c00429c:	d0a00505 	stb	r2,-32748(gp)
 c0042a0:	00002d06 	br	c004358 <USB_Task+0x61c>
 c0042a4:	e03fb905 	stb	zero,-284(fp)
 c0042a8:	00001706 	br	c004308 <USB_Task+0x5cc>
 c0042ac:	e0bfb903 	ldbu	r2,-284(fp)
 c0042b0:	040300b4 	movhi	r16,3074
 c0042b4:	84390204 	addi	r16,r16,-7160
 c0042b8:	01400304 	movi	r5,12
 c0042bc:	1009883a 	mov	r4,r2
 c0042c0:	c00473c0 	call	c00473c <__mulsi3>
 c0042c4:	8085883a 	add	r2,r16,r2
 c0042c8:	10800017 	ldw	r2,0(r2)
 c0042cc:	d0e7a403 	ldbu	r3,-24944(gp)
 c0042d0:	18c03fcc 	andi	r3,r3,255
 c0042d4:	000b883a 	mov	r5,zero
 c0042d8:	1809883a 	mov	r4,r3
 c0042dc:	103ee83a 	callr	r2
 c0042e0:	e0bfb985 	stb	r2,-282(fp)
 c0042e4:	e0bfb983 	ldbu	r2,-282(fp)
 c0042e8:	10800058 	cmpnei	r2,r2,1
 c0042ec:	1000031e 	bne	r2,zero,c0042fc <USB_Task+0x5c0>
 c0042f0:	00801004 	movi	r2,64
 c0042f4:	d0a00505 	stb	r2,-32748(gp)
 c0042f8:	00000606 	br	c004314 <USB_Task+0x5d8>
 c0042fc:	e0bfb903 	ldbu	r2,-284(fp)
 c004300:	10800044 	addi	r2,r2,1
 c004304:	e0bfb905 	stb	r2,-284(fp)
 c004308:	e0bfb903 	ldbu	r2,-284(fp)
 c00430c:	10800130 	cmpltui	r2,r2,4
 c004310:	103fe61e 	bne	r2,zero,c0042ac <__alt_data_end+0xfc0042ac>
 c004314:	d0a00503 	ldbu	r2,-32748(gp)
 c004318:	10803fcc 	andi	r2,r2,255
 c00431c:	10800c18 	cmpnei	r2,r2,48
 c004320:	10000f1e 	bne	r2,zero,c004360 <USB_Task+0x624>
 c004324:	00bfff44 	movi	r2,-3
 c004328:	d0a7a445 	stb	r2,-24943(gp)
 c00432c:	d0a00503 	ldbu	r2,-32748(gp)
 c004330:	d0a7a205 	stb	r2,-24952(gp)
 c004334:	00bfffc4 	movi	r2,-1
 c004338:	d0a00505 	stb	r2,-32748(gp)
 c00433c:	00000806 	br	c004360 <USB_Task+0x624>
 c004340:	0001883a 	nop
 c004344:	00000706 	br	c004364 <USB_Task+0x628>
 c004348:	0001883a 	nop
 c00434c:	00000506 	br	c004364 <USB_Task+0x628>
 c004350:	0001883a 	nop
 c004354:	00000306 	br	c004364 <USB_Task+0x628>
 c004358:	0001883a 	nop
 c00435c:	00000106 	br	c004364 <USB_Task+0x628>
 c004360:	0001883a 	nop
 c004364:	0001883a 	nop
 c004368:	e6ffff04 	addi	sp,fp,-4
 c00436c:	dfc00217 	ldw	ra,8(sp)
 c004370:	df000117 	ldw	fp,4(sp)
 c004374:	dc000017 	ldw	r16,0(sp)
 c004378:	dec00304 	addi	sp,sp,12
 c00437c:	f800283a 	ret

0c004380 <MSDProbe>:
 c004380:	defffd04 	addi	sp,sp,-12
 c004384:	df000215 	stw	fp,8(sp)
 c004388:	df000204 	addi	fp,sp,8
 c00438c:	2005883a 	mov	r2,r4
 c004390:	e17fff15 	stw	r5,-4(fp)
 c004394:	e0bffe05 	stb	r2,-8(fp)
 c004398:	0005883a 	mov	r2,zero
 c00439c:	e037883a 	mov	sp,fp
 c0043a0:	df000017 	ldw	fp,0(sp)
 c0043a4:	dec00104 	addi	sp,sp,4
 c0043a8:	f800283a 	ret

0c0043ac <MSDEventHandler>:
 c0043ac:	defffb04 	addi	sp,sp,-20
 c0043b0:	df000415 	stw	fp,16(sp)
 c0043b4:	df000404 	addi	fp,sp,16
 c0043b8:	2007883a 	mov	r3,r4
 c0043bc:	2805883a 	mov	r2,r5
 c0043c0:	e1bffe15 	stw	r6,-8(fp)
 c0043c4:	e1ffff15 	stw	r7,-4(fp)
 c0043c8:	e0fffc05 	stb	r3,-16(fp)
 c0043cc:	e0bffd05 	stb	r2,-12(fp)
 c0043d0:	0005883a 	mov	r2,zero
 c0043d4:	e037883a 	mov	sp,fp
 c0043d8:	df000017 	ldw	fp,0(sp)
 c0043dc:	dec00104 	addi	sp,sp,4
 c0043e0:	f800283a 	ret

0c0043e4 <CDCProbe>:
 c0043e4:	defffd04 	addi	sp,sp,-12
 c0043e8:	df000215 	stw	fp,8(sp)
 c0043ec:	df000204 	addi	fp,sp,8
 c0043f0:	2005883a 	mov	r2,r4
 c0043f4:	e17fff15 	stw	r5,-4(fp)
 c0043f8:	e0bffe05 	stb	r2,-8(fp)
 c0043fc:	0005883a 	mov	r2,zero
 c004400:	e037883a 	mov	sp,fp
 c004404:	df000017 	ldw	fp,0(sp)
 c004408:	dec00104 	addi	sp,sp,4
 c00440c:	f800283a 	ret

0c004410 <CDCEventHandler>:
 c004410:	defffb04 	addi	sp,sp,-20
 c004414:	df000415 	stw	fp,16(sp)
 c004418:	df000404 	addi	fp,sp,16
 c00441c:	2007883a 	mov	r3,r4
 c004420:	2805883a 	mov	r2,r5
 c004424:	e1bffe15 	stw	r6,-8(fp)
 c004428:	e1ffff15 	stw	r7,-4(fp)
 c00442c:	e0fffc05 	stb	r3,-16(fp)
 c004430:	e0bffd05 	stb	r2,-12(fp)
 c004434:	0005883a 	mov	r2,zero
 c004438:	e037883a 	mov	sp,fp
 c00443c:	df000017 	ldw	fp,0(sp)
 c004440:	dec00104 	addi	sp,sp,4
 c004444:	f800283a 	ret

0c004448 <DummyProbe>:
 c004448:	defffd04 	addi	sp,sp,-12
 c00444c:	df000215 	stw	fp,8(sp)
 c004450:	df000204 	addi	fp,sp,8
 c004454:	2005883a 	mov	r2,r4
 c004458:	e17fff15 	stw	r5,-4(fp)
 c00445c:	e0bffe05 	stb	r2,-8(fp)
 c004460:	0005883a 	mov	r2,zero
 c004464:	e037883a 	mov	sp,fp
 c004468:	df000017 	ldw	fp,0(sp)
 c00446c:	dec00104 	addi	sp,sp,4
 c004470:	f800283a 	ret

0c004474 <DummyEventHandler>:
 c004474:	defffb04 	addi	sp,sp,-20
 c004478:	df000415 	stw	fp,16(sp)
 c00447c:	df000404 	addi	fp,sp,16
 c004480:	2007883a 	mov	r3,r4
 c004484:	2805883a 	mov	r2,r5
 c004488:	e1bffe15 	stw	r6,-8(fp)
 c00448c:	e1ffff15 	stw	r7,-4(fp)
 c004490:	e0fffc05 	stb	r3,-16(fp)
 c004494:	e0bffd05 	stb	r2,-12(fp)
 c004498:	0005883a 	mov	r2,zero
 c00449c:	e037883a 	mov	sp,fp
 c0044a0:	df000017 	ldw	fp,0(sp)
 c0044a4:	dec00104 	addi	sp,sp,4
 c0044a8:	f800283a 	ret

0c0044ac <GetUsbTaskState>:
 c0044ac:	deffff04 	addi	sp,sp,-4
 c0044b0:	df000015 	stw	fp,0(sp)
 c0044b4:	d839883a 	mov	fp,sp
 c0044b8:	d0a00503 	ldbu	r2,-32748(gp)
 c0044bc:	e037883a 	mov	sp,fp
 c0044c0:	df000017 	ldw	fp,0(sp)
 c0044c4:	dec00104 	addi	sp,sp,4
 c0044c8:	f800283a 	ret

0c0044cc <GetDevtable>:
 c0044cc:	defffe04 	addi	sp,sp,-8
 c0044d0:	df000115 	stw	fp,4(sp)
 c0044d4:	df000104 	addi	fp,sp,4
 c0044d8:	2005883a 	mov	r2,r4
 c0044dc:	e0bfff05 	stb	r2,-4(fp)
 c0044e0:	e0bfff03 	ldbu	r2,-4(fp)
 c0044e4:	100690fa 	slli	r3,r2,3
 c0044e8:	008300b4 	movhi	r2,3074
 c0044ec:	1087c004 	addi	r2,r2,7936
 c0044f0:	1885883a 	add	r2,r3,r2
 c0044f4:	e037883a 	mov	sp,fp
 c0044f8:	df000017 	ldw	fp,0(sp)
 c0044fc:	dec00104 	addi	sp,sp,4
 c004500:	f800283a 	ret

0c004504 <ConvUTF8ToStr>:
 c004504:	defffc04 	addi	sp,sp,-16
 c004508:	df000315 	stw	fp,12(sp)
 c00450c:	df000304 	addi	fp,sp,12
 c004510:	e13ffe15 	stw	r4,-8(fp)
 c004514:	2805883a 	mov	r2,r5
 c004518:	e0bfff05 	stb	r2,-4(fp)
 c00451c:	e03ffd05 	stb	zero,-12(fp)
 c004520:	00000d06 	br	c004558 <ConvUTF8ToStr+0x54>
 c004524:	e0bffd03 	ldbu	r2,-12(fp)
 c004528:	e0fffe17 	ldw	r3,-8(fp)
 c00452c:	1887883a 	add	r3,r3,r2
 c004530:	e0bffd03 	ldbu	r2,-12(fp)
 c004534:	1085883a 	add	r2,r2,r2
 c004538:	1009883a 	mov	r4,r2
 c00453c:	e0bffe17 	ldw	r2,-8(fp)
 c004540:	1105883a 	add	r2,r2,r4
 c004544:	10800003 	ldbu	r2,0(r2)
 c004548:	18800005 	stb	r2,0(r3)
 c00454c:	e0bffd03 	ldbu	r2,-12(fp)
 c004550:	10800044 	addi	r2,r2,1
 c004554:	e0bffd05 	stb	r2,-12(fp)
 c004558:	e0fffd03 	ldbu	r3,-12(fp)
 c00455c:	e0bfff03 	ldbu	r2,-4(fp)
 c004560:	18bff036 	bltu	r3,r2,c004524 <__alt_data_end+0xfc004524>
 c004564:	e0bfff03 	ldbu	r2,-4(fp)
 c004568:	e0fffe17 	ldw	r3,-8(fp)
 c00456c:	1885883a 	add	r2,r3,r2
 c004570:	10000005 	stb	zero,0(r2)
 c004574:	e0bffe17 	ldw	r2,-8(fp)
 c004578:	e037883a 	mov	sp,fp
 c00457c:	df000017 	ldw	fp,0(sp)
 c004580:	dec00104 	addi	sp,sp,4
 c004584:	f800283a 	ret

0c004588 <__divsi3>:
 c004588:	20001b16 	blt	r4,zero,c0045f8 <__divsi3+0x70>
 c00458c:	000f883a 	mov	r7,zero
 c004590:	28001616 	blt	r5,zero,c0045ec <__divsi3+0x64>
 c004594:	200d883a 	mov	r6,r4
 c004598:	29001a2e 	bgeu	r5,r4,c004604 <__divsi3+0x7c>
 c00459c:	00800804 	movi	r2,32
 c0045a0:	00c00044 	movi	r3,1
 c0045a4:	00000106 	br	c0045ac <__divsi3+0x24>
 c0045a8:	10000d26 	beq	r2,zero,c0045e0 <__divsi3+0x58>
 c0045ac:	294b883a 	add	r5,r5,r5
 c0045b0:	10bfffc4 	addi	r2,r2,-1
 c0045b4:	18c7883a 	add	r3,r3,r3
 c0045b8:	293ffb36 	bltu	r5,r4,c0045a8 <__alt_data_end+0xfc0045a8>
 c0045bc:	0005883a 	mov	r2,zero
 c0045c0:	18000726 	beq	r3,zero,c0045e0 <__divsi3+0x58>
 c0045c4:	0005883a 	mov	r2,zero
 c0045c8:	31400236 	bltu	r6,r5,c0045d4 <__divsi3+0x4c>
 c0045cc:	314dc83a 	sub	r6,r6,r5
 c0045d0:	10c4b03a 	or	r2,r2,r3
 c0045d4:	1806d07a 	srli	r3,r3,1
 c0045d8:	280ad07a 	srli	r5,r5,1
 c0045dc:	183ffa1e 	bne	r3,zero,c0045c8 <__alt_data_end+0xfc0045c8>
 c0045e0:	38000126 	beq	r7,zero,c0045e8 <__divsi3+0x60>
 c0045e4:	0085c83a 	sub	r2,zero,r2
 c0045e8:	f800283a 	ret
 c0045ec:	014bc83a 	sub	r5,zero,r5
 c0045f0:	39c0005c 	xori	r7,r7,1
 c0045f4:	003fe706 	br	c004594 <__alt_data_end+0xfc004594>
 c0045f8:	0109c83a 	sub	r4,zero,r4
 c0045fc:	01c00044 	movi	r7,1
 c004600:	003fe306 	br	c004590 <__alt_data_end+0xfc004590>
 c004604:	00c00044 	movi	r3,1
 c004608:	003fee06 	br	c0045c4 <__alt_data_end+0xfc0045c4>

0c00460c <__modsi3>:
 c00460c:	20001716 	blt	r4,zero,c00466c <__modsi3+0x60>
 c004610:	000f883a 	mov	r7,zero
 c004614:	2005883a 	mov	r2,r4
 c004618:	28001216 	blt	r5,zero,c004664 <__modsi3+0x58>
 c00461c:	2900162e 	bgeu	r5,r4,c004678 <__modsi3+0x6c>
 c004620:	01800804 	movi	r6,32
 c004624:	00c00044 	movi	r3,1
 c004628:	00000106 	br	c004630 <__modsi3+0x24>
 c00462c:	30000a26 	beq	r6,zero,c004658 <__modsi3+0x4c>
 c004630:	294b883a 	add	r5,r5,r5
 c004634:	31bfffc4 	addi	r6,r6,-1
 c004638:	18c7883a 	add	r3,r3,r3
 c00463c:	293ffb36 	bltu	r5,r4,c00462c <__alt_data_end+0xfc00462c>
 c004640:	18000526 	beq	r3,zero,c004658 <__modsi3+0x4c>
 c004644:	1806d07a 	srli	r3,r3,1
 c004648:	11400136 	bltu	r2,r5,c004650 <__modsi3+0x44>
 c00464c:	1145c83a 	sub	r2,r2,r5
 c004650:	280ad07a 	srli	r5,r5,1
 c004654:	183ffb1e 	bne	r3,zero,c004644 <__alt_data_end+0xfc004644>
 c004658:	38000126 	beq	r7,zero,c004660 <__modsi3+0x54>
 c00465c:	0085c83a 	sub	r2,zero,r2
 c004660:	f800283a 	ret
 c004664:	014bc83a 	sub	r5,zero,r5
 c004668:	003fec06 	br	c00461c <__alt_data_end+0xfc00461c>
 c00466c:	0109c83a 	sub	r4,zero,r4
 c004670:	01c00044 	movi	r7,1
 c004674:	003fe706 	br	c004614 <__alt_data_end+0xfc004614>
 c004678:	00c00044 	movi	r3,1
 c00467c:	003ff106 	br	c004644 <__alt_data_end+0xfc004644>

0c004680 <__udivsi3>:
 c004680:	200d883a 	mov	r6,r4
 c004684:	2900152e 	bgeu	r5,r4,c0046dc <__udivsi3+0x5c>
 c004688:	28001416 	blt	r5,zero,c0046dc <__udivsi3+0x5c>
 c00468c:	00800804 	movi	r2,32
 c004690:	00c00044 	movi	r3,1
 c004694:	00000206 	br	c0046a0 <__udivsi3+0x20>
 c004698:	10000e26 	beq	r2,zero,c0046d4 <__udivsi3+0x54>
 c00469c:	28000516 	blt	r5,zero,c0046b4 <__udivsi3+0x34>
 c0046a0:	294b883a 	add	r5,r5,r5
 c0046a4:	10bfffc4 	addi	r2,r2,-1
 c0046a8:	18c7883a 	add	r3,r3,r3
 c0046ac:	293ffa36 	bltu	r5,r4,c004698 <__alt_data_end+0xfc004698>
 c0046b0:	18000826 	beq	r3,zero,c0046d4 <__udivsi3+0x54>
 c0046b4:	0005883a 	mov	r2,zero
 c0046b8:	31400236 	bltu	r6,r5,c0046c4 <__udivsi3+0x44>
 c0046bc:	314dc83a 	sub	r6,r6,r5
 c0046c0:	10c4b03a 	or	r2,r2,r3
 c0046c4:	1806d07a 	srli	r3,r3,1
 c0046c8:	280ad07a 	srli	r5,r5,1
 c0046cc:	183ffa1e 	bne	r3,zero,c0046b8 <__alt_data_end+0xfc0046b8>
 c0046d0:	f800283a 	ret
 c0046d4:	0005883a 	mov	r2,zero
 c0046d8:	f800283a 	ret
 c0046dc:	00c00044 	movi	r3,1
 c0046e0:	003ff406 	br	c0046b4 <__alt_data_end+0xfc0046b4>

0c0046e4 <__umodsi3>:
 c0046e4:	2005883a 	mov	r2,r4
 c0046e8:	2900122e 	bgeu	r5,r4,c004734 <__umodsi3+0x50>
 c0046ec:	28001116 	blt	r5,zero,c004734 <__umodsi3+0x50>
 c0046f0:	01800804 	movi	r6,32
 c0046f4:	00c00044 	movi	r3,1
 c0046f8:	00000206 	br	c004704 <__umodsi3+0x20>
 c0046fc:	30000c26 	beq	r6,zero,c004730 <__umodsi3+0x4c>
 c004700:	28000516 	blt	r5,zero,c004718 <__umodsi3+0x34>
 c004704:	294b883a 	add	r5,r5,r5
 c004708:	31bfffc4 	addi	r6,r6,-1
 c00470c:	18c7883a 	add	r3,r3,r3
 c004710:	293ffa36 	bltu	r5,r4,c0046fc <__alt_data_end+0xfc0046fc>
 c004714:	18000626 	beq	r3,zero,c004730 <__umodsi3+0x4c>
 c004718:	1806d07a 	srli	r3,r3,1
 c00471c:	11400136 	bltu	r2,r5,c004724 <__umodsi3+0x40>
 c004720:	1145c83a 	sub	r2,r2,r5
 c004724:	280ad07a 	srli	r5,r5,1
 c004728:	183ffb1e 	bne	r3,zero,c004718 <__alt_data_end+0xfc004718>
 c00472c:	f800283a 	ret
 c004730:	f800283a 	ret
 c004734:	00c00044 	movi	r3,1
 c004738:	003ff706 	br	c004718 <__alt_data_end+0xfc004718>

0c00473c <__mulsi3>:
 c00473c:	0005883a 	mov	r2,zero
 c004740:	20000726 	beq	r4,zero,c004760 <__mulsi3+0x24>
 c004744:	20c0004c 	andi	r3,r4,1
 c004748:	2008d07a 	srli	r4,r4,1
 c00474c:	18000126 	beq	r3,zero,c004754 <__mulsi3+0x18>
 c004750:	1145883a 	add	r2,r2,r5
 c004754:	294b883a 	add	r5,r5,r5
 c004758:	203ffa1e 	bne	r4,zero,c004744 <__alt_data_end+0xfc004744>
 c00475c:	f800283a 	ret
 c004760:	f800283a 	ret

0c004764 <malloc>:
 c004764:	008300b4 	movhi	r2,3074
 c004768:	10bfc304 	addi	r2,r2,-244
 c00476c:	200b883a 	mov	r5,r4
 c004770:	11000017 	ldw	r4,0(r2)
 c004774:	c00478c1 	jmpi	c00478c <_malloc_r>

0c004778 <free>:
 c004778:	008300b4 	movhi	r2,3074
 c00477c:	10bfc304 	addi	r2,r2,-244
 c004780:	200b883a 	mov	r5,r4
 c004784:	11000017 	ldw	r4,0(r2)
 c004788:	c00d84c1 	jmpi	c00d84c <_free_r>

0c00478c <_malloc_r>:
 c00478c:	defff504 	addi	sp,sp,-44
 c004790:	dc800315 	stw	r18,12(sp)
 c004794:	dfc00a15 	stw	ra,40(sp)
 c004798:	df000915 	stw	fp,36(sp)
 c00479c:	ddc00815 	stw	r23,32(sp)
 c0047a0:	dd800715 	stw	r22,28(sp)
 c0047a4:	dd400615 	stw	r21,24(sp)
 c0047a8:	dd000515 	stw	r20,20(sp)
 c0047ac:	dcc00415 	stw	r19,16(sp)
 c0047b0:	dc400215 	stw	r17,8(sp)
 c0047b4:	dc000115 	stw	r16,4(sp)
 c0047b8:	288002c4 	addi	r2,r5,11
 c0047bc:	00c00584 	movi	r3,22
 c0047c0:	2025883a 	mov	r18,r4
 c0047c4:	18807f2e 	bgeu	r3,r2,c0049c4 <_malloc_r+0x238>
 c0047c8:	047ffe04 	movi	r17,-8
 c0047cc:	1462703a 	and	r17,r2,r17
 c0047d0:	8800a316 	blt	r17,zero,c004a60 <_malloc_r+0x2d4>
 c0047d4:	8940a236 	bltu	r17,r5,c004a60 <_malloc_r+0x2d4>
 c0047d8:	c01ae800 	call	c01ae80 <__malloc_lock>
 c0047dc:	00807dc4 	movi	r2,503
 c0047e0:	1441e92e 	bgeu	r2,r17,c004f88 <_malloc_r+0x7fc>
 c0047e4:	8804d27a 	srli	r2,r17,9
 c0047e8:	1000a126 	beq	r2,zero,c004a70 <_malloc_r+0x2e4>
 c0047ec:	00c00104 	movi	r3,4
 c0047f0:	18811e36 	bltu	r3,r2,c004c6c <_malloc_r+0x4e0>
 c0047f4:	8804d1ba 	srli	r2,r17,6
 c0047f8:	12000e44 	addi	r8,r2,57
 c0047fc:	11c00e04 	addi	r7,r2,56
 c004800:	4209883a 	add	r4,r8,r8
 c004804:	04c300b4 	movhi	r19,3074
 c004808:	2109883a 	add	r4,r4,r4
 c00480c:	9cf90e04 	addi	r19,r19,-7112
 c004810:	2109883a 	add	r4,r4,r4
 c004814:	9909883a 	add	r4,r19,r4
 c004818:	24000117 	ldw	r16,4(r4)
 c00481c:	213ffe04 	addi	r4,r4,-8
 c004820:	24009726 	beq	r4,r16,c004a80 <_malloc_r+0x2f4>
 c004824:	80800117 	ldw	r2,4(r16)
 c004828:	01bfff04 	movi	r6,-4
 c00482c:	014003c4 	movi	r5,15
 c004830:	1184703a 	and	r2,r2,r6
 c004834:	1447c83a 	sub	r3,r2,r17
 c004838:	28c00716 	blt	r5,r3,c004858 <_malloc_r+0xcc>
 c00483c:	1800920e 	bge	r3,zero,c004a88 <_malloc_r+0x2fc>
 c004840:	84000317 	ldw	r16,12(r16)
 c004844:	24008e26 	beq	r4,r16,c004a80 <_malloc_r+0x2f4>
 c004848:	80800117 	ldw	r2,4(r16)
 c00484c:	1184703a 	and	r2,r2,r6
 c004850:	1447c83a 	sub	r3,r2,r17
 c004854:	28fff90e 	bge	r5,r3,c00483c <__alt_data_end+0xfc00483c>
 c004858:	3809883a 	mov	r4,r7
 c00485c:	018300b4 	movhi	r6,3074
 c004860:	9c000417 	ldw	r16,16(r19)
 c004864:	31b90e04 	addi	r6,r6,-7112
 c004868:	32000204 	addi	r8,r6,8
 c00486c:	82013426 	beq	r16,r8,c004d40 <_malloc_r+0x5b4>
 c004870:	80c00117 	ldw	r3,4(r16)
 c004874:	00bfff04 	movi	r2,-4
 c004878:	188e703a 	and	r7,r3,r2
 c00487c:	3c45c83a 	sub	r2,r7,r17
 c004880:	00c003c4 	movi	r3,15
 c004884:	18811f16 	blt	r3,r2,c004d04 <_malloc_r+0x578>
 c004888:	32000515 	stw	r8,20(r6)
 c00488c:	32000415 	stw	r8,16(r6)
 c004890:	10007f0e 	bge	r2,zero,c004a90 <_malloc_r+0x304>
 c004894:	00807fc4 	movi	r2,511
 c004898:	11c0fd36 	bltu	r2,r7,c004c90 <_malloc_r+0x504>
 c00489c:	3806d0fa 	srli	r3,r7,3
 c0048a0:	01c00044 	movi	r7,1
 c0048a4:	30800117 	ldw	r2,4(r6)
 c0048a8:	19400044 	addi	r5,r3,1
 c0048ac:	294b883a 	add	r5,r5,r5
 c0048b0:	1807d0ba 	srai	r3,r3,2
 c0048b4:	294b883a 	add	r5,r5,r5
 c0048b8:	294b883a 	add	r5,r5,r5
 c0048bc:	298b883a 	add	r5,r5,r6
 c0048c0:	38c6983a 	sll	r3,r7,r3
 c0048c4:	29c00017 	ldw	r7,0(r5)
 c0048c8:	2a7ffe04 	addi	r9,r5,-8
 c0048cc:	1886b03a 	or	r3,r3,r2
 c0048d0:	82400315 	stw	r9,12(r16)
 c0048d4:	81c00215 	stw	r7,8(r16)
 c0048d8:	30c00115 	stw	r3,4(r6)
 c0048dc:	2c000015 	stw	r16,0(r5)
 c0048e0:	3c000315 	stw	r16,12(r7)
 c0048e4:	2005d0ba 	srai	r2,r4,2
 c0048e8:	01400044 	movi	r5,1
 c0048ec:	288a983a 	sll	r5,r5,r2
 c0048f0:	19406f36 	bltu	r3,r5,c004ab0 <_malloc_r+0x324>
 c0048f4:	28c4703a 	and	r2,r5,r3
 c0048f8:	10000a1e 	bne	r2,zero,c004924 <_malloc_r+0x198>
 c0048fc:	00bfff04 	movi	r2,-4
 c004900:	294b883a 	add	r5,r5,r5
 c004904:	2088703a 	and	r4,r4,r2
 c004908:	28c4703a 	and	r2,r5,r3
 c00490c:	21000104 	addi	r4,r4,4
 c004910:	1000041e 	bne	r2,zero,c004924 <_malloc_r+0x198>
 c004914:	294b883a 	add	r5,r5,r5
 c004918:	28c4703a 	and	r2,r5,r3
 c00491c:	21000104 	addi	r4,r4,4
 c004920:	103ffc26 	beq	r2,zero,c004914 <__alt_data_end+0xfc004914>
 c004924:	02bfff04 	movi	r10,-4
 c004928:	024003c4 	movi	r9,15
 c00492c:	21800044 	addi	r6,r4,1
 c004930:	318d883a 	add	r6,r6,r6
 c004934:	318d883a 	add	r6,r6,r6
 c004938:	318d883a 	add	r6,r6,r6
 c00493c:	998d883a 	add	r6,r19,r6
 c004940:	333ffe04 	addi	r12,r6,-8
 c004944:	2017883a 	mov	r11,r4
 c004948:	31800104 	addi	r6,r6,4
 c00494c:	34000017 	ldw	r16,0(r6)
 c004950:	31fffd04 	addi	r7,r6,-12
 c004954:	81c0041e 	bne	r16,r7,c004968 <_malloc_r+0x1dc>
 c004958:	0000fb06 	br	c004d48 <_malloc_r+0x5bc>
 c00495c:	1801030e 	bge	r3,zero,c004d6c <_malloc_r+0x5e0>
 c004960:	84000317 	ldw	r16,12(r16)
 c004964:	81c0f826 	beq	r16,r7,c004d48 <_malloc_r+0x5bc>
 c004968:	80800117 	ldw	r2,4(r16)
 c00496c:	1284703a 	and	r2,r2,r10
 c004970:	1447c83a 	sub	r3,r2,r17
 c004974:	48fff90e 	bge	r9,r3,c00495c <__alt_data_end+0xfc00495c>
 c004978:	80800317 	ldw	r2,12(r16)
 c00497c:	81000217 	ldw	r4,8(r16)
 c004980:	89400054 	ori	r5,r17,1
 c004984:	81400115 	stw	r5,4(r16)
 c004988:	20800315 	stw	r2,12(r4)
 c00498c:	11000215 	stw	r4,8(r2)
 c004990:	8463883a 	add	r17,r16,r17
 c004994:	9c400515 	stw	r17,20(r19)
 c004998:	9c400415 	stw	r17,16(r19)
 c00499c:	18800054 	ori	r2,r3,1
 c0049a0:	88800115 	stw	r2,4(r17)
 c0049a4:	8a000315 	stw	r8,12(r17)
 c0049a8:	8a000215 	stw	r8,8(r17)
 c0049ac:	88e3883a 	add	r17,r17,r3
 c0049b0:	88c00015 	stw	r3,0(r17)
 c0049b4:	9009883a 	mov	r4,r18
 c0049b8:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c0049bc:	80800204 	addi	r2,r16,8
 c0049c0:	00001b06 	br	c004a30 <_malloc_r+0x2a4>
 c0049c4:	04400404 	movi	r17,16
 c0049c8:	89402536 	bltu	r17,r5,c004a60 <_malloc_r+0x2d4>
 c0049cc:	c01ae800 	call	c01ae80 <__malloc_lock>
 c0049d0:	00800184 	movi	r2,6
 c0049d4:	01000084 	movi	r4,2
 c0049d8:	04c300b4 	movhi	r19,3074
 c0049dc:	1085883a 	add	r2,r2,r2
 c0049e0:	9cf90e04 	addi	r19,r19,-7112
 c0049e4:	1085883a 	add	r2,r2,r2
 c0049e8:	9885883a 	add	r2,r19,r2
 c0049ec:	14000117 	ldw	r16,4(r2)
 c0049f0:	10fffe04 	addi	r3,r2,-8
 c0049f4:	80c0d926 	beq	r16,r3,c004d5c <_malloc_r+0x5d0>
 c0049f8:	80c00117 	ldw	r3,4(r16)
 c0049fc:	81000317 	ldw	r4,12(r16)
 c004a00:	00bfff04 	movi	r2,-4
 c004a04:	1884703a 	and	r2,r3,r2
 c004a08:	81400217 	ldw	r5,8(r16)
 c004a0c:	8085883a 	add	r2,r16,r2
 c004a10:	10c00117 	ldw	r3,4(r2)
 c004a14:	29000315 	stw	r4,12(r5)
 c004a18:	21400215 	stw	r5,8(r4)
 c004a1c:	18c00054 	ori	r3,r3,1
 c004a20:	10c00115 	stw	r3,4(r2)
 c004a24:	9009883a 	mov	r4,r18
 c004a28:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c004a2c:	80800204 	addi	r2,r16,8
 c004a30:	dfc00a17 	ldw	ra,40(sp)
 c004a34:	df000917 	ldw	fp,36(sp)
 c004a38:	ddc00817 	ldw	r23,32(sp)
 c004a3c:	dd800717 	ldw	r22,28(sp)
 c004a40:	dd400617 	ldw	r21,24(sp)
 c004a44:	dd000517 	ldw	r20,20(sp)
 c004a48:	dcc00417 	ldw	r19,16(sp)
 c004a4c:	dc800317 	ldw	r18,12(sp)
 c004a50:	dc400217 	ldw	r17,8(sp)
 c004a54:	dc000117 	ldw	r16,4(sp)
 c004a58:	dec00b04 	addi	sp,sp,44
 c004a5c:	f800283a 	ret
 c004a60:	00800304 	movi	r2,12
 c004a64:	90800015 	stw	r2,0(r18)
 c004a68:	0005883a 	mov	r2,zero
 c004a6c:	003ff006 	br	c004a30 <__alt_data_end+0xfc004a30>
 c004a70:	01002004 	movi	r4,128
 c004a74:	02001004 	movi	r8,64
 c004a78:	01c00fc4 	movi	r7,63
 c004a7c:	003f6106 	br	c004804 <__alt_data_end+0xfc004804>
 c004a80:	4009883a 	mov	r4,r8
 c004a84:	003f7506 	br	c00485c <__alt_data_end+0xfc00485c>
 c004a88:	81000317 	ldw	r4,12(r16)
 c004a8c:	003fde06 	br	c004a08 <__alt_data_end+0xfc004a08>
 c004a90:	81c5883a 	add	r2,r16,r7
 c004a94:	11400117 	ldw	r5,4(r2)
 c004a98:	9009883a 	mov	r4,r18
 c004a9c:	29400054 	ori	r5,r5,1
 c004aa0:	11400115 	stw	r5,4(r2)
 c004aa4:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c004aa8:	80800204 	addi	r2,r16,8
 c004aac:	003fe006 	br	c004a30 <__alt_data_end+0xfc004a30>
 c004ab0:	9c000217 	ldw	r16,8(r19)
 c004ab4:	00bfff04 	movi	r2,-4
 c004ab8:	85800117 	ldw	r22,4(r16)
 c004abc:	b0ac703a 	and	r22,r22,r2
 c004ac0:	b4400336 	bltu	r22,r17,c004ad0 <_malloc_r+0x344>
 c004ac4:	b445c83a 	sub	r2,r22,r17
 c004ac8:	00c003c4 	movi	r3,15
 c004acc:	18805d16 	blt	r3,r2,c004c44 <_malloc_r+0x4b8>
 c004ad0:	05c300b4 	movhi	r23,3074
 c004ad4:	008300b4 	movhi	r2,3074
 c004ad8:	10876004 	addi	r2,r2,7552
 c004adc:	bdffbf04 	addi	r23,r23,-260
 c004ae0:	15400017 	ldw	r21,0(r2)
 c004ae4:	b8c00017 	ldw	r3,0(r23)
 c004ae8:	00bfffc4 	movi	r2,-1
 c004aec:	858d883a 	add	r6,r16,r22
 c004af0:	8d6b883a 	add	r21,r17,r21
 c004af4:	1880ea26 	beq	r3,r2,c004ea0 <_malloc_r+0x714>
 c004af8:	ad4403c4 	addi	r21,r21,4111
 c004afc:	00bc0004 	movi	r2,-4096
 c004b00:	a8aa703a 	and	r21,r21,r2
 c004b04:	a80b883a 	mov	r5,r21
 c004b08:	9009883a 	mov	r4,r18
 c004b0c:	d9800015 	stw	r6,0(sp)
 c004b10:	c0051740 	call	c005174 <_sbrk_r>
 c004b14:	1029883a 	mov	r20,r2
 c004b18:	00bfffc4 	movi	r2,-1
 c004b1c:	d9800017 	ldw	r6,0(sp)
 c004b20:	a080e826 	beq	r20,r2,c004ec4 <_malloc_r+0x738>
 c004b24:	a180a636 	bltu	r20,r6,c004dc0 <_malloc_r+0x634>
 c004b28:	070300b4 	movhi	fp,3074
 c004b2c:	e7077604 	addi	fp,fp,7640
 c004b30:	e0800017 	ldw	r2,0(fp)
 c004b34:	a887883a 	add	r3,r21,r2
 c004b38:	e0c00015 	stw	r3,0(fp)
 c004b3c:	3500e626 	beq	r6,r20,c004ed8 <_malloc_r+0x74c>
 c004b40:	b9000017 	ldw	r4,0(r23)
 c004b44:	00bfffc4 	movi	r2,-1
 c004b48:	2080ee26 	beq	r4,r2,c004f04 <_malloc_r+0x778>
 c004b4c:	a185c83a 	sub	r2,r20,r6
 c004b50:	10c5883a 	add	r2,r2,r3
 c004b54:	e0800015 	stw	r2,0(fp)
 c004b58:	a0c001cc 	andi	r3,r20,7
 c004b5c:	1800bc26 	beq	r3,zero,c004e50 <_malloc_r+0x6c4>
 c004b60:	a0e9c83a 	sub	r20,r20,r3
 c004b64:	00840204 	movi	r2,4104
 c004b68:	a5000204 	addi	r20,r20,8
 c004b6c:	10c7c83a 	sub	r3,r2,r3
 c004b70:	a545883a 	add	r2,r20,r21
 c004b74:	1083ffcc 	andi	r2,r2,4095
 c004b78:	18abc83a 	sub	r21,r3,r2
 c004b7c:	a80b883a 	mov	r5,r21
 c004b80:	9009883a 	mov	r4,r18
 c004b84:	c0051740 	call	c005174 <_sbrk_r>
 c004b88:	00ffffc4 	movi	r3,-1
 c004b8c:	10c0e126 	beq	r2,r3,c004f14 <_malloc_r+0x788>
 c004b90:	1505c83a 	sub	r2,r2,r20
 c004b94:	1545883a 	add	r2,r2,r21
 c004b98:	10800054 	ori	r2,r2,1
 c004b9c:	e0c00017 	ldw	r3,0(fp)
 c004ba0:	9d000215 	stw	r20,8(r19)
 c004ba4:	a0800115 	stw	r2,4(r20)
 c004ba8:	a8c7883a 	add	r3,r21,r3
 c004bac:	e0c00015 	stw	r3,0(fp)
 c004bb0:	84c00e26 	beq	r16,r19,c004bec <_malloc_r+0x460>
 c004bb4:	018003c4 	movi	r6,15
 c004bb8:	3580a72e 	bgeu	r6,r22,c004e58 <_malloc_r+0x6cc>
 c004bbc:	81400117 	ldw	r5,4(r16)
 c004bc0:	013ffe04 	movi	r4,-8
 c004bc4:	b0bffd04 	addi	r2,r22,-12
 c004bc8:	1104703a 	and	r2,r2,r4
 c004bcc:	2900004c 	andi	r4,r5,1
 c004bd0:	2088b03a 	or	r4,r4,r2
 c004bd4:	81000115 	stw	r4,4(r16)
 c004bd8:	01400144 	movi	r5,5
 c004bdc:	8089883a 	add	r4,r16,r2
 c004be0:	21400115 	stw	r5,4(r4)
 c004be4:	21400215 	stw	r5,8(r4)
 c004be8:	3080cd36 	bltu	r6,r2,c004f20 <_malloc_r+0x794>
 c004bec:	008300b4 	movhi	r2,3074
 c004bf0:	10875f04 	addi	r2,r2,7548
 c004bf4:	11000017 	ldw	r4,0(r2)
 c004bf8:	20c0012e 	bgeu	r4,r3,c004c00 <_malloc_r+0x474>
 c004bfc:	10c00015 	stw	r3,0(r2)
 c004c00:	008300b4 	movhi	r2,3074
 c004c04:	10875e04 	addi	r2,r2,7544
 c004c08:	11000017 	ldw	r4,0(r2)
 c004c0c:	9c000217 	ldw	r16,8(r19)
 c004c10:	20c0012e 	bgeu	r4,r3,c004c18 <_malloc_r+0x48c>
 c004c14:	10c00015 	stw	r3,0(r2)
 c004c18:	80c00117 	ldw	r3,4(r16)
 c004c1c:	00bfff04 	movi	r2,-4
 c004c20:	1886703a 	and	r3,r3,r2
 c004c24:	1c45c83a 	sub	r2,r3,r17
 c004c28:	1c400236 	bltu	r3,r17,c004c34 <_malloc_r+0x4a8>
 c004c2c:	00c003c4 	movi	r3,15
 c004c30:	18800416 	blt	r3,r2,c004c44 <_malloc_r+0x4b8>
 c004c34:	9009883a 	mov	r4,r18
 c004c38:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c004c3c:	0005883a 	mov	r2,zero
 c004c40:	003f7b06 	br	c004a30 <__alt_data_end+0xfc004a30>
 c004c44:	88c00054 	ori	r3,r17,1
 c004c48:	80c00115 	stw	r3,4(r16)
 c004c4c:	8463883a 	add	r17,r16,r17
 c004c50:	10800054 	ori	r2,r2,1
 c004c54:	9c400215 	stw	r17,8(r19)
 c004c58:	88800115 	stw	r2,4(r17)
 c004c5c:	9009883a 	mov	r4,r18
 c004c60:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c004c64:	80800204 	addi	r2,r16,8
 c004c68:	003f7106 	br	c004a30 <__alt_data_end+0xfc004a30>
 c004c6c:	00c00504 	movi	r3,20
 c004c70:	18804a2e 	bgeu	r3,r2,c004d9c <_malloc_r+0x610>
 c004c74:	00c01504 	movi	r3,84
 c004c78:	18806e36 	bltu	r3,r2,c004e34 <_malloc_r+0x6a8>
 c004c7c:	8804d33a 	srli	r2,r17,12
 c004c80:	12001bc4 	addi	r8,r2,111
 c004c84:	11c01b84 	addi	r7,r2,110
 c004c88:	4209883a 	add	r4,r8,r8
 c004c8c:	003edd06 	br	c004804 <__alt_data_end+0xfc004804>
 c004c90:	3804d27a 	srli	r2,r7,9
 c004c94:	00c00104 	movi	r3,4
 c004c98:	1880442e 	bgeu	r3,r2,c004dac <_malloc_r+0x620>
 c004c9c:	00c00504 	movi	r3,20
 c004ca0:	18808136 	bltu	r3,r2,c004ea8 <_malloc_r+0x71c>
 c004ca4:	11401704 	addi	r5,r2,92
 c004ca8:	10c016c4 	addi	r3,r2,91
 c004cac:	294b883a 	add	r5,r5,r5
 c004cb0:	294b883a 	add	r5,r5,r5
 c004cb4:	294b883a 	add	r5,r5,r5
 c004cb8:	994b883a 	add	r5,r19,r5
 c004cbc:	28800017 	ldw	r2,0(r5)
 c004cc0:	018300b4 	movhi	r6,3074
 c004cc4:	297ffe04 	addi	r5,r5,-8
 c004cc8:	31b90e04 	addi	r6,r6,-7112
 c004ccc:	28806526 	beq	r5,r2,c004e64 <_malloc_r+0x6d8>
 c004cd0:	01bfff04 	movi	r6,-4
 c004cd4:	10c00117 	ldw	r3,4(r2)
 c004cd8:	1986703a 	and	r3,r3,r6
 c004cdc:	38c0022e 	bgeu	r7,r3,c004ce8 <_malloc_r+0x55c>
 c004ce0:	10800217 	ldw	r2,8(r2)
 c004ce4:	28bffb1e 	bne	r5,r2,c004cd4 <__alt_data_end+0xfc004cd4>
 c004ce8:	11400317 	ldw	r5,12(r2)
 c004cec:	98c00117 	ldw	r3,4(r19)
 c004cf0:	81400315 	stw	r5,12(r16)
 c004cf4:	80800215 	stw	r2,8(r16)
 c004cf8:	2c000215 	stw	r16,8(r5)
 c004cfc:	14000315 	stw	r16,12(r2)
 c004d00:	003ef806 	br	c0048e4 <__alt_data_end+0xfc0048e4>
 c004d04:	88c00054 	ori	r3,r17,1
 c004d08:	80c00115 	stw	r3,4(r16)
 c004d0c:	8463883a 	add	r17,r16,r17
 c004d10:	34400515 	stw	r17,20(r6)
 c004d14:	34400415 	stw	r17,16(r6)
 c004d18:	10c00054 	ori	r3,r2,1
 c004d1c:	8a000315 	stw	r8,12(r17)
 c004d20:	8a000215 	stw	r8,8(r17)
 c004d24:	88c00115 	stw	r3,4(r17)
 c004d28:	88a3883a 	add	r17,r17,r2
 c004d2c:	88800015 	stw	r2,0(r17)
 c004d30:	9009883a 	mov	r4,r18
 c004d34:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c004d38:	80800204 	addi	r2,r16,8
 c004d3c:	003f3c06 	br	c004a30 <__alt_data_end+0xfc004a30>
 c004d40:	30c00117 	ldw	r3,4(r6)
 c004d44:	003ee706 	br	c0048e4 <__alt_data_end+0xfc0048e4>
 c004d48:	5ac00044 	addi	r11,r11,1
 c004d4c:	588000cc 	andi	r2,r11,3
 c004d50:	31800204 	addi	r6,r6,8
 c004d54:	103efd1e 	bne	r2,zero,c00494c <__alt_data_end+0xfc00494c>
 c004d58:	00002406 	br	c004dec <_malloc_r+0x660>
 c004d5c:	14000317 	ldw	r16,12(r2)
 c004d60:	143f251e 	bne	r2,r16,c0049f8 <__alt_data_end+0xfc0049f8>
 c004d64:	21000084 	addi	r4,r4,2
 c004d68:	003ebc06 	br	c00485c <__alt_data_end+0xfc00485c>
 c004d6c:	8085883a 	add	r2,r16,r2
 c004d70:	10c00117 	ldw	r3,4(r2)
 c004d74:	81000317 	ldw	r4,12(r16)
 c004d78:	81400217 	ldw	r5,8(r16)
 c004d7c:	18c00054 	ori	r3,r3,1
 c004d80:	10c00115 	stw	r3,4(r2)
 c004d84:	29000315 	stw	r4,12(r5)
 c004d88:	21400215 	stw	r5,8(r4)
 c004d8c:	9009883a 	mov	r4,r18
 c004d90:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c004d94:	80800204 	addi	r2,r16,8
 c004d98:	003f2506 	br	c004a30 <__alt_data_end+0xfc004a30>
 c004d9c:	12001704 	addi	r8,r2,92
 c004da0:	11c016c4 	addi	r7,r2,91
 c004da4:	4209883a 	add	r4,r8,r8
 c004da8:	003e9606 	br	c004804 <__alt_data_end+0xfc004804>
 c004dac:	3804d1ba 	srli	r2,r7,6
 c004db0:	11400e44 	addi	r5,r2,57
 c004db4:	10c00e04 	addi	r3,r2,56
 c004db8:	294b883a 	add	r5,r5,r5
 c004dbc:	003fbc06 	br	c004cb0 <__alt_data_end+0xfc004cb0>
 c004dc0:	84ff5926 	beq	r16,r19,c004b28 <__alt_data_end+0xfc004b28>
 c004dc4:	008300b4 	movhi	r2,3074
 c004dc8:	10b90e04 	addi	r2,r2,-7112
 c004dcc:	14000217 	ldw	r16,8(r2)
 c004dd0:	00bfff04 	movi	r2,-4
 c004dd4:	80c00117 	ldw	r3,4(r16)
 c004dd8:	1886703a 	and	r3,r3,r2
 c004ddc:	003f9106 	br	c004c24 <__alt_data_end+0xfc004c24>
 c004de0:	60800217 	ldw	r2,8(r12)
 c004de4:	213fffc4 	addi	r4,r4,-1
 c004de8:	1300651e 	bne	r2,r12,c004f80 <_malloc_r+0x7f4>
 c004dec:	208000cc 	andi	r2,r4,3
 c004df0:	633ffe04 	addi	r12,r12,-8
 c004df4:	103ffa1e 	bne	r2,zero,c004de0 <__alt_data_end+0xfc004de0>
 c004df8:	98800117 	ldw	r2,4(r19)
 c004dfc:	0146303a 	nor	r3,zero,r5
 c004e00:	1884703a 	and	r2,r3,r2
 c004e04:	98800115 	stw	r2,4(r19)
 c004e08:	294b883a 	add	r5,r5,r5
 c004e0c:	117f2836 	bltu	r2,r5,c004ab0 <__alt_data_end+0xfc004ab0>
 c004e10:	283f2726 	beq	r5,zero,c004ab0 <__alt_data_end+0xfc004ab0>
 c004e14:	2886703a 	and	r3,r5,r2
 c004e18:	5809883a 	mov	r4,r11
 c004e1c:	183ec31e 	bne	r3,zero,c00492c <__alt_data_end+0xfc00492c>
 c004e20:	294b883a 	add	r5,r5,r5
 c004e24:	2886703a 	and	r3,r5,r2
 c004e28:	21000104 	addi	r4,r4,4
 c004e2c:	183ffc26 	beq	r3,zero,c004e20 <__alt_data_end+0xfc004e20>
 c004e30:	003ebe06 	br	c00492c <__alt_data_end+0xfc00492c>
 c004e34:	00c05504 	movi	r3,340
 c004e38:	18801236 	bltu	r3,r2,c004e84 <_malloc_r+0x6f8>
 c004e3c:	8804d3fa 	srli	r2,r17,15
 c004e40:	12001e04 	addi	r8,r2,120
 c004e44:	11c01dc4 	addi	r7,r2,119
 c004e48:	4209883a 	add	r4,r8,r8
 c004e4c:	003e6d06 	br	c004804 <__alt_data_end+0xfc004804>
 c004e50:	00c40004 	movi	r3,4096
 c004e54:	003f4606 	br	c004b70 <__alt_data_end+0xfc004b70>
 c004e58:	00800044 	movi	r2,1
 c004e5c:	a0800115 	stw	r2,4(r20)
 c004e60:	003f7406 	br	c004c34 <__alt_data_end+0xfc004c34>
 c004e64:	1805d0ba 	srai	r2,r3,2
 c004e68:	01c00044 	movi	r7,1
 c004e6c:	30c00117 	ldw	r3,4(r6)
 c004e70:	388e983a 	sll	r7,r7,r2
 c004e74:	2805883a 	mov	r2,r5
 c004e78:	38c6b03a 	or	r3,r7,r3
 c004e7c:	30c00115 	stw	r3,4(r6)
 c004e80:	003f9b06 	br	c004cf0 <__alt_data_end+0xfc004cf0>
 c004e84:	00c15504 	movi	r3,1364
 c004e88:	18801a36 	bltu	r3,r2,c004ef4 <_malloc_r+0x768>
 c004e8c:	8804d4ba 	srli	r2,r17,18
 c004e90:	12001f44 	addi	r8,r2,125
 c004e94:	11c01f04 	addi	r7,r2,124
 c004e98:	4209883a 	add	r4,r8,r8
 c004e9c:	003e5906 	br	c004804 <__alt_data_end+0xfc004804>
 c004ea0:	ad400404 	addi	r21,r21,16
 c004ea4:	003f1706 	br	c004b04 <__alt_data_end+0xfc004b04>
 c004ea8:	00c01504 	movi	r3,84
 c004eac:	18802336 	bltu	r3,r2,c004f3c <_malloc_r+0x7b0>
 c004eb0:	3804d33a 	srli	r2,r7,12
 c004eb4:	11401bc4 	addi	r5,r2,111
 c004eb8:	10c01b84 	addi	r3,r2,110
 c004ebc:	294b883a 	add	r5,r5,r5
 c004ec0:	003f7b06 	br	c004cb0 <__alt_data_end+0xfc004cb0>
 c004ec4:	9c000217 	ldw	r16,8(r19)
 c004ec8:	00bfff04 	movi	r2,-4
 c004ecc:	80c00117 	ldw	r3,4(r16)
 c004ed0:	1886703a 	and	r3,r3,r2
 c004ed4:	003f5306 	br	c004c24 <__alt_data_end+0xfc004c24>
 c004ed8:	3083ffcc 	andi	r2,r6,4095
 c004edc:	103f181e 	bne	r2,zero,c004b40 <__alt_data_end+0xfc004b40>
 c004ee0:	99000217 	ldw	r4,8(r19)
 c004ee4:	b545883a 	add	r2,r22,r21
 c004ee8:	10800054 	ori	r2,r2,1
 c004eec:	20800115 	stw	r2,4(r4)
 c004ef0:	003f3e06 	br	c004bec <__alt_data_end+0xfc004bec>
 c004ef4:	01003f84 	movi	r4,254
 c004ef8:	02001fc4 	movi	r8,127
 c004efc:	01c01f84 	movi	r7,126
 c004f00:	003e4006 	br	c004804 <__alt_data_end+0xfc004804>
 c004f04:	008300b4 	movhi	r2,3074
 c004f08:	10bfbf04 	addi	r2,r2,-260
 c004f0c:	15000015 	stw	r20,0(r2)
 c004f10:	003f1106 	br	c004b58 <__alt_data_end+0xfc004b58>
 c004f14:	00800044 	movi	r2,1
 c004f18:	002b883a 	mov	r21,zero
 c004f1c:	003f1f06 	br	c004b9c <__alt_data_end+0xfc004b9c>
 c004f20:	81400204 	addi	r5,r16,8
 c004f24:	9009883a 	mov	r4,r18
 c004f28:	c00d84c0 	call	c00d84c <_free_r>
 c004f2c:	008300b4 	movhi	r2,3074
 c004f30:	10877604 	addi	r2,r2,7640
 c004f34:	10c00017 	ldw	r3,0(r2)
 c004f38:	003f2c06 	br	c004bec <__alt_data_end+0xfc004bec>
 c004f3c:	00c05504 	movi	r3,340
 c004f40:	18800536 	bltu	r3,r2,c004f58 <_malloc_r+0x7cc>
 c004f44:	3804d3fa 	srli	r2,r7,15
 c004f48:	11401e04 	addi	r5,r2,120
 c004f4c:	10c01dc4 	addi	r3,r2,119
 c004f50:	294b883a 	add	r5,r5,r5
 c004f54:	003f5606 	br	c004cb0 <__alt_data_end+0xfc004cb0>
 c004f58:	00c15504 	movi	r3,1364
 c004f5c:	18800536 	bltu	r3,r2,c004f74 <_malloc_r+0x7e8>
 c004f60:	3804d4ba 	srli	r2,r7,18
 c004f64:	11401f44 	addi	r5,r2,125
 c004f68:	10c01f04 	addi	r3,r2,124
 c004f6c:	294b883a 	add	r5,r5,r5
 c004f70:	003f4f06 	br	c004cb0 <__alt_data_end+0xfc004cb0>
 c004f74:	01403f84 	movi	r5,254
 c004f78:	00c01f84 	movi	r3,126
 c004f7c:	003f4c06 	br	c004cb0 <__alt_data_end+0xfc004cb0>
 c004f80:	98800117 	ldw	r2,4(r19)
 c004f84:	003fa006 	br	c004e08 <__alt_data_end+0xfc004e08>
 c004f88:	8808d0fa 	srli	r4,r17,3
 c004f8c:	20800044 	addi	r2,r4,1
 c004f90:	1085883a 	add	r2,r2,r2
 c004f94:	003e9006 	br	c0049d8 <__alt_data_end+0xfc0049d8>

0c004f98 <_printf_r>:
 c004f98:	defffd04 	addi	sp,sp,-12
 c004f9c:	2805883a 	mov	r2,r5
 c004fa0:	dfc00015 	stw	ra,0(sp)
 c004fa4:	d9800115 	stw	r6,4(sp)
 c004fa8:	d9c00215 	stw	r7,8(sp)
 c004fac:	21400217 	ldw	r5,8(r4)
 c004fb0:	d9c00104 	addi	r7,sp,4
 c004fb4:	100d883a 	mov	r6,r2
 c004fb8:	c00764c0 	call	c00764c <___vfprintf_internal_r>
 c004fbc:	dfc00017 	ldw	ra,0(sp)
 c004fc0:	dec00304 	addi	sp,sp,12
 c004fc4:	f800283a 	ret

0c004fc8 <printf>:
 c004fc8:	defffc04 	addi	sp,sp,-16
 c004fcc:	dfc00015 	stw	ra,0(sp)
 c004fd0:	d9400115 	stw	r5,4(sp)
 c004fd4:	d9800215 	stw	r6,8(sp)
 c004fd8:	d9c00315 	stw	r7,12(sp)
 c004fdc:	008300b4 	movhi	r2,3074
 c004fe0:	10bfc304 	addi	r2,r2,-244
 c004fe4:	10800017 	ldw	r2,0(r2)
 c004fe8:	200b883a 	mov	r5,r4
 c004fec:	d9800104 	addi	r6,sp,4
 c004ff0:	11000217 	ldw	r4,8(r2)
 c004ff4:	c0099280 	call	c009928 <__vfprintf_internal>
 c004ff8:	dfc00017 	ldw	ra,0(sp)
 c004ffc:	dec00404 	addi	sp,sp,16
 c005000:	f800283a 	ret

0c005004 <_putchar_r>:
 c005004:	21800217 	ldw	r6,8(r4)
 c005008:	c00fc001 	jmpi	c00fc00 <_putc_r>

0c00500c <putchar>:
 c00500c:	008300b4 	movhi	r2,3074
 c005010:	10bfc304 	addi	r2,r2,-244
 c005014:	200b883a 	mov	r5,r4
 c005018:	11000017 	ldw	r4,0(r2)
 c00501c:	21800217 	ldw	r6,8(r4)
 c005020:	c00fc001 	jmpi	c00fc00 <_putc_r>

0c005024 <_puts_r>:
 c005024:	defff604 	addi	sp,sp,-40
 c005028:	dc000715 	stw	r16,28(sp)
 c00502c:	2021883a 	mov	r16,r4
 c005030:	2809883a 	mov	r4,r5
 c005034:	dc400815 	stw	r17,32(sp)
 c005038:	dfc00915 	stw	ra,36(sp)
 c00503c:	2823883a 	mov	r17,r5
 c005040:	c0052f80 	call	c0052f8 <strlen>
 c005044:	10c00044 	addi	r3,r2,1
 c005048:	d8800115 	stw	r2,4(sp)
 c00504c:	008300b4 	movhi	r2,3074
 c005050:	10b67704 	addi	r2,r2,-9764
 c005054:	d8800215 	stw	r2,8(sp)
 c005058:	00800044 	movi	r2,1
 c00505c:	d8800315 	stw	r2,12(sp)
 c005060:	00800084 	movi	r2,2
 c005064:	dc400015 	stw	r17,0(sp)
 c005068:	d8c00615 	stw	r3,24(sp)
 c00506c:	dec00415 	stw	sp,16(sp)
 c005070:	d8800515 	stw	r2,20(sp)
 c005074:	80000226 	beq	r16,zero,c005080 <_puts_r+0x5c>
 c005078:	80800e17 	ldw	r2,56(r16)
 c00507c:	10001426 	beq	r2,zero,c0050d0 <_puts_r+0xac>
 c005080:	81400217 	ldw	r5,8(r16)
 c005084:	2880030b 	ldhu	r2,12(r5)
 c005088:	10c8000c 	andi	r3,r2,8192
 c00508c:	1800061e 	bne	r3,zero,c0050a8 <_puts_r+0x84>
 c005090:	29001917 	ldw	r4,100(r5)
 c005094:	00f7ffc4 	movi	r3,-8193
 c005098:	10880014 	ori	r2,r2,8192
 c00509c:	20c6703a 	and	r3,r4,r3
 c0050a0:	2880030d 	sth	r2,12(r5)
 c0050a4:	28c01915 	stw	r3,100(r5)
 c0050a8:	d9800404 	addi	r6,sp,16
 c0050ac:	8009883a 	mov	r4,r16
 c0050b0:	c00db5c0 	call	c00db5c <__sfvwrite_r>
 c0050b4:	1000091e 	bne	r2,zero,c0050dc <_puts_r+0xb8>
 c0050b8:	00800284 	movi	r2,10
 c0050bc:	dfc00917 	ldw	ra,36(sp)
 c0050c0:	dc400817 	ldw	r17,32(sp)
 c0050c4:	dc000717 	ldw	r16,28(sp)
 c0050c8:	dec00a04 	addi	sp,sp,40
 c0050cc:	f800283a 	ret
 c0050d0:	8009883a 	mov	r4,r16
 c0050d4:	c00d4680 	call	c00d468 <__sinit>
 c0050d8:	003fe906 	br	c005080 <__alt_data_end+0xfc005080>
 c0050dc:	00bfffc4 	movi	r2,-1
 c0050e0:	003ff606 	br	c0050bc <__alt_data_end+0xfc0050bc>

0c0050e4 <puts>:
 c0050e4:	008300b4 	movhi	r2,3074
 c0050e8:	10bfc304 	addi	r2,r2,-244
 c0050ec:	200b883a 	mov	r5,r4
 c0050f0:	11000017 	ldw	r4,0(r2)
 c0050f4:	c0050241 	jmpi	c005024 <_puts_r>

0c0050f8 <srand>:
 c0050f8:	008300b4 	movhi	r2,3074
 c0050fc:	10bfc304 	addi	r2,r2,-244
 c005100:	10800017 	ldw	r2,0(r2)
 c005104:	11002915 	stw	r4,164(r2)
 c005108:	10002a15 	stw	zero,168(r2)
 c00510c:	f800283a 	ret

0c005110 <rand>:
 c005110:	008300b4 	movhi	r2,3074
 c005114:	defffe04 	addi	sp,sp,-8
 c005118:	10bfc304 	addi	r2,r2,-244
 c00511c:	dc000015 	stw	r16,0(sp)
 c005120:	14000017 	ldw	r16,0(r2)
 c005124:	dfc00115 	stw	ra,4(sp)
 c005128:	01932574 	movhi	r6,19605
 c00512c:	81002917 	ldw	r4,164(r16)
 c005130:	81402a17 	ldw	r5,168(r16)
 c005134:	01d614b4 	movhi	r7,22610
 c005138:	319fcb44 	addi	r6,r6,32557
 c00513c:	39fd0b44 	addi	r7,r7,-3027
 c005140:	c016f5c0 	call	c016f5c <__muldi3>
 c005144:	11000044 	addi	r4,r2,1
 c005148:	2085803a 	cmpltu	r2,r4,r2
 c00514c:	10c7883a 	add	r3,r2,r3
 c005150:	00a00034 	movhi	r2,32768
 c005154:	10bfffc4 	addi	r2,r2,-1
 c005158:	1884703a 	and	r2,r3,r2
 c00515c:	81002915 	stw	r4,164(r16)
 c005160:	80c02a15 	stw	r3,168(r16)
 c005164:	dfc00117 	ldw	ra,4(sp)
 c005168:	dc000017 	ldw	r16,0(sp)
 c00516c:	dec00204 	addi	sp,sp,8
 c005170:	f800283a 	ret

0c005174 <_sbrk_r>:
 c005174:	defffd04 	addi	sp,sp,-12
 c005178:	dc000015 	stw	r16,0(sp)
 c00517c:	040300b4 	movhi	r16,3074
 c005180:	dc400115 	stw	r17,4(sp)
 c005184:	84076104 	addi	r16,r16,7556
 c005188:	2023883a 	mov	r17,r4
 c00518c:	2809883a 	mov	r4,r5
 c005190:	dfc00215 	stw	ra,8(sp)
 c005194:	80000015 	stw	zero,0(r16)
 c005198:	c01b2f40 	call	c01b2f4 <sbrk>
 c00519c:	00ffffc4 	movi	r3,-1
 c0051a0:	10c00526 	beq	r2,r3,c0051b8 <_sbrk_r+0x44>
 c0051a4:	dfc00217 	ldw	ra,8(sp)
 c0051a8:	dc400117 	ldw	r17,4(sp)
 c0051ac:	dc000017 	ldw	r16,0(sp)
 c0051b0:	dec00304 	addi	sp,sp,12
 c0051b4:	f800283a 	ret
 c0051b8:	80c00017 	ldw	r3,0(r16)
 c0051bc:	183ff926 	beq	r3,zero,c0051a4 <__alt_data_end+0xfc0051a4>
 c0051c0:	88c00015 	stw	r3,0(r17)
 c0051c4:	003ff706 	br	c0051a4 <__alt_data_end+0xfc0051a4>

0c0051c8 <scanf>:
 c0051c8:	defffc04 	addi	sp,sp,-16
 c0051cc:	dfc00015 	stw	ra,0(sp)
 c0051d0:	d9400115 	stw	r5,4(sp)
 c0051d4:	d9800215 	stw	r6,8(sp)
 c0051d8:	d9c00315 	stw	r7,12(sp)
 c0051dc:	008300b4 	movhi	r2,3074
 c0051e0:	10bfc304 	addi	r2,r2,-244
 c0051e4:	200d883a 	mov	r6,r4
 c0051e8:	11000017 	ldw	r4,0(r2)
 c0051ec:	d9c00104 	addi	r7,sp,4
 c0051f0:	21400117 	ldw	r5,4(r4)
 c0051f4:	c00b4100 	call	c00b410 <_vfscanf_r>
 c0051f8:	dfc00017 	ldw	ra,0(sp)
 c0051fc:	dec00404 	addi	sp,sp,16
 c005200:	f800283a 	ret

0c005204 <_scanf_r>:
 c005204:	defffd04 	addi	sp,sp,-12
 c005208:	2805883a 	mov	r2,r5
 c00520c:	dfc00015 	stw	ra,0(sp)
 c005210:	d9800115 	stw	r6,4(sp)
 c005214:	d9c00215 	stw	r7,8(sp)
 c005218:	21400117 	ldw	r5,4(r4)
 c00521c:	d9c00104 	addi	r7,sp,4
 c005220:	100d883a 	mov	r6,r2
 c005224:	c00b4100 	call	c00b410 <_vfscanf_r>
 c005228:	dfc00017 	ldw	ra,0(sp)
 c00522c:	dec00304 	addi	sp,sp,12
 c005230:	f800283a 	ret

0c005234 <_sprintf_r>:
 c005234:	deffe404 	addi	sp,sp,-112
 c005238:	2807883a 	mov	r3,r5
 c00523c:	dfc01a15 	stw	ra,104(sp)
 c005240:	d9c01b15 	stw	r7,108(sp)
 c005244:	00a00034 	movhi	r2,32768
 c005248:	10bfffc4 	addi	r2,r2,-1
 c00524c:	02008204 	movi	r8,520
 c005250:	d8800215 	stw	r2,8(sp)
 c005254:	d8800515 	stw	r2,20(sp)
 c005258:	d9c01b04 	addi	r7,sp,108
 c00525c:	d80b883a 	mov	r5,sp
 c005260:	00bfffc4 	movi	r2,-1
 c005264:	d8c00015 	stw	r3,0(sp)
 c005268:	d8c00415 	stw	r3,16(sp)
 c00526c:	da00030d 	sth	r8,12(sp)
 c005270:	d880038d 	sth	r2,14(sp)
 c005274:	c0053900 	call	c005390 <___svfprintf_internal_r>
 c005278:	d8c00017 	ldw	r3,0(sp)
 c00527c:	18000005 	stb	zero,0(r3)
 c005280:	dfc01a17 	ldw	ra,104(sp)
 c005284:	dec01c04 	addi	sp,sp,112
 c005288:	f800283a 	ret

0c00528c <sprintf>:
 c00528c:	deffe304 	addi	sp,sp,-116
 c005290:	2007883a 	mov	r3,r4
 c005294:	dfc01a15 	stw	ra,104(sp)
 c005298:	d9801b15 	stw	r6,108(sp)
 c00529c:	d9c01c15 	stw	r7,112(sp)
 c0052a0:	010300b4 	movhi	r4,3074
 c0052a4:	213fc304 	addi	r4,r4,-244
 c0052a8:	21000017 	ldw	r4,0(r4)
 c0052ac:	00a00034 	movhi	r2,32768
 c0052b0:	10bfffc4 	addi	r2,r2,-1
 c0052b4:	280d883a 	mov	r6,r5
 c0052b8:	02008204 	movi	r8,520
 c0052bc:	d8800215 	stw	r2,8(sp)
 c0052c0:	d8800515 	stw	r2,20(sp)
 c0052c4:	d9c01b04 	addi	r7,sp,108
 c0052c8:	d80b883a 	mov	r5,sp
 c0052cc:	00bfffc4 	movi	r2,-1
 c0052d0:	d8c00015 	stw	r3,0(sp)
 c0052d4:	d8c00415 	stw	r3,16(sp)
 c0052d8:	da00030d 	sth	r8,12(sp)
 c0052dc:	d880038d 	sth	r2,14(sp)
 c0052e0:	c0053900 	call	c005390 <___svfprintf_internal_r>
 c0052e4:	d8c00017 	ldw	r3,0(sp)
 c0052e8:	18000005 	stb	zero,0(r3)
 c0052ec:	dfc01a17 	ldw	ra,104(sp)
 c0052f0:	dec01d04 	addi	sp,sp,116
 c0052f4:	f800283a 	ret

0c0052f8 <strlen>:
 c0052f8:	208000cc 	andi	r2,r4,3
 c0052fc:	10002026 	beq	r2,zero,c005380 <strlen+0x88>
 c005300:	20800007 	ldb	r2,0(r4)
 c005304:	10002026 	beq	r2,zero,c005388 <strlen+0x90>
 c005308:	2005883a 	mov	r2,r4
 c00530c:	00000206 	br	c005318 <strlen+0x20>
 c005310:	10c00007 	ldb	r3,0(r2)
 c005314:	18001826 	beq	r3,zero,c005378 <strlen+0x80>
 c005318:	10800044 	addi	r2,r2,1
 c00531c:	10c000cc 	andi	r3,r2,3
 c005320:	183ffb1e 	bne	r3,zero,c005310 <__alt_data_end+0xfc005310>
 c005324:	10c00017 	ldw	r3,0(r2)
 c005328:	01ffbff4 	movhi	r7,65279
 c00532c:	39ffbfc4 	addi	r7,r7,-257
 c005330:	00ca303a 	nor	r5,zero,r3
 c005334:	01a02074 	movhi	r6,32897
 c005338:	19c7883a 	add	r3,r3,r7
 c00533c:	31a02004 	addi	r6,r6,-32640
 c005340:	1946703a 	and	r3,r3,r5
 c005344:	1986703a 	and	r3,r3,r6
 c005348:	1800091e 	bne	r3,zero,c005370 <strlen+0x78>
 c00534c:	10800104 	addi	r2,r2,4
 c005350:	10c00017 	ldw	r3,0(r2)
 c005354:	19cb883a 	add	r5,r3,r7
 c005358:	00c6303a 	nor	r3,zero,r3
 c00535c:	28c6703a 	and	r3,r5,r3
 c005360:	1986703a 	and	r3,r3,r6
 c005364:	183ff926 	beq	r3,zero,c00534c <__alt_data_end+0xfc00534c>
 c005368:	00000106 	br	c005370 <strlen+0x78>
 c00536c:	10800044 	addi	r2,r2,1
 c005370:	10c00007 	ldb	r3,0(r2)
 c005374:	183ffd1e 	bne	r3,zero,c00536c <__alt_data_end+0xfc00536c>
 c005378:	1105c83a 	sub	r2,r2,r4
 c00537c:	f800283a 	ret
 c005380:	2005883a 	mov	r2,r4
 c005384:	003fe706 	br	c005324 <__alt_data_end+0xfc005324>
 c005388:	0005883a 	mov	r2,zero
 c00538c:	f800283a 	ret

0c005390 <___svfprintf_internal_r>:
 c005390:	deffb704 	addi	sp,sp,-292
 c005394:	dfc04815 	stw	ra,288(sp)
 c005398:	ddc04615 	stw	r23,280(sp)
 c00539c:	d9402d15 	stw	r5,180(sp)
 c0053a0:	d9003915 	stw	r4,228(sp)
 c0053a4:	302f883a 	mov	r23,r6
 c0053a8:	d9c02e15 	stw	r7,184(sp)
 c0053ac:	df004715 	stw	fp,284(sp)
 c0053b0:	dd804515 	stw	r22,276(sp)
 c0053b4:	dd404415 	stw	r21,272(sp)
 c0053b8:	dd004315 	stw	r20,268(sp)
 c0053bc:	dcc04215 	stw	r19,264(sp)
 c0053c0:	dc804115 	stw	r18,260(sp)
 c0053c4:	dc404015 	stw	r17,256(sp)
 c0053c8:	dc003f15 	stw	r16,252(sp)
 c0053cc:	c00e2880 	call	c00e288 <_localeconv_r>
 c0053d0:	10800017 	ldw	r2,0(r2)
 c0053d4:	1009883a 	mov	r4,r2
 c0053d8:	d8803415 	stw	r2,208(sp)
 c0053dc:	c0052f80 	call	c0052f8 <strlen>
 c0053e0:	d8c02d17 	ldw	r3,180(sp)
 c0053e4:	d8803815 	stw	r2,224(sp)
 c0053e8:	1880030b 	ldhu	r2,12(r3)
 c0053ec:	1080200c 	andi	r2,r2,128
 c0053f0:	10000226 	beq	r2,zero,c0053fc <___svfprintf_internal_r+0x6c>
 c0053f4:	18800417 	ldw	r2,16(r3)
 c0053f8:	1006b126 	beq	r2,zero,c006ec0 <___svfprintf_internal_r+0x1b30>
 c0053fc:	dcc03917 	ldw	r19,228(sp)
 c005400:	d8c00404 	addi	r3,sp,16
 c005404:	054300b4 	movhi	r21,3074
 c005408:	d9001e04 	addi	r4,sp,120
 c00540c:	ad768884 	addi	r21,r21,-9694
 c005410:	d8c01e15 	stw	r3,120(sp)
 c005414:	d8002015 	stw	zero,128(sp)
 c005418:	d8001f15 	stw	zero,124(sp)
 c00541c:	d8003315 	stw	zero,204(sp)
 c005420:	d8003615 	stw	zero,216(sp)
 c005424:	d8003715 	stw	zero,220(sp)
 c005428:	1811883a 	mov	r8,r3
 c00542c:	d8003a15 	stw	zero,232(sp)
 c005430:	d8003b15 	stw	zero,236(sp)
 c005434:	d8002f15 	stw	zero,188(sp)
 c005438:	d9002815 	stw	r4,160(sp)
 c00543c:	b8800007 	ldb	r2,0(r23)
 c005440:	10027726 	beq	r2,zero,c005e20 <___svfprintf_internal_r+0xa90>
 c005444:	00c00944 	movi	r3,37
 c005448:	b823883a 	mov	r17,r23
 c00544c:	10c0021e 	bne	r2,r3,c005458 <___svfprintf_internal_r+0xc8>
 c005450:	00001406 	br	c0054a4 <___svfprintf_internal_r+0x114>
 c005454:	10c00326 	beq	r2,r3,c005464 <___svfprintf_internal_r+0xd4>
 c005458:	8c400044 	addi	r17,r17,1
 c00545c:	88800007 	ldb	r2,0(r17)
 c005460:	103ffc1e 	bne	r2,zero,c005454 <__alt_data_end+0xfc005454>
 c005464:	8de1c83a 	sub	r16,r17,r23
 c005468:	80000e26 	beq	r16,zero,c0054a4 <___svfprintf_internal_r+0x114>
 c00546c:	d8c02017 	ldw	r3,128(sp)
 c005470:	d8801f17 	ldw	r2,124(sp)
 c005474:	45c00015 	stw	r23,0(r8)
 c005478:	1c07883a 	add	r3,r3,r16
 c00547c:	10800044 	addi	r2,r2,1
 c005480:	d8c02015 	stw	r3,128(sp)
 c005484:	44000115 	stw	r16,4(r8)
 c005488:	d8801f15 	stw	r2,124(sp)
 c00548c:	00c001c4 	movi	r3,7
 c005490:	18809916 	blt	r3,r2,c0056f8 <___svfprintf_internal_r+0x368>
 c005494:	42000204 	addi	r8,r8,8
 c005498:	d9402f17 	ldw	r5,188(sp)
 c00549c:	2c0b883a 	add	r5,r5,r16
 c0054a0:	d9402f15 	stw	r5,188(sp)
 c0054a4:	88800007 	ldb	r2,0(r17)
 c0054a8:	10009a26 	beq	r2,zero,c005714 <___svfprintf_internal_r+0x384>
 c0054ac:	8dc00044 	addi	r23,r17,1
 c0054b0:	8c400047 	ldb	r17,1(r17)
 c0054b4:	0021883a 	mov	r16,zero
 c0054b8:	00bfffc4 	movi	r2,-1
 c0054bc:	0025883a 	mov	r18,zero
 c0054c0:	dc002905 	stb	r16,164(sp)
 c0054c4:	d8002785 	stb	zero,158(sp)
 c0054c8:	d8002b05 	stb	zero,172(sp)
 c0054cc:	d8802a15 	stw	r2,168(sp)
 c0054d0:	d8003115 	stw	zero,196(sp)
 c0054d4:	05001604 	movi	r20,88
 c0054d8:	05800244 	movi	r22,9
 c0054dc:	4039883a 	mov	fp,r8
 c0054e0:	9021883a 	mov	r16,r18
 c0054e4:	bdc00044 	addi	r23,r23,1
 c0054e8:	88bff804 	addi	r2,r17,-32
 c0054ec:	a0831e36 	bltu	r20,r2,c006168 <___svfprintf_internal_r+0xdd8>
 c0054f0:	100490ba 	slli	r2,r2,2
 c0054f4:	00c30034 	movhi	r3,3072
 c0054f8:	18d54204 	addi	r3,r3,21768
 c0054fc:	10c5883a 	add	r2,r2,r3
 c005500:	10800017 	ldw	r2,0(r2)
 c005504:	1000683a 	jmp	r2
 c005508:	0c0060b0 	cmpltui	r16,at,386
 c00550c:	0c006168 	cmpgeui	r16,at,389
 c005510:	0c006168 	cmpgeui	r16,at,389
 c005514:	0c0060a4 	muli	r16,at,386
 c005518:	0c006168 	cmpgeui	r16,at,389
 c00551c:	0c006168 	cmpgeui	r16,at,389
 c005520:	0c006168 	cmpgeui	r16,at,389
 c005524:	0c006168 	cmpgeui	r16,at,389
 c005528:	0c006168 	cmpgeui	r16,at,389
 c00552c:	0c006168 	cmpgeui	r16,at,389
 c005530:	0c005770 	cmpltui	r16,at,349
 c005534:	0c005fb4 	orhi	r16,at,382
 c005538:	0c006168 	cmpgeui	r16,at,389
 c00553c:	0c00567c 	xorhi	r16,at,345
 c005540:	0c005794 	ori	r16,at,350
 c005544:	0c006168 	cmpgeui	r16,at,389
 c005548:	0c005820 	cmpeqi	r16,at,352
 c00554c:	0c0057e4 	muli	r16,at,351
 c005550:	0c0057e4 	muli	r16,at,351
 c005554:	0c0057e4 	muli	r16,at,351
 c005558:	0c0057e4 	muli	r16,at,351
 c00555c:	0c0057e4 	muli	r16,at,351
 c005560:	0c0057e4 	muli	r16,at,351
 c005564:	0c0057e4 	muli	r16,at,351
 c005568:	0c0057e4 	muli	r16,at,351
 c00556c:	0c0057e4 	muli	r16,at,351
 c005570:	0c006168 	cmpgeui	r16,at,389
 c005574:	0c006168 	cmpgeui	r16,at,389
 c005578:	0c006168 	cmpgeui	r16,at,389
 c00557c:	0c006168 	cmpgeui	r16,at,389
 c005580:	0c006168 	cmpgeui	r16,at,389
 c005584:	0c006168 	cmpgeui	r16,at,389
 c005588:	0c006168 	cmpgeui	r16,at,389
 c00558c:	0c006168 	cmpgeui	r16,at,389
 c005590:	0c006168 	cmpgeui	r16,at,389
 c005594:	0c006168 	cmpgeui	r16,at,389
 c005598:	0c0058e4 	muli	r16,at,355
 c00559c:	0c00582c 	andhi	r16,at,352
 c0055a0:	0c006168 	cmpgeui	r16,at,389
 c0055a4:	0c00582c 	andhi	r16,at,352
 c0055a8:	0c006168 	cmpgeui	r16,at,389
 c0055ac:	0c006168 	cmpgeui	r16,at,389
 c0055b0:	0c006168 	cmpgeui	r16,at,389
 c0055b4:	0c006168 	cmpgeui	r16,at,389
 c0055b8:	0c0058d8 	cmpnei	r16,at,355
 c0055bc:	0c006168 	cmpgeui	r16,at,389
 c0055c0:	0c006168 	cmpgeui	r16,at,389
 c0055c4:	0c0059ac 	andhi	r16,at,358
 c0055c8:	0c006168 	cmpgeui	r16,at,389
 c0055cc:	0c006168 	cmpgeui	r16,at,389
 c0055d0:	0c006168 	cmpgeui	r16,at,389
 c0055d4:	0c006168 	cmpgeui	r16,at,389
 c0055d8:	0c006168 	cmpgeui	r16,at,389
 c0055dc:	0c005e28 	cmpgeui	r16,at,376
 c0055e0:	0c006168 	cmpgeui	r16,at,389
 c0055e4:	0c006168 	cmpgeui	r16,at,389
 c0055e8:	0c005e94 	ori	r16,at,378
 c0055ec:	0c006168 	cmpgeui	r16,at,389
 c0055f0:	0c006168 	cmpgeui	r16,at,389
 c0055f4:	0c006168 	cmpgeui	r16,at,389
 c0055f8:	0c006168 	cmpgeui	r16,at,389
 c0055fc:	0c006168 	cmpgeui	r16,at,389
 c005600:	0c006168 	cmpgeui	r16,at,389
 c005604:	0c006168 	cmpgeui	r16,at,389
 c005608:	0c006168 	cmpgeui	r16,at,389
 c00560c:	0c006168 	cmpgeui	r16,at,389
 c005610:	0c006168 	cmpgeui	r16,at,389
 c005614:	0c005f50 	cmplti	r16,at,381
 c005618:	0c0060d0 	cmplti	r16,at,387
 c00561c:	0c00582c 	andhi	r16,at,352
 c005620:	0c00582c 	andhi	r16,at,352
 c005624:	0c00582c 	andhi	r16,at,352
 c005628:	0c006144 	addi	r16,at,389
 c00562c:	0c0060d0 	cmplti	r16,at,387
 c005630:	0c006168 	cmpgeui	r16,at,389
 c005634:	0c006168 	cmpgeui	r16,at,389
 c005638:	0c0060f0 	cmpltui	r16,at,387
 c00563c:	0c006168 	cmpgeui	r16,at,389
 c005640:	0c006104 	addi	r16,at,388
 c005644:	0c005f94 	ori	r16,at,382
 c005648:	0c005688 	cmpgei	r16,at,346
 c00564c:	0c005fcc 	andi	r16,at,383
 c005650:	0c006168 	cmpgeui	r16,at,389
 c005654:	0c005fd8 	cmpnei	r16,at,383
 c005658:	0c006168 	cmpgeui	r16,at,389
 c00565c:	0c00603c 	xorhi	r16,at,384
 c005660:	0c006168 	cmpgeui	r16,at,389
 c005664:	0c006168 	cmpgeui	r16,at,389
 c005668:	0c00605c 	xori	r16,at,385
 c00566c:	d8c03117 	ldw	r3,196(sp)
 c005670:	d8802e15 	stw	r2,184(sp)
 c005674:	00c7c83a 	sub	r3,zero,r3
 c005678:	d8c03115 	stw	r3,196(sp)
 c00567c:	84000114 	ori	r16,r16,4
 c005680:	bc400007 	ldb	r17,0(r23)
 c005684:	003f9706 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c005688:	00800c04 	movi	r2,48
 c00568c:	d8802705 	stb	r2,156(sp)
 c005690:	00801e04 	movi	r2,120
 c005694:	d8802745 	stb	r2,157(sp)
 c005698:	d9002a17 	ldw	r4,168(sp)
 c00569c:	d8802e17 	ldw	r2,184(sp)
 c0056a0:	d8002785 	stb	zero,158(sp)
 c0056a4:	e011883a 	mov	r8,fp
 c0056a8:	10c00104 	addi	r3,r2,4
 c0056ac:	15000017 	ldw	r20,0(r2)
 c0056b0:	002d883a 	mov	r22,zero
 c0056b4:	80800094 	ori	r2,r16,2
 c0056b8:	2002b616 	blt	r4,zero,c006194 <___svfprintf_internal_r+0xe04>
 c0056bc:	00bfdfc4 	movi	r2,-129
 c0056c0:	80a4703a 	and	r18,r16,r2
 c0056c4:	d8c02e15 	stw	r3,184(sp)
 c0056c8:	94800094 	ori	r18,r18,2
 c0056cc:	a002a01e 	bne	r20,zero,c006150 <___svfprintf_internal_r+0xdc0>
 c0056d0:	014300b4 	movhi	r5,3074
 c0056d4:	29768104 	addi	r5,r5,-9724
 c0056d8:	d9403a15 	stw	r5,232(sp)
 c0056dc:	04401e04 	movi	r17,120
 c0056e0:	d8c02a17 	ldw	r3,168(sp)
 c0056e4:	0039883a 	mov	fp,zero
 c0056e8:	1801e626 	beq	r3,zero,c005e84 <___svfprintf_internal_r+0xaf4>
 c0056ec:	0029883a 	mov	r20,zero
 c0056f0:	002d883a 	mov	r22,zero
 c0056f4:	00020506 	br	c005f0c <___svfprintf_internal_r+0xb7c>
 c0056f8:	d9402d17 	ldw	r5,180(sp)
 c0056fc:	d9801e04 	addi	r6,sp,120
 c005700:	9809883a 	mov	r4,r19
 c005704:	c012aac0 	call	c012aac <__ssprint_r>
 c005708:	1000081e 	bne	r2,zero,c00572c <___svfprintf_internal_r+0x39c>
 c00570c:	da000404 	addi	r8,sp,16
 c005710:	003f6106 	br	c005498 <__alt_data_end+0xfc005498>
 c005714:	d8802017 	ldw	r2,128(sp)
 c005718:	10000426 	beq	r2,zero,c00572c <___svfprintf_internal_r+0x39c>
 c00571c:	d9402d17 	ldw	r5,180(sp)
 c005720:	d9003917 	ldw	r4,228(sp)
 c005724:	d9801e04 	addi	r6,sp,120
 c005728:	c012aac0 	call	c012aac <__ssprint_r>
 c00572c:	d8802d17 	ldw	r2,180(sp)
 c005730:	10c0030b 	ldhu	r3,12(r2)
 c005734:	d8802f17 	ldw	r2,188(sp)
 c005738:	18c0100c 	andi	r3,r3,64
 c00573c:	1806251e 	bne	r3,zero,c006fd4 <___svfprintf_internal_r+0x1c44>
 c005740:	dfc04817 	ldw	ra,288(sp)
 c005744:	df004717 	ldw	fp,284(sp)
 c005748:	ddc04617 	ldw	r23,280(sp)
 c00574c:	dd804517 	ldw	r22,276(sp)
 c005750:	dd404417 	ldw	r21,272(sp)
 c005754:	dd004317 	ldw	r20,268(sp)
 c005758:	dcc04217 	ldw	r19,264(sp)
 c00575c:	dc804117 	ldw	r18,260(sp)
 c005760:	dc404017 	ldw	r17,256(sp)
 c005764:	dc003f17 	ldw	r16,252(sp)
 c005768:	dec04904 	addi	sp,sp,292
 c00576c:	f800283a 	ret
 c005770:	d9002e17 	ldw	r4,184(sp)
 c005774:	d9402e17 	ldw	r5,184(sp)
 c005778:	21000017 	ldw	r4,0(r4)
 c00577c:	28800104 	addi	r2,r5,4
 c005780:	d9003115 	stw	r4,196(sp)
 c005784:	203fb916 	blt	r4,zero,c00566c <__alt_data_end+0xfc00566c>
 c005788:	d8802e15 	stw	r2,184(sp)
 c00578c:	bc400007 	ldb	r17,0(r23)
 c005790:	003f5406 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c005794:	bc400007 	ldb	r17,0(r23)
 c005798:	01000a84 	movi	r4,42
 c00579c:	b8c00044 	addi	r3,r23,1
 c0057a0:	89076926 	beq	r17,r4,c007548 <___svfprintf_internal_r+0x21b8>
 c0057a4:	8cbff404 	addi	r18,r17,-48
 c0057a8:	b486b936 	bltu	r22,r18,c007290 <___svfprintf_internal_r+0x1f00>
 c0057ac:	0009883a 	mov	r4,zero
 c0057b0:	1823883a 	mov	r17,r3
 c0057b4:	01400284 	movi	r5,10
 c0057b8:	c00473c0 	call	c00473c <__mulsi3>
 c0057bc:	88c00007 	ldb	r3,0(r17)
 c0057c0:	1489883a 	add	r4,r2,r18
 c0057c4:	8dc00044 	addi	r23,r17,1
 c0057c8:	1cbff404 	addi	r18,r3,-48
 c0057cc:	b823883a 	mov	r17,r23
 c0057d0:	b4bff82e 	bgeu	r22,r18,c0057b4 <__alt_data_end+0xfc0057b4>
 c0057d4:	1823883a 	mov	r17,r3
 c0057d8:	20060416 	blt	r4,zero,c006fec <___svfprintf_internal_r+0x1c5c>
 c0057dc:	d9002a15 	stw	r4,168(sp)
 c0057e0:	003f4106 	br	c0054e8 <__alt_data_end+0xfc0054e8>
 c0057e4:	8cbff404 	addi	r18,r17,-48
 c0057e8:	d8003115 	stw	zero,196(sp)
 c0057ec:	0009883a 	mov	r4,zero
 c0057f0:	b823883a 	mov	r17,r23
 c0057f4:	01400284 	movi	r5,10
 c0057f8:	c00473c0 	call	c00473c <__mulsi3>
 c0057fc:	88c00007 	ldb	r3,0(r17)
 c005800:	9089883a 	add	r4,r18,r2
 c005804:	bdc00044 	addi	r23,r23,1
 c005808:	1cbff404 	addi	r18,r3,-48
 c00580c:	b823883a 	mov	r17,r23
 c005810:	b4bff82e 	bgeu	r22,r18,c0057f4 <__alt_data_end+0xfc0057f4>
 c005814:	1823883a 	mov	r17,r3
 c005818:	d9003115 	stw	r4,196(sp)
 c00581c:	003f3206 	br	c0054e8 <__alt_data_end+0xfc0054e8>
 c005820:	84002014 	ori	r16,r16,128
 c005824:	bc400007 	ldb	r17,0(r23)
 c005828:	003f2e06 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c00582c:	8025883a 	mov	r18,r16
 c005830:	dc002903 	ldbu	r16,164(sp)
 c005834:	e011883a 	mov	r8,fp
 c005838:	84003fcc 	andi	r16,r16,255
 c00583c:	8007721e 	bne	r16,zero,c007608 <___svfprintf_internal_r+0x2278>
 c005840:	9080020c 	andi	r2,r18,8
 c005844:	1004a526 	beq	r2,zero,c006adc <___svfprintf_internal_r+0x174c>
 c005848:	d9002e17 	ldw	r4,184(sp)
 c00584c:	d9402e17 	ldw	r5,184(sp)
 c005850:	d8802e17 	ldw	r2,184(sp)
 c005854:	21000017 	ldw	r4,0(r4)
 c005858:	29400117 	ldw	r5,4(r5)
 c00585c:	10800204 	addi	r2,r2,8
 c005860:	d9003615 	stw	r4,216(sp)
 c005864:	d9403715 	stw	r5,220(sp)
 c005868:	d8802e15 	stw	r2,184(sp)
 c00586c:	d9003617 	ldw	r4,216(sp)
 c005870:	d9403717 	ldw	r5,220(sp)
 c005874:	da003e15 	stw	r8,248(sp)
 c005878:	04000044 	movi	r16,1
 c00587c:	c0104bc0 	call	c0104bc <__fpclassifyd>
 c005880:	da003e17 	ldw	r8,248(sp)
 c005884:	1404731e 	bne	r2,r16,c006a54 <___svfprintf_internal_r+0x16c4>
 c005888:	d9003617 	ldw	r4,216(sp)
 c00588c:	d9403717 	ldw	r5,220(sp)
 c005890:	000d883a 	mov	r6,zero
 c005894:	000f883a 	mov	r7,zero
 c005898:	c0192780 	call	c019278 <__ledf2>
 c00589c:	da003e17 	ldw	r8,248(sp)
 c0058a0:	10061b16 	blt	r2,zero,c007110 <___svfprintf_internal_r+0x1d80>
 c0058a4:	df002783 	ldbu	fp,158(sp)
 c0058a8:	008011c4 	movi	r2,71
 c0058ac:	1445810e 	bge	r2,r17,c006eb4 <___svfprintf_internal_r+0x1b24>
 c0058b0:	040300b4 	movhi	r16,3074
 c0058b4:	84367904 	addi	r16,r16,-9756
 c0058b8:	00c000c4 	movi	r3,3
 c0058bc:	00bfdfc4 	movi	r2,-129
 c0058c0:	d8c02915 	stw	r3,164(sp)
 c0058c4:	90a4703a 	and	r18,r18,r2
 c0058c8:	d8c02b15 	stw	r3,172(sp)
 c0058cc:	d8002a15 	stw	zero,168(sp)
 c0058d0:	d8003215 	stw	zero,200(sp)
 c0058d4:	00006c06 	br	c005a88 <___svfprintf_internal_r+0x6f8>
 c0058d8:	84000214 	ori	r16,r16,8
 c0058dc:	bc400007 	ldb	r17,0(r23)
 c0058e0:	003f0006 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c0058e4:	8025883a 	mov	r18,r16
 c0058e8:	dc002903 	ldbu	r16,164(sp)
 c0058ec:	e011883a 	mov	r8,fp
 c0058f0:	84003fcc 	andi	r16,r16,255
 c0058f4:	80073f1e 	bne	r16,zero,c0075f4 <___svfprintf_internal_r+0x2264>
 c0058f8:	94800414 	ori	r18,r18,16
 c0058fc:	9080080c 	andi	r2,r18,32
 c005900:	1003bb26 	beq	r2,zero,c0067f0 <___svfprintf_internal_r+0x1460>
 c005904:	d9002e17 	ldw	r4,184(sp)
 c005908:	20800117 	ldw	r2,4(r4)
 c00590c:	25000017 	ldw	r20,0(r4)
 c005910:	21000204 	addi	r4,r4,8
 c005914:	d9002e15 	stw	r4,184(sp)
 c005918:	102d883a 	mov	r22,r2
 c00591c:	1003bd16 	blt	r2,zero,c006814 <___svfprintf_internal_r+0x1484>
 c005920:	d9002a17 	ldw	r4,168(sp)
 c005924:	df002783 	ldbu	fp,158(sp)
 c005928:	2003d016 	blt	r4,zero,c00686c <___svfprintf_internal_r+0x14dc>
 c00592c:	00ffdfc4 	movi	r3,-129
 c005930:	a584b03a 	or	r2,r20,r22
 c005934:	90e4703a 	and	r18,r18,r3
 c005938:	10015026 	beq	r2,zero,c005e7c <___svfprintf_internal_r+0xaec>
 c00593c:	b0037026 	beq	r22,zero,c006700 <___svfprintf_internal_r+0x1370>
 c005940:	dc402915 	stw	r17,164(sp)
 c005944:	dc001e04 	addi	r16,sp,120
 c005948:	b023883a 	mov	r17,r22
 c00594c:	402d883a 	mov	r22,r8
 c005950:	a009883a 	mov	r4,r20
 c005954:	880b883a 	mov	r5,r17
 c005958:	01800284 	movi	r6,10
 c00595c:	000f883a 	mov	r7,zero
 c005960:	c0176d80 	call	c0176d8 <__umoddi3>
 c005964:	10800c04 	addi	r2,r2,48
 c005968:	843fffc4 	addi	r16,r16,-1
 c00596c:	a009883a 	mov	r4,r20
 c005970:	880b883a 	mov	r5,r17
 c005974:	80800005 	stb	r2,0(r16)
 c005978:	01800284 	movi	r6,10
 c00597c:	000f883a 	mov	r7,zero
 c005980:	c0170dc0 	call	c0170dc <__udivdi3>
 c005984:	1029883a 	mov	r20,r2
 c005988:	10c4b03a 	or	r2,r2,r3
 c00598c:	1823883a 	mov	r17,r3
 c005990:	103fef1e 	bne	r2,zero,c005950 <__alt_data_end+0xfc005950>
 c005994:	d8c02817 	ldw	r3,160(sp)
 c005998:	dc402917 	ldw	r17,164(sp)
 c00599c:	b011883a 	mov	r8,r22
 c0059a0:	1c07c83a 	sub	r3,r3,r16
 c0059a4:	d8c02b15 	stw	r3,172(sp)
 c0059a8:	00003106 	br	c005a70 <___svfprintf_internal_r+0x6e0>
 c0059ac:	8025883a 	mov	r18,r16
 c0059b0:	dc002903 	ldbu	r16,164(sp)
 c0059b4:	e011883a 	mov	r8,fp
 c0059b8:	84003fcc 	andi	r16,r16,255
 c0059bc:	80070a1e 	bne	r16,zero,c0075e8 <___svfprintf_internal_r+0x2258>
 c0059c0:	94800414 	ori	r18,r18,16
 c0059c4:	9080080c 	andi	r2,r18,32
 c0059c8:	1002f626 	beq	r2,zero,c0065a4 <___svfprintf_internal_r+0x1214>
 c0059cc:	d9002e17 	ldw	r4,184(sp)
 c0059d0:	d9402a17 	ldw	r5,168(sp)
 c0059d4:	d8002785 	stb	zero,158(sp)
 c0059d8:	20800204 	addi	r2,r4,8
 c0059dc:	25000017 	ldw	r20,0(r4)
 c0059e0:	25800117 	ldw	r22,4(r4)
 c0059e4:	28043716 	blt	r5,zero,c006ac4 <___svfprintf_internal_r+0x1734>
 c0059e8:	013fdfc4 	movi	r4,-129
 c0059ec:	a586b03a 	or	r3,r20,r22
 c0059f0:	d8802e15 	stw	r2,184(sp)
 c0059f4:	9124703a 	and	r18,r18,r4
 c0059f8:	1802f71e 	bne	r3,zero,c0065d8 <___svfprintf_internal_r+0x1248>
 c0059fc:	d9402a17 	ldw	r5,168(sp)
 c005a00:	0039883a 	mov	fp,zero
 c005a04:	2806df26 	beq	r5,zero,c007584 <___svfprintf_internal_r+0x21f4>
 c005a08:	0029883a 	mov	r20,zero
 c005a0c:	002d883a 	mov	r22,zero
 c005a10:	dc001e04 	addi	r16,sp,120
 c005a14:	a006d0fa 	srli	r3,r20,3
 c005a18:	b008977a 	slli	r4,r22,29
 c005a1c:	b02cd0fa 	srli	r22,r22,3
 c005a20:	a50001cc 	andi	r20,r20,7
 c005a24:	a0800c04 	addi	r2,r20,48
 c005a28:	843fffc4 	addi	r16,r16,-1
 c005a2c:	20e8b03a 	or	r20,r4,r3
 c005a30:	80800005 	stb	r2,0(r16)
 c005a34:	a586b03a 	or	r3,r20,r22
 c005a38:	183ff61e 	bne	r3,zero,c005a14 <__alt_data_end+0xfc005a14>
 c005a3c:	90c0004c 	andi	r3,r18,1
 c005a40:	18013f26 	beq	r3,zero,c005f40 <___svfprintf_internal_r+0xbb0>
 c005a44:	10803fcc 	andi	r2,r2,255
 c005a48:	1080201c 	xori	r2,r2,128
 c005a4c:	10bfe004 	addi	r2,r2,-128
 c005a50:	00c00c04 	movi	r3,48
 c005a54:	10c13a26 	beq	r2,r3,c005f40 <___svfprintf_internal_r+0xbb0>
 c005a58:	80ffffc5 	stb	r3,-1(r16)
 c005a5c:	d8c02817 	ldw	r3,160(sp)
 c005a60:	80bfffc4 	addi	r2,r16,-1
 c005a64:	1021883a 	mov	r16,r2
 c005a68:	1887c83a 	sub	r3,r3,r2
 c005a6c:	d8c02b15 	stw	r3,172(sp)
 c005a70:	d8802b17 	ldw	r2,172(sp)
 c005a74:	d9002a17 	ldw	r4,168(sp)
 c005a78:	1100010e 	bge	r2,r4,c005a80 <___svfprintf_internal_r+0x6f0>
 c005a7c:	2005883a 	mov	r2,r4
 c005a80:	d8802915 	stw	r2,164(sp)
 c005a84:	d8003215 	stw	zero,200(sp)
 c005a88:	e7003fcc 	andi	fp,fp,255
 c005a8c:	e700201c 	xori	fp,fp,128
 c005a90:	e73fe004 	addi	fp,fp,-128
 c005a94:	e0000326 	beq	fp,zero,c005aa4 <___svfprintf_internal_r+0x714>
 c005a98:	d8c02917 	ldw	r3,164(sp)
 c005a9c:	18c00044 	addi	r3,r3,1
 c005aa0:	d8c02915 	stw	r3,164(sp)
 c005aa4:	90c0008c 	andi	r3,r18,2
 c005aa8:	d8c02c15 	stw	r3,176(sp)
 c005aac:	18000326 	beq	r3,zero,c005abc <___svfprintf_internal_r+0x72c>
 c005ab0:	d8c02917 	ldw	r3,164(sp)
 c005ab4:	18c00084 	addi	r3,r3,2
 c005ab8:	d8c02915 	stw	r3,164(sp)
 c005abc:	90c0210c 	andi	r3,r18,132
 c005ac0:	d8c03015 	stw	r3,192(sp)
 c005ac4:	1801c31e 	bne	r3,zero,c0061d4 <___svfprintf_internal_r+0xe44>
 c005ac8:	d9003117 	ldw	r4,196(sp)
 c005acc:	d8c02917 	ldw	r3,164(sp)
 c005ad0:	20e9c83a 	sub	r20,r4,r3
 c005ad4:	0501bf0e 	bge	zero,r20,c0061d4 <___svfprintf_internal_r+0xe44>
 c005ad8:	02400404 	movi	r9,16
 c005adc:	d8c02017 	ldw	r3,128(sp)
 c005ae0:	d8801f17 	ldw	r2,124(sp)
 c005ae4:	4d053d0e 	bge	r9,r20,c006fdc <___svfprintf_internal_r+0x1c4c>
 c005ae8:	014300b4 	movhi	r5,3074
 c005aec:	29768c84 	addi	r5,r5,-9678
 c005af0:	dc403c15 	stw	r17,240(sp)
 c005af4:	d9403515 	stw	r5,212(sp)
 c005af8:	a023883a 	mov	r17,r20
 c005afc:	482d883a 	mov	r22,r9
 c005b00:	9029883a 	mov	r20,r18
 c005b04:	070001c4 	movi	fp,7
 c005b08:	8025883a 	mov	r18,r16
 c005b0c:	dc002d17 	ldw	r16,180(sp)
 c005b10:	00000306 	br	c005b20 <___svfprintf_internal_r+0x790>
 c005b14:	8c7ffc04 	addi	r17,r17,-16
 c005b18:	42000204 	addi	r8,r8,8
 c005b1c:	b440130e 	bge	r22,r17,c005b6c <___svfprintf_internal_r+0x7dc>
 c005b20:	010300b4 	movhi	r4,3074
 c005b24:	18c00404 	addi	r3,r3,16
 c005b28:	10800044 	addi	r2,r2,1
 c005b2c:	21368c84 	addi	r4,r4,-9678
 c005b30:	41000015 	stw	r4,0(r8)
 c005b34:	45800115 	stw	r22,4(r8)
 c005b38:	d8c02015 	stw	r3,128(sp)
 c005b3c:	d8801f15 	stw	r2,124(sp)
 c005b40:	e0bff40e 	bge	fp,r2,c005b14 <__alt_data_end+0xfc005b14>
 c005b44:	d9801e04 	addi	r6,sp,120
 c005b48:	800b883a 	mov	r5,r16
 c005b4c:	9809883a 	mov	r4,r19
 c005b50:	c012aac0 	call	c012aac <__ssprint_r>
 c005b54:	103ef51e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c005b58:	8c7ffc04 	addi	r17,r17,-16
 c005b5c:	d8c02017 	ldw	r3,128(sp)
 c005b60:	d8801f17 	ldw	r2,124(sp)
 c005b64:	da000404 	addi	r8,sp,16
 c005b68:	b47fed16 	blt	r22,r17,c005b20 <__alt_data_end+0xfc005b20>
 c005b6c:	9021883a 	mov	r16,r18
 c005b70:	a025883a 	mov	r18,r20
 c005b74:	8829883a 	mov	r20,r17
 c005b78:	dc403c17 	ldw	r17,240(sp)
 c005b7c:	d9403517 	ldw	r5,212(sp)
 c005b80:	a0c7883a 	add	r3,r20,r3
 c005b84:	10800044 	addi	r2,r2,1
 c005b88:	41400015 	stw	r5,0(r8)
 c005b8c:	45000115 	stw	r20,4(r8)
 c005b90:	d8c02015 	stw	r3,128(sp)
 c005b94:	d8801f15 	stw	r2,124(sp)
 c005b98:	010001c4 	movi	r4,7
 c005b9c:	2082c116 	blt	r4,r2,c0066a4 <___svfprintf_internal_r+0x1314>
 c005ba0:	df002787 	ldb	fp,158(sp)
 c005ba4:	42000204 	addi	r8,r8,8
 c005ba8:	e0000c26 	beq	fp,zero,c005bdc <___svfprintf_internal_r+0x84c>
 c005bac:	d8801f17 	ldw	r2,124(sp)
 c005bb0:	d9002784 	addi	r4,sp,158
 c005bb4:	18c00044 	addi	r3,r3,1
 c005bb8:	10800044 	addi	r2,r2,1
 c005bbc:	41000015 	stw	r4,0(r8)
 c005bc0:	01000044 	movi	r4,1
 c005bc4:	41000115 	stw	r4,4(r8)
 c005bc8:	d8c02015 	stw	r3,128(sp)
 c005bcc:	d8801f15 	stw	r2,124(sp)
 c005bd0:	010001c4 	movi	r4,7
 c005bd4:	20825a16 	blt	r4,r2,c006540 <___svfprintf_internal_r+0x11b0>
 c005bd8:	42000204 	addi	r8,r8,8
 c005bdc:	d8802c17 	ldw	r2,176(sp)
 c005be0:	10000c26 	beq	r2,zero,c005c14 <___svfprintf_internal_r+0x884>
 c005be4:	d8801f17 	ldw	r2,124(sp)
 c005be8:	d9002704 	addi	r4,sp,156
 c005bec:	18c00084 	addi	r3,r3,2
 c005bf0:	10800044 	addi	r2,r2,1
 c005bf4:	41000015 	stw	r4,0(r8)
 c005bf8:	01000084 	movi	r4,2
 c005bfc:	41000115 	stw	r4,4(r8)
 c005c00:	d8c02015 	stw	r3,128(sp)
 c005c04:	d8801f15 	stw	r2,124(sp)
 c005c08:	010001c4 	movi	r4,7
 c005c0c:	20825416 	blt	r4,r2,c006560 <___svfprintf_internal_r+0x11d0>
 c005c10:	42000204 	addi	r8,r8,8
 c005c14:	d9003017 	ldw	r4,192(sp)
 c005c18:	00802004 	movi	r2,128
 c005c1c:	2081b926 	beq	r4,r2,c006304 <___svfprintf_internal_r+0xf74>
 c005c20:	d9402a17 	ldw	r5,168(sp)
 c005c24:	d8802b17 	ldw	r2,172(sp)
 c005c28:	28adc83a 	sub	r22,r5,r2
 c005c2c:	05802f0e 	bge	zero,r22,c005cec <___svfprintf_internal_r+0x95c>
 c005c30:	07000404 	movi	fp,16
 c005c34:	d8801f17 	ldw	r2,124(sp)
 c005c38:	e583e20e 	bge	fp,r22,c006bc4 <___svfprintf_internal_r+0x1834>
 c005c3c:	014300b4 	movhi	r5,3074
 c005c40:	29768884 	addi	r5,r5,-9694
 c005c44:	dc402a15 	stw	r17,168(sp)
 c005c48:	d9402c15 	stw	r5,176(sp)
 c005c4c:	b023883a 	mov	r17,r22
 c005c50:	050001c4 	movi	r20,7
 c005c54:	902d883a 	mov	r22,r18
 c005c58:	8025883a 	mov	r18,r16
 c005c5c:	dc002d17 	ldw	r16,180(sp)
 c005c60:	00000306 	br	c005c70 <___svfprintf_internal_r+0x8e0>
 c005c64:	8c7ffc04 	addi	r17,r17,-16
 c005c68:	42000204 	addi	r8,r8,8
 c005c6c:	e440110e 	bge	fp,r17,c005cb4 <___svfprintf_internal_r+0x924>
 c005c70:	18c00404 	addi	r3,r3,16
 c005c74:	10800044 	addi	r2,r2,1
 c005c78:	45400015 	stw	r21,0(r8)
 c005c7c:	47000115 	stw	fp,4(r8)
 c005c80:	d8c02015 	stw	r3,128(sp)
 c005c84:	d8801f15 	stw	r2,124(sp)
 c005c88:	a0bff60e 	bge	r20,r2,c005c64 <__alt_data_end+0xfc005c64>
 c005c8c:	d9801e04 	addi	r6,sp,120
 c005c90:	800b883a 	mov	r5,r16
 c005c94:	9809883a 	mov	r4,r19
 c005c98:	c012aac0 	call	c012aac <__ssprint_r>
 c005c9c:	103ea31e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c005ca0:	8c7ffc04 	addi	r17,r17,-16
 c005ca4:	d8c02017 	ldw	r3,128(sp)
 c005ca8:	d8801f17 	ldw	r2,124(sp)
 c005cac:	da000404 	addi	r8,sp,16
 c005cb0:	e47fef16 	blt	fp,r17,c005c70 <__alt_data_end+0xfc005c70>
 c005cb4:	9021883a 	mov	r16,r18
 c005cb8:	b025883a 	mov	r18,r22
 c005cbc:	882d883a 	mov	r22,r17
 c005cc0:	dc402a17 	ldw	r17,168(sp)
 c005cc4:	d9002c17 	ldw	r4,176(sp)
 c005cc8:	1d87883a 	add	r3,r3,r22
 c005ccc:	10800044 	addi	r2,r2,1
 c005cd0:	41000015 	stw	r4,0(r8)
 c005cd4:	45800115 	stw	r22,4(r8)
 c005cd8:	d8c02015 	stw	r3,128(sp)
 c005cdc:	d8801f15 	stw	r2,124(sp)
 c005ce0:	010001c4 	movi	r4,7
 c005ce4:	20820e16 	blt	r4,r2,c006520 <___svfprintf_internal_r+0x1190>
 c005ce8:	42000204 	addi	r8,r8,8
 c005cec:	9080400c 	andi	r2,r18,256
 c005cf0:	10013a1e 	bne	r2,zero,c0061dc <___svfprintf_internal_r+0xe4c>
 c005cf4:	d9402b17 	ldw	r5,172(sp)
 c005cf8:	d8801f17 	ldw	r2,124(sp)
 c005cfc:	44000015 	stw	r16,0(r8)
 c005d00:	1947883a 	add	r3,r3,r5
 c005d04:	10800044 	addi	r2,r2,1
 c005d08:	41400115 	stw	r5,4(r8)
 c005d0c:	d8c02015 	stw	r3,128(sp)
 c005d10:	d8801f15 	stw	r2,124(sp)
 c005d14:	010001c4 	movi	r4,7
 c005d18:	2081f316 	blt	r4,r2,c0064e8 <___svfprintf_internal_r+0x1158>
 c005d1c:	42000204 	addi	r8,r8,8
 c005d20:	9480010c 	andi	r18,r18,4
 c005d24:	90003226 	beq	r18,zero,c005df0 <___svfprintf_internal_r+0xa60>
 c005d28:	d9403117 	ldw	r5,196(sp)
 c005d2c:	d8802917 	ldw	r2,164(sp)
 c005d30:	28a1c83a 	sub	r16,r5,r2
 c005d34:	04002e0e 	bge	zero,r16,c005df0 <___svfprintf_internal_r+0xa60>
 c005d38:	04400404 	movi	r17,16
 c005d3c:	d8801f17 	ldw	r2,124(sp)
 c005d40:	8c04db0e 	bge	r17,r16,c0070b0 <___svfprintf_internal_r+0x1d20>
 c005d44:	014300b4 	movhi	r5,3074
 c005d48:	29768c84 	addi	r5,r5,-9678
 c005d4c:	d9403515 	stw	r5,212(sp)
 c005d50:	048001c4 	movi	r18,7
 c005d54:	dd002d17 	ldw	r20,180(sp)
 c005d58:	00000306 	br	c005d68 <___svfprintf_internal_r+0x9d8>
 c005d5c:	843ffc04 	addi	r16,r16,-16
 c005d60:	42000204 	addi	r8,r8,8
 c005d64:	8c00130e 	bge	r17,r16,c005db4 <___svfprintf_internal_r+0xa24>
 c005d68:	010300b4 	movhi	r4,3074
 c005d6c:	18c00404 	addi	r3,r3,16
 c005d70:	10800044 	addi	r2,r2,1
 c005d74:	21368c84 	addi	r4,r4,-9678
 c005d78:	41000015 	stw	r4,0(r8)
 c005d7c:	44400115 	stw	r17,4(r8)
 c005d80:	d8c02015 	stw	r3,128(sp)
 c005d84:	d8801f15 	stw	r2,124(sp)
 c005d88:	90bff40e 	bge	r18,r2,c005d5c <__alt_data_end+0xfc005d5c>
 c005d8c:	d9801e04 	addi	r6,sp,120
 c005d90:	a00b883a 	mov	r5,r20
 c005d94:	9809883a 	mov	r4,r19
 c005d98:	c012aac0 	call	c012aac <__ssprint_r>
 c005d9c:	103e631e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c005da0:	843ffc04 	addi	r16,r16,-16
 c005da4:	d8c02017 	ldw	r3,128(sp)
 c005da8:	d8801f17 	ldw	r2,124(sp)
 c005dac:	da000404 	addi	r8,sp,16
 c005db0:	8c3fed16 	blt	r17,r16,c005d68 <__alt_data_end+0xfc005d68>
 c005db4:	d9403517 	ldw	r5,212(sp)
 c005db8:	1c07883a 	add	r3,r3,r16
 c005dbc:	10800044 	addi	r2,r2,1
 c005dc0:	41400015 	stw	r5,0(r8)
 c005dc4:	44000115 	stw	r16,4(r8)
 c005dc8:	d8c02015 	stw	r3,128(sp)
 c005dcc:	d8801f15 	stw	r2,124(sp)
 c005dd0:	010001c4 	movi	r4,7
 c005dd4:	2080060e 	bge	r4,r2,c005df0 <___svfprintf_internal_r+0xa60>
 c005dd8:	d9402d17 	ldw	r5,180(sp)
 c005ddc:	d9801e04 	addi	r6,sp,120
 c005de0:	9809883a 	mov	r4,r19
 c005de4:	c012aac0 	call	c012aac <__ssprint_r>
 c005de8:	103e501e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c005dec:	d8c02017 	ldw	r3,128(sp)
 c005df0:	d8803117 	ldw	r2,196(sp)
 c005df4:	d9002917 	ldw	r4,164(sp)
 c005df8:	1100010e 	bge	r2,r4,c005e00 <___svfprintf_internal_r+0xa70>
 c005dfc:	2005883a 	mov	r2,r4
 c005e00:	d9402f17 	ldw	r5,188(sp)
 c005e04:	288b883a 	add	r5,r5,r2
 c005e08:	d9402f15 	stw	r5,188(sp)
 c005e0c:	1801be1e 	bne	r3,zero,c006508 <___svfprintf_internal_r+0x1178>
 c005e10:	b8800007 	ldb	r2,0(r23)
 c005e14:	d8001f15 	stw	zero,124(sp)
 c005e18:	da000404 	addi	r8,sp,16
 c005e1c:	103d891e 	bne	r2,zero,c005444 <__alt_data_end+0xfc005444>
 c005e20:	b823883a 	mov	r17,r23
 c005e24:	003d9f06 	br	c0054a4 <__alt_data_end+0xfc0054a4>
 c005e28:	8025883a 	mov	r18,r16
 c005e2c:	dc002903 	ldbu	r16,164(sp)
 c005e30:	e011883a 	mov	r8,fp
 c005e34:	84003fcc 	andi	r16,r16,255
 c005e38:	8005e61e 	bne	r16,zero,c0075d4 <___svfprintf_internal_r+0x2244>
 c005e3c:	94800414 	ori	r18,r18,16
 c005e40:	9080080c 	andi	r2,r18,32
 c005e44:	10022026 	beq	r2,zero,c0066c8 <___svfprintf_internal_r+0x1338>
 c005e48:	d9002e17 	ldw	r4,184(sp)
 c005e4c:	d9402a17 	ldw	r5,168(sp)
 c005e50:	d8002785 	stb	zero,158(sp)
 c005e54:	20c00204 	addi	r3,r4,8
 c005e58:	25000017 	ldw	r20,0(r4)
 c005e5c:	25800117 	ldw	r22,4(r4)
 c005e60:	2803ad16 	blt	r5,zero,c006d18 <___svfprintf_internal_r+0x1988>
 c005e64:	013fdfc4 	movi	r4,-129
 c005e68:	a584b03a 	or	r2,r20,r22
 c005e6c:	d8c02e15 	stw	r3,184(sp)
 c005e70:	9124703a 	and	r18,r18,r4
 c005e74:	0039883a 	mov	fp,zero
 c005e78:	103eb01e 	bne	r2,zero,c00593c <__alt_data_end+0xfc00593c>
 c005e7c:	d8802a17 	ldw	r2,168(sp)
 c005e80:	1002e71e 	bne	r2,zero,c006a20 <___svfprintf_internal_r+0x1690>
 c005e84:	d8002a15 	stw	zero,168(sp)
 c005e88:	d8002b15 	stw	zero,172(sp)
 c005e8c:	dc001e04 	addi	r16,sp,120
 c005e90:	003ef706 	br	c005a70 <__alt_data_end+0xfc005a70>
 c005e94:	8025883a 	mov	r18,r16
 c005e98:	dc002903 	ldbu	r16,164(sp)
 c005e9c:	e011883a 	mov	r8,fp
 c005ea0:	84003fcc 	andi	r16,r16,255
 c005ea4:	8005c81e 	bne	r16,zero,c0075c8 <___svfprintf_internal_r+0x2238>
 c005ea8:	010300b4 	movhi	r4,3074
 c005eac:	21367c04 	addi	r4,r4,-9744
 c005eb0:	d9003a15 	stw	r4,232(sp)
 c005eb4:	9080080c 	andi	r2,r18,32
 c005eb8:	10007226 	beq	r2,zero,c006084 <___svfprintf_internal_r+0xcf4>
 c005ebc:	d9402e17 	ldw	r5,184(sp)
 c005ec0:	2d000017 	ldw	r20,0(r5)
 c005ec4:	2d800117 	ldw	r22,4(r5)
 c005ec8:	29400204 	addi	r5,r5,8
 c005ecc:	d9402e15 	stw	r5,184(sp)
 c005ed0:	9080004c 	andi	r2,r18,1
 c005ed4:	1001aa26 	beq	r2,zero,c006580 <___svfprintf_internal_r+0x11f0>
 c005ed8:	a584b03a 	or	r2,r20,r22
 c005edc:	10032526 	beq	r2,zero,c006b74 <___svfprintf_internal_r+0x17e4>
 c005ee0:	d8c02a17 	ldw	r3,168(sp)
 c005ee4:	00800c04 	movi	r2,48
 c005ee8:	d8802705 	stb	r2,156(sp)
 c005eec:	dc402745 	stb	r17,157(sp)
 c005ef0:	d8002785 	stb	zero,158(sp)
 c005ef4:	90800094 	ori	r2,r18,2
 c005ef8:	1804a316 	blt	r3,zero,c007188 <___svfprintf_internal_r+0x1df8>
 c005efc:	00bfdfc4 	movi	r2,-129
 c005f00:	90a4703a 	and	r18,r18,r2
 c005f04:	94800094 	ori	r18,r18,2
 c005f08:	0039883a 	mov	fp,zero
 c005f0c:	d9003a17 	ldw	r4,232(sp)
 c005f10:	dc001e04 	addi	r16,sp,120
 c005f14:	a08003cc 	andi	r2,r20,15
 c005f18:	b006973a 	slli	r3,r22,28
 c005f1c:	2085883a 	add	r2,r4,r2
 c005f20:	a028d13a 	srli	r20,r20,4
 c005f24:	10800003 	ldbu	r2,0(r2)
 c005f28:	b02cd13a 	srli	r22,r22,4
 c005f2c:	843fffc4 	addi	r16,r16,-1
 c005f30:	1d28b03a 	or	r20,r3,r20
 c005f34:	80800005 	stb	r2,0(r16)
 c005f38:	a584b03a 	or	r2,r20,r22
 c005f3c:	103ff51e 	bne	r2,zero,c005f14 <__alt_data_end+0xfc005f14>
 c005f40:	d8c02817 	ldw	r3,160(sp)
 c005f44:	1c07c83a 	sub	r3,r3,r16
 c005f48:	d8c02b15 	stw	r3,172(sp)
 c005f4c:	003ec806 	br	c005a70 <__alt_data_end+0xfc005a70>
 c005f50:	d8c02e17 	ldw	r3,184(sp)
 c005f54:	d9002e17 	ldw	r4,184(sp)
 c005f58:	8025883a 	mov	r18,r16
 c005f5c:	18800017 	ldw	r2,0(r3)
 c005f60:	21000104 	addi	r4,r4,4
 c005f64:	00c00044 	movi	r3,1
 c005f68:	e011883a 	mov	r8,fp
 c005f6c:	d8c02915 	stw	r3,164(sp)
 c005f70:	d8002785 	stb	zero,158(sp)
 c005f74:	d8801405 	stb	r2,80(sp)
 c005f78:	d9002e15 	stw	r4,184(sp)
 c005f7c:	d8c02b15 	stw	r3,172(sp)
 c005f80:	d8002a15 	stw	zero,168(sp)
 c005f84:	d8003215 	stw	zero,200(sp)
 c005f88:	dc001404 	addi	r16,sp,80
 c005f8c:	0039883a 	mov	fp,zero
 c005f90:	003ec406 	br	c005aa4 <__alt_data_end+0xfc005aa4>
 c005f94:	8025883a 	mov	r18,r16
 c005f98:	dc002903 	ldbu	r16,164(sp)
 c005f9c:	e011883a 	mov	r8,fp
 c005fa0:	84003fcc 	andi	r16,r16,255
 c005fa4:	803e8726 	beq	r16,zero,c0059c4 <__alt_data_end+0xfc0059c4>
 c005fa8:	d8c02b03 	ldbu	r3,172(sp)
 c005fac:	d8c02785 	stb	r3,158(sp)
 c005fb0:	003e8406 	br	c0059c4 <__alt_data_end+0xfc0059c4>
 c005fb4:	00c00044 	movi	r3,1
 c005fb8:	d8c02905 	stb	r3,164(sp)
 c005fbc:	00c00ac4 	movi	r3,43
 c005fc0:	d8c02b05 	stb	r3,172(sp)
 c005fc4:	bc400007 	ldb	r17,0(r23)
 c005fc8:	003d4606 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c005fcc:	84000814 	ori	r16,r16,32
 c005fd0:	bc400007 	ldb	r17,0(r23)
 c005fd4:	003d4306 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c005fd8:	d8802e17 	ldw	r2,184(sp)
 c005fdc:	8025883a 	mov	r18,r16
 c005fe0:	d8002785 	stb	zero,158(sp)
 c005fe4:	14000017 	ldw	r16,0(r2)
 c005fe8:	e011883a 	mov	r8,fp
 c005fec:	15000104 	addi	r20,r2,4
 c005ff0:	80042126 	beq	r16,zero,c007078 <___svfprintf_internal_r+0x1ce8>
 c005ff4:	d8c02a17 	ldw	r3,168(sp)
 c005ff8:	1803ee16 	blt	r3,zero,c006fb4 <___svfprintf_internal_r+0x1c24>
 c005ffc:	180d883a 	mov	r6,r3
 c006000:	000b883a 	mov	r5,zero
 c006004:	8009883a 	mov	r4,r16
 c006008:	df003e15 	stw	fp,248(sp)
 c00600c:	c00e6980 	call	c00e698 <memchr>
 c006010:	da003e17 	ldw	r8,248(sp)
 c006014:	10046a26 	beq	r2,zero,c0071c0 <___svfprintf_internal_r+0x1e30>
 c006018:	1405c83a 	sub	r2,r2,r16
 c00601c:	d8802b15 	stw	r2,172(sp)
 c006020:	1003ea16 	blt	r2,zero,c006fcc <___svfprintf_internal_r+0x1c3c>
 c006024:	df002783 	ldbu	fp,158(sp)
 c006028:	d8802915 	stw	r2,164(sp)
 c00602c:	dd002e15 	stw	r20,184(sp)
 c006030:	d8002a15 	stw	zero,168(sp)
 c006034:	d8003215 	stw	zero,200(sp)
 c006038:	003e9306 	br	c005a88 <__alt_data_end+0xfc005a88>
 c00603c:	8025883a 	mov	r18,r16
 c006040:	dc002903 	ldbu	r16,164(sp)
 c006044:	e011883a 	mov	r8,fp
 c006048:	84003fcc 	andi	r16,r16,255
 c00604c:	803f7c26 	beq	r16,zero,c005e40 <__alt_data_end+0xfc005e40>
 c006050:	d8c02b03 	ldbu	r3,172(sp)
 c006054:	d8c02785 	stb	r3,158(sp)
 c006058:	003f7906 	br	c005e40 <__alt_data_end+0xfc005e40>
 c00605c:	8025883a 	mov	r18,r16
 c006060:	dc002903 	ldbu	r16,164(sp)
 c006064:	e011883a 	mov	r8,fp
 c006068:	84003fcc 	andi	r16,r16,255
 c00606c:	8005741e 	bne	r16,zero,c007640 <___svfprintf_internal_r+0x22b0>
 c006070:	010300b4 	movhi	r4,3074
 c006074:	21368104 	addi	r4,r4,-9724
 c006078:	d9003a15 	stw	r4,232(sp)
 c00607c:	9080080c 	andi	r2,r18,32
 c006080:	103f8e1e 	bne	r2,zero,c005ebc <__alt_data_end+0xfc005ebc>
 c006084:	9080040c 	andi	r2,r18,16
 c006088:	1002a726 	beq	r2,zero,c006b28 <___svfprintf_internal_r+0x1798>
 c00608c:	d8802e17 	ldw	r2,184(sp)
 c006090:	002d883a 	mov	r22,zero
 c006094:	15000017 	ldw	r20,0(r2)
 c006098:	10800104 	addi	r2,r2,4
 c00609c:	d8802e15 	stw	r2,184(sp)
 c0060a0:	003f8b06 	br	c005ed0 <__alt_data_end+0xfc005ed0>
 c0060a4:	84000054 	ori	r16,r16,1
 c0060a8:	bc400007 	ldb	r17,0(r23)
 c0060ac:	003d0d06 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c0060b0:	d8802b07 	ldb	r2,172(sp)
 c0060b4:	1002a41e 	bne	r2,zero,c006b48 <___svfprintf_internal_r+0x17b8>
 c0060b8:	00c00044 	movi	r3,1
 c0060bc:	d8c02905 	stb	r3,164(sp)
 c0060c0:	00c00804 	movi	r3,32
 c0060c4:	d8c02b05 	stb	r3,172(sp)
 c0060c8:	bc400007 	ldb	r17,0(r23)
 c0060cc:	003d0506 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c0060d0:	8025883a 	mov	r18,r16
 c0060d4:	dc002903 	ldbu	r16,164(sp)
 c0060d8:	e011883a 	mov	r8,fp
 c0060dc:	84003fcc 	andi	r16,r16,255
 c0060e0:	803e0626 	beq	r16,zero,c0058fc <__alt_data_end+0xfc0058fc>
 c0060e4:	d8c02b03 	ldbu	r3,172(sp)
 c0060e8:	d8c02785 	stb	r3,158(sp)
 c0060ec:	003e0306 	br	c0058fc <__alt_data_end+0xfc0058fc>
 c0060f0:	bc400007 	ldb	r17,0(r23)
 c0060f4:	00801b04 	movi	r2,108
 c0060f8:	88830a26 	beq	r17,r2,c006d24 <___svfprintf_internal_r+0x1994>
 c0060fc:	84000414 	ori	r16,r16,16
 c006100:	003cf806 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c006104:	8025883a 	mov	r18,r16
 c006108:	dc002903 	ldbu	r16,164(sp)
 c00610c:	e011883a 	mov	r8,fp
 c006110:	84003fcc 	andi	r16,r16,255
 c006114:	8005471e 	bne	r16,zero,c007634 <___svfprintf_internal_r+0x22a4>
 c006118:	9080080c 	andi	r2,r18,32
 c00611c:	10028c26 	beq	r2,zero,c006b50 <___svfprintf_internal_r+0x17c0>
 c006120:	d9002e17 	ldw	r4,184(sp)
 c006124:	d9402f17 	ldw	r5,188(sp)
 c006128:	20800017 	ldw	r2,0(r4)
 c00612c:	2807d7fa 	srai	r3,r5,31
 c006130:	21000104 	addi	r4,r4,4
 c006134:	d9002e15 	stw	r4,184(sp)
 c006138:	11400015 	stw	r5,0(r2)
 c00613c:	10c00115 	stw	r3,4(r2)
 c006140:	003cbe06 	br	c00543c <__alt_data_end+0xfc00543c>
 c006144:	84001014 	ori	r16,r16,64
 c006148:	bc400007 	ldb	r17,0(r23)
 c00614c:	003ce506 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c006150:	010300b4 	movhi	r4,3074
 c006154:	21368104 	addi	r4,r4,-9724
 c006158:	0039883a 	mov	fp,zero
 c00615c:	d9003a15 	stw	r4,232(sp)
 c006160:	04401e04 	movi	r17,120
 c006164:	003f6906 	br	c005f0c <__alt_data_end+0xfc005f0c>
 c006168:	8025883a 	mov	r18,r16
 c00616c:	dc002903 	ldbu	r16,164(sp)
 c006170:	e011883a 	mov	r8,fp
 c006174:	84003fcc 	andi	r16,r16,255
 c006178:	8005261e 	bne	r16,zero,c007614 <___svfprintf_internal_r+0x2284>
 c00617c:	883d6526 	beq	r17,zero,c005714 <__alt_data_end+0xfc005714>
 c006180:	00c00044 	movi	r3,1
 c006184:	d8c02915 	stw	r3,164(sp)
 c006188:	dc401405 	stb	r17,80(sp)
 c00618c:	d8002785 	stb	zero,158(sp)
 c006190:	003f7a06 	br	c005f7c <__alt_data_end+0xfc005f7c>
 c006194:	010300b4 	movhi	r4,3074
 c006198:	21368104 	addi	r4,r4,-9724
 c00619c:	d9003a15 	stw	r4,232(sp)
 c0061a0:	d8c02e15 	stw	r3,184(sp)
 c0061a4:	1025883a 	mov	r18,r2
 c0061a8:	04401e04 	movi	r17,120
 c0061ac:	a584b03a 	or	r2,r20,r22
 c0061b0:	1000fa1e 	bne	r2,zero,c00659c <___svfprintf_internal_r+0x120c>
 c0061b4:	0039883a 	mov	fp,zero
 c0061b8:	00800084 	movi	r2,2
 c0061bc:	10803fcc 	andi	r2,r2,255
 c0061c0:	00c00044 	movi	r3,1
 c0061c4:	10c21626 	beq	r2,r3,c006a20 <___svfprintf_internal_r+0x1690>
 c0061c8:	00c00084 	movi	r3,2
 c0061cc:	10fe0e1e 	bne	r2,r3,c005a08 <__alt_data_end+0xfc005a08>
 c0061d0:	003d4606 	br	c0056ec <__alt_data_end+0xfc0056ec>
 c0061d4:	d8c02017 	ldw	r3,128(sp)
 c0061d8:	003e7306 	br	c005ba8 <__alt_data_end+0xfc005ba8>
 c0061dc:	00801944 	movi	r2,101
 c0061e0:	14407c0e 	bge	r2,r17,c0063d4 <___svfprintf_internal_r+0x1044>
 c0061e4:	d9003617 	ldw	r4,216(sp)
 c0061e8:	d9403717 	ldw	r5,220(sp)
 c0061ec:	000d883a 	mov	r6,zero
 c0061f0:	000f883a 	mov	r7,zero
 c0061f4:	d8c03d15 	stw	r3,244(sp)
 c0061f8:	da003e15 	stw	r8,248(sp)
 c0061fc:	c0191140 	call	c019114 <__eqdf2>
 c006200:	d8c03d17 	ldw	r3,244(sp)
 c006204:	da003e17 	ldw	r8,248(sp)
 c006208:	1000f51e 	bne	r2,zero,c0065e0 <___svfprintf_internal_r+0x1250>
 c00620c:	d8801f17 	ldw	r2,124(sp)
 c006210:	010300b4 	movhi	r4,3074
 c006214:	21368804 	addi	r4,r4,-9696
 c006218:	18c00044 	addi	r3,r3,1
 c00621c:	10800044 	addi	r2,r2,1
 c006220:	41000015 	stw	r4,0(r8)
 c006224:	01000044 	movi	r4,1
 c006228:	41000115 	stw	r4,4(r8)
 c00622c:	d8c02015 	stw	r3,128(sp)
 c006230:	d8801f15 	stw	r2,124(sp)
 c006234:	010001c4 	movi	r4,7
 c006238:	20826616 	blt	r4,r2,c006bd4 <___svfprintf_internal_r+0x1844>
 c00623c:	42000204 	addi	r8,r8,8
 c006240:	d8802617 	ldw	r2,152(sp)
 c006244:	d9403317 	ldw	r5,204(sp)
 c006248:	11400216 	blt	r2,r5,c006254 <___svfprintf_internal_r+0xec4>
 c00624c:	9080004c 	andi	r2,r18,1
 c006250:	103eb326 	beq	r2,zero,c005d20 <__alt_data_end+0xfc005d20>
 c006254:	d8803817 	ldw	r2,224(sp)
 c006258:	d9003417 	ldw	r4,208(sp)
 c00625c:	d9403817 	ldw	r5,224(sp)
 c006260:	1887883a 	add	r3,r3,r2
 c006264:	d8801f17 	ldw	r2,124(sp)
 c006268:	41000015 	stw	r4,0(r8)
 c00626c:	41400115 	stw	r5,4(r8)
 c006270:	10800044 	addi	r2,r2,1
 c006274:	d8c02015 	stw	r3,128(sp)
 c006278:	d8801f15 	stw	r2,124(sp)
 c00627c:	010001c4 	movi	r4,7
 c006280:	2082af16 	blt	r4,r2,c006d40 <___svfprintf_internal_r+0x19b0>
 c006284:	42000204 	addi	r8,r8,8
 c006288:	d8803317 	ldw	r2,204(sp)
 c00628c:	143fffc4 	addi	r16,r2,-1
 c006290:	043ea30e 	bge	zero,r16,c005d20 <__alt_data_end+0xfc005d20>
 c006294:	04400404 	movi	r17,16
 c006298:	d8801f17 	ldw	r2,124(sp)
 c00629c:	8c00860e 	bge	r17,r16,c0064b8 <___svfprintf_internal_r+0x1128>
 c0062a0:	014300b4 	movhi	r5,3074
 c0062a4:	29768884 	addi	r5,r5,-9694
 c0062a8:	d9402c15 	stw	r5,176(sp)
 c0062ac:	058001c4 	movi	r22,7
 c0062b0:	dd002d17 	ldw	r20,180(sp)
 c0062b4:	00000306 	br	c0062c4 <___svfprintf_internal_r+0xf34>
 c0062b8:	42000204 	addi	r8,r8,8
 c0062bc:	843ffc04 	addi	r16,r16,-16
 c0062c0:	8c00800e 	bge	r17,r16,c0064c4 <___svfprintf_internal_r+0x1134>
 c0062c4:	18c00404 	addi	r3,r3,16
 c0062c8:	10800044 	addi	r2,r2,1
 c0062cc:	45400015 	stw	r21,0(r8)
 c0062d0:	44400115 	stw	r17,4(r8)
 c0062d4:	d8c02015 	stw	r3,128(sp)
 c0062d8:	d8801f15 	stw	r2,124(sp)
 c0062dc:	b0bff60e 	bge	r22,r2,c0062b8 <__alt_data_end+0xfc0062b8>
 c0062e0:	d9801e04 	addi	r6,sp,120
 c0062e4:	a00b883a 	mov	r5,r20
 c0062e8:	9809883a 	mov	r4,r19
 c0062ec:	c012aac0 	call	c012aac <__ssprint_r>
 c0062f0:	103d0e1e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c0062f4:	d8c02017 	ldw	r3,128(sp)
 c0062f8:	d8801f17 	ldw	r2,124(sp)
 c0062fc:	da000404 	addi	r8,sp,16
 c006300:	003fee06 	br	c0062bc <__alt_data_end+0xfc0062bc>
 c006304:	d9403117 	ldw	r5,196(sp)
 c006308:	d8802917 	ldw	r2,164(sp)
 c00630c:	28adc83a 	sub	r22,r5,r2
 c006310:	05be430e 	bge	zero,r22,c005c20 <__alt_data_end+0xfc005c20>
 c006314:	07000404 	movi	fp,16
 c006318:	d8801f17 	ldw	r2,124(sp)
 c00631c:	e583a20e 	bge	fp,r22,c0071a8 <___svfprintf_internal_r+0x1e18>
 c006320:	014300b4 	movhi	r5,3074
 c006324:	29768884 	addi	r5,r5,-9694
 c006328:	dc403015 	stw	r17,192(sp)
 c00632c:	d9402c15 	stw	r5,176(sp)
 c006330:	b023883a 	mov	r17,r22
 c006334:	050001c4 	movi	r20,7
 c006338:	902d883a 	mov	r22,r18
 c00633c:	8025883a 	mov	r18,r16
 c006340:	dc002d17 	ldw	r16,180(sp)
 c006344:	00000306 	br	c006354 <___svfprintf_internal_r+0xfc4>
 c006348:	8c7ffc04 	addi	r17,r17,-16
 c00634c:	42000204 	addi	r8,r8,8
 c006350:	e440110e 	bge	fp,r17,c006398 <___svfprintf_internal_r+0x1008>
 c006354:	18c00404 	addi	r3,r3,16
 c006358:	10800044 	addi	r2,r2,1
 c00635c:	45400015 	stw	r21,0(r8)
 c006360:	47000115 	stw	fp,4(r8)
 c006364:	d8c02015 	stw	r3,128(sp)
 c006368:	d8801f15 	stw	r2,124(sp)
 c00636c:	a0bff60e 	bge	r20,r2,c006348 <__alt_data_end+0xfc006348>
 c006370:	d9801e04 	addi	r6,sp,120
 c006374:	800b883a 	mov	r5,r16
 c006378:	9809883a 	mov	r4,r19
 c00637c:	c012aac0 	call	c012aac <__ssprint_r>
 c006380:	103cea1e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006384:	8c7ffc04 	addi	r17,r17,-16
 c006388:	d8c02017 	ldw	r3,128(sp)
 c00638c:	d8801f17 	ldw	r2,124(sp)
 c006390:	da000404 	addi	r8,sp,16
 c006394:	e47fef16 	blt	fp,r17,c006354 <__alt_data_end+0xfc006354>
 c006398:	9021883a 	mov	r16,r18
 c00639c:	b025883a 	mov	r18,r22
 c0063a0:	882d883a 	mov	r22,r17
 c0063a4:	dc403017 	ldw	r17,192(sp)
 c0063a8:	d9002c17 	ldw	r4,176(sp)
 c0063ac:	1d87883a 	add	r3,r3,r22
 c0063b0:	10800044 	addi	r2,r2,1
 c0063b4:	41000015 	stw	r4,0(r8)
 c0063b8:	45800115 	stw	r22,4(r8)
 c0063bc:	d8c02015 	stw	r3,128(sp)
 c0063c0:	d8801f15 	stw	r2,124(sp)
 c0063c4:	010001c4 	movi	r4,7
 c0063c8:	20819a16 	blt	r4,r2,c006a34 <___svfprintf_internal_r+0x16a4>
 c0063cc:	42000204 	addi	r8,r8,8
 c0063d0:	003e1306 	br	c005c20 <__alt_data_end+0xfc005c20>
 c0063d4:	d9403317 	ldw	r5,204(sp)
 c0063d8:	00800044 	movi	r2,1
 c0063dc:	18c00044 	addi	r3,r3,1
 c0063e0:	1141710e 	bge	r2,r5,c0069a8 <___svfprintf_internal_r+0x1618>
 c0063e4:	dc401f17 	ldw	r17,124(sp)
 c0063e8:	00800044 	movi	r2,1
 c0063ec:	40800115 	stw	r2,4(r8)
 c0063f0:	8c400044 	addi	r17,r17,1
 c0063f4:	44000015 	stw	r16,0(r8)
 c0063f8:	d8c02015 	stw	r3,128(sp)
 c0063fc:	dc401f15 	stw	r17,124(sp)
 c006400:	008001c4 	movi	r2,7
 c006404:	14417416 	blt	r2,r17,c0069d8 <___svfprintf_internal_r+0x1648>
 c006408:	42000204 	addi	r8,r8,8
 c00640c:	d8803817 	ldw	r2,224(sp)
 c006410:	d9003417 	ldw	r4,208(sp)
 c006414:	8c400044 	addi	r17,r17,1
 c006418:	10c7883a 	add	r3,r2,r3
 c00641c:	40800115 	stw	r2,4(r8)
 c006420:	41000015 	stw	r4,0(r8)
 c006424:	d8c02015 	stw	r3,128(sp)
 c006428:	dc401f15 	stw	r17,124(sp)
 c00642c:	008001c4 	movi	r2,7
 c006430:	14417216 	blt	r2,r17,c0069fc <___svfprintf_internal_r+0x166c>
 c006434:	45800204 	addi	r22,r8,8
 c006438:	d9003617 	ldw	r4,216(sp)
 c00643c:	d9403717 	ldw	r5,220(sp)
 c006440:	000d883a 	mov	r6,zero
 c006444:	000f883a 	mov	r7,zero
 c006448:	d8c03d15 	stw	r3,244(sp)
 c00644c:	c0191140 	call	c019114 <__eqdf2>
 c006450:	d8c03d17 	ldw	r3,244(sp)
 c006454:	1000b326 	beq	r2,zero,c006724 <___svfprintf_internal_r+0x1394>
 c006458:	d9403317 	ldw	r5,204(sp)
 c00645c:	84000044 	addi	r16,r16,1
 c006460:	8c400044 	addi	r17,r17,1
 c006464:	28bfffc4 	addi	r2,r5,-1
 c006468:	1887883a 	add	r3,r3,r2
 c00646c:	b0800115 	stw	r2,4(r22)
 c006470:	b4000015 	stw	r16,0(r22)
 c006474:	d8c02015 	stw	r3,128(sp)
 c006478:	dc401f15 	stw	r17,124(sp)
 c00647c:	008001c4 	movi	r2,7
 c006480:	1440d216 	blt	r2,r17,c0067cc <___svfprintf_internal_r+0x143c>
 c006484:	b5800204 	addi	r22,r22,8
 c006488:	d9003b17 	ldw	r4,236(sp)
 c00648c:	df0022c4 	addi	fp,sp,139
 c006490:	8c400044 	addi	r17,r17,1
 c006494:	20c7883a 	add	r3,r4,r3
 c006498:	b7000015 	stw	fp,0(r22)
 c00649c:	b1000115 	stw	r4,4(r22)
 c0064a0:	d8c02015 	stw	r3,128(sp)
 c0064a4:	dc401f15 	stw	r17,124(sp)
 c0064a8:	008001c4 	movi	r2,7
 c0064ac:	14400e16 	blt	r2,r17,c0064e8 <___svfprintf_internal_r+0x1158>
 c0064b0:	b2000204 	addi	r8,r22,8
 c0064b4:	003e1a06 	br	c005d20 <__alt_data_end+0xfc005d20>
 c0064b8:	010300b4 	movhi	r4,3074
 c0064bc:	21368884 	addi	r4,r4,-9694
 c0064c0:	d9002c15 	stw	r4,176(sp)
 c0064c4:	d9002c17 	ldw	r4,176(sp)
 c0064c8:	1c07883a 	add	r3,r3,r16
 c0064cc:	44000115 	stw	r16,4(r8)
 c0064d0:	41000015 	stw	r4,0(r8)
 c0064d4:	10800044 	addi	r2,r2,1
 c0064d8:	d8c02015 	stw	r3,128(sp)
 c0064dc:	d8801f15 	stw	r2,124(sp)
 c0064e0:	010001c4 	movi	r4,7
 c0064e4:	20be0d0e 	bge	r4,r2,c005d1c <__alt_data_end+0xfc005d1c>
 c0064e8:	d9402d17 	ldw	r5,180(sp)
 c0064ec:	d9801e04 	addi	r6,sp,120
 c0064f0:	9809883a 	mov	r4,r19
 c0064f4:	c012aac0 	call	c012aac <__ssprint_r>
 c0064f8:	103c8c1e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c0064fc:	d8c02017 	ldw	r3,128(sp)
 c006500:	da000404 	addi	r8,sp,16
 c006504:	003e0606 	br	c005d20 <__alt_data_end+0xfc005d20>
 c006508:	d9402d17 	ldw	r5,180(sp)
 c00650c:	d9801e04 	addi	r6,sp,120
 c006510:	9809883a 	mov	r4,r19
 c006514:	c012aac0 	call	c012aac <__ssprint_r>
 c006518:	103e3d26 	beq	r2,zero,c005e10 <__alt_data_end+0xfc005e10>
 c00651c:	003c8306 	br	c00572c <__alt_data_end+0xfc00572c>
 c006520:	d9402d17 	ldw	r5,180(sp)
 c006524:	d9801e04 	addi	r6,sp,120
 c006528:	9809883a 	mov	r4,r19
 c00652c:	c012aac0 	call	c012aac <__ssprint_r>
 c006530:	103c7e1e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006534:	d8c02017 	ldw	r3,128(sp)
 c006538:	da000404 	addi	r8,sp,16
 c00653c:	003deb06 	br	c005cec <__alt_data_end+0xfc005cec>
 c006540:	d9402d17 	ldw	r5,180(sp)
 c006544:	d9801e04 	addi	r6,sp,120
 c006548:	9809883a 	mov	r4,r19
 c00654c:	c012aac0 	call	c012aac <__ssprint_r>
 c006550:	103c761e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006554:	d8c02017 	ldw	r3,128(sp)
 c006558:	da000404 	addi	r8,sp,16
 c00655c:	003d9f06 	br	c005bdc <__alt_data_end+0xfc005bdc>
 c006560:	d9402d17 	ldw	r5,180(sp)
 c006564:	d9801e04 	addi	r6,sp,120
 c006568:	9809883a 	mov	r4,r19
 c00656c:	c012aac0 	call	c012aac <__ssprint_r>
 c006570:	103c6e1e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006574:	d8c02017 	ldw	r3,128(sp)
 c006578:	da000404 	addi	r8,sp,16
 c00657c:	003da506 	br	c005c14 <__alt_data_end+0xfc005c14>
 c006580:	d9402a17 	ldw	r5,168(sp)
 c006584:	d8002785 	stb	zero,158(sp)
 c006588:	283f0816 	blt	r5,zero,c0061ac <__alt_data_end+0xfc0061ac>
 c00658c:	00ffdfc4 	movi	r3,-129
 c006590:	a584b03a 	or	r2,r20,r22
 c006594:	90e4703a 	and	r18,r18,r3
 c006598:	103c5126 	beq	r2,zero,c0056e0 <__alt_data_end+0xfc0056e0>
 c00659c:	0039883a 	mov	fp,zero
 c0065a0:	003e5a06 	br	c005f0c <__alt_data_end+0xfc005f0c>
 c0065a4:	9080040c 	andi	r2,r18,16
 c0065a8:	10013d26 	beq	r2,zero,c006aa0 <___svfprintf_internal_r+0x1710>
 c0065ac:	d8c02e17 	ldw	r3,184(sp)
 c0065b0:	d9002a17 	ldw	r4,168(sp)
 c0065b4:	d8002785 	stb	zero,158(sp)
 c0065b8:	18800104 	addi	r2,r3,4
 c0065bc:	1d000017 	ldw	r20,0(r3)
 c0065c0:	002d883a 	mov	r22,zero
 c0065c4:	20013f16 	blt	r4,zero,c006ac4 <___svfprintf_internal_r+0x1734>
 c0065c8:	00ffdfc4 	movi	r3,-129
 c0065cc:	d8802e15 	stw	r2,184(sp)
 c0065d0:	90e4703a 	and	r18,r18,r3
 c0065d4:	a03d0926 	beq	r20,zero,c0059fc <__alt_data_end+0xfc0059fc>
 c0065d8:	0039883a 	mov	fp,zero
 c0065dc:	003d0c06 	br	c005a10 <__alt_data_end+0xfc005a10>
 c0065e0:	dc402617 	ldw	r17,152(sp)
 c0065e4:	0441830e 	bge	zero,r17,c006bf4 <___svfprintf_internal_r+0x1864>
 c0065e8:	dc403217 	ldw	r17,200(sp)
 c0065ec:	d8803317 	ldw	r2,204(sp)
 c0065f0:	1440010e 	bge	r2,r17,c0065f8 <___svfprintf_internal_r+0x1268>
 c0065f4:	1023883a 	mov	r17,r2
 c0065f8:	04400a0e 	bge	zero,r17,c006624 <___svfprintf_internal_r+0x1294>
 c0065fc:	d8801f17 	ldw	r2,124(sp)
 c006600:	1c47883a 	add	r3,r3,r17
 c006604:	44000015 	stw	r16,0(r8)
 c006608:	10800044 	addi	r2,r2,1
 c00660c:	44400115 	stw	r17,4(r8)
 c006610:	d8c02015 	stw	r3,128(sp)
 c006614:	d8801f15 	stw	r2,124(sp)
 c006618:	010001c4 	movi	r4,7
 c00661c:	20827516 	blt	r4,r2,c006ff4 <___svfprintf_internal_r+0x1c64>
 c006620:	42000204 	addi	r8,r8,8
 c006624:	88027b16 	blt	r17,zero,c007014 <___svfprintf_internal_r+0x1c84>
 c006628:	d9003217 	ldw	r4,200(sp)
 c00662c:	2463c83a 	sub	r17,r4,r17
 c006630:	0440990e 	bge	zero,r17,c006898 <___svfprintf_internal_r+0x1508>
 c006634:	05800404 	movi	r22,16
 c006638:	d8801f17 	ldw	r2,124(sp)
 c00663c:	b441530e 	bge	r22,r17,c006b8c <___svfprintf_internal_r+0x17fc>
 c006640:	010300b4 	movhi	r4,3074
 c006644:	21368884 	addi	r4,r4,-9694
 c006648:	d9002c15 	stw	r4,176(sp)
 c00664c:	070001c4 	movi	fp,7
 c006650:	dd002d17 	ldw	r20,180(sp)
 c006654:	00000306 	br	c006664 <___svfprintf_internal_r+0x12d4>
 c006658:	42000204 	addi	r8,r8,8
 c00665c:	8c7ffc04 	addi	r17,r17,-16
 c006660:	b4414d0e 	bge	r22,r17,c006b98 <___svfprintf_internal_r+0x1808>
 c006664:	18c00404 	addi	r3,r3,16
 c006668:	10800044 	addi	r2,r2,1
 c00666c:	45400015 	stw	r21,0(r8)
 c006670:	45800115 	stw	r22,4(r8)
 c006674:	d8c02015 	stw	r3,128(sp)
 c006678:	d8801f15 	stw	r2,124(sp)
 c00667c:	e0bff60e 	bge	fp,r2,c006658 <__alt_data_end+0xfc006658>
 c006680:	d9801e04 	addi	r6,sp,120
 c006684:	a00b883a 	mov	r5,r20
 c006688:	9809883a 	mov	r4,r19
 c00668c:	c012aac0 	call	c012aac <__ssprint_r>
 c006690:	103c261e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006694:	d8c02017 	ldw	r3,128(sp)
 c006698:	d8801f17 	ldw	r2,124(sp)
 c00669c:	da000404 	addi	r8,sp,16
 c0066a0:	003fee06 	br	c00665c <__alt_data_end+0xfc00665c>
 c0066a4:	d9402d17 	ldw	r5,180(sp)
 c0066a8:	d9801e04 	addi	r6,sp,120
 c0066ac:	9809883a 	mov	r4,r19
 c0066b0:	c012aac0 	call	c012aac <__ssprint_r>
 c0066b4:	103c1d1e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c0066b8:	d8c02017 	ldw	r3,128(sp)
 c0066bc:	df002787 	ldb	fp,158(sp)
 c0066c0:	da000404 	addi	r8,sp,16
 c0066c4:	003d3806 	br	c005ba8 <__alt_data_end+0xfc005ba8>
 c0066c8:	9080040c 	andi	r2,r18,16
 c0066cc:	10005c26 	beq	r2,zero,c006840 <___svfprintf_internal_r+0x14b0>
 c0066d0:	d8c02e17 	ldw	r3,184(sp)
 c0066d4:	d9002a17 	ldw	r4,168(sp)
 c0066d8:	d8002785 	stb	zero,158(sp)
 c0066dc:	18800104 	addi	r2,r3,4
 c0066e0:	1d000017 	ldw	r20,0(r3)
 c0066e4:	002d883a 	mov	r22,zero
 c0066e8:	20005e16 	blt	r4,zero,c006864 <___svfprintf_internal_r+0x14d4>
 c0066ec:	00ffdfc4 	movi	r3,-129
 c0066f0:	d8802e15 	stw	r2,184(sp)
 c0066f4:	90e4703a 	and	r18,r18,r3
 c0066f8:	0039883a 	mov	fp,zero
 c0066fc:	a03ddf26 	beq	r20,zero,c005e7c <__alt_data_end+0xfc005e7c>
 c006700:	00800244 	movi	r2,9
 c006704:	153c8e36 	bltu	r2,r20,c005940 <__alt_data_end+0xfc005940>
 c006708:	a5000c04 	addi	r20,r20,48
 c00670c:	dc001dc4 	addi	r16,sp,119
 c006710:	dd001dc5 	stb	r20,119(sp)
 c006714:	d8c02817 	ldw	r3,160(sp)
 c006718:	1c07c83a 	sub	r3,r3,r16
 c00671c:	d8c02b15 	stw	r3,172(sp)
 c006720:	003cd306 	br	c005a70 <__alt_data_end+0xfc005a70>
 c006724:	d8803317 	ldw	r2,204(sp)
 c006728:	143fffc4 	addi	r16,r2,-1
 c00672c:	043f560e 	bge	zero,r16,c006488 <__alt_data_end+0xfc006488>
 c006730:	07000404 	movi	fp,16
 c006734:	e403530e 	bge	fp,r16,c007484 <___svfprintf_internal_r+0x20f4>
 c006738:	014300b4 	movhi	r5,3074
 c00673c:	29768884 	addi	r5,r5,-9694
 c006740:	d9402c15 	stw	r5,176(sp)
 c006744:	01c001c4 	movi	r7,7
 c006748:	dd002d17 	ldw	r20,180(sp)
 c00674c:	00000306 	br	c00675c <___svfprintf_internal_r+0x13cc>
 c006750:	843ffc04 	addi	r16,r16,-16
 c006754:	b5800204 	addi	r22,r22,8
 c006758:	e400130e 	bge	fp,r16,c0067a8 <___svfprintf_internal_r+0x1418>
 c00675c:	18c00404 	addi	r3,r3,16
 c006760:	8c400044 	addi	r17,r17,1
 c006764:	b5400015 	stw	r21,0(r22)
 c006768:	b7000115 	stw	fp,4(r22)
 c00676c:	d8c02015 	stw	r3,128(sp)
 c006770:	dc401f15 	stw	r17,124(sp)
 c006774:	3c7ff60e 	bge	r7,r17,c006750 <__alt_data_end+0xfc006750>
 c006778:	d9801e04 	addi	r6,sp,120
 c00677c:	a00b883a 	mov	r5,r20
 c006780:	9809883a 	mov	r4,r19
 c006784:	d9c03d15 	stw	r7,244(sp)
 c006788:	c012aac0 	call	c012aac <__ssprint_r>
 c00678c:	d9c03d17 	ldw	r7,244(sp)
 c006790:	103be61e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006794:	843ffc04 	addi	r16,r16,-16
 c006798:	d8c02017 	ldw	r3,128(sp)
 c00679c:	dc401f17 	ldw	r17,124(sp)
 c0067a0:	dd800404 	addi	r22,sp,16
 c0067a4:	e43fed16 	blt	fp,r16,c00675c <__alt_data_end+0xfc00675c>
 c0067a8:	d8802c17 	ldw	r2,176(sp)
 c0067ac:	1c07883a 	add	r3,r3,r16
 c0067b0:	8c400044 	addi	r17,r17,1
 c0067b4:	b0800015 	stw	r2,0(r22)
 c0067b8:	b4000115 	stw	r16,4(r22)
 c0067bc:	d8c02015 	stw	r3,128(sp)
 c0067c0:	dc401f15 	stw	r17,124(sp)
 c0067c4:	008001c4 	movi	r2,7
 c0067c8:	147f2e0e 	bge	r2,r17,c006484 <__alt_data_end+0xfc006484>
 c0067cc:	d9402d17 	ldw	r5,180(sp)
 c0067d0:	d9801e04 	addi	r6,sp,120
 c0067d4:	9809883a 	mov	r4,r19
 c0067d8:	c012aac0 	call	c012aac <__ssprint_r>
 c0067dc:	103bd31e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c0067e0:	d8c02017 	ldw	r3,128(sp)
 c0067e4:	dc401f17 	ldw	r17,124(sp)
 c0067e8:	dd800404 	addi	r22,sp,16
 c0067ec:	003f2606 	br	c006488 <__alt_data_end+0xfc006488>
 c0067f0:	9080040c 	andi	r2,r18,16
 c0067f4:	1000c326 	beq	r2,zero,c006b04 <___svfprintf_internal_r+0x1774>
 c0067f8:	d9402e17 	ldw	r5,184(sp)
 c0067fc:	2d000017 	ldw	r20,0(r5)
 c006800:	29400104 	addi	r5,r5,4
 c006804:	d9402e15 	stw	r5,184(sp)
 c006808:	a02dd7fa 	srai	r22,r20,31
 c00680c:	b005883a 	mov	r2,r22
 c006810:	103c430e 	bge	r2,zero,c005920 <__alt_data_end+0xfc005920>
 c006814:	d9402a17 	ldw	r5,168(sp)
 c006818:	0529c83a 	sub	r20,zero,r20
 c00681c:	07000b44 	movi	fp,45
 c006820:	a004c03a 	cmpne	r2,r20,zero
 c006824:	05adc83a 	sub	r22,zero,r22
 c006828:	df002785 	stb	fp,158(sp)
 c00682c:	b0adc83a 	sub	r22,r22,r2
 c006830:	28022e16 	blt	r5,zero,c0070ec <___svfprintf_internal_r+0x1d5c>
 c006834:	00bfdfc4 	movi	r2,-129
 c006838:	90a4703a 	and	r18,r18,r2
 c00683c:	003c3f06 	br	c00593c <__alt_data_end+0xfc00593c>
 c006840:	9080100c 	andi	r2,r18,64
 c006844:	d8002785 	stb	zero,158(sp)
 c006848:	10012526 	beq	r2,zero,c006ce0 <___svfprintf_internal_r+0x1950>
 c00684c:	d9402e17 	ldw	r5,184(sp)
 c006850:	d8c02a17 	ldw	r3,168(sp)
 c006854:	002d883a 	mov	r22,zero
 c006858:	28800104 	addi	r2,r5,4
 c00685c:	2d00000b 	ldhu	r20,0(r5)
 c006860:	183fa20e 	bge	r3,zero,c0066ec <__alt_data_end+0xfc0066ec>
 c006864:	d8802e15 	stw	r2,184(sp)
 c006868:	0039883a 	mov	fp,zero
 c00686c:	a584b03a 	or	r2,r20,r22
 c006870:	103c321e 	bne	r2,zero,c00593c <__alt_data_end+0xfc00593c>
 c006874:	00800044 	movi	r2,1
 c006878:	003e5006 	br	c0061bc <__alt_data_end+0xfc0061bc>
 c00687c:	d9402d17 	ldw	r5,180(sp)
 c006880:	d9801e04 	addi	r6,sp,120
 c006884:	9809883a 	mov	r4,r19
 c006888:	c012aac0 	call	c012aac <__ssprint_r>
 c00688c:	103ba71e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006890:	d8c02017 	ldw	r3,128(sp)
 c006894:	da000404 	addi	r8,sp,16
 c006898:	d9003217 	ldw	r4,200(sp)
 c00689c:	d8802617 	ldw	r2,152(sp)
 c0068a0:	d9403317 	ldw	r5,204(sp)
 c0068a4:	8123883a 	add	r17,r16,r4
 c0068a8:	11400216 	blt	r2,r5,c0068b4 <___svfprintf_internal_r+0x1524>
 c0068ac:	9100004c 	andi	r4,r18,1
 c0068b0:	20000d26 	beq	r4,zero,c0068e8 <___svfprintf_internal_r+0x1558>
 c0068b4:	d9003817 	ldw	r4,224(sp)
 c0068b8:	d9403417 	ldw	r5,208(sp)
 c0068bc:	1907883a 	add	r3,r3,r4
 c0068c0:	d9001f17 	ldw	r4,124(sp)
 c0068c4:	41400015 	stw	r5,0(r8)
 c0068c8:	d9403817 	ldw	r5,224(sp)
 c0068cc:	21000044 	addi	r4,r4,1
 c0068d0:	d8c02015 	stw	r3,128(sp)
 c0068d4:	41400115 	stw	r5,4(r8)
 c0068d8:	d9001f15 	stw	r4,124(sp)
 c0068dc:	014001c4 	movi	r5,7
 c0068e0:	2901dc16 	blt	r5,r4,c007054 <___svfprintf_internal_r+0x1cc4>
 c0068e4:	42000204 	addi	r8,r8,8
 c0068e8:	d9003317 	ldw	r4,204(sp)
 c0068ec:	8121883a 	add	r16,r16,r4
 c0068f0:	2085c83a 	sub	r2,r4,r2
 c0068f4:	8461c83a 	sub	r16,r16,r17
 c0068f8:	1400010e 	bge	r2,r16,c006900 <___svfprintf_internal_r+0x1570>
 c0068fc:	1021883a 	mov	r16,r2
 c006900:	04000a0e 	bge	zero,r16,c00692c <___svfprintf_internal_r+0x159c>
 c006904:	d9001f17 	ldw	r4,124(sp)
 c006908:	1c07883a 	add	r3,r3,r16
 c00690c:	44400015 	stw	r17,0(r8)
 c006910:	21000044 	addi	r4,r4,1
 c006914:	44000115 	stw	r16,4(r8)
 c006918:	d8c02015 	stw	r3,128(sp)
 c00691c:	d9001f15 	stw	r4,124(sp)
 c006920:	014001c4 	movi	r5,7
 c006924:	2901e616 	blt	r5,r4,c0070c0 <___svfprintf_internal_r+0x1d30>
 c006928:	42000204 	addi	r8,r8,8
 c00692c:	8001f616 	blt	r16,zero,c007108 <___svfprintf_internal_r+0x1d78>
 c006930:	1421c83a 	sub	r16,r2,r16
 c006934:	043cfa0e 	bge	zero,r16,c005d20 <__alt_data_end+0xfc005d20>
 c006938:	04400404 	movi	r17,16
 c00693c:	d8801f17 	ldw	r2,124(sp)
 c006940:	8c3edd0e 	bge	r17,r16,c0064b8 <__alt_data_end+0xfc0064b8>
 c006944:	014300b4 	movhi	r5,3074
 c006948:	29768884 	addi	r5,r5,-9694
 c00694c:	d9402c15 	stw	r5,176(sp)
 c006950:	058001c4 	movi	r22,7
 c006954:	dd002d17 	ldw	r20,180(sp)
 c006958:	00000306 	br	c006968 <___svfprintf_internal_r+0x15d8>
 c00695c:	42000204 	addi	r8,r8,8
 c006960:	843ffc04 	addi	r16,r16,-16
 c006964:	8c3ed70e 	bge	r17,r16,c0064c4 <__alt_data_end+0xfc0064c4>
 c006968:	18c00404 	addi	r3,r3,16
 c00696c:	10800044 	addi	r2,r2,1
 c006970:	45400015 	stw	r21,0(r8)
 c006974:	44400115 	stw	r17,4(r8)
 c006978:	d8c02015 	stw	r3,128(sp)
 c00697c:	d8801f15 	stw	r2,124(sp)
 c006980:	b0bff60e 	bge	r22,r2,c00695c <__alt_data_end+0xfc00695c>
 c006984:	d9801e04 	addi	r6,sp,120
 c006988:	a00b883a 	mov	r5,r20
 c00698c:	9809883a 	mov	r4,r19
 c006990:	c012aac0 	call	c012aac <__ssprint_r>
 c006994:	103b651e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006998:	d8c02017 	ldw	r3,128(sp)
 c00699c:	d8801f17 	ldw	r2,124(sp)
 c0069a0:	da000404 	addi	r8,sp,16
 c0069a4:	003fee06 	br	c006960 <__alt_data_end+0xfc006960>
 c0069a8:	9088703a 	and	r4,r18,r2
 c0069ac:	203e8d1e 	bne	r4,zero,c0063e4 <__alt_data_end+0xfc0063e4>
 c0069b0:	dc401f17 	ldw	r17,124(sp)
 c0069b4:	40800115 	stw	r2,4(r8)
 c0069b8:	44000015 	stw	r16,0(r8)
 c0069bc:	8c400044 	addi	r17,r17,1
 c0069c0:	d8c02015 	stw	r3,128(sp)
 c0069c4:	dc401f15 	stw	r17,124(sp)
 c0069c8:	008001c4 	movi	r2,7
 c0069cc:	147f7f16 	blt	r2,r17,c0067cc <__alt_data_end+0xfc0067cc>
 c0069d0:	45800204 	addi	r22,r8,8
 c0069d4:	003eac06 	br	c006488 <__alt_data_end+0xfc006488>
 c0069d8:	d9402d17 	ldw	r5,180(sp)
 c0069dc:	d9801e04 	addi	r6,sp,120
 c0069e0:	9809883a 	mov	r4,r19
 c0069e4:	c012aac0 	call	c012aac <__ssprint_r>
 c0069e8:	103b501e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c0069ec:	d8c02017 	ldw	r3,128(sp)
 c0069f0:	dc401f17 	ldw	r17,124(sp)
 c0069f4:	da000404 	addi	r8,sp,16
 c0069f8:	003e8406 	br	c00640c <__alt_data_end+0xfc00640c>
 c0069fc:	d9402d17 	ldw	r5,180(sp)
 c006a00:	d9801e04 	addi	r6,sp,120
 c006a04:	9809883a 	mov	r4,r19
 c006a08:	c012aac0 	call	c012aac <__ssprint_r>
 c006a0c:	103b471e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006a10:	d8c02017 	ldw	r3,128(sp)
 c006a14:	dc401f17 	ldw	r17,124(sp)
 c006a18:	dd800404 	addi	r22,sp,16
 c006a1c:	003e8606 	br	c006438 <__alt_data_end+0xfc006438>
 c006a20:	0029883a 	mov	r20,zero
 c006a24:	a5000c04 	addi	r20,r20,48
 c006a28:	dc001dc4 	addi	r16,sp,119
 c006a2c:	dd001dc5 	stb	r20,119(sp)
 c006a30:	003f3806 	br	c006714 <__alt_data_end+0xfc006714>
 c006a34:	d9402d17 	ldw	r5,180(sp)
 c006a38:	d9801e04 	addi	r6,sp,120
 c006a3c:	9809883a 	mov	r4,r19
 c006a40:	c012aac0 	call	c012aac <__ssprint_r>
 c006a44:	103b391e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006a48:	d8c02017 	ldw	r3,128(sp)
 c006a4c:	da000404 	addi	r8,sp,16
 c006a50:	003c7306 	br	c005c20 <__alt_data_end+0xfc005c20>
 c006a54:	d9003617 	ldw	r4,216(sp)
 c006a58:	d9403717 	ldw	r5,220(sp)
 c006a5c:	da003e15 	stw	r8,248(sp)
 c006a60:	c0104bc0 	call	c0104bc <__fpclassifyd>
 c006a64:	da003e17 	ldw	r8,248(sp)
 c006a68:	1000bd1e 	bne	r2,zero,c006d60 <___svfprintf_internal_r+0x19d0>
 c006a6c:	008011c4 	movi	r2,71
 c006a70:	14411e0e 	bge	r2,r17,c006eec <___svfprintf_internal_r+0x1b5c>
 c006a74:	040300b4 	movhi	r16,3074
 c006a78:	84367b04 	addi	r16,r16,-9748
 c006a7c:	00c000c4 	movi	r3,3
 c006a80:	00bfdfc4 	movi	r2,-129
 c006a84:	d8c02915 	stw	r3,164(sp)
 c006a88:	90a4703a 	and	r18,r18,r2
 c006a8c:	df002783 	ldbu	fp,158(sp)
 c006a90:	d8c02b15 	stw	r3,172(sp)
 c006a94:	d8002a15 	stw	zero,168(sp)
 c006a98:	d8003215 	stw	zero,200(sp)
 c006a9c:	003bfa06 	br	c005a88 <__alt_data_end+0xfc005a88>
 c006aa0:	9080100c 	andi	r2,r18,64
 c006aa4:	d8002785 	stb	zero,158(sp)
 c006aa8:	10009426 	beq	r2,zero,c006cfc <___svfprintf_internal_r+0x196c>
 c006aac:	d9402e17 	ldw	r5,184(sp)
 c006ab0:	d8c02a17 	ldw	r3,168(sp)
 c006ab4:	002d883a 	mov	r22,zero
 c006ab8:	28800104 	addi	r2,r5,4
 c006abc:	2d00000b 	ldhu	r20,0(r5)
 c006ac0:	183ec10e 	bge	r3,zero,c0065c8 <__alt_data_end+0xfc0065c8>
 c006ac4:	a586b03a 	or	r3,r20,r22
 c006ac8:	d8802e15 	stw	r2,184(sp)
 c006acc:	183ec21e 	bne	r3,zero,c0065d8 <__alt_data_end+0xfc0065d8>
 c006ad0:	0039883a 	mov	fp,zero
 c006ad4:	0005883a 	mov	r2,zero
 c006ad8:	003db806 	br	c0061bc <__alt_data_end+0xfc0061bc>
 c006adc:	d8c02e17 	ldw	r3,184(sp)
 c006ae0:	d9002e17 	ldw	r4,184(sp)
 c006ae4:	d9402e17 	ldw	r5,184(sp)
 c006ae8:	18c00017 	ldw	r3,0(r3)
 c006aec:	21000117 	ldw	r4,4(r4)
 c006af0:	29400204 	addi	r5,r5,8
 c006af4:	d8c03615 	stw	r3,216(sp)
 c006af8:	d9003715 	stw	r4,220(sp)
 c006afc:	d9402e15 	stw	r5,184(sp)
 c006b00:	003b5a06 	br	c00586c <__alt_data_end+0xfc00586c>
 c006b04:	9080100c 	andi	r2,r18,64
 c006b08:	10010726 	beq	r2,zero,c006f28 <___svfprintf_internal_r+0x1b98>
 c006b0c:	d8802e17 	ldw	r2,184(sp)
 c006b10:	1500000f 	ldh	r20,0(r2)
 c006b14:	10800104 	addi	r2,r2,4
 c006b18:	d8802e15 	stw	r2,184(sp)
 c006b1c:	a02dd7fa 	srai	r22,r20,31
 c006b20:	b005883a 	mov	r2,r22
 c006b24:	003b7d06 	br	c00591c <__alt_data_end+0xfc00591c>
 c006b28:	9080100c 	andi	r2,r18,64
 c006b2c:	10010526 	beq	r2,zero,c006f44 <___svfprintf_internal_r+0x1bb4>
 c006b30:	d8c02e17 	ldw	r3,184(sp)
 c006b34:	002d883a 	mov	r22,zero
 c006b38:	1d00000b 	ldhu	r20,0(r3)
 c006b3c:	18c00104 	addi	r3,r3,4
 c006b40:	d8c02e15 	stw	r3,184(sp)
 c006b44:	003ce206 	br	c005ed0 <__alt_data_end+0xfc005ed0>
 c006b48:	bc400007 	ldb	r17,0(r23)
 c006b4c:	003a6506 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c006b50:	9080040c 	andi	r2,r18,16
 c006b54:	10010126 	beq	r2,zero,c006f5c <___svfprintf_internal_r+0x1bcc>
 c006b58:	d8c02e17 	ldw	r3,184(sp)
 c006b5c:	d9002f17 	ldw	r4,188(sp)
 c006b60:	18800017 	ldw	r2,0(r3)
 c006b64:	18c00104 	addi	r3,r3,4
 c006b68:	d8c02e15 	stw	r3,184(sp)
 c006b6c:	11000015 	stw	r4,0(r2)
 c006b70:	003a3206 	br	c00543c <__alt_data_end+0xfc00543c>
 c006b74:	d9002a17 	ldw	r4,168(sp)
 c006b78:	d8002785 	stb	zero,158(sp)
 c006b7c:	203d8d16 	blt	r4,zero,c0061b4 <__alt_data_end+0xfc0061b4>
 c006b80:	00bfdfc4 	movi	r2,-129
 c006b84:	90a4703a 	and	r18,r18,r2
 c006b88:	003ad506 	br	c0056e0 <__alt_data_end+0xfc0056e0>
 c006b8c:	014300b4 	movhi	r5,3074
 c006b90:	29768884 	addi	r5,r5,-9694
 c006b94:	d9402c15 	stw	r5,176(sp)
 c006b98:	d9402c17 	ldw	r5,176(sp)
 c006b9c:	1c47883a 	add	r3,r3,r17
 c006ba0:	10800044 	addi	r2,r2,1
 c006ba4:	41400015 	stw	r5,0(r8)
 c006ba8:	44400115 	stw	r17,4(r8)
 c006bac:	d8c02015 	stw	r3,128(sp)
 c006bb0:	d8801f15 	stw	r2,124(sp)
 c006bb4:	010001c4 	movi	r4,7
 c006bb8:	20bf3016 	blt	r4,r2,c00687c <__alt_data_end+0xfc00687c>
 c006bbc:	42000204 	addi	r8,r8,8
 c006bc0:	003f3506 	br	c006898 <__alt_data_end+0xfc006898>
 c006bc4:	010300b4 	movhi	r4,3074
 c006bc8:	21368884 	addi	r4,r4,-9694
 c006bcc:	d9002c15 	stw	r4,176(sp)
 c006bd0:	003c3c06 	br	c005cc4 <__alt_data_end+0xfc005cc4>
 c006bd4:	d9402d17 	ldw	r5,180(sp)
 c006bd8:	d9801e04 	addi	r6,sp,120
 c006bdc:	9809883a 	mov	r4,r19
 c006be0:	c012aac0 	call	c012aac <__ssprint_r>
 c006be4:	103ad11e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006be8:	d8c02017 	ldw	r3,128(sp)
 c006bec:	da000404 	addi	r8,sp,16
 c006bf0:	003d9306 	br	c006240 <__alt_data_end+0xfc006240>
 c006bf4:	d8801f17 	ldw	r2,124(sp)
 c006bf8:	014300b4 	movhi	r5,3074
 c006bfc:	01000044 	movi	r4,1
 c006c00:	18c00044 	addi	r3,r3,1
 c006c04:	10800044 	addi	r2,r2,1
 c006c08:	29768804 	addi	r5,r5,-9696
 c006c0c:	41000115 	stw	r4,4(r8)
 c006c10:	41400015 	stw	r5,0(r8)
 c006c14:	d8c02015 	stw	r3,128(sp)
 c006c18:	d8801f15 	stw	r2,124(sp)
 c006c1c:	010001c4 	movi	r4,7
 c006c20:	2080b516 	blt	r4,r2,c006ef8 <___svfprintf_internal_r+0x1b68>
 c006c24:	42000204 	addi	r8,r8,8
 c006c28:	8800041e 	bne	r17,zero,c006c3c <___svfprintf_internal_r+0x18ac>
 c006c2c:	d8803317 	ldw	r2,204(sp)
 c006c30:	1000021e 	bne	r2,zero,c006c3c <___svfprintf_internal_r+0x18ac>
 c006c34:	9080004c 	andi	r2,r18,1
 c006c38:	103c3926 	beq	r2,zero,c005d20 <__alt_data_end+0xfc005d20>
 c006c3c:	d9003817 	ldw	r4,224(sp)
 c006c40:	d8801f17 	ldw	r2,124(sp)
 c006c44:	d9403417 	ldw	r5,208(sp)
 c006c48:	20c7883a 	add	r3,r4,r3
 c006c4c:	10800044 	addi	r2,r2,1
 c006c50:	41000115 	stw	r4,4(r8)
 c006c54:	41400015 	stw	r5,0(r8)
 c006c58:	d8c02015 	stw	r3,128(sp)
 c006c5c:	d8801f15 	stw	r2,124(sp)
 c006c60:	010001c4 	movi	r4,7
 c006c64:	20818016 	blt	r4,r2,c007268 <___svfprintf_internal_r+0x1ed8>
 c006c68:	42000204 	addi	r8,r8,8
 c006c6c:	0463c83a 	sub	r17,zero,r17
 c006c70:	0440cb0e 	bge	zero,r17,c006fa0 <___svfprintf_internal_r+0x1c10>
 c006c74:	05800404 	movi	r22,16
 c006c78:	b440e80e 	bge	r22,r17,c00701c <___svfprintf_internal_r+0x1c8c>
 c006c7c:	014300b4 	movhi	r5,3074
 c006c80:	29768884 	addi	r5,r5,-9694
 c006c84:	d9402c15 	stw	r5,176(sp)
 c006c88:	070001c4 	movi	fp,7
 c006c8c:	dd002d17 	ldw	r20,180(sp)
 c006c90:	00000306 	br	c006ca0 <___svfprintf_internal_r+0x1910>
 c006c94:	42000204 	addi	r8,r8,8
 c006c98:	8c7ffc04 	addi	r17,r17,-16
 c006c9c:	b440e20e 	bge	r22,r17,c007028 <___svfprintf_internal_r+0x1c98>
 c006ca0:	18c00404 	addi	r3,r3,16
 c006ca4:	10800044 	addi	r2,r2,1
 c006ca8:	45400015 	stw	r21,0(r8)
 c006cac:	45800115 	stw	r22,4(r8)
 c006cb0:	d8c02015 	stw	r3,128(sp)
 c006cb4:	d8801f15 	stw	r2,124(sp)
 c006cb8:	e0bff60e 	bge	fp,r2,c006c94 <__alt_data_end+0xfc006c94>
 c006cbc:	d9801e04 	addi	r6,sp,120
 c006cc0:	a00b883a 	mov	r5,r20
 c006cc4:	9809883a 	mov	r4,r19
 c006cc8:	c012aac0 	call	c012aac <__ssprint_r>
 c006ccc:	103a971e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006cd0:	d8c02017 	ldw	r3,128(sp)
 c006cd4:	d8801f17 	ldw	r2,124(sp)
 c006cd8:	da000404 	addi	r8,sp,16
 c006cdc:	003fee06 	br	c006c98 <__alt_data_end+0xfc006c98>
 c006ce0:	d9002e17 	ldw	r4,184(sp)
 c006ce4:	d9402a17 	ldw	r5,168(sp)
 c006ce8:	002d883a 	mov	r22,zero
 c006cec:	20800104 	addi	r2,r4,4
 c006cf0:	25000017 	ldw	r20,0(r4)
 c006cf4:	283e7d0e 	bge	r5,zero,c0066ec <__alt_data_end+0xfc0066ec>
 c006cf8:	003eda06 	br	c006864 <__alt_data_end+0xfc006864>
 c006cfc:	d9002e17 	ldw	r4,184(sp)
 c006d00:	d9402a17 	ldw	r5,168(sp)
 c006d04:	002d883a 	mov	r22,zero
 c006d08:	20800104 	addi	r2,r4,4
 c006d0c:	25000017 	ldw	r20,0(r4)
 c006d10:	283e2d0e 	bge	r5,zero,c0065c8 <__alt_data_end+0xfc0065c8>
 c006d14:	003f6b06 	br	c006ac4 <__alt_data_end+0xfc006ac4>
 c006d18:	d8c02e15 	stw	r3,184(sp)
 c006d1c:	0039883a 	mov	fp,zero
 c006d20:	003ed206 	br	c00686c <__alt_data_end+0xfc00686c>
 c006d24:	bc400043 	ldbu	r17,1(r23)
 c006d28:	84000814 	ori	r16,r16,32
 c006d2c:	bdc00044 	addi	r23,r23,1
 c006d30:	8c403fcc 	andi	r17,r17,255
 c006d34:	8c40201c 	xori	r17,r17,128
 c006d38:	8c7fe004 	addi	r17,r17,-128
 c006d3c:	0039e906 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c006d40:	d9402d17 	ldw	r5,180(sp)
 c006d44:	d9801e04 	addi	r6,sp,120
 c006d48:	9809883a 	mov	r4,r19
 c006d4c:	c012aac0 	call	c012aac <__ssprint_r>
 c006d50:	103a761e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006d54:	d8c02017 	ldw	r3,128(sp)
 c006d58:	da000404 	addi	r8,sp,16
 c006d5c:	003d4a06 	br	c006288 <__alt_data_end+0xfc006288>
 c006d60:	d9002a17 	ldw	r4,168(sp)
 c006d64:	05bff7c4 	movi	r22,-33
 c006d68:	00bfffc4 	movi	r2,-1
 c006d6c:	8dac703a 	and	r22,r17,r22
 c006d70:	20806a26 	beq	r4,r2,c006f1c <___svfprintf_internal_r+0x1b8c>
 c006d74:	008011c4 	movi	r2,71
 c006d78:	b0813726 	beq	r22,r2,c007258 <___svfprintf_internal_r+0x1ec8>
 c006d7c:	d9003717 	ldw	r4,220(sp)
 c006d80:	90c04014 	ori	r3,r18,256
 c006d84:	d8c02c15 	stw	r3,176(sp)
 c006d88:	20015d16 	blt	r4,zero,c007300 <___svfprintf_internal_r+0x1f70>
 c006d8c:	dd003717 	ldw	r20,220(sp)
 c006d90:	d8002905 	stb	zero,164(sp)
 c006d94:	00801984 	movi	r2,102
 c006d98:	88814026 	beq	r17,r2,c00729c <___svfprintf_internal_r+0x1f0c>
 c006d9c:	00801184 	movi	r2,70
 c006da0:	88817126 	beq	r17,r2,c007368 <___svfprintf_internal_r+0x1fd8>
 c006da4:	00801144 	movi	r2,69
 c006da8:	b0816226 	beq	r22,r2,c007334 <___svfprintf_internal_r+0x1fa4>
 c006dac:	d8c02a17 	ldw	r3,168(sp)
 c006db0:	d8802104 	addi	r2,sp,132
 c006db4:	d8800315 	stw	r2,12(sp)
 c006db8:	d9403617 	ldw	r5,216(sp)
 c006dbc:	d8802504 	addi	r2,sp,148
 c006dc0:	d8800215 	stw	r2,8(sp)
 c006dc4:	d8802604 	addi	r2,sp,152
 c006dc8:	d8c00015 	stw	r3,0(sp)
 c006dcc:	d8800115 	stw	r2,4(sp)
 c006dd0:	01c00084 	movi	r7,2
 c006dd4:	a00d883a 	mov	r6,r20
 c006dd8:	9809883a 	mov	r4,r19
 c006ddc:	d8c03d15 	stw	r3,244(sp)
 c006de0:	da003e15 	stw	r8,248(sp)
 c006de4:	c00b7d80 	call	c00b7d8 <_dtoa_r>
 c006de8:	1021883a 	mov	r16,r2
 c006dec:	008019c4 	movi	r2,103
 c006df0:	d8c03d17 	ldw	r3,244(sp)
 c006df4:	da003e17 	ldw	r8,248(sp)
 c006df8:	8880e726 	beq	r17,r2,c007198 <___svfprintf_internal_r+0x1e08>
 c006dfc:	008011c4 	movi	r2,71
 c006e00:	8880d426 	beq	r17,r2,c007154 <___svfprintf_internal_r+0x1dc4>
 c006e04:	80f9883a 	add	fp,r16,r3
 c006e08:	d9003617 	ldw	r4,216(sp)
 c006e0c:	000d883a 	mov	r6,zero
 c006e10:	000f883a 	mov	r7,zero
 c006e14:	a00b883a 	mov	r5,r20
 c006e18:	da003e15 	stw	r8,248(sp)
 c006e1c:	c0191140 	call	c019114 <__eqdf2>
 c006e20:	da003e17 	ldw	r8,248(sp)
 c006e24:	1000e426 	beq	r2,zero,c0071b8 <___svfprintf_internal_r+0x1e28>
 c006e28:	d8802117 	ldw	r2,132(sp)
 c006e2c:	1700062e 	bgeu	r2,fp,c006e48 <___svfprintf_internal_r+0x1ab8>
 c006e30:	01000c04 	movi	r4,48
 c006e34:	10c00044 	addi	r3,r2,1
 c006e38:	d8c02115 	stw	r3,132(sp)
 c006e3c:	11000005 	stb	r4,0(r2)
 c006e40:	d8802117 	ldw	r2,132(sp)
 c006e44:	173ffb36 	bltu	r2,fp,c006e34 <__alt_data_end+0xfc006e34>
 c006e48:	1405c83a 	sub	r2,r2,r16
 c006e4c:	d8803315 	stw	r2,204(sp)
 c006e50:	008011c4 	movi	r2,71
 c006e54:	b080c526 	beq	r22,r2,c00716c <___svfprintf_internal_r+0x1ddc>
 c006e58:	00801944 	movi	r2,101
 c006e5c:	1441d80e 	bge	r2,r17,c0075c0 <___svfprintf_internal_r+0x2230>
 c006e60:	d8c02617 	ldw	r3,152(sp)
 c006e64:	00801984 	movi	r2,102
 c006e68:	d8c03215 	stw	r3,200(sp)
 c006e6c:	88813426 	beq	r17,r2,c007340 <___svfprintf_internal_r+0x1fb0>
 c006e70:	d8c03217 	ldw	r3,200(sp)
 c006e74:	d9003317 	ldw	r4,204(sp)
 c006e78:	19012516 	blt	r3,r4,c007310 <___svfprintf_internal_r+0x1f80>
 c006e7c:	9480004c 	andi	r18,r18,1
 c006e80:	9001841e 	bne	r18,zero,c007494 <___svfprintf_internal_r+0x2104>
 c006e84:	1805883a 	mov	r2,r3
 c006e88:	1801cb16 	blt	r3,zero,c0075b8 <___svfprintf_internal_r+0x2228>
 c006e8c:	d8c03217 	ldw	r3,200(sp)
 c006e90:	044019c4 	movi	r17,103
 c006e94:	d8c02b15 	stw	r3,172(sp)
 c006e98:	df002907 	ldb	fp,164(sp)
 c006e9c:	e000a61e 	bne	fp,zero,c007138 <___svfprintf_internal_r+0x1da8>
 c006ea0:	df002783 	ldbu	fp,158(sp)
 c006ea4:	d8802915 	stw	r2,164(sp)
 c006ea8:	dc802c17 	ldw	r18,176(sp)
 c006eac:	d8002a15 	stw	zero,168(sp)
 c006eb0:	003af506 	br	c005a88 <__alt_data_end+0xfc005a88>
 c006eb4:	040300b4 	movhi	r16,3074
 c006eb8:	84367804 	addi	r16,r16,-9760
 c006ebc:	003a7e06 	br	c0058b8 <__alt_data_end+0xfc0058b8>
 c006ec0:	d9003917 	ldw	r4,228(sp)
 c006ec4:	04001004 	movi	r16,64
 c006ec8:	800b883a 	mov	r5,r16
 c006ecc:	c00478c0 	call	c00478c <_malloc_r>
 c006ed0:	d9002d17 	ldw	r4,180(sp)
 c006ed4:	20800015 	stw	r2,0(r4)
 c006ed8:	20800415 	stw	r2,16(r4)
 c006edc:	1001d026 	beq	r2,zero,c007620 <___svfprintf_internal_r+0x2290>
 c006ee0:	d8802d17 	ldw	r2,180(sp)
 c006ee4:	14000515 	stw	r16,20(r2)
 c006ee8:	00394406 	br	c0053fc <__alt_data_end+0xfc0053fc>
 c006eec:	040300b4 	movhi	r16,3074
 c006ef0:	84367a04 	addi	r16,r16,-9752
 c006ef4:	003ee106 	br	c006a7c <__alt_data_end+0xfc006a7c>
 c006ef8:	d9402d17 	ldw	r5,180(sp)
 c006efc:	d9801e04 	addi	r6,sp,120
 c006f00:	9809883a 	mov	r4,r19
 c006f04:	c012aac0 	call	c012aac <__ssprint_r>
 c006f08:	103a081e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006f0c:	dc402617 	ldw	r17,152(sp)
 c006f10:	d8c02017 	ldw	r3,128(sp)
 c006f14:	da000404 	addi	r8,sp,16
 c006f18:	003f4306 	br	c006c28 <__alt_data_end+0xfc006c28>
 c006f1c:	01400184 	movi	r5,6
 c006f20:	d9402a15 	stw	r5,168(sp)
 c006f24:	003f9506 	br	c006d7c <__alt_data_end+0xfc006d7c>
 c006f28:	d8c02e17 	ldw	r3,184(sp)
 c006f2c:	1d000017 	ldw	r20,0(r3)
 c006f30:	18c00104 	addi	r3,r3,4
 c006f34:	d8c02e15 	stw	r3,184(sp)
 c006f38:	a02dd7fa 	srai	r22,r20,31
 c006f3c:	b005883a 	mov	r2,r22
 c006f40:	003a7606 	br	c00591c <__alt_data_end+0xfc00591c>
 c006f44:	d9002e17 	ldw	r4,184(sp)
 c006f48:	002d883a 	mov	r22,zero
 c006f4c:	25000017 	ldw	r20,0(r4)
 c006f50:	21000104 	addi	r4,r4,4
 c006f54:	d9002e15 	stw	r4,184(sp)
 c006f58:	003bdd06 	br	c005ed0 <__alt_data_end+0xfc005ed0>
 c006f5c:	9480100c 	andi	r18,r18,64
 c006f60:	90006e26 	beq	r18,zero,c00711c <___svfprintf_internal_r+0x1d8c>
 c006f64:	d9402e17 	ldw	r5,184(sp)
 c006f68:	d8c02f17 	ldw	r3,188(sp)
 c006f6c:	28800017 	ldw	r2,0(r5)
 c006f70:	29400104 	addi	r5,r5,4
 c006f74:	d9402e15 	stw	r5,184(sp)
 c006f78:	10c0000d 	sth	r3,0(r2)
 c006f7c:	00392f06 	br	c00543c <__alt_data_end+0xfc00543c>
 c006f80:	d9402d17 	ldw	r5,180(sp)
 c006f84:	d9801e04 	addi	r6,sp,120
 c006f88:	9809883a 	mov	r4,r19
 c006f8c:	c012aac0 	call	c012aac <__ssprint_r>
 c006f90:	1039e61e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c006f94:	d8c02017 	ldw	r3,128(sp)
 c006f98:	d8801f17 	ldw	r2,124(sp)
 c006f9c:	da000404 	addi	r8,sp,16
 c006fa0:	d9403317 	ldw	r5,204(sp)
 c006fa4:	10800044 	addi	r2,r2,1
 c006fa8:	44000015 	stw	r16,0(r8)
 c006fac:	28c7883a 	add	r3,r5,r3
 c006fb0:	003b5506 	br	c005d08 <__alt_data_end+0xfc005d08>
 c006fb4:	8009883a 	mov	r4,r16
 c006fb8:	df003e15 	stw	fp,248(sp)
 c006fbc:	c0052f80 	call	c0052f8 <strlen>
 c006fc0:	d8802b15 	stw	r2,172(sp)
 c006fc4:	da003e17 	ldw	r8,248(sp)
 c006fc8:	103c160e 	bge	r2,zero,c006024 <__alt_data_end+0xfc006024>
 c006fcc:	0005883a 	mov	r2,zero
 c006fd0:	003c1406 	br	c006024 <__alt_data_end+0xfc006024>
 c006fd4:	00bfffc4 	movi	r2,-1
 c006fd8:	0039d906 	br	c005740 <__alt_data_end+0xfc005740>
 c006fdc:	010300b4 	movhi	r4,3074
 c006fe0:	21368c84 	addi	r4,r4,-9678
 c006fe4:	d9003515 	stw	r4,212(sp)
 c006fe8:	003ae406 	br	c005b7c <__alt_data_end+0xfc005b7c>
 c006fec:	013fffc4 	movi	r4,-1
 c006ff0:	0039fa06 	br	c0057dc <__alt_data_end+0xfc0057dc>
 c006ff4:	d9402d17 	ldw	r5,180(sp)
 c006ff8:	d9801e04 	addi	r6,sp,120
 c006ffc:	9809883a 	mov	r4,r19
 c007000:	c012aac0 	call	c012aac <__ssprint_r>
 c007004:	1039c91e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c007008:	d8c02017 	ldw	r3,128(sp)
 c00700c:	da000404 	addi	r8,sp,16
 c007010:	003d8406 	br	c006624 <__alt_data_end+0xfc006624>
 c007014:	0023883a 	mov	r17,zero
 c007018:	003d8306 	br	c006628 <__alt_data_end+0xfc006628>
 c00701c:	010300b4 	movhi	r4,3074
 c007020:	21368884 	addi	r4,r4,-9694
 c007024:	d9002c15 	stw	r4,176(sp)
 c007028:	d9002c17 	ldw	r4,176(sp)
 c00702c:	1c47883a 	add	r3,r3,r17
 c007030:	10800044 	addi	r2,r2,1
 c007034:	41000015 	stw	r4,0(r8)
 c007038:	44400115 	stw	r17,4(r8)
 c00703c:	d8c02015 	stw	r3,128(sp)
 c007040:	d8801f15 	stw	r2,124(sp)
 c007044:	010001c4 	movi	r4,7
 c007048:	20bfcd16 	blt	r4,r2,c006f80 <__alt_data_end+0xfc006f80>
 c00704c:	42000204 	addi	r8,r8,8
 c007050:	003fd306 	br	c006fa0 <__alt_data_end+0xfc006fa0>
 c007054:	d9402d17 	ldw	r5,180(sp)
 c007058:	d9801e04 	addi	r6,sp,120
 c00705c:	9809883a 	mov	r4,r19
 c007060:	c012aac0 	call	c012aac <__ssprint_r>
 c007064:	1039b11e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c007068:	d8802617 	ldw	r2,152(sp)
 c00706c:	d8c02017 	ldw	r3,128(sp)
 c007070:	da000404 	addi	r8,sp,16
 c007074:	003e1c06 	br	c0068e8 <__alt_data_end+0xfc0068e8>
 c007078:	d8802a17 	ldw	r2,168(sp)
 c00707c:	00c00184 	movi	r3,6
 c007080:	1880012e 	bgeu	r3,r2,c007088 <___svfprintf_internal_r+0x1cf8>
 c007084:	1805883a 	mov	r2,r3
 c007088:	d8802b15 	stw	r2,172(sp)
 c00708c:	1000f316 	blt	r2,zero,c00745c <___svfprintf_internal_r+0x20cc>
 c007090:	040300b4 	movhi	r16,3074
 c007094:	d8802915 	stw	r2,164(sp)
 c007098:	dd002e15 	stw	r20,184(sp)
 c00709c:	d8002a15 	stw	zero,168(sp)
 c0070a0:	d8003215 	stw	zero,200(sp)
 c0070a4:	84368604 	addi	r16,r16,-9704
 c0070a8:	0039883a 	mov	fp,zero
 c0070ac:	003a7d06 	br	c005aa4 <__alt_data_end+0xfc005aa4>
 c0070b0:	010300b4 	movhi	r4,3074
 c0070b4:	21368c84 	addi	r4,r4,-9678
 c0070b8:	d9003515 	stw	r4,212(sp)
 c0070bc:	003b3d06 	br	c005db4 <__alt_data_end+0xfc005db4>
 c0070c0:	d9402d17 	ldw	r5,180(sp)
 c0070c4:	d9801e04 	addi	r6,sp,120
 c0070c8:	9809883a 	mov	r4,r19
 c0070cc:	c012aac0 	call	c012aac <__ssprint_r>
 c0070d0:	1039961e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c0070d4:	d8802617 	ldw	r2,152(sp)
 c0070d8:	d9403317 	ldw	r5,204(sp)
 c0070dc:	d8c02017 	ldw	r3,128(sp)
 c0070e0:	da000404 	addi	r8,sp,16
 c0070e4:	2885c83a 	sub	r2,r5,r2
 c0070e8:	003e1006 	br	c00692c <__alt_data_end+0xfc00692c>
 c0070ec:	00800044 	movi	r2,1
 c0070f0:	10803fcc 	andi	r2,r2,255
 c0070f4:	00c00044 	movi	r3,1
 c0070f8:	10fa1026 	beq	r2,r3,c00593c <__alt_data_end+0xfc00593c>
 c0070fc:	00c00084 	movi	r3,2
 c007100:	10fb8226 	beq	r2,r3,c005f0c <__alt_data_end+0xfc005f0c>
 c007104:	003a4206 	br	c005a10 <__alt_data_end+0xfc005a10>
 c007108:	0021883a 	mov	r16,zero
 c00710c:	003e0806 	br	c006930 <__alt_data_end+0xfc006930>
 c007110:	07000b44 	movi	fp,45
 c007114:	df002785 	stb	fp,158(sp)
 c007118:	0039e306 	br	c0058a8 <__alt_data_end+0xfc0058a8>
 c00711c:	d9002e17 	ldw	r4,184(sp)
 c007120:	d9402f17 	ldw	r5,188(sp)
 c007124:	20800017 	ldw	r2,0(r4)
 c007128:	21000104 	addi	r4,r4,4
 c00712c:	d9002e15 	stw	r4,184(sp)
 c007130:	11400015 	stw	r5,0(r2)
 c007134:	0038c106 	br	c00543c <__alt_data_end+0xfc00543c>
 c007138:	00c00b44 	movi	r3,45
 c00713c:	d8c02785 	stb	r3,158(sp)
 c007140:	d8802915 	stw	r2,164(sp)
 c007144:	dc802c17 	ldw	r18,176(sp)
 c007148:	d8002a15 	stw	zero,168(sp)
 c00714c:	07000b44 	movi	fp,45
 c007150:	003a5106 	br	c005a98 <__alt_data_end+0xfc005a98>
 c007154:	9080004c 	andi	r2,r18,1
 c007158:	1000941e 	bne	r2,zero,c0073ac <___svfprintf_internal_r+0x201c>
 c00715c:	d8802117 	ldw	r2,132(sp)
 c007160:	1405c83a 	sub	r2,r2,r16
 c007164:	d8803315 	stw	r2,204(sp)
 c007168:	b441151e 	bne	r22,r17,c0075c0 <___svfprintf_internal_r+0x2230>
 c00716c:	dd802617 	ldw	r22,152(sp)
 c007170:	00bfff44 	movi	r2,-3
 c007174:	b0801a16 	blt	r22,r2,c0071e0 <___svfprintf_internal_r+0x1e50>
 c007178:	d9402a17 	ldw	r5,168(sp)
 c00717c:	2d801816 	blt	r5,r22,c0071e0 <___svfprintf_internal_r+0x1e50>
 c007180:	dd803215 	stw	r22,200(sp)
 c007184:	003f3a06 	br	c006e70 <__alt_data_end+0xfc006e70>
 c007188:	1025883a 	mov	r18,r2
 c00718c:	0039883a 	mov	fp,zero
 c007190:	00800084 	movi	r2,2
 c007194:	003fd606 	br	c0070f0 <__alt_data_end+0xfc0070f0>
 c007198:	9080004c 	andi	r2,r18,1
 c00719c:	103f191e 	bne	r2,zero,c006e04 <__alt_data_end+0xfc006e04>
 c0071a0:	d8802117 	ldw	r2,132(sp)
 c0071a4:	003f2806 	br	c006e48 <__alt_data_end+0xfc006e48>
 c0071a8:	010300b4 	movhi	r4,3074
 c0071ac:	21368884 	addi	r4,r4,-9694
 c0071b0:	d9002c15 	stw	r4,176(sp)
 c0071b4:	003c7c06 	br	c0063a8 <__alt_data_end+0xfc0063a8>
 c0071b8:	e005883a 	mov	r2,fp
 c0071bc:	003f2206 	br	c006e48 <__alt_data_end+0xfc006e48>
 c0071c0:	d9002a17 	ldw	r4,168(sp)
 c0071c4:	df002783 	ldbu	fp,158(sp)
 c0071c8:	dd002e15 	stw	r20,184(sp)
 c0071cc:	d9002915 	stw	r4,164(sp)
 c0071d0:	d9002b15 	stw	r4,172(sp)
 c0071d4:	d8002a15 	stw	zero,168(sp)
 c0071d8:	d8003215 	stw	zero,200(sp)
 c0071dc:	003a2a06 	br	c005a88 <__alt_data_end+0xfc005a88>
 c0071e0:	8c7fff84 	addi	r17,r17,-2
 c0071e4:	b5bfffc4 	addi	r22,r22,-1
 c0071e8:	dd802615 	stw	r22,152(sp)
 c0071ec:	dc4022c5 	stb	r17,139(sp)
 c0071f0:	b000c316 	blt	r22,zero,c007500 <___svfprintf_internal_r+0x2170>
 c0071f4:	00800ac4 	movi	r2,43
 c0071f8:	d8802305 	stb	r2,140(sp)
 c0071fc:	00800244 	movi	r2,9
 c007200:	15806e16 	blt	r2,r22,c0073bc <___svfprintf_internal_r+0x202c>
 c007204:	00800c04 	movi	r2,48
 c007208:	b5800c04 	addi	r22,r22,48
 c00720c:	d8802345 	stb	r2,141(sp)
 c007210:	dd802385 	stb	r22,142(sp)
 c007214:	d88023c4 	addi	r2,sp,143
 c007218:	df0022c4 	addi	fp,sp,139
 c00721c:	d8c03317 	ldw	r3,204(sp)
 c007220:	1739c83a 	sub	fp,r2,fp
 c007224:	d9003317 	ldw	r4,204(sp)
 c007228:	e0c7883a 	add	r3,fp,r3
 c00722c:	df003b15 	stw	fp,236(sp)
 c007230:	d8c02b15 	stw	r3,172(sp)
 c007234:	00800044 	movi	r2,1
 c007238:	1100b70e 	bge	r2,r4,c007518 <___svfprintf_internal_r+0x2188>
 c00723c:	d8c02b17 	ldw	r3,172(sp)
 c007240:	18c00044 	addi	r3,r3,1
 c007244:	d8c02b15 	stw	r3,172(sp)
 c007248:	1805883a 	mov	r2,r3
 c00724c:	1800b016 	blt	r3,zero,c007510 <___svfprintf_internal_r+0x2180>
 c007250:	d8003215 	stw	zero,200(sp)
 c007254:	003f1006 	br	c006e98 <__alt_data_end+0xfc006e98>
 c007258:	d8802a17 	ldw	r2,168(sp)
 c00725c:	103ec71e 	bne	r2,zero,c006d7c <__alt_data_end+0xfc006d7c>
 c007260:	dc002a15 	stw	r16,168(sp)
 c007264:	003ec506 	br	c006d7c <__alt_data_end+0xfc006d7c>
 c007268:	d9402d17 	ldw	r5,180(sp)
 c00726c:	d9801e04 	addi	r6,sp,120
 c007270:	9809883a 	mov	r4,r19
 c007274:	c012aac0 	call	c012aac <__ssprint_r>
 c007278:	10392c1e 	bne	r2,zero,c00572c <__alt_data_end+0xfc00572c>
 c00727c:	dc402617 	ldw	r17,152(sp)
 c007280:	d8c02017 	ldw	r3,128(sp)
 c007284:	d8801f17 	ldw	r2,124(sp)
 c007288:	da000404 	addi	r8,sp,16
 c00728c:	003e7706 	br	c006c6c <__alt_data_end+0xfc006c6c>
 c007290:	182f883a 	mov	r23,r3
 c007294:	d8002a15 	stw	zero,168(sp)
 c007298:	00389306 	br	c0054e8 <__alt_data_end+0xfc0054e8>
 c00729c:	d8c02a17 	ldw	r3,168(sp)
 c0072a0:	d8802104 	addi	r2,sp,132
 c0072a4:	d8800315 	stw	r2,12(sp)
 c0072a8:	d9403617 	ldw	r5,216(sp)
 c0072ac:	d8802504 	addi	r2,sp,148
 c0072b0:	d8800215 	stw	r2,8(sp)
 c0072b4:	d8802604 	addi	r2,sp,152
 c0072b8:	d8c00015 	stw	r3,0(sp)
 c0072bc:	9809883a 	mov	r4,r19
 c0072c0:	d8800115 	stw	r2,4(sp)
 c0072c4:	01c000c4 	movi	r7,3
 c0072c8:	a00d883a 	mov	r6,r20
 c0072cc:	da003e15 	stw	r8,248(sp)
 c0072d0:	c00b7d80 	call	c00b7d8 <_dtoa_r>
 c0072d4:	d9002a17 	ldw	r4,168(sp)
 c0072d8:	da003e17 	ldw	r8,248(sp)
 c0072dc:	1021883a 	mov	r16,r2
 c0072e0:	1139883a 	add	fp,r2,r4
 c0072e4:	2007883a 	mov	r3,r4
 c0072e8:	81000007 	ldb	r4,0(r16)
 c0072ec:	00800c04 	movi	r2,48
 c0072f0:	20806f26 	beq	r4,r2,c0074b0 <___svfprintf_internal_r+0x2120>
 c0072f4:	d8c02617 	ldw	r3,152(sp)
 c0072f8:	e0f9883a 	add	fp,fp,r3
 c0072fc:	003ec206 	br	c006e08 <__alt_data_end+0xfc006e08>
 c007300:	00c00b44 	movi	r3,45
 c007304:	2520003c 	xorhi	r20,r4,32768
 c007308:	d8c02905 	stb	r3,164(sp)
 c00730c:	003ea106 	br	c006d94 <__alt_data_end+0xfc006d94>
 c007310:	d8c03217 	ldw	r3,200(sp)
 c007314:	00c0890e 	bge	zero,r3,c00753c <___svfprintf_internal_r+0x21ac>
 c007318:	00800044 	movi	r2,1
 c00731c:	d9003317 	ldw	r4,204(sp)
 c007320:	1105883a 	add	r2,r2,r4
 c007324:	d8802b15 	stw	r2,172(sp)
 c007328:	10005f16 	blt	r2,zero,c0074a8 <___svfprintf_internal_r+0x2118>
 c00732c:	044019c4 	movi	r17,103
 c007330:	003ed906 	br	c006e98 <__alt_data_end+0xfc006e98>
 c007334:	d9002a17 	ldw	r4,168(sp)
 c007338:	20c00044 	addi	r3,r4,1
 c00733c:	003e9c06 	br	c006db0 <__alt_data_end+0xfc006db0>
 c007340:	d9002a17 	ldw	r4,168(sp)
 c007344:	00c0680e 	bge	zero,r3,c0074e8 <___svfprintf_internal_r+0x2158>
 c007348:	2000461e 	bne	r4,zero,c007464 <___svfprintf_internal_r+0x20d4>
 c00734c:	9480004c 	andi	r18,r18,1
 c007350:	9000441e 	bne	r18,zero,c007464 <___svfprintf_internal_r+0x20d4>
 c007354:	1805883a 	mov	r2,r3
 c007358:	1800a116 	blt	r3,zero,c0075e0 <___svfprintf_internal_r+0x2250>
 c00735c:	d8c03217 	ldw	r3,200(sp)
 c007360:	d8c02b15 	stw	r3,172(sp)
 c007364:	003ecc06 	br	c006e98 <__alt_data_end+0xfc006e98>
 c007368:	d9402a17 	ldw	r5,168(sp)
 c00736c:	d8802104 	addi	r2,sp,132
 c007370:	d8800315 	stw	r2,12(sp)
 c007374:	d9400015 	stw	r5,0(sp)
 c007378:	d8802504 	addi	r2,sp,148
 c00737c:	d9403617 	ldw	r5,216(sp)
 c007380:	d8800215 	stw	r2,8(sp)
 c007384:	d8802604 	addi	r2,sp,152
 c007388:	d8800115 	stw	r2,4(sp)
 c00738c:	01c000c4 	movi	r7,3
 c007390:	a00d883a 	mov	r6,r20
 c007394:	9809883a 	mov	r4,r19
 c007398:	da003e15 	stw	r8,248(sp)
 c00739c:	c00b7d80 	call	c00b7d8 <_dtoa_r>
 c0073a0:	d8c02a17 	ldw	r3,168(sp)
 c0073a4:	da003e17 	ldw	r8,248(sp)
 c0073a8:	1021883a 	mov	r16,r2
 c0073ac:	00801184 	movi	r2,70
 c0073b0:	80f9883a 	add	fp,r16,r3
 c0073b4:	88bfcc26 	beq	r17,r2,c0072e8 <__alt_data_end+0xfc0072e8>
 c0073b8:	003e9306 	br	c006e08 <__alt_data_end+0xfc006e08>
 c0073bc:	df0022c4 	addi	fp,sp,139
 c0073c0:	dc002a15 	stw	r16,168(sp)
 c0073c4:	9829883a 	mov	r20,r19
 c0073c8:	e021883a 	mov	r16,fp
 c0073cc:	4027883a 	mov	r19,r8
 c0073d0:	b009883a 	mov	r4,r22
 c0073d4:	01400284 	movi	r5,10
 c0073d8:	c00460c0 	call	c00460c <__modsi3>
 c0073dc:	10800c04 	addi	r2,r2,48
 c0073e0:	843fffc4 	addi	r16,r16,-1
 c0073e4:	b009883a 	mov	r4,r22
 c0073e8:	01400284 	movi	r5,10
 c0073ec:	80800005 	stb	r2,0(r16)
 c0073f0:	c0045880 	call	c004588 <__divsi3>
 c0073f4:	102d883a 	mov	r22,r2
 c0073f8:	00800244 	movi	r2,9
 c0073fc:	15bff416 	blt	r2,r22,c0073d0 <__alt_data_end+0xfc0073d0>
 c007400:	9811883a 	mov	r8,r19
 c007404:	b0800c04 	addi	r2,r22,48
 c007408:	a027883a 	mov	r19,r20
 c00740c:	8029883a 	mov	r20,r16
 c007410:	a17fffc4 	addi	r5,r20,-1
 c007414:	a0bfffc5 	stb	r2,-1(r20)
 c007418:	dc002a17 	ldw	r16,168(sp)
 c00741c:	2f00782e 	bgeu	r5,fp,c007600 <___svfprintf_internal_r+0x2270>
 c007420:	d9c02384 	addi	r7,sp,142
 c007424:	3d0fc83a 	sub	r7,r7,r20
 c007428:	d9002344 	addi	r4,sp,141
 c00742c:	e1cf883a 	add	r7,fp,r7
 c007430:	00000106 	br	c007438 <___svfprintf_internal_r+0x20a8>
 c007434:	28800003 	ldbu	r2,0(r5)
 c007438:	20800005 	stb	r2,0(r4)
 c00743c:	21000044 	addi	r4,r4,1
 c007440:	29400044 	addi	r5,r5,1
 c007444:	21fffb1e 	bne	r4,r7,c007434 <__alt_data_end+0xfc007434>
 c007448:	d8802304 	addi	r2,sp,140
 c00744c:	1505c83a 	sub	r2,r2,r20
 c007450:	d8c02344 	addi	r3,sp,141
 c007454:	1885883a 	add	r2,r3,r2
 c007458:	003f7006 	br	c00721c <__alt_data_end+0xfc00721c>
 c00745c:	0005883a 	mov	r2,zero
 c007460:	003f0b06 	br	c007090 <__alt_data_end+0xfc007090>
 c007464:	d9002a17 	ldw	r4,168(sp)
 c007468:	d8c03217 	ldw	r3,200(sp)
 c00746c:	20800044 	addi	r2,r4,1
 c007470:	1885883a 	add	r2,r3,r2
 c007474:	d8802b15 	stw	r2,172(sp)
 c007478:	103e870e 	bge	r2,zero,c006e98 <__alt_data_end+0xfc006e98>
 c00747c:	0005883a 	mov	r2,zero
 c007480:	003e8506 	br	c006e98 <__alt_data_end+0xfc006e98>
 c007484:	010300b4 	movhi	r4,3074
 c007488:	21368884 	addi	r4,r4,-9694
 c00748c:	d9002c15 	stw	r4,176(sp)
 c007490:	003cc506 	br	c0067a8 <__alt_data_end+0xfc0067a8>
 c007494:	d8c03217 	ldw	r3,200(sp)
 c007498:	18c00044 	addi	r3,r3,1
 c00749c:	d8c02b15 	stw	r3,172(sp)
 c0074a0:	1805883a 	mov	r2,r3
 c0074a4:	183fa10e 	bge	r3,zero,c00732c <__alt_data_end+0xfc00732c>
 c0074a8:	0005883a 	mov	r2,zero
 c0074ac:	003f9f06 	br	c00732c <__alt_data_end+0xfc00732c>
 c0074b0:	d9003617 	ldw	r4,216(sp)
 c0074b4:	000d883a 	mov	r6,zero
 c0074b8:	000f883a 	mov	r7,zero
 c0074bc:	a00b883a 	mov	r5,r20
 c0074c0:	d8c03d15 	stw	r3,244(sp)
 c0074c4:	da003e15 	stw	r8,248(sp)
 c0074c8:	c0191140 	call	c019114 <__eqdf2>
 c0074cc:	d8c03d17 	ldw	r3,244(sp)
 c0074d0:	da003e17 	ldw	r8,248(sp)
 c0074d4:	103f8726 	beq	r2,zero,c0072f4 <__alt_data_end+0xfc0072f4>
 c0074d8:	00800044 	movi	r2,1
 c0074dc:	10c7c83a 	sub	r3,r2,r3
 c0074e0:	d8c02615 	stw	r3,152(sp)
 c0074e4:	003f8406 	br	c0072f8 <__alt_data_end+0xfc0072f8>
 c0074e8:	20000e1e 	bne	r4,zero,c007524 <___svfprintf_internal_r+0x2194>
 c0074ec:	9480004c 	andi	r18,r18,1
 c0074f0:	90000c1e 	bne	r18,zero,c007524 <___svfprintf_internal_r+0x2194>
 c0074f4:	00800044 	movi	r2,1
 c0074f8:	d8802b15 	stw	r2,172(sp)
 c0074fc:	003e6606 	br	c006e98 <__alt_data_end+0xfc006e98>
 c007500:	00800b44 	movi	r2,45
 c007504:	05adc83a 	sub	r22,zero,r22
 c007508:	d8802305 	stb	r2,140(sp)
 c00750c:	003f3b06 	br	c0071fc <__alt_data_end+0xfc0071fc>
 c007510:	0005883a 	mov	r2,zero
 c007514:	003f4e06 	br	c007250 <__alt_data_end+0xfc007250>
 c007518:	90a4703a 	and	r18,r18,r2
 c00751c:	903f4a26 	beq	r18,zero,c007248 <__alt_data_end+0xfc007248>
 c007520:	003f4606 	br	c00723c <__alt_data_end+0xfc00723c>
 c007524:	d8c02a17 	ldw	r3,168(sp)
 c007528:	18c00084 	addi	r3,r3,2
 c00752c:	d8c02b15 	stw	r3,172(sp)
 c007530:	1805883a 	mov	r2,r3
 c007534:	183e580e 	bge	r3,zero,c006e98 <__alt_data_end+0xfc006e98>
 c007538:	003fd006 	br	c00747c <__alt_data_end+0xfc00747c>
 c00753c:	00800084 	movi	r2,2
 c007540:	10c5c83a 	sub	r2,r2,r3
 c007544:	003f7506 	br	c00731c <__alt_data_end+0xfc00731c>
 c007548:	d9402e17 	ldw	r5,184(sp)
 c00754c:	d9002e17 	ldw	r4,184(sp)
 c007550:	bc400043 	ldbu	r17,1(r23)
 c007554:	29400017 	ldw	r5,0(r5)
 c007558:	20800104 	addi	r2,r4,4
 c00755c:	d8802e15 	stw	r2,184(sp)
 c007560:	d9402a15 	stw	r5,168(sp)
 c007564:	182f883a 	mov	r23,r3
 c007568:	283df10e 	bge	r5,zero,c006d30 <__alt_data_end+0xfc006d30>
 c00756c:	8c403fcc 	andi	r17,r17,255
 c007570:	017fffc4 	movi	r5,-1
 c007574:	8c40201c 	xori	r17,r17,128
 c007578:	d9402a15 	stw	r5,168(sp)
 c00757c:	8c7fe004 	addi	r17,r17,-128
 c007580:	0037d806 	br	c0054e4 <__alt_data_end+0xfc0054e4>
 c007584:	9080004c 	andi	r2,r18,1
 c007588:	0039883a 	mov	fp,zero
 c00758c:	10000726 	beq	r2,zero,c0075ac <___svfprintf_internal_r+0x221c>
 c007590:	d8c02817 	ldw	r3,160(sp)
 c007594:	dc001dc4 	addi	r16,sp,119
 c007598:	00800c04 	movi	r2,48
 c00759c:	1c07c83a 	sub	r3,r3,r16
 c0075a0:	d8801dc5 	stb	r2,119(sp)
 c0075a4:	d8c02b15 	stw	r3,172(sp)
 c0075a8:	00393106 	br	c005a70 <__alt_data_end+0xfc005a70>
 c0075ac:	d8002b15 	stw	zero,172(sp)
 c0075b0:	dc001e04 	addi	r16,sp,120
 c0075b4:	00392e06 	br	c005a70 <__alt_data_end+0xfc005a70>
 c0075b8:	0005883a 	mov	r2,zero
 c0075bc:	003e3306 	br	c006e8c <__alt_data_end+0xfc006e8c>
 c0075c0:	dd802617 	ldw	r22,152(sp)
 c0075c4:	003f0706 	br	c0071e4 <__alt_data_end+0xfc0071e4>
 c0075c8:	d8c02b03 	ldbu	r3,172(sp)
 c0075cc:	d8c02785 	stb	r3,158(sp)
 c0075d0:	003a3506 	br	c005ea8 <__alt_data_end+0xfc005ea8>
 c0075d4:	d8c02b03 	ldbu	r3,172(sp)
 c0075d8:	d8c02785 	stb	r3,158(sp)
 c0075dc:	003a1706 	br	c005e3c <__alt_data_end+0xfc005e3c>
 c0075e0:	0005883a 	mov	r2,zero
 c0075e4:	003f5d06 	br	c00735c <__alt_data_end+0xfc00735c>
 c0075e8:	d8c02b03 	ldbu	r3,172(sp)
 c0075ec:	d8c02785 	stb	r3,158(sp)
 c0075f0:	0038f306 	br	c0059c0 <__alt_data_end+0xfc0059c0>
 c0075f4:	d8c02b03 	ldbu	r3,172(sp)
 c0075f8:	d8c02785 	stb	r3,158(sp)
 c0075fc:	0038be06 	br	c0058f8 <__alt_data_end+0xfc0058f8>
 c007600:	d8802344 	addi	r2,sp,141
 c007604:	003f0506 	br	c00721c <__alt_data_end+0xfc00721c>
 c007608:	d8c02b03 	ldbu	r3,172(sp)
 c00760c:	d8c02785 	stb	r3,158(sp)
 c007610:	00388b06 	br	c005840 <__alt_data_end+0xfc005840>
 c007614:	d8c02b03 	ldbu	r3,172(sp)
 c007618:	d8c02785 	stb	r3,158(sp)
 c00761c:	003ad706 	br	c00617c <__alt_data_end+0xfc00617c>
 c007620:	d9403917 	ldw	r5,228(sp)
 c007624:	00800304 	movi	r2,12
 c007628:	28800015 	stw	r2,0(r5)
 c00762c:	00bfffc4 	movi	r2,-1
 c007630:	00384306 	br	c005740 <__alt_data_end+0xfc005740>
 c007634:	d8c02b03 	ldbu	r3,172(sp)
 c007638:	d8c02785 	stb	r3,158(sp)
 c00763c:	003ab606 	br	c006118 <__alt_data_end+0xfc006118>
 c007640:	d8c02b03 	ldbu	r3,172(sp)
 c007644:	d8c02785 	stb	r3,158(sp)
 c007648:	003a8906 	br	c006070 <__alt_data_end+0xfc006070>

0c00764c <___vfprintf_internal_r>:
 c00764c:	deffb804 	addi	sp,sp,-288
 c007650:	dfc04715 	stw	ra,284(sp)
 c007654:	ddc04515 	stw	r23,276(sp)
 c007658:	dd404315 	stw	r21,268(sp)
 c00765c:	d9002d15 	stw	r4,180(sp)
 c007660:	282f883a 	mov	r23,r5
 c007664:	302b883a 	mov	r21,r6
 c007668:	d9c02e15 	stw	r7,184(sp)
 c00766c:	df004615 	stw	fp,280(sp)
 c007670:	dd804415 	stw	r22,272(sp)
 c007674:	dd004215 	stw	r20,264(sp)
 c007678:	dcc04115 	stw	r19,260(sp)
 c00767c:	dc804015 	stw	r18,256(sp)
 c007680:	dc403f15 	stw	r17,252(sp)
 c007684:	dc003e15 	stw	r16,248(sp)
 c007688:	c00e2880 	call	c00e288 <_localeconv_r>
 c00768c:	10800017 	ldw	r2,0(r2)
 c007690:	1009883a 	mov	r4,r2
 c007694:	d8803415 	stw	r2,208(sp)
 c007698:	c0052f80 	call	c0052f8 <strlen>
 c00769c:	d8803715 	stw	r2,220(sp)
 c0076a0:	d8802d17 	ldw	r2,180(sp)
 c0076a4:	10000226 	beq	r2,zero,c0076b0 <___vfprintf_internal_r+0x64>
 c0076a8:	10800e17 	ldw	r2,56(r2)
 c0076ac:	1000fb26 	beq	r2,zero,c007a9c <___vfprintf_internal_r+0x450>
 c0076b0:	b880030b 	ldhu	r2,12(r23)
 c0076b4:	10c8000c 	andi	r3,r2,8192
 c0076b8:	1800061e 	bne	r3,zero,c0076d4 <___vfprintf_internal_r+0x88>
 c0076bc:	b9001917 	ldw	r4,100(r23)
 c0076c0:	00f7ffc4 	movi	r3,-8193
 c0076c4:	10880014 	ori	r2,r2,8192
 c0076c8:	20c6703a 	and	r3,r4,r3
 c0076cc:	b880030d 	sth	r2,12(r23)
 c0076d0:	b8c01915 	stw	r3,100(r23)
 c0076d4:	10c0020c 	andi	r3,r2,8
 c0076d8:	1800c326 	beq	r3,zero,c0079e8 <___vfprintf_internal_r+0x39c>
 c0076dc:	b8c00417 	ldw	r3,16(r23)
 c0076e0:	1800c126 	beq	r3,zero,c0079e8 <___vfprintf_internal_r+0x39c>
 c0076e4:	1080068c 	andi	r2,r2,26
 c0076e8:	00c00284 	movi	r3,10
 c0076ec:	10c0c626 	beq	r2,r3,c007a08 <___vfprintf_internal_r+0x3bc>
 c0076f0:	d8c00404 	addi	r3,sp,16
 c0076f4:	050300b4 	movhi	r20,3074
 c0076f8:	d9001e04 	addi	r4,sp,120
 c0076fc:	a5369084 	addi	r20,r20,-9662
 c007700:	d8c01e15 	stw	r3,120(sp)
 c007704:	d8002015 	stw	zero,128(sp)
 c007708:	d8001f15 	stw	zero,124(sp)
 c00770c:	d8003315 	stw	zero,204(sp)
 c007710:	d8003615 	stw	zero,216(sp)
 c007714:	d8003815 	stw	zero,224(sp)
 c007718:	1811883a 	mov	r8,r3
 c00771c:	d8003915 	stw	zero,228(sp)
 c007720:	d8003a15 	stw	zero,232(sp)
 c007724:	d8002f15 	stw	zero,188(sp)
 c007728:	d9002815 	stw	r4,160(sp)
 c00772c:	a8800007 	ldb	r2,0(r21)
 c007730:	10028b26 	beq	r2,zero,c008160 <___vfprintf_internal_r+0xb14>
 c007734:	00c00944 	movi	r3,37
 c007738:	a823883a 	mov	r17,r21
 c00773c:	10c0021e 	bne	r2,r3,c007748 <___vfprintf_internal_r+0xfc>
 c007740:	00001406 	br	c007794 <___vfprintf_internal_r+0x148>
 c007744:	10c00326 	beq	r2,r3,c007754 <___vfprintf_internal_r+0x108>
 c007748:	8c400044 	addi	r17,r17,1
 c00774c:	88800007 	ldb	r2,0(r17)
 c007750:	103ffc1e 	bne	r2,zero,c007744 <__alt_data_end+0xfc007744>
 c007754:	8d61c83a 	sub	r16,r17,r21
 c007758:	80000e26 	beq	r16,zero,c007794 <___vfprintf_internal_r+0x148>
 c00775c:	d8c02017 	ldw	r3,128(sp)
 c007760:	d8801f17 	ldw	r2,124(sp)
 c007764:	45400015 	stw	r21,0(r8)
 c007768:	1c07883a 	add	r3,r3,r16
 c00776c:	10800044 	addi	r2,r2,1
 c007770:	d8c02015 	stw	r3,128(sp)
 c007774:	44000115 	stw	r16,4(r8)
 c007778:	d8801f15 	stw	r2,124(sp)
 c00777c:	00c001c4 	movi	r3,7
 c007780:	1880a916 	blt	r3,r2,c007a28 <___vfprintf_internal_r+0x3dc>
 c007784:	42000204 	addi	r8,r8,8
 c007788:	d9402f17 	ldw	r5,188(sp)
 c00778c:	2c0b883a 	add	r5,r5,r16
 c007790:	d9402f15 	stw	r5,188(sp)
 c007794:	88800007 	ldb	r2,0(r17)
 c007798:	1000aa26 	beq	r2,zero,c007a44 <___vfprintf_internal_r+0x3f8>
 c00779c:	8d400044 	addi	r21,r17,1
 c0077a0:	8c400047 	ldb	r17,1(r17)
 c0077a4:	0021883a 	mov	r16,zero
 c0077a8:	00bfffc4 	movi	r2,-1
 c0077ac:	0025883a 	mov	r18,zero
 c0077b0:	dc002905 	stb	r16,164(sp)
 c0077b4:	d8002785 	stb	zero,158(sp)
 c0077b8:	d8002b05 	stb	zero,172(sp)
 c0077bc:	d8802a15 	stw	r2,168(sp)
 c0077c0:	d8003115 	stw	zero,196(sp)
 c0077c4:	04c01604 	movi	r19,88
 c0077c8:	05800244 	movi	r22,9
 c0077cc:	9021883a 	mov	r16,r18
 c0077d0:	4039883a 	mov	fp,r8
 c0077d4:	ad400044 	addi	r21,r21,1
 c0077d8:	88bff804 	addi	r2,r17,-32
 c0077dc:	98833236 	bltu	r19,r2,c0084a8 <___vfprintf_internal_r+0xe5c>
 c0077e0:	100490ba 	slli	r2,r2,2
 c0077e4:	00c30034 	movhi	r3,3072
 c0077e8:	18ddfe04 	addi	r3,r3,30712
 c0077ec:	10c5883a 	add	r2,r2,r3
 c0077f0:	10800017 	ldw	r2,0(r2)
 c0077f4:	1000683a 	jmp	r2
 c0077f8:	0c0083a0 	cmpeqi	r16,at,526
 c0077fc:	0c0084a8 	cmpgeui	r16,at,530
 c007800:	0c0084a8 	cmpgeui	r16,at,530
 c007804:	0c0083c0 	call	c0083c <__alt_mem_onchip_memory2_0+0xc0083c>
 c007808:	0c0084a8 	cmpgeui	r16,at,530
 c00780c:	0c0084a8 	cmpgeui	r16,at,530
 c007810:	0c0084a8 	cmpgeui	r16,at,530
 c007814:	0c0084a8 	cmpgeui	r16,at,530
 c007818:	0c0084a8 	cmpgeui	r16,at,530
 c00781c:	0c0084a8 	cmpgeui	r16,at,530
 c007820:	0c007aa8 	cmpgeui	r16,at,490
 c007824:	0c0082b0 	cmpltui	r16,at,522
 c007828:	0c0084a8 	cmpgeui	r16,at,530
 c00782c:	0c00796c 	andhi	r16,at,485
 c007830:	0c007acc 	andi	r16,at,491
 c007834:	0c0084a8 	cmpgeui	r16,at,530
 c007838:	0c007b1c 	xori	r16,at,492
 c00783c:	0c007b28 	cmpgeui	r16,at,492
 c007840:	0c007b28 	cmpgeui	r16,at,492
 c007844:	0c007b28 	cmpgeui	r16,at,492
 c007848:	0c007b28 	cmpgeui	r16,at,492
 c00784c:	0c007b28 	cmpgeui	r16,at,492
 c007850:	0c007b28 	cmpgeui	r16,at,492
 c007854:	0c007b28 	cmpgeui	r16,at,492
 c007858:	0c007b28 	cmpgeui	r16,at,492
 c00785c:	0c007b28 	cmpgeui	r16,at,492
 c007860:	0c0084a8 	cmpgeui	r16,at,530
 c007864:	0c0084a8 	cmpgeui	r16,at,530
 c007868:	0c0084a8 	cmpgeui	r16,at,530
 c00786c:	0c0084a8 	cmpgeui	r16,at,530
 c007870:	0c0084a8 	cmpgeui	r16,at,530
 c007874:	0c0084a8 	cmpgeui	r16,at,530
 c007878:	0c0084a8 	cmpgeui	r16,at,530
 c00787c:	0c0084a8 	cmpgeui	r16,at,530
 c007880:	0c0084a8 	cmpgeui	r16,at,530
 c007884:	0c0084a8 	cmpgeui	r16,at,530
 c007888:	0c007b64 	muli	r16,at,493
 c00788c:	0c007c2c 	andhi	r16,at,496
 c007890:	0c0084a8 	cmpgeui	r16,at,530
 c007894:	0c007c2c 	andhi	r16,at,496
 c007898:	0c0084a8 	cmpgeui	r16,at,530
 c00789c:	0c0084a8 	cmpgeui	r16,at,530
 c0078a0:	0c0084a8 	cmpgeui	r16,at,530
 c0078a4:	0c0084a8 	cmpgeui	r16,at,530
 c0078a8:	0c007cd8 	cmpnei	r16,at,499
 c0078ac:	0c0084a8 	cmpgeui	r16,at,530
 c0078b0:	0c0084a8 	cmpgeui	r16,at,530
 c0078b4:	0c007ce4 	muli	r16,at,499
 c0078b8:	0c0084a8 	cmpgeui	r16,at,530
 c0078bc:	0c0084a8 	cmpgeui	r16,at,530
 c0078c0:	0c0084a8 	cmpgeui	r16,at,530
 c0078c4:	0c0084a8 	cmpgeui	r16,at,530
 c0078c8:	0c0084a8 	cmpgeui	r16,at,530
 c0078cc:	0c008168 	cmpgeui	r16,at,517
 c0078d0:	0c0084a8 	cmpgeui	r16,at,530
 c0078d4:	0c0084a8 	cmpgeui	r16,at,530
 c0078d8:	0c0081d4 	ori	r16,at,519
 c0078dc:	0c0084a8 	cmpgeui	r16,at,530
 c0078e0:	0c0084a8 	cmpgeui	r16,at,530
 c0078e4:	0c0084a8 	cmpgeui	r16,at,530
 c0078e8:	0c0084a8 	cmpgeui	r16,at,530
 c0078ec:	0c0084a8 	cmpgeui	r16,at,530
 c0078f0:	0c0084a8 	cmpgeui	r16,at,530
 c0078f4:	0c0084a8 	cmpgeui	r16,at,530
 c0078f8:	0c0084a8 	cmpgeui	r16,at,530
 c0078fc:	0c0084a8 	cmpgeui	r16,at,530
 c007900:	0c0084a8 	cmpgeui	r16,at,530
 c007904:	0c00844c 	andi	r16,at,529
 c007908:	0c0083cc 	andi	r16,at,527
 c00790c:	0c007c2c 	andhi	r16,at,496
 c007910:	0c007c2c 	andhi	r16,at,496
 c007914:	0c007c2c 	andhi	r16,at,496
 c007918:	0c0083ec 	andhi	r16,at,527
 c00791c:	0c0083cc 	andi	r16,at,527
 c007920:	0c0084a8 	cmpgeui	r16,at,530
 c007924:	0c0084a8 	cmpgeui	r16,at,530
 c007928:	0c0083f8 	rdprs	r16,at,527
 c00792c:	0c0084a8 	cmpgeui	r16,at,530
 c007930:	0c00840c 	andi	r16,at,528
 c007934:	0c008290 	cmplti	r16,at,522
 c007938:	0c007978 	rdprs	r16,at,485
 c00793c:	0c0082c8 	cmpgei	r16,at,523
 c007940:	0c0084a8 	cmpgeui	r16,at,530
 c007944:	0c0082d4 	ori	r16,at,523
 c007948:	0c0084a8 	cmpgeui	r16,at,530
 c00794c:	0c008338 	rdprs	r16,at,524
 c007950:	0c0084a8 	cmpgeui	r16,at,530
 c007954:	0c0084a8 	cmpgeui	r16,at,530
 c007958:	0c008358 	cmpnei	r16,at,525
 c00795c:	d8c03117 	ldw	r3,196(sp)
 c007960:	d8802e15 	stw	r2,184(sp)
 c007964:	00c7c83a 	sub	r3,zero,r3
 c007968:	d8c03115 	stw	r3,196(sp)
 c00796c:	84000114 	ori	r16,r16,4
 c007970:	ac400007 	ldb	r17,0(r21)
 c007974:	003f9706 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c007978:	00800c04 	movi	r2,48
 c00797c:	d8802705 	stb	r2,156(sp)
 c007980:	00801e04 	movi	r2,120
 c007984:	d8802745 	stb	r2,157(sp)
 c007988:	d9002a17 	ldw	r4,168(sp)
 c00798c:	d8802e17 	ldw	r2,184(sp)
 c007990:	d8002785 	stb	zero,158(sp)
 c007994:	e011883a 	mov	r8,fp
 c007998:	10c00104 	addi	r3,r2,4
 c00799c:	14c00017 	ldw	r19,0(r2)
 c0079a0:	002d883a 	mov	r22,zero
 c0079a4:	80800094 	ori	r2,r16,2
 c0079a8:	2002ca16 	blt	r4,zero,c0084d4 <___vfprintf_internal_r+0xe88>
 c0079ac:	00bfdfc4 	movi	r2,-129
 c0079b0:	80a4703a 	and	r18,r16,r2
 c0079b4:	d8c02e15 	stw	r3,184(sp)
 c0079b8:	94800094 	ori	r18,r18,2
 c0079bc:	9802b41e 	bne	r19,zero,c008490 <___vfprintf_internal_r+0xe44>
 c0079c0:	014300b4 	movhi	r5,3074
 c0079c4:	29768104 	addi	r5,r5,-9724
 c0079c8:	d9403915 	stw	r5,228(sp)
 c0079cc:	04401e04 	movi	r17,120
 c0079d0:	d8802a17 	ldw	r2,168(sp)
 c0079d4:	0039883a 	mov	fp,zero
 c0079d8:	1001fa26 	beq	r2,zero,c0081c4 <___vfprintf_internal_r+0xb78>
 c0079dc:	0027883a 	mov	r19,zero
 c0079e0:	002d883a 	mov	r22,zero
 c0079e4:	00021906 	br	c00824c <___vfprintf_internal_r+0xc00>
 c0079e8:	d9002d17 	ldw	r4,180(sp)
 c0079ec:	b80b883a 	mov	r5,r23
 c0079f0:	c00b45c0 	call	c00b45c <__swsetup_r>
 c0079f4:	1005dc1e 	bne	r2,zero,c009168 <___vfprintf_internal_r+0x1b1c>
 c0079f8:	b880030b 	ldhu	r2,12(r23)
 c0079fc:	00c00284 	movi	r3,10
 c007a00:	1080068c 	andi	r2,r2,26
 c007a04:	10ff3a1e 	bne	r2,r3,c0076f0 <__alt_data_end+0xfc0076f0>
 c007a08:	b880038f 	ldh	r2,14(r23)
 c007a0c:	103f3816 	blt	r2,zero,c0076f0 <__alt_data_end+0xfc0076f0>
 c007a10:	d9c02e17 	ldw	r7,184(sp)
 c007a14:	d9002d17 	ldw	r4,180(sp)
 c007a18:	a80d883a 	mov	r6,r21
 c007a1c:	b80b883a 	mov	r5,r23
 c007a20:	c0099440 	call	c009944 <__sbprintf>
 c007a24:	00001106 	br	c007a6c <___vfprintf_internal_r+0x420>
 c007a28:	d9002d17 	ldw	r4,180(sp)
 c007a2c:	d9801e04 	addi	r6,sp,120
 c007a30:	b80b883a 	mov	r5,r23
 c007a34:	c0143980 	call	c014398 <__sprint_r>
 c007a38:	1000081e 	bne	r2,zero,c007a5c <___vfprintf_internal_r+0x410>
 c007a3c:	da000404 	addi	r8,sp,16
 c007a40:	003f5106 	br	c007788 <__alt_data_end+0xfc007788>
 c007a44:	d8802017 	ldw	r2,128(sp)
 c007a48:	10000426 	beq	r2,zero,c007a5c <___vfprintf_internal_r+0x410>
 c007a4c:	d9002d17 	ldw	r4,180(sp)
 c007a50:	d9801e04 	addi	r6,sp,120
 c007a54:	b80b883a 	mov	r5,r23
 c007a58:	c0143980 	call	c014398 <__sprint_r>
 c007a5c:	b880030b 	ldhu	r2,12(r23)
 c007a60:	1080100c 	andi	r2,r2,64
 c007a64:	1005c01e 	bne	r2,zero,c009168 <___vfprintf_internal_r+0x1b1c>
 c007a68:	d8802f17 	ldw	r2,188(sp)
 c007a6c:	dfc04717 	ldw	ra,284(sp)
 c007a70:	df004617 	ldw	fp,280(sp)
 c007a74:	ddc04517 	ldw	r23,276(sp)
 c007a78:	dd804417 	ldw	r22,272(sp)
 c007a7c:	dd404317 	ldw	r21,268(sp)
 c007a80:	dd004217 	ldw	r20,264(sp)
 c007a84:	dcc04117 	ldw	r19,260(sp)
 c007a88:	dc804017 	ldw	r18,256(sp)
 c007a8c:	dc403f17 	ldw	r17,252(sp)
 c007a90:	dc003e17 	ldw	r16,248(sp)
 c007a94:	dec04804 	addi	sp,sp,288
 c007a98:	f800283a 	ret
 c007a9c:	d9002d17 	ldw	r4,180(sp)
 c007aa0:	c00d4680 	call	c00d468 <__sinit>
 c007aa4:	003f0206 	br	c0076b0 <__alt_data_end+0xfc0076b0>
 c007aa8:	d9002e17 	ldw	r4,184(sp)
 c007aac:	d9402e17 	ldw	r5,184(sp)
 c007ab0:	21000017 	ldw	r4,0(r4)
 c007ab4:	28800104 	addi	r2,r5,4
 c007ab8:	d9003115 	stw	r4,196(sp)
 c007abc:	203fa716 	blt	r4,zero,c00795c <__alt_data_end+0xfc00795c>
 c007ac0:	d8802e15 	stw	r2,184(sp)
 c007ac4:	ac400007 	ldb	r17,0(r21)
 c007ac8:	003f4206 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c007acc:	ac400007 	ldb	r17,0(r21)
 c007ad0:	01000a84 	movi	r4,42
 c007ad4:	a8c00044 	addi	r3,r21,1
 c007ad8:	89075826 	beq	r17,r4,c00983c <___vfprintf_internal_r+0x21f0>
 c007adc:	8cbff404 	addi	r18,r17,-48
 c007ae0:	b486ae36 	bltu	r22,r18,c00959c <___vfprintf_internal_r+0x1f50>
 c007ae4:	0009883a 	mov	r4,zero
 c007ae8:	1823883a 	mov	r17,r3
 c007aec:	01400284 	movi	r5,10
 c007af0:	c00473c0 	call	c00473c <__mulsi3>
 c007af4:	88c00007 	ldb	r3,0(r17)
 c007af8:	1489883a 	add	r4,r2,r18
 c007afc:	8d400044 	addi	r21,r17,1
 c007b00:	1cbff404 	addi	r18,r3,-48
 c007b04:	a823883a 	mov	r17,r21
 c007b08:	b4bff82e 	bgeu	r22,r18,c007aec <__alt_data_end+0xfc007aec>
 c007b0c:	1823883a 	mov	r17,r3
 c007b10:	2005f616 	blt	r4,zero,c0092ec <___vfprintf_internal_r+0x1ca0>
 c007b14:	d9002a15 	stw	r4,168(sp)
 c007b18:	003f2f06 	br	c0077d8 <__alt_data_end+0xfc0077d8>
 c007b1c:	84002014 	ori	r16,r16,128
 c007b20:	ac400007 	ldb	r17,0(r21)
 c007b24:	003f2b06 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c007b28:	8cbff404 	addi	r18,r17,-48
 c007b2c:	d8003115 	stw	zero,196(sp)
 c007b30:	0009883a 	mov	r4,zero
 c007b34:	a823883a 	mov	r17,r21
 c007b38:	01400284 	movi	r5,10
 c007b3c:	c00473c0 	call	c00473c <__mulsi3>
 c007b40:	88c00007 	ldb	r3,0(r17)
 c007b44:	9089883a 	add	r4,r18,r2
 c007b48:	ad400044 	addi	r21,r21,1
 c007b4c:	1cbff404 	addi	r18,r3,-48
 c007b50:	a823883a 	mov	r17,r21
 c007b54:	b4bff82e 	bgeu	r22,r18,c007b38 <__alt_data_end+0xfc007b38>
 c007b58:	1823883a 	mov	r17,r3
 c007b5c:	d9003115 	stw	r4,196(sp)
 c007b60:	003f1d06 	br	c0077d8 <__alt_data_end+0xfc0077d8>
 c007b64:	8025883a 	mov	r18,r16
 c007b68:	dc002903 	ldbu	r16,164(sp)
 c007b6c:	e011883a 	mov	r8,fp
 c007b70:	84003fcc 	andi	r16,r16,255
 c007b74:	8007531e 	bne	r16,zero,c0098c4 <___vfprintf_internal_r+0x2278>
 c007b78:	94800414 	ori	r18,r18,16
 c007b7c:	9080080c 	andi	r2,r18,32
 c007b80:	1003a326 	beq	r2,zero,c008a10 <___vfprintf_internal_r+0x13c4>
 c007b84:	d9002e17 	ldw	r4,184(sp)
 c007b88:	20800117 	ldw	r2,4(r4)
 c007b8c:	24c00017 	ldw	r19,0(r4)
 c007b90:	21000204 	addi	r4,r4,8
 c007b94:	d9002e15 	stw	r4,184(sp)
 c007b98:	102d883a 	mov	r22,r2
 c007b9c:	10047316 	blt	r2,zero,c008d6c <___vfprintf_internal_r+0x1720>
 c007ba0:	d9002a17 	ldw	r4,168(sp)
 c007ba4:	df002783 	ldbu	fp,158(sp)
 c007ba8:	2003e416 	blt	r4,zero,c008b3c <___vfprintf_internal_r+0x14f0>
 c007bac:	00ffdfc4 	movi	r3,-129
 c007bb0:	9d84b03a 	or	r2,r19,r22
 c007bb4:	90e4703a 	and	r18,r18,r3
 c007bb8:	10018026 	beq	r2,zero,c0081bc <___vfprintf_internal_r+0xb70>
 c007bbc:	b003ab26 	beq	r22,zero,c008a6c <___vfprintf_internal_r+0x1420>
 c007bc0:	dc402915 	stw	r17,164(sp)
 c007bc4:	dc001e04 	addi	r16,sp,120
 c007bc8:	b023883a 	mov	r17,r22
 c007bcc:	402d883a 	mov	r22,r8
 c007bd0:	9809883a 	mov	r4,r19
 c007bd4:	880b883a 	mov	r5,r17
 c007bd8:	01800284 	movi	r6,10
 c007bdc:	000f883a 	mov	r7,zero
 c007be0:	c0176d80 	call	c0176d8 <__umoddi3>
 c007be4:	10800c04 	addi	r2,r2,48
 c007be8:	843fffc4 	addi	r16,r16,-1
 c007bec:	9809883a 	mov	r4,r19
 c007bf0:	880b883a 	mov	r5,r17
 c007bf4:	80800005 	stb	r2,0(r16)
 c007bf8:	01800284 	movi	r6,10
 c007bfc:	000f883a 	mov	r7,zero
 c007c00:	c0170dc0 	call	c0170dc <__udivdi3>
 c007c04:	1027883a 	mov	r19,r2
 c007c08:	10c4b03a 	or	r2,r2,r3
 c007c0c:	1823883a 	mov	r17,r3
 c007c10:	103fef1e 	bne	r2,zero,c007bd0 <__alt_data_end+0xfc007bd0>
 c007c14:	d8c02817 	ldw	r3,160(sp)
 c007c18:	dc402917 	ldw	r17,164(sp)
 c007c1c:	b011883a 	mov	r8,r22
 c007c20:	1c07c83a 	sub	r3,r3,r16
 c007c24:	d8c02b15 	stw	r3,172(sp)
 c007c28:	00005f06 	br	c007da8 <___vfprintf_internal_r+0x75c>
 c007c2c:	8025883a 	mov	r18,r16
 c007c30:	dc002903 	ldbu	r16,164(sp)
 c007c34:	e011883a 	mov	r8,fp
 c007c38:	84003fcc 	andi	r16,r16,255
 c007c3c:	80071e1e 	bne	r16,zero,c0098b8 <___vfprintf_internal_r+0x226c>
 c007c40:	9080020c 	andi	r2,r18,8
 c007c44:	1004af26 	beq	r2,zero,c008f04 <___vfprintf_internal_r+0x18b8>
 c007c48:	d9002e17 	ldw	r4,184(sp)
 c007c4c:	d9402e17 	ldw	r5,184(sp)
 c007c50:	d8802e17 	ldw	r2,184(sp)
 c007c54:	21000017 	ldw	r4,0(r4)
 c007c58:	29400117 	ldw	r5,4(r5)
 c007c5c:	10800204 	addi	r2,r2,8
 c007c60:	d9003615 	stw	r4,216(sp)
 c007c64:	d9403815 	stw	r5,224(sp)
 c007c68:	d8802e15 	stw	r2,184(sp)
 c007c6c:	d9003617 	ldw	r4,216(sp)
 c007c70:	d9403817 	ldw	r5,224(sp)
 c007c74:	da003d15 	stw	r8,244(sp)
 c007c78:	04000044 	movi	r16,1
 c007c7c:	c0104bc0 	call	c0104bc <__fpclassifyd>
 c007c80:	da003d17 	ldw	r8,244(sp)
 c007c84:	1404441e 	bne	r2,r16,c008d98 <___vfprintf_internal_r+0x174c>
 c007c88:	d9003617 	ldw	r4,216(sp)
 c007c8c:	d9403817 	ldw	r5,224(sp)
 c007c90:	000d883a 	mov	r6,zero
 c007c94:	000f883a 	mov	r7,zero
 c007c98:	c0192780 	call	c019278 <__ledf2>
 c007c9c:	da003d17 	ldw	r8,244(sp)
 c007ca0:	1005e316 	blt	r2,zero,c009430 <___vfprintf_internal_r+0x1de4>
 c007ca4:	df002783 	ldbu	fp,158(sp)
 c007ca8:	008011c4 	movi	r2,71
 c007cac:	1445580e 	bge	r2,r17,c009210 <___vfprintf_internal_r+0x1bc4>
 c007cb0:	040300b4 	movhi	r16,3074
 c007cb4:	84367904 	addi	r16,r16,-9756
 c007cb8:	00c000c4 	movi	r3,3
 c007cbc:	00bfdfc4 	movi	r2,-129
 c007cc0:	d8c02915 	stw	r3,164(sp)
 c007cc4:	90a4703a 	and	r18,r18,r2
 c007cc8:	d8c02b15 	stw	r3,172(sp)
 c007ccc:	d8002a15 	stw	zero,168(sp)
 c007cd0:	d8003215 	stw	zero,200(sp)
 c007cd4:	00003a06 	br	c007dc0 <___vfprintf_internal_r+0x774>
 c007cd8:	84000214 	ori	r16,r16,8
 c007cdc:	ac400007 	ldb	r17,0(r21)
 c007ce0:	003ebc06 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c007ce4:	8025883a 	mov	r18,r16
 c007ce8:	dc002903 	ldbu	r16,164(sp)
 c007cec:	e011883a 	mov	r8,fp
 c007cf0:	84003fcc 	andi	r16,r16,255
 c007cf4:	8007001e 	bne	r16,zero,c0098f8 <___vfprintf_internal_r+0x22ac>
 c007cf8:	94800414 	ori	r18,r18,16
 c007cfc:	9080080c 	andi	r2,r18,32
 c007d00:	1002fa26 	beq	r2,zero,c0088ec <___vfprintf_internal_r+0x12a0>
 c007d04:	d9002e17 	ldw	r4,184(sp)
 c007d08:	d9402a17 	ldw	r5,168(sp)
 c007d0c:	d8002785 	stb	zero,158(sp)
 c007d10:	20800204 	addi	r2,r4,8
 c007d14:	24c00017 	ldw	r19,0(r4)
 c007d18:	25800117 	ldw	r22,4(r4)
 c007d1c:	2804b116 	blt	r5,zero,c008fe4 <___vfprintf_internal_r+0x1998>
 c007d20:	013fdfc4 	movi	r4,-129
 c007d24:	9d86b03a 	or	r3,r19,r22
 c007d28:	d8802e15 	stw	r2,184(sp)
 c007d2c:	9124703a 	and	r18,r18,r4
 c007d30:	1802fb1e 	bne	r3,zero,c008920 <___vfprintf_internal_r+0x12d4>
 c007d34:	d8c02a17 	ldw	r3,168(sp)
 c007d38:	0039883a 	mov	fp,zero
 c007d3c:	1805e526 	beq	r3,zero,c0094d4 <___vfprintf_internal_r+0x1e88>
 c007d40:	0027883a 	mov	r19,zero
 c007d44:	002d883a 	mov	r22,zero
 c007d48:	dc001e04 	addi	r16,sp,120
 c007d4c:	9806d0fa 	srli	r3,r19,3
 c007d50:	b008977a 	slli	r4,r22,29
 c007d54:	b02cd0fa 	srli	r22,r22,3
 c007d58:	9cc001cc 	andi	r19,r19,7
 c007d5c:	98800c04 	addi	r2,r19,48
 c007d60:	843fffc4 	addi	r16,r16,-1
 c007d64:	20e6b03a 	or	r19,r4,r3
 c007d68:	80800005 	stb	r2,0(r16)
 c007d6c:	9d86b03a 	or	r3,r19,r22
 c007d70:	183ff61e 	bne	r3,zero,c007d4c <__alt_data_end+0xfc007d4c>
 c007d74:	90c0004c 	andi	r3,r18,1
 c007d78:	18014126 	beq	r3,zero,c008280 <___vfprintf_internal_r+0xc34>
 c007d7c:	10803fcc 	andi	r2,r2,255
 c007d80:	1080201c 	xori	r2,r2,128
 c007d84:	10bfe004 	addi	r2,r2,-128
 c007d88:	00c00c04 	movi	r3,48
 c007d8c:	10c13c26 	beq	r2,r3,c008280 <___vfprintf_internal_r+0xc34>
 c007d90:	80ffffc5 	stb	r3,-1(r16)
 c007d94:	d8c02817 	ldw	r3,160(sp)
 c007d98:	80bfffc4 	addi	r2,r16,-1
 c007d9c:	1021883a 	mov	r16,r2
 c007da0:	1887c83a 	sub	r3,r3,r2
 c007da4:	d8c02b15 	stw	r3,172(sp)
 c007da8:	d8802b17 	ldw	r2,172(sp)
 c007dac:	d9002a17 	ldw	r4,168(sp)
 c007db0:	1100010e 	bge	r2,r4,c007db8 <___vfprintf_internal_r+0x76c>
 c007db4:	2005883a 	mov	r2,r4
 c007db8:	d8802915 	stw	r2,164(sp)
 c007dbc:	d8003215 	stw	zero,200(sp)
 c007dc0:	e7003fcc 	andi	fp,fp,255
 c007dc4:	e700201c 	xori	fp,fp,128
 c007dc8:	e73fe004 	addi	fp,fp,-128
 c007dcc:	e0000326 	beq	fp,zero,c007ddc <___vfprintf_internal_r+0x790>
 c007dd0:	d8c02917 	ldw	r3,164(sp)
 c007dd4:	18c00044 	addi	r3,r3,1
 c007dd8:	d8c02915 	stw	r3,164(sp)
 c007ddc:	90c0008c 	andi	r3,r18,2
 c007de0:	d8c02c15 	stw	r3,176(sp)
 c007de4:	18000326 	beq	r3,zero,c007df4 <___vfprintf_internal_r+0x7a8>
 c007de8:	d8c02917 	ldw	r3,164(sp)
 c007dec:	18c00084 	addi	r3,r3,2
 c007df0:	d8c02915 	stw	r3,164(sp)
 c007df4:	90c0210c 	andi	r3,r18,132
 c007df8:	d8c03015 	stw	r3,192(sp)
 c007dfc:	1801c51e 	bne	r3,zero,c008514 <___vfprintf_internal_r+0xec8>
 c007e00:	d9003117 	ldw	r4,196(sp)
 c007e04:	d8c02917 	ldw	r3,164(sp)
 c007e08:	20e7c83a 	sub	r19,r4,r3
 c007e0c:	04c1c10e 	bge	zero,r19,c008514 <___vfprintf_internal_r+0xec8>
 c007e10:	02400404 	movi	r9,16
 c007e14:	d8c02017 	ldw	r3,128(sp)
 c007e18:	d8801f17 	ldw	r2,124(sp)
 c007e1c:	4cc52f0e 	bge	r9,r19,c0092dc <___vfprintf_internal_r+0x1c90>
 c007e20:	014300b4 	movhi	r5,3074
 c007e24:	29769484 	addi	r5,r5,-9646
 c007e28:	dc403b15 	stw	r17,236(sp)
 c007e2c:	d9403515 	stw	r5,212(sp)
 c007e30:	9823883a 	mov	r17,r19
 c007e34:	482d883a 	mov	r22,r9
 c007e38:	9027883a 	mov	r19,r18
 c007e3c:	070001c4 	movi	fp,7
 c007e40:	8025883a 	mov	r18,r16
 c007e44:	dc002d17 	ldw	r16,180(sp)
 c007e48:	00000306 	br	c007e58 <___vfprintf_internal_r+0x80c>
 c007e4c:	8c7ffc04 	addi	r17,r17,-16
 c007e50:	42000204 	addi	r8,r8,8
 c007e54:	b440130e 	bge	r22,r17,c007ea4 <___vfprintf_internal_r+0x858>
 c007e58:	010300b4 	movhi	r4,3074
 c007e5c:	18c00404 	addi	r3,r3,16
 c007e60:	10800044 	addi	r2,r2,1
 c007e64:	21369484 	addi	r4,r4,-9646
 c007e68:	41000015 	stw	r4,0(r8)
 c007e6c:	45800115 	stw	r22,4(r8)
 c007e70:	d8c02015 	stw	r3,128(sp)
 c007e74:	d8801f15 	stw	r2,124(sp)
 c007e78:	e0bff40e 	bge	fp,r2,c007e4c <__alt_data_end+0xfc007e4c>
 c007e7c:	d9801e04 	addi	r6,sp,120
 c007e80:	b80b883a 	mov	r5,r23
 c007e84:	8009883a 	mov	r4,r16
 c007e88:	c0143980 	call	c014398 <__sprint_r>
 c007e8c:	103ef31e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c007e90:	8c7ffc04 	addi	r17,r17,-16
 c007e94:	d8c02017 	ldw	r3,128(sp)
 c007e98:	d8801f17 	ldw	r2,124(sp)
 c007e9c:	da000404 	addi	r8,sp,16
 c007ea0:	b47fed16 	blt	r22,r17,c007e58 <__alt_data_end+0xfc007e58>
 c007ea4:	9021883a 	mov	r16,r18
 c007ea8:	9825883a 	mov	r18,r19
 c007eac:	8827883a 	mov	r19,r17
 c007eb0:	dc403b17 	ldw	r17,236(sp)
 c007eb4:	d9403517 	ldw	r5,212(sp)
 c007eb8:	98c7883a 	add	r3,r19,r3
 c007ebc:	10800044 	addi	r2,r2,1
 c007ec0:	41400015 	stw	r5,0(r8)
 c007ec4:	44c00115 	stw	r19,4(r8)
 c007ec8:	d8c02015 	stw	r3,128(sp)
 c007ecc:	d8801f15 	stw	r2,124(sp)
 c007ed0:	010001c4 	movi	r4,7
 c007ed4:	2082c516 	blt	r4,r2,c0089ec <___vfprintf_internal_r+0x13a0>
 c007ed8:	df002787 	ldb	fp,158(sp)
 c007edc:	42000204 	addi	r8,r8,8
 c007ee0:	e0000c26 	beq	fp,zero,c007f14 <___vfprintf_internal_r+0x8c8>
 c007ee4:	d8801f17 	ldw	r2,124(sp)
 c007ee8:	d9002784 	addi	r4,sp,158
 c007eec:	18c00044 	addi	r3,r3,1
 c007ef0:	10800044 	addi	r2,r2,1
 c007ef4:	41000015 	stw	r4,0(r8)
 c007ef8:	01000044 	movi	r4,1
 c007efc:	41000115 	stw	r4,4(r8)
 c007f00:	d8c02015 	stw	r3,128(sp)
 c007f04:	d8801f15 	stw	r2,124(sp)
 c007f08:	010001c4 	movi	r4,7
 c007f0c:	20825e16 	blt	r4,r2,c008888 <___vfprintf_internal_r+0x123c>
 c007f10:	42000204 	addi	r8,r8,8
 c007f14:	d8802c17 	ldw	r2,176(sp)
 c007f18:	10000c26 	beq	r2,zero,c007f4c <___vfprintf_internal_r+0x900>
 c007f1c:	d8801f17 	ldw	r2,124(sp)
 c007f20:	d9002704 	addi	r4,sp,156
 c007f24:	18c00084 	addi	r3,r3,2
 c007f28:	10800044 	addi	r2,r2,1
 c007f2c:	41000015 	stw	r4,0(r8)
 c007f30:	01000084 	movi	r4,2
 c007f34:	41000115 	stw	r4,4(r8)
 c007f38:	d8c02015 	stw	r3,128(sp)
 c007f3c:	d8801f15 	stw	r2,124(sp)
 c007f40:	010001c4 	movi	r4,7
 c007f44:	20825816 	blt	r4,r2,c0088a8 <___vfprintf_internal_r+0x125c>
 c007f48:	42000204 	addi	r8,r8,8
 c007f4c:	d9003017 	ldw	r4,192(sp)
 c007f50:	00802004 	movi	r2,128
 c007f54:	2081bb26 	beq	r4,r2,c008644 <___vfprintf_internal_r+0xff8>
 c007f58:	d9402a17 	ldw	r5,168(sp)
 c007f5c:	d8802b17 	ldw	r2,172(sp)
 c007f60:	28adc83a 	sub	r22,r5,r2
 c007f64:	0580310e 	bge	zero,r22,c00802c <___vfprintf_internal_r+0x9e0>
 c007f68:	07000404 	movi	fp,16
 c007f6c:	d8801f17 	ldw	r2,124(sp)
 c007f70:	e584360e 	bge	fp,r22,c00904c <___vfprintf_internal_r+0x1a00>
 c007f74:	014300b4 	movhi	r5,3074
 c007f78:	29769084 	addi	r5,r5,-9662
 c007f7c:	dc402a15 	stw	r17,168(sp)
 c007f80:	d9402c15 	stw	r5,176(sp)
 c007f84:	b023883a 	mov	r17,r22
 c007f88:	04c001c4 	movi	r19,7
 c007f8c:	a82d883a 	mov	r22,r21
 c007f90:	902b883a 	mov	r21,r18
 c007f94:	8025883a 	mov	r18,r16
 c007f98:	dc002d17 	ldw	r16,180(sp)
 c007f9c:	00000306 	br	c007fac <___vfprintf_internal_r+0x960>
 c007fa0:	8c7ffc04 	addi	r17,r17,-16
 c007fa4:	42000204 	addi	r8,r8,8
 c007fa8:	e440110e 	bge	fp,r17,c007ff0 <___vfprintf_internal_r+0x9a4>
 c007fac:	18c00404 	addi	r3,r3,16
 c007fb0:	10800044 	addi	r2,r2,1
 c007fb4:	45000015 	stw	r20,0(r8)
 c007fb8:	47000115 	stw	fp,4(r8)
 c007fbc:	d8c02015 	stw	r3,128(sp)
 c007fc0:	d8801f15 	stw	r2,124(sp)
 c007fc4:	98bff60e 	bge	r19,r2,c007fa0 <__alt_data_end+0xfc007fa0>
 c007fc8:	d9801e04 	addi	r6,sp,120
 c007fcc:	b80b883a 	mov	r5,r23
 c007fd0:	8009883a 	mov	r4,r16
 c007fd4:	c0143980 	call	c014398 <__sprint_r>
 c007fd8:	103ea01e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c007fdc:	8c7ffc04 	addi	r17,r17,-16
 c007fe0:	d8c02017 	ldw	r3,128(sp)
 c007fe4:	d8801f17 	ldw	r2,124(sp)
 c007fe8:	da000404 	addi	r8,sp,16
 c007fec:	e47fef16 	blt	fp,r17,c007fac <__alt_data_end+0xfc007fac>
 c007ff0:	9021883a 	mov	r16,r18
 c007ff4:	a825883a 	mov	r18,r21
 c007ff8:	b02b883a 	mov	r21,r22
 c007ffc:	882d883a 	mov	r22,r17
 c008000:	dc402a17 	ldw	r17,168(sp)
 c008004:	d9002c17 	ldw	r4,176(sp)
 c008008:	1d87883a 	add	r3,r3,r22
 c00800c:	10800044 	addi	r2,r2,1
 c008010:	41000015 	stw	r4,0(r8)
 c008014:	45800115 	stw	r22,4(r8)
 c008018:	d8c02015 	stw	r3,128(sp)
 c00801c:	d8801f15 	stw	r2,124(sp)
 c008020:	010001c4 	movi	r4,7
 c008024:	20821016 	blt	r4,r2,c008868 <___vfprintf_internal_r+0x121c>
 c008028:	42000204 	addi	r8,r8,8
 c00802c:	9080400c 	andi	r2,r18,256
 c008030:	10013a1e 	bne	r2,zero,c00851c <___vfprintf_internal_r+0xed0>
 c008034:	d9402b17 	ldw	r5,172(sp)
 c008038:	d8801f17 	ldw	r2,124(sp)
 c00803c:	44000015 	stw	r16,0(r8)
 c008040:	1947883a 	add	r3,r3,r5
 c008044:	10800044 	addi	r2,r2,1
 c008048:	41400115 	stw	r5,4(r8)
 c00804c:	d8c02015 	stw	r3,128(sp)
 c008050:	d8801f15 	stw	r2,124(sp)
 c008054:	010001c4 	movi	r4,7
 c008058:	2081f516 	blt	r4,r2,c008830 <___vfprintf_internal_r+0x11e4>
 c00805c:	42000204 	addi	r8,r8,8
 c008060:	9480010c 	andi	r18,r18,4
 c008064:	90003226 	beq	r18,zero,c008130 <___vfprintf_internal_r+0xae4>
 c008068:	d9403117 	ldw	r5,196(sp)
 c00806c:	d8802917 	ldw	r2,164(sp)
 c008070:	28a1c83a 	sub	r16,r5,r2
 c008074:	04002e0e 	bge	zero,r16,c008130 <___vfprintf_internal_r+0xae4>
 c008078:	04400404 	movi	r17,16
 c00807c:	d8801f17 	ldw	r2,124(sp)
 c008080:	8c04c40e 	bge	r17,r16,c009394 <___vfprintf_internal_r+0x1d48>
 c008084:	014300b4 	movhi	r5,3074
 c008088:	29769484 	addi	r5,r5,-9646
 c00808c:	d9403515 	stw	r5,212(sp)
 c008090:	048001c4 	movi	r18,7
 c008094:	dcc02d17 	ldw	r19,180(sp)
 c008098:	00000306 	br	c0080a8 <___vfprintf_internal_r+0xa5c>
 c00809c:	843ffc04 	addi	r16,r16,-16
 c0080a0:	42000204 	addi	r8,r8,8
 c0080a4:	8c00130e 	bge	r17,r16,c0080f4 <___vfprintf_internal_r+0xaa8>
 c0080a8:	010300b4 	movhi	r4,3074
 c0080ac:	18c00404 	addi	r3,r3,16
 c0080b0:	10800044 	addi	r2,r2,1
 c0080b4:	21369484 	addi	r4,r4,-9646
 c0080b8:	41000015 	stw	r4,0(r8)
 c0080bc:	44400115 	stw	r17,4(r8)
 c0080c0:	d8c02015 	stw	r3,128(sp)
 c0080c4:	d8801f15 	stw	r2,124(sp)
 c0080c8:	90bff40e 	bge	r18,r2,c00809c <__alt_data_end+0xfc00809c>
 c0080cc:	d9801e04 	addi	r6,sp,120
 c0080d0:	b80b883a 	mov	r5,r23
 c0080d4:	9809883a 	mov	r4,r19
 c0080d8:	c0143980 	call	c014398 <__sprint_r>
 c0080dc:	103e5f1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c0080e0:	843ffc04 	addi	r16,r16,-16
 c0080e4:	d8c02017 	ldw	r3,128(sp)
 c0080e8:	d8801f17 	ldw	r2,124(sp)
 c0080ec:	da000404 	addi	r8,sp,16
 c0080f0:	8c3fed16 	blt	r17,r16,c0080a8 <__alt_data_end+0xfc0080a8>
 c0080f4:	d9403517 	ldw	r5,212(sp)
 c0080f8:	1c07883a 	add	r3,r3,r16
 c0080fc:	10800044 	addi	r2,r2,1
 c008100:	41400015 	stw	r5,0(r8)
 c008104:	44000115 	stw	r16,4(r8)
 c008108:	d8c02015 	stw	r3,128(sp)
 c00810c:	d8801f15 	stw	r2,124(sp)
 c008110:	010001c4 	movi	r4,7
 c008114:	2080060e 	bge	r4,r2,c008130 <___vfprintf_internal_r+0xae4>
 c008118:	d9002d17 	ldw	r4,180(sp)
 c00811c:	d9801e04 	addi	r6,sp,120
 c008120:	b80b883a 	mov	r5,r23
 c008124:	c0143980 	call	c014398 <__sprint_r>
 c008128:	103e4c1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c00812c:	d8c02017 	ldw	r3,128(sp)
 c008130:	d8803117 	ldw	r2,196(sp)
 c008134:	d9002917 	ldw	r4,164(sp)
 c008138:	1100010e 	bge	r2,r4,c008140 <___vfprintf_internal_r+0xaf4>
 c00813c:	2005883a 	mov	r2,r4
 c008140:	d9402f17 	ldw	r5,188(sp)
 c008144:	288b883a 	add	r5,r5,r2
 c008148:	d9402f15 	stw	r5,188(sp)
 c00814c:	1801c01e 	bne	r3,zero,c008850 <___vfprintf_internal_r+0x1204>
 c008150:	a8800007 	ldb	r2,0(r21)
 c008154:	d8001f15 	stw	zero,124(sp)
 c008158:	da000404 	addi	r8,sp,16
 c00815c:	103d751e 	bne	r2,zero,c007734 <__alt_data_end+0xfc007734>
 c008160:	a823883a 	mov	r17,r21
 c008164:	003d8b06 	br	c007794 <__alt_data_end+0xfc007794>
 c008168:	8025883a 	mov	r18,r16
 c00816c:	dc002903 	ldbu	r16,164(sp)
 c008170:	e011883a 	mov	r8,fp
 c008174:	84003fcc 	andi	r16,r16,255
 c008178:	8005e51e 	bne	r16,zero,c009910 <___vfprintf_internal_r+0x22c4>
 c00817c:	94800414 	ori	r18,r18,16
 c008180:	9080080c 	andi	r2,r18,32
 c008184:	10022b26 	beq	r2,zero,c008a34 <___vfprintf_internal_r+0x13e8>
 c008188:	d9002e17 	ldw	r4,184(sp)
 c00818c:	d9402a17 	ldw	r5,168(sp)
 c008190:	d8002785 	stb	zero,158(sp)
 c008194:	20c00204 	addi	r3,r4,8
 c008198:	24c00017 	ldw	r19,0(r4)
 c00819c:	25800117 	ldw	r22,4(r4)
 c0081a0:	28042e16 	blt	r5,zero,c00925c <___vfprintf_internal_r+0x1c10>
 c0081a4:	013fdfc4 	movi	r4,-129
 c0081a8:	9d84b03a 	or	r2,r19,r22
 c0081ac:	d8c02e15 	stw	r3,184(sp)
 c0081b0:	9124703a 	and	r18,r18,r4
 c0081b4:	0039883a 	mov	fp,zero
 c0081b8:	103e801e 	bne	r2,zero,c007bbc <__alt_data_end+0xfc007bbc>
 c0081bc:	d9002a17 	ldw	r4,168(sp)
 c0081c0:	2002e01e 	bne	r4,zero,c008d44 <___vfprintf_internal_r+0x16f8>
 c0081c4:	d8002a15 	stw	zero,168(sp)
 c0081c8:	d8002b15 	stw	zero,172(sp)
 c0081cc:	dc001e04 	addi	r16,sp,120
 c0081d0:	003ef506 	br	c007da8 <__alt_data_end+0xfc007da8>
 c0081d4:	8025883a 	mov	r18,r16
 c0081d8:	dc002903 	ldbu	r16,164(sp)
 c0081dc:	e011883a 	mov	r8,fp
 c0081e0:	84003fcc 	andi	r16,r16,255
 c0081e4:	8005ba1e 	bne	r16,zero,c0098d0 <___vfprintf_internal_r+0x2284>
 c0081e8:	010300b4 	movhi	r4,3074
 c0081ec:	21367c04 	addi	r4,r4,-9744
 c0081f0:	d9003915 	stw	r4,228(sp)
 c0081f4:	9080080c 	andi	r2,r18,32
 c0081f8:	10006126 	beq	r2,zero,c008380 <___vfprintf_internal_r+0xd34>
 c0081fc:	d9402e17 	ldw	r5,184(sp)
 c008200:	2cc00017 	ldw	r19,0(r5)
 c008204:	2d800117 	ldw	r22,4(r5)
 c008208:	29400204 	addi	r5,r5,8
 c00820c:	d9402e15 	stw	r5,184(sp)
 c008210:	9080004c 	andi	r2,r18,1
 c008214:	1001ac26 	beq	r2,zero,c0088c8 <___vfprintf_internal_r+0x127c>
 c008218:	9d84b03a 	or	r2,r19,r22
 c00821c:	10038526 	beq	r2,zero,c009034 <___vfprintf_internal_r+0x19e8>
 c008220:	d8c02a17 	ldw	r3,168(sp)
 c008224:	00800c04 	movi	r2,48
 c008228:	d8802705 	stb	r2,156(sp)
 c00822c:	dc402745 	stb	r17,157(sp)
 c008230:	d8002785 	stb	zero,158(sp)
 c008234:	90800094 	ori	r2,r18,2
 c008238:	18047916 	blt	r3,zero,c009420 <___vfprintf_internal_r+0x1dd4>
 c00823c:	00bfdfc4 	movi	r2,-129
 c008240:	90a4703a 	and	r18,r18,r2
 c008244:	94800094 	ori	r18,r18,2
 c008248:	0039883a 	mov	fp,zero
 c00824c:	d9003917 	ldw	r4,228(sp)
 c008250:	dc001e04 	addi	r16,sp,120
 c008254:	988003cc 	andi	r2,r19,15
 c008258:	b006973a 	slli	r3,r22,28
 c00825c:	2085883a 	add	r2,r4,r2
 c008260:	9826d13a 	srli	r19,r19,4
 c008264:	10800003 	ldbu	r2,0(r2)
 c008268:	b02cd13a 	srli	r22,r22,4
 c00826c:	843fffc4 	addi	r16,r16,-1
 c008270:	1ce6b03a 	or	r19,r3,r19
 c008274:	80800005 	stb	r2,0(r16)
 c008278:	9d84b03a 	or	r2,r19,r22
 c00827c:	103ff51e 	bne	r2,zero,c008254 <__alt_data_end+0xfc008254>
 c008280:	d8c02817 	ldw	r3,160(sp)
 c008284:	1c07c83a 	sub	r3,r3,r16
 c008288:	d8c02b15 	stw	r3,172(sp)
 c00828c:	003ec606 	br	c007da8 <__alt_data_end+0xfc007da8>
 c008290:	8025883a 	mov	r18,r16
 c008294:	dc002903 	ldbu	r16,164(sp)
 c008298:	e011883a 	mov	r8,fp
 c00829c:	84003fcc 	andi	r16,r16,255
 c0082a0:	803e9626 	beq	r16,zero,c007cfc <__alt_data_end+0xfc007cfc>
 c0082a4:	d8c02b03 	ldbu	r3,172(sp)
 c0082a8:	d8c02785 	stb	r3,158(sp)
 c0082ac:	003e9306 	br	c007cfc <__alt_data_end+0xfc007cfc>
 c0082b0:	00c00044 	movi	r3,1
 c0082b4:	d8c02905 	stb	r3,164(sp)
 c0082b8:	00c00ac4 	movi	r3,43
 c0082bc:	d8c02b05 	stb	r3,172(sp)
 c0082c0:	ac400007 	ldb	r17,0(r21)
 c0082c4:	003d4306 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c0082c8:	84000814 	ori	r16,r16,32
 c0082cc:	ac400007 	ldb	r17,0(r21)
 c0082d0:	003d4006 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c0082d4:	d8802e17 	ldw	r2,184(sp)
 c0082d8:	8025883a 	mov	r18,r16
 c0082dc:	d8002785 	stb	zero,158(sp)
 c0082e0:	14000017 	ldw	r16,0(r2)
 c0082e4:	e011883a 	mov	r8,fp
 c0082e8:	14c00104 	addi	r19,r2,4
 c0082ec:	80042d26 	beq	r16,zero,c0093a4 <___vfprintf_internal_r+0x1d58>
 c0082f0:	d8c02a17 	ldw	r3,168(sp)
 c0082f4:	1803e416 	blt	r3,zero,c009288 <___vfprintf_internal_r+0x1c3c>
 c0082f8:	180d883a 	mov	r6,r3
 c0082fc:	000b883a 	mov	r5,zero
 c008300:	8009883a 	mov	r4,r16
 c008304:	df003d15 	stw	fp,244(sp)
 c008308:	c00e6980 	call	c00e698 <memchr>
 c00830c:	da003d17 	ldw	r8,244(sp)
 c008310:	10046826 	beq	r2,zero,c0094b4 <___vfprintf_internal_r+0x1e68>
 c008314:	1405c83a 	sub	r2,r2,r16
 c008318:	d8802b15 	stw	r2,172(sp)
 c00831c:	1003e016 	blt	r2,zero,c0092a0 <___vfprintf_internal_r+0x1c54>
 c008320:	df002783 	ldbu	fp,158(sp)
 c008324:	d8802915 	stw	r2,164(sp)
 c008328:	dcc02e15 	stw	r19,184(sp)
 c00832c:	d8002a15 	stw	zero,168(sp)
 c008330:	d8003215 	stw	zero,200(sp)
 c008334:	003ea206 	br	c007dc0 <__alt_data_end+0xfc007dc0>
 c008338:	8025883a 	mov	r18,r16
 c00833c:	dc002903 	ldbu	r16,164(sp)
 c008340:	e011883a 	mov	r8,fp
 c008344:	84003fcc 	andi	r16,r16,255
 c008348:	803f8d26 	beq	r16,zero,c008180 <__alt_data_end+0xfc008180>
 c00834c:	d8c02b03 	ldbu	r3,172(sp)
 c008350:	d8c02785 	stb	r3,158(sp)
 c008354:	003f8a06 	br	c008180 <__alt_data_end+0xfc008180>
 c008358:	8025883a 	mov	r18,r16
 c00835c:	dc002903 	ldbu	r16,164(sp)
 c008360:	e011883a 	mov	r8,fp
 c008364:	84003fcc 	andi	r16,r16,255
 c008368:	8005661e 	bne	r16,zero,c009904 <___vfprintf_internal_r+0x22b8>
 c00836c:	010300b4 	movhi	r4,3074
 c008370:	21368104 	addi	r4,r4,-9724
 c008374:	d9003915 	stw	r4,228(sp)
 c008378:	9080080c 	andi	r2,r18,32
 c00837c:	103f9f1e 	bne	r2,zero,c0081fc <__alt_data_end+0xfc0081fc>
 c008380:	9080040c 	andi	r2,r18,16
 c008384:	1002eb26 	beq	r2,zero,c008f34 <___vfprintf_internal_r+0x18e8>
 c008388:	d8802e17 	ldw	r2,184(sp)
 c00838c:	002d883a 	mov	r22,zero
 c008390:	14c00017 	ldw	r19,0(r2)
 c008394:	10800104 	addi	r2,r2,4
 c008398:	d8802e15 	stw	r2,184(sp)
 c00839c:	003f9c06 	br	c008210 <__alt_data_end+0xfc008210>
 c0083a0:	d8802b07 	ldb	r2,172(sp)
 c0083a4:	1002e11e 	bne	r2,zero,c008f2c <___vfprintf_internal_r+0x18e0>
 c0083a8:	00c00044 	movi	r3,1
 c0083ac:	d8c02905 	stb	r3,164(sp)
 c0083b0:	00c00804 	movi	r3,32
 c0083b4:	d8c02b05 	stb	r3,172(sp)
 c0083b8:	ac400007 	ldb	r17,0(r21)
 c0083bc:	003d0506 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c0083c0:	84000054 	ori	r16,r16,1
 c0083c4:	ac400007 	ldb	r17,0(r21)
 c0083c8:	003d0206 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c0083cc:	8025883a 	mov	r18,r16
 c0083d0:	dc002903 	ldbu	r16,164(sp)
 c0083d4:	e011883a 	mov	r8,fp
 c0083d8:	84003fcc 	andi	r16,r16,255
 c0083dc:	803de726 	beq	r16,zero,c007b7c <__alt_data_end+0xfc007b7c>
 c0083e0:	d8c02b03 	ldbu	r3,172(sp)
 c0083e4:	d8c02785 	stb	r3,158(sp)
 c0083e8:	003de406 	br	c007b7c <__alt_data_end+0xfc007b7c>
 c0083ec:	84001014 	ori	r16,r16,64
 c0083f0:	ac400007 	ldb	r17,0(r21)
 c0083f4:	003cf706 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c0083f8:	ac400007 	ldb	r17,0(r21)
 c0083fc:	00801b04 	movi	r2,108
 c008400:	88838f26 	beq	r17,r2,c009240 <___vfprintf_internal_r+0x1bf4>
 c008404:	84000414 	ori	r16,r16,16
 c008408:	003cf206 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c00840c:	8025883a 	mov	r18,r16
 c008410:	dc002903 	ldbu	r16,164(sp)
 c008414:	e011883a 	mov	r8,fp
 c008418:	84003fcc 	andi	r16,r16,255
 c00841c:	80053f1e 	bne	r16,zero,c00991c <___vfprintf_internal_r+0x22d0>
 c008420:	9080080c 	andi	r2,r18,32
 c008424:	1002d226 	beq	r2,zero,c008f70 <___vfprintf_internal_r+0x1924>
 c008428:	d9002e17 	ldw	r4,184(sp)
 c00842c:	d9402f17 	ldw	r5,188(sp)
 c008430:	20800017 	ldw	r2,0(r4)
 c008434:	2807d7fa 	srai	r3,r5,31
 c008438:	21000104 	addi	r4,r4,4
 c00843c:	d9002e15 	stw	r4,184(sp)
 c008440:	11400015 	stw	r5,0(r2)
 c008444:	10c00115 	stw	r3,4(r2)
 c008448:	003cb806 	br	c00772c <__alt_data_end+0xfc00772c>
 c00844c:	d8c02e17 	ldw	r3,184(sp)
 c008450:	d9002e17 	ldw	r4,184(sp)
 c008454:	8025883a 	mov	r18,r16
 c008458:	18800017 	ldw	r2,0(r3)
 c00845c:	21000104 	addi	r4,r4,4
 c008460:	00c00044 	movi	r3,1
 c008464:	e011883a 	mov	r8,fp
 c008468:	d8c02915 	stw	r3,164(sp)
 c00846c:	d8002785 	stb	zero,158(sp)
 c008470:	d8801405 	stb	r2,80(sp)
 c008474:	d9002e15 	stw	r4,184(sp)
 c008478:	d8c02b15 	stw	r3,172(sp)
 c00847c:	d8002a15 	stw	zero,168(sp)
 c008480:	d8003215 	stw	zero,200(sp)
 c008484:	dc001404 	addi	r16,sp,80
 c008488:	0039883a 	mov	fp,zero
 c00848c:	003e5306 	br	c007ddc <__alt_data_end+0xfc007ddc>
 c008490:	010300b4 	movhi	r4,3074
 c008494:	21368104 	addi	r4,r4,-9724
 c008498:	0039883a 	mov	fp,zero
 c00849c:	d9003915 	stw	r4,228(sp)
 c0084a0:	04401e04 	movi	r17,120
 c0084a4:	003f6906 	br	c00824c <__alt_data_end+0xfc00824c>
 c0084a8:	8025883a 	mov	r18,r16
 c0084ac:	dc002903 	ldbu	r16,164(sp)
 c0084b0:	e011883a 	mov	r8,fp
 c0084b4:	84003fcc 	andi	r16,r16,255
 c0084b8:	8005081e 	bne	r16,zero,c0098dc <___vfprintf_internal_r+0x2290>
 c0084bc:	883d6126 	beq	r17,zero,c007a44 <__alt_data_end+0xfc007a44>
 c0084c0:	00c00044 	movi	r3,1
 c0084c4:	d8c02915 	stw	r3,164(sp)
 c0084c8:	dc401405 	stb	r17,80(sp)
 c0084cc:	d8002785 	stb	zero,158(sp)
 c0084d0:	003fe906 	br	c008478 <__alt_data_end+0xfc008478>
 c0084d4:	014300b4 	movhi	r5,3074
 c0084d8:	29768104 	addi	r5,r5,-9724
 c0084dc:	d9403915 	stw	r5,228(sp)
 c0084e0:	d8c02e15 	stw	r3,184(sp)
 c0084e4:	1025883a 	mov	r18,r2
 c0084e8:	04401e04 	movi	r17,120
 c0084ec:	9d84b03a 	or	r2,r19,r22
 c0084f0:	1000fc1e 	bne	r2,zero,c0088e4 <___vfprintf_internal_r+0x1298>
 c0084f4:	0039883a 	mov	fp,zero
 c0084f8:	00800084 	movi	r2,2
 c0084fc:	10803fcc 	andi	r2,r2,255
 c008500:	00c00044 	movi	r3,1
 c008504:	10c20f26 	beq	r2,r3,c008d44 <___vfprintf_internal_r+0x16f8>
 c008508:	00c00084 	movi	r3,2
 c00850c:	10fd3326 	beq	r2,r3,c0079dc <__alt_data_end+0xfc0079dc>
 c008510:	003e0b06 	br	c007d40 <__alt_data_end+0xfc007d40>
 c008514:	d8c02017 	ldw	r3,128(sp)
 c008518:	003e7106 	br	c007ee0 <__alt_data_end+0xfc007ee0>
 c00851c:	00801944 	movi	r2,101
 c008520:	14407e0e 	bge	r2,r17,c00871c <___vfprintf_internal_r+0x10d0>
 c008524:	d9003617 	ldw	r4,216(sp)
 c008528:	d9403817 	ldw	r5,224(sp)
 c00852c:	000d883a 	mov	r6,zero
 c008530:	000f883a 	mov	r7,zero
 c008534:	d8c03c15 	stw	r3,240(sp)
 c008538:	da003d15 	stw	r8,244(sp)
 c00853c:	c0191140 	call	c019114 <__eqdf2>
 c008540:	d8c03c17 	ldw	r3,240(sp)
 c008544:	da003d17 	ldw	r8,244(sp)
 c008548:	1000f71e 	bne	r2,zero,c008928 <___vfprintf_internal_r+0x12dc>
 c00854c:	d8801f17 	ldw	r2,124(sp)
 c008550:	010300b4 	movhi	r4,3074
 c008554:	21368804 	addi	r4,r4,-9696
 c008558:	18c00044 	addi	r3,r3,1
 c00855c:	10800044 	addi	r2,r2,1
 c008560:	41000015 	stw	r4,0(r8)
 c008564:	01000044 	movi	r4,1
 c008568:	41000115 	stw	r4,4(r8)
 c00856c:	d8c02015 	stw	r3,128(sp)
 c008570:	d8801f15 	stw	r2,124(sp)
 c008574:	010001c4 	movi	r4,7
 c008578:	2082b816 	blt	r4,r2,c00905c <___vfprintf_internal_r+0x1a10>
 c00857c:	42000204 	addi	r8,r8,8
 c008580:	d8802617 	ldw	r2,152(sp)
 c008584:	d9403317 	ldw	r5,204(sp)
 c008588:	11400216 	blt	r2,r5,c008594 <___vfprintf_internal_r+0xf48>
 c00858c:	9080004c 	andi	r2,r18,1
 c008590:	103eb326 	beq	r2,zero,c008060 <__alt_data_end+0xfc008060>
 c008594:	d8803717 	ldw	r2,220(sp)
 c008598:	d9003417 	ldw	r4,208(sp)
 c00859c:	d9403717 	ldw	r5,220(sp)
 c0085a0:	1887883a 	add	r3,r3,r2
 c0085a4:	d8801f17 	ldw	r2,124(sp)
 c0085a8:	41000015 	stw	r4,0(r8)
 c0085ac:	41400115 	stw	r5,4(r8)
 c0085b0:	10800044 	addi	r2,r2,1
 c0085b4:	d8c02015 	stw	r3,128(sp)
 c0085b8:	d8801f15 	stw	r2,124(sp)
 c0085bc:	010001c4 	movi	r4,7
 c0085c0:	20832916 	blt	r4,r2,c009268 <___vfprintf_internal_r+0x1c1c>
 c0085c4:	42000204 	addi	r8,r8,8
 c0085c8:	d8803317 	ldw	r2,204(sp)
 c0085cc:	143fffc4 	addi	r16,r2,-1
 c0085d0:	043ea30e 	bge	zero,r16,c008060 <__alt_data_end+0xfc008060>
 c0085d4:	04400404 	movi	r17,16
 c0085d8:	d8801f17 	ldw	r2,124(sp)
 c0085dc:	8c00880e 	bge	r17,r16,c008800 <___vfprintf_internal_r+0x11b4>
 c0085e0:	014300b4 	movhi	r5,3074
 c0085e4:	29769084 	addi	r5,r5,-9662
 c0085e8:	d9402c15 	stw	r5,176(sp)
 c0085ec:	058001c4 	movi	r22,7
 c0085f0:	dcc02d17 	ldw	r19,180(sp)
 c0085f4:	00000306 	br	c008604 <___vfprintf_internal_r+0xfb8>
 c0085f8:	42000204 	addi	r8,r8,8
 c0085fc:	843ffc04 	addi	r16,r16,-16
 c008600:	8c00820e 	bge	r17,r16,c00880c <___vfprintf_internal_r+0x11c0>
 c008604:	18c00404 	addi	r3,r3,16
 c008608:	10800044 	addi	r2,r2,1
 c00860c:	45000015 	stw	r20,0(r8)
 c008610:	44400115 	stw	r17,4(r8)
 c008614:	d8c02015 	stw	r3,128(sp)
 c008618:	d8801f15 	stw	r2,124(sp)
 c00861c:	b0bff60e 	bge	r22,r2,c0085f8 <__alt_data_end+0xfc0085f8>
 c008620:	d9801e04 	addi	r6,sp,120
 c008624:	b80b883a 	mov	r5,r23
 c008628:	9809883a 	mov	r4,r19
 c00862c:	c0143980 	call	c014398 <__sprint_r>
 c008630:	103d0a1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008634:	d8c02017 	ldw	r3,128(sp)
 c008638:	d8801f17 	ldw	r2,124(sp)
 c00863c:	da000404 	addi	r8,sp,16
 c008640:	003fee06 	br	c0085fc <__alt_data_end+0xfc0085fc>
 c008644:	d9403117 	ldw	r5,196(sp)
 c008648:	d8802917 	ldw	r2,164(sp)
 c00864c:	28adc83a 	sub	r22,r5,r2
 c008650:	05be410e 	bge	zero,r22,c007f58 <__alt_data_end+0xfc007f58>
 c008654:	07000404 	movi	fp,16
 c008658:	d8801f17 	ldw	r2,124(sp)
 c00865c:	e5838f0e 	bge	fp,r22,c00949c <___vfprintf_internal_r+0x1e50>
 c008660:	014300b4 	movhi	r5,3074
 c008664:	29769084 	addi	r5,r5,-9662
 c008668:	dc403015 	stw	r17,192(sp)
 c00866c:	d9402c15 	stw	r5,176(sp)
 c008670:	b023883a 	mov	r17,r22
 c008674:	04c001c4 	movi	r19,7
 c008678:	a82d883a 	mov	r22,r21
 c00867c:	902b883a 	mov	r21,r18
 c008680:	8025883a 	mov	r18,r16
 c008684:	dc002d17 	ldw	r16,180(sp)
 c008688:	00000306 	br	c008698 <___vfprintf_internal_r+0x104c>
 c00868c:	8c7ffc04 	addi	r17,r17,-16
 c008690:	42000204 	addi	r8,r8,8
 c008694:	e440110e 	bge	fp,r17,c0086dc <___vfprintf_internal_r+0x1090>
 c008698:	18c00404 	addi	r3,r3,16
 c00869c:	10800044 	addi	r2,r2,1
 c0086a0:	45000015 	stw	r20,0(r8)
 c0086a4:	47000115 	stw	fp,4(r8)
 c0086a8:	d8c02015 	stw	r3,128(sp)
 c0086ac:	d8801f15 	stw	r2,124(sp)
 c0086b0:	98bff60e 	bge	r19,r2,c00868c <__alt_data_end+0xfc00868c>
 c0086b4:	d9801e04 	addi	r6,sp,120
 c0086b8:	b80b883a 	mov	r5,r23
 c0086bc:	8009883a 	mov	r4,r16
 c0086c0:	c0143980 	call	c014398 <__sprint_r>
 c0086c4:	103ce51e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c0086c8:	8c7ffc04 	addi	r17,r17,-16
 c0086cc:	d8c02017 	ldw	r3,128(sp)
 c0086d0:	d8801f17 	ldw	r2,124(sp)
 c0086d4:	da000404 	addi	r8,sp,16
 c0086d8:	e47fef16 	blt	fp,r17,c008698 <__alt_data_end+0xfc008698>
 c0086dc:	9021883a 	mov	r16,r18
 c0086e0:	a825883a 	mov	r18,r21
 c0086e4:	b02b883a 	mov	r21,r22
 c0086e8:	882d883a 	mov	r22,r17
 c0086ec:	dc403017 	ldw	r17,192(sp)
 c0086f0:	d9002c17 	ldw	r4,176(sp)
 c0086f4:	1d87883a 	add	r3,r3,r22
 c0086f8:	10800044 	addi	r2,r2,1
 c0086fc:	41000015 	stw	r4,0(r8)
 c008700:	45800115 	stw	r22,4(r8)
 c008704:	d8c02015 	stw	r3,128(sp)
 c008708:	d8801f15 	stw	r2,124(sp)
 c00870c:	010001c4 	movi	r4,7
 c008710:	20818e16 	blt	r4,r2,c008d4c <___vfprintf_internal_r+0x1700>
 c008714:	42000204 	addi	r8,r8,8
 c008718:	003e0f06 	br	c007f58 <__alt_data_end+0xfc007f58>
 c00871c:	d9403317 	ldw	r5,204(sp)
 c008720:	00800044 	movi	r2,1
 c008724:	18c00044 	addi	r3,r3,1
 c008728:	1141530e 	bge	r2,r5,c008c78 <___vfprintf_internal_r+0x162c>
 c00872c:	dc401f17 	ldw	r17,124(sp)
 c008730:	00800044 	movi	r2,1
 c008734:	40800115 	stw	r2,4(r8)
 c008738:	8c400044 	addi	r17,r17,1
 c00873c:	44000015 	stw	r16,0(r8)
 c008740:	d8c02015 	stw	r3,128(sp)
 c008744:	dc401f15 	stw	r17,124(sp)
 c008748:	008001c4 	movi	r2,7
 c00874c:	14416b16 	blt	r2,r17,c008cfc <___vfprintf_internal_r+0x16b0>
 c008750:	42000204 	addi	r8,r8,8
 c008754:	d8803717 	ldw	r2,220(sp)
 c008758:	d9003417 	ldw	r4,208(sp)
 c00875c:	8c400044 	addi	r17,r17,1
 c008760:	10c7883a 	add	r3,r2,r3
 c008764:	40800115 	stw	r2,4(r8)
 c008768:	41000015 	stw	r4,0(r8)
 c00876c:	d8c02015 	stw	r3,128(sp)
 c008770:	dc401f15 	stw	r17,124(sp)
 c008774:	008001c4 	movi	r2,7
 c008778:	14416916 	blt	r2,r17,c008d20 <___vfprintf_internal_r+0x16d4>
 c00877c:	45800204 	addi	r22,r8,8
 c008780:	d9003617 	ldw	r4,216(sp)
 c008784:	d9403817 	ldw	r5,224(sp)
 c008788:	000d883a 	mov	r6,zero
 c00878c:	000f883a 	mov	r7,zero
 c008790:	d8c03c15 	stw	r3,240(sp)
 c008794:	c0191140 	call	c019114 <__eqdf2>
 c008798:	d8c03c17 	ldw	r3,240(sp)
 c00879c:	1000bc26 	beq	r2,zero,c008a90 <___vfprintf_internal_r+0x1444>
 c0087a0:	d9403317 	ldw	r5,204(sp)
 c0087a4:	84000044 	addi	r16,r16,1
 c0087a8:	8c400044 	addi	r17,r17,1
 c0087ac:	28bfffc4 	addi	r2,r5,-1
 c0087b0:	1887883a 	add	r3,r3,r2
 c0087b4:	b0800115 	stw	r2,4(r22)
 c0087b8:	b4000015 	stw	r16,0(r22)
 c0087bc:	d8c02015 	stw	r3,128(sp)
 c0087c0:	dc401f15 	stw	r17,124(sp)
 c0087c4:	008001c4 	movi	r2,7
 c0087c8:	14414316 	blt	r2,r17,c008cd8 <___vfprintf_internal_r+0x168c>
 c0087cc:	b5800204 	addi	r22,r22,8
 c0087d0:	d9003a17 	ldw	r4,232(sp)
 c0087d4:	df0022c4 	addi	fp,sp,139
 c0087d8:	8c400044 	addi	r17,r17,1
 c0087dc:	20c7883a 	add	r3,r4,r3
 c0087e0:	b7000015 	stw	fp,0(r22)
 c0087e4:	b1000115 	stw	r4,4(r22)
 c0087e8:	d8c02015 	stw	r3,128(sp)
 c0087ec:	dc401f15 	stw	r17,124(sp)
 c0087f0:	008001c4 	movi	r2,7
 c0087f4:	14400e16 	blt	r2,r17,c008830 <___vfprintf_internal_r+0x11e4>
 c0087f8:	b2000204 	addi	r8,r22,8
 c0087fc:	003e1806 	br	c008060 <__alt_data_end+0xfc008060>
 c008800:	010300b4 	movhi	r4,3074
 c008804:	21369084 	addi	r4,r4,-9662
 c008808:	d9002c15 	stw	r4,176(sp)
 c00880c:	d9002c17 	ldw	r4,176(sp)
 c008810:	1c07883a 	add	r3,r3,r16
 c008814:	44000115 	stw	r16,4(r8)
 c008818:	41000015 	stw	r4,0(r8)
 c00881c:	10800044 	addi	r2,r2,1
 c008820:	d8c02015 	stw	r3,128(sp)
 c008824:	d8801f15 	stw	r2,124(sp)
 c008828:	010001c4 	movi	r4,7
 c00882c:	20be0b0e 	bge	r4,r2,c00805c <__alt_data_end+0xfc00805c>
 c008830:	d9002d17 	ldw	r4,180(sp)
 c008834:	d9801e04 	addi	r6,sp,120
 c008838:	b80b883a 	mov	r5,r23
 c00883c:	c0143980 	call	c014398 <__sprint_r>
 c008840:	103c861e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008844:	d8c02017 	ldw	r3,128(sp)
 c008848:	da000404 	addi	r8,sp,16
 c00884c:	003e0406 	br	c008060 <__alt_data_end+0xfc008060>
 c008850:	d9002d17 	ldw	r4,180(sp)
 c008854:	d9801e04 	addi	r6,sp,120
 c008858:	b80b883a 	mov	r5,r23
 c00885c:	c0143980 	call	c014398 <__sprint_r>
 c008860:	103e3b26 	beq	r2,zero,c008150 <__alt_data_end+0xfc008150>
 c008864:	003c7d06 	br	c007a5c <__alt_data_end+0xfc007a5c>
 c008868:	d9002d17 	ldw	r4,180(sp)
 c00886c:	d9801e04 	addi	r6,sp,120
 c008870:	b80b883a 	mov	r5,r23
 c008874:	c0143980 	call	c014398 <__sprint_r>
 c008878:	103c781e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c00887c:	d8c02017 	ldw	r3,128(sp)
 c008880:	da000404 	addi	r8,sp,16
 c008884:	003de906 	br	c00802c <__alt_data_end+0xfc00802c>
 c008888:	d9002d17 	ldw	r4,180(sp)
 c00888c:	d9801e04 	addi	r6,sp,120
 c008890:	b80b883a 	mov	r5,r23
 c008894:	c0143980 	call	c014398 <__sprint_r>
 c008898:	103c701e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c00889c:	d8c02017 	ldw	r3,128(sp)
 c0088a0:	da000404 	addi	r8,sp,16
 c0088a4:	003d9b06 	br	c007f14 <__alt_data_end+0xfc007f14>
 c0088a8:	d9002d17 	ldw	r4,180(sp)
 c0088ac:	d9801e04 	addi	r6,sp,120
 c0088b0:	b80b883a 	mov	r5,r23
 c0088b4:	c0143980 	call	c014398 <__sprint_r>
 c0088b8:	103c681e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c0088bc:	d8c02017 	ldw	r3,128(sp)
 c0088c0:	da000404 	addi	r8,sp,16
 c0088c4:	003da106 	br	c007f4c <__alt_data_end+0xfc007f4c>
 c0088c8:	d9402a17 	ldw	r5,168(sp)
 c0088cc:	d8002785 	stb	zero,158(sp)
 c0088d0:	283f0616 	blt	r5,zero,c0084ec <__alt_data_end+0xfc0084ec>
 c0088d4:	00ffdfc4 	movi	r3,-129
 c0088d8:	9d84b03a 	or	r2,r19,r22
 c0088dc:	90e4703a 	and	r18,r18,r3
 c0088e0:	103c3b26 	beq	r2,zero,c0079d0 <__alt_data_end+0xfc0079d0>
 c0088e4:	0039883a 	mov	fp,zero
 c0088e8:	003e5806 	br	c00824c <__alt_data_end+0xfc00824c>
 c0088ec:	9080040c 	andi	r2,r18,16
 c0088f0:	1001b326 	beq	r2,zero,c008fc0 <___vfprintf_internal_r+0x1974>
 c0088f4:	d8c02e17 	ldw	r3,184(sp)
 c0088f8:	d9002a17 	ldw	r4,168(sp)
 c0088fc:	d8002785 	stb	zero,158(sp)
 c008900:	18800104 	addi	r2,r3,4
 c008904:	1cc00017 	ldw	r19,0(r3)
 c008908:	002d883a 	mov	r22,zero
 c00890c:	2001b516 	blt	r4,zero,c008fe4 <___vfprintf_internal_r+0x1998>
 c008910:	00ffdfc4 	movi	r3,-129
 c008914:	d8802e15 	stw	r2,184(sp)
 c008918:	90e4703a 	and	r18,r18,r3
 c00891c:	983d0526 	beq	r19,zero,c007d34 <__alt_data_end+0xfc007d34>
 c008920:	0039883a 	mov	fp,zero
 c008924:	003d0806 	br	c007d48 <__alt_data_end+0xfc007d48>
 c008928:	dc402617 	ldw	r17,152(sp)
 c00892c:	0441d30e 	bge	zero,r17,c00907c <___vfprintf_internal_r+0x1a30>
 c008930:	dc403217 	ldw	r17,200(sp)
 c008934:	d8803317 	ldw	r2,204(sp)
 c008938:	1440010e 	bge	r2,r17,c008940 <___vfprintf_internal_r+0x12f4>
 c00893c:	1023883a 	mov	r17,r2
 c008940:	04400a0e 	bge	zero,r17,c00896c <___vfprintf_internal_r+0x1320>
 c008944:	d8801f17 	ldw	r2,124(sp)
 c008948:	1c47883a 	add	r3,r3,r17
 c00894c:	44000015 	stw	r16,0(r8)
 c008950:	10800044 	addi	r2,r2,1
 c008954:	44400115 	stw	r17,4(r8)
 c008958:	d8c02015 	stw	r3,128(sp)
 c00895c:	d8801f15 	stw	r2,124(sp)
 c008960:	010001c4 	movi	r4,7
 c008964:	20826516 	blt	r4,r2,c0092fc <___vfprintf_internal_r+0x1cb0>
 c008968:	42000204 	addi	r8,r8,8
 c00896c:	88026116 	blt	r17,zero,c0092f4 <___vfprintf_internal_r+0x1ca8>
 c008970:	d9003217 	ldw	r4,200(sp)
 c008974:	2463c83a 	sub	r17,r4,r17
 c008978:	04407b0e 	bge	zero,r17,c008b68 <___vfprintf_internal_r+0x151c>
 c00897c:	05800404 	movi	r22,16
 c008980:	d8801f17 	ldw	r2,124(sp)
 c008984:	b4419d0e 	bge	r22,r17,c008ffc <___vfprintf_internal_r+0x19b0>
 c008988:	010300b4 	movhi	r4,3074
 c00898c:	21369084 	addi	r4,r4,-9662
 c008990:	d9002c15 	stw	r4,176(sp)
 c008994:	070001c4 	movi	fp,7
 c008998:	dcc02d17 	ldw	r19,180(sp)
 c00899c:	00000306 	br	c0089ac <___vfprintf_internal_r+0x1360>
 c0089a0:	42000204 	addi	r8,r8,8
 c0089a4:	8c7ffc04 	addi	r17,r17,-16
 c0089a8:	b441970e 	bge	r22,r17,c009008 <___vfprintf_internal_r+0x19bc>
 c0089ac:	18c00404 	addi	r3,r3,16
 c0089b0:	10800044 	addi	r2,r2,1
 c0089b4:	45000015 	stw	r20,0(r8)
 c0089b8:	45800115 	stw	r22,4(r8)
 c0089bc:	d8c02015 	stw	r3,128(sp)
 c0089c0:	d8801f15 	stw	r2,124(sp)
 c0089c4:	e0bff60e 	bge	fp,r2,c0089a0 <__alt_data_end+0xfc0089a0>
 c0089c8:	d9801e04 	addi	r6,sp,120
 c0089cc:	b80b883a 	mov	r5,r23
 c0089d0:	9809883a 	mov	r4,r19
 c0089d4:	c0143980 	call	c014398 <__sprint_r>
 c0089d8:	103c201e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c0089dc:	d8c02017 	ldw	r3,128(sp)
 c0089e0:	d8801f17 	ldw	r2,124(sp)
 c0089e4:	da000404 	addi	r8,sp,16
 c0089e8:	003fee06 	br	c0089a4 <__alt_data_end+0xfc0089a4>
 c0089ec:	d9002d17 	ldw	r4,180(sp)
 c0089f0:	d9801e04 	addi	r6,sp,120
 c0089f4:	b80b883a 	mov	r5,r23
 c0089f8:	c0143980 	call	c014398 <__sprint_r>
 c0089fc:	103c171e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008a00:	d8c02017 	ldw	r3,128(sp)
 c008a04:	df002787 	ldb	fp,158(sp)
 c008a08:	da000404 	addi	r8,sp,16
 c008a0c:	003d3406 	br	c007ee0 <__alt_data_end+0xfc007ee0>
 c008a10:	9080040c 	andi	r2,r18,16
 c008a14:	10016126 	beq	r2,zero,c008f9c <___vfprintf_internal_r+0x1950>
 c008a18:	d9402e17 	ldw	r5,184(sp)
 c008a1c:	2cc00017 	ldw	r19,0(r5)
 c008a20:	29400104 	addi	r5,r5,4
 c008a24:	d9402e15 	stw	r5,184(sp)
 c008a28:	982dd7fa 	srai	r22,r19,31
 c008a2c:	b005883a 	mov	r2,r22
 c008a30:	003c5a06 	br	c007b9c <__alt_data_end+0xfc007b9c>
 c008a34:	9080040c 	andi	r2,r18,16
 c008a38:	10003526 	beq	r2,zero,c008b10 <___vfprintf_internal_r+0x14c4>
 c008a3c:	d8c02e17 	ldw	r3,184(sp)
 c008a40:	d9002a17 	ldw	r4,168(sp)
 c008a44:	d8002785 	stb	zero,158(sp)
 c008a48:	18800104 	addi	r2,r3,4
 c008a4c:	1cc00017 	ldw	r19,0(r3)
 c008a50:	002d883a 	mov	r22,zero
 c008a54:	20003716 	blt	r4,zero,c008b34 <___vfprintf_internal_r+0x14e8>
 c008a58:	00ffdfc4 	movi	r3,-129
 c008a5c:	d8802e15 	stw	r2,184(sp)
 c008a60:	90e4703a 	and	r18,r18,r3
 c008a64:	0039883a 	mov	fp,zero
 c008a68:	983dd426 	beq	r19,zero,c0081bc <__alt_data_end+0xfc0081bc>
 c008a6c:	00800244 	movi	r2,9
 c008a70:	14fc5336 	bltu	r2,r19,c007bc0 <__alt_data_end+0xfc007bc0>
 c008a74:	d8c02817 	ldw	r3,160(sp)
 c008a78:	dc001dc4 	addi	r16,sp,119
 c008a7c:	9cc00c04 	addi	r19,r19,48
 c008a80:	1c07c83a 	sub	r3,r3,r16
 c008a84:	dcc01dc5 	stb	r19,119(sp)
 c008a88:	d8c02b15 	stw	r3,172(sp)
 c008a8c:	003cc606 	br	c007da8 <__alt_data_end+0xfc007da8>
 c008a90:	d8803317 	ldw	r2,204(sp)
 c008a94:	143fffc4 	addi	r16,r2,-1
 c008a98:	043f4d0e 	bge	zero,r16,c0087d0 <__alt_data_end+0xfc0087d0>
 c008a9c:	07000404 	movi	fp,16
 c008aa0:	e400810e 	bge	fp,r16,c008ca8 <___vfprintf_internal_r+0x165c>
 c008aa4:	014300b4 	movhi	r5,3074
 c008aa8:	29769084 	addi	r5,r5,-9662
 c008aac:	d9402c15 	stw	r5,176(sp)
 c008ab0:	01c001c4 	movi	r7,7
 c008ab4:	dcc02d17 	ldw	r19,180(sp)
 c008ab8:	00000306 	br	c008ac8 <___vfprintf_internal_r+0x147c>
 c008abc:	b5800204 	addi	r22,r22,8
 c008ac0:	843ffc04 	addi	r16,r16,-16
 c008ac4:	e4007b0e 	bge	fp,r16,c008cb4 <___vfprintf_internal_r+0x1668>
 c008ac8:	18c00404 	addi	r3,r3,16
 c008acc:	8c400044 	addi	r17,r17,1
 c008ad0:	b5000015 	stw	r20,0(r22)
 c008ad4:	b7000115 	stw	fp,4(r22)
 c008ad8:	d8c02015 	stw	r3,128(sp)
 c008adc:	dc401f15 	stw	r17,124(sp)
 c008ae0:	3c7ff60e 	bge	r7,r17,c008abc <__alt_data_end+0xfc008abc>
 c008ae4:	d9801e04 	addi	r6,sp,120
 c008ae8:	b80b883a 	mov	r5,r23
 c008aec:	9809883a 	mov	r4,r19
 c008af0:	d9c03c15 	stw	r7,240(sp)
 c008af4:	c0143980 	call	c014398 <__sprint_r>
 c008af8:	d9c03c17 	ldw	r7,240(sp)
 c008afc:	103bd71e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008b00:	d8c02017 	ldw	r3,128(sp)
 c008b04:	dc401f17 	ldw	r17,124(sp)
 c008b08:	dd800404 	addi	r22,sp,16
 c008b0c:	003fec06 	br	c008ac0 <__alt_data_end+0xfc008ac0>
 c008b10:	9080100c 	andi	r2,r18,64
 c008b14:	d8002785 	stb	zero,158(sp)
 c008b18:	10010e26 	beq	r2,zero,c008f54 <___vfprintf_internal_r+0x1908>
 c008b1c:	d9402e17 	ldw	r5,184(sp)
 c008b20:	d8c02a17 	ldw	r3,168(sp)
 c008b24:	002d883a 	mov	r22,zero
 c008b28:	28800104 	addi	r2,r5,4
 c008b2c:	2cc0000b 	ldhu	r19,0(r5)
 c008b30:	183fc90e 	bge	r3,zero,c008a58 <__alt_data_end+0xfc008a58>
 c008b34:	d8802e15 	stw	r2,184(sp)
 c008b38:	0039883a 	mov	fp,zero
 c008b3c:	9d84b03a 	or	r2,r19,r22
 c008b40:	103c1e1e 	bne	r2,zero,c007bbc <__alt_data_end+0xfc007bbc>
 c008b44:	00800044 	movi	r2,1
 c008b48:	003e6c06 	br	c0084fc <__alt_data_end+0xfc0084fc>
 c008b4c:	d9002d17 	ldw	r4,180(sp)
 c008b50:	d9801e04 	addi	r6,sp,120
 c008b54:	b80b883a 	mov	r5,r23
 c008b58:	c0143980 	call	c014398 <__sprint_r>
 c008b5c:	103bbf1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008b60:	d8c02017 	ldw	r3,128(sp)
 c008b64:	da000404 	addi	r8,sp,16
 c008b68:	d9003217 	ldw	r4,200(sp)
 c008b6c:	d8802617 	ldw	r2,152(sp)
 c008b70:	d9403317 	ldw	r5,204(sp)
 c008b74:	8123883a 	add	r17,r16,r4
 c008b78:	11400216 	blt	r2,r5,c008b84 <___vfprintf_internal_r+0x1538>
 c008b7c:	9100004c 	andi	r4,r18,1
 c008b80:	20000d26 	beq	r4,zero,c008bb8 <___vfprintf_internal_r+0x156c>
 c008b84:	d9003717 	ldw	r4,220(sp)
 c008b88:	d9403417 	ldw	r5,208(sp)
 c008b8c:	1907883a 	add	r3,r3,r4
 c008b90:	d9001f17 	ldw	r4,124(sp)
 c008b94:	41400015 	stw	r5,0(r8)
 c008b98:	d9403717 	ldw	r5,220(sp)
 c008b9c:	21000044 	addi	r4,r4,1
 c008ba0:	d8c02015 	stw	r3,128(sp)
 c008ba4:	41400115 	stw	r5,4(r8)
 c008ba8:	d9001f15 	stw	r4,124(sp)
 c008bac:	014001c4 	movi	r5,7
 c008bb0:	2901e816 	blt	r5,r4,c009354 <___vfprintf_internal_r+0x1d08>
 c008bb4:	42000204 	addi	r8,r8,8
 c008bb8:	d9003317 	ldw	r4,204(sp)
 c008bbc:	8121883a 	add	r16,r16,r4
 c008bc0:	2085c83a 	sub	r2,r4,r2
 c008bc4:	8461c83a 	sub	r16,r16,r17
 c008bc8:	1400010e 	bge	r2,r16,c008bd0 <___vfprintf_internal_r+0x1584>
 c008bcc:	1021883a 	mov	r16,r2
 c008bd0:	04000a0e 	bge	zero,r16,c008bfc <___vfprintf_internal_r+0x15b0>
 c008bd4:	d9001f17 	ldw	r4,124(sp)
 c008bd8:	1c07883a 	add	r3,r3,r16
 c008bdc:	44400015 	stw	r17,0(r8)
 c008be0:	21000044 	addi	r4,r4,1
 c008be4:	44000115 	stw	r16,4(r8)
 c008be8:	d8c02015 	stw	r3,128(sp)
 c008bec:	d9001f15 	stw	r4,124(sp)
 c008bf0:	014001c4 	movi	r5,7
 c008bf4:	2901fb16 	blt	r5,r4,c0093e4 <___vfprintf_internal_r+0x1d98>
 c008bf8:	42000204 	addi	r8,r8,8
 c008bfc:	8001f716 	blt	r16,zero,c0093dc <___vfprintf_internal_r+0x1d90>
 c008c00:	1421c83a 	sub	r16,r2,r16
 c008c04:	043d160e 	bge	zero,r16,c008060 <__alt_data_end+0xfc008060>
 c008c08:	04400404 	movi	r17,16
 c008c0c:	d8801f17 	ldw	r2,124(sp)
 c008c10:	8c3efb0e 	bge	r17,r16,c008800 <__alt_data_end+0xfc008800>
 c008c14:	014300b4 	movhi	r5,3074
 c008c18:	29769084 	addi	r5,r5,-9662
 c008c1c:	d9402c15 	stw	r5,176(sp)
 c008c20:	058001c4 	movi	r22,7
 c008c24:	dcc02d17 	ldw	r19,180(sp)
 c008c28:	00000306 	br	c008c38 <___vfprintf_internal_r+0x15ec>
 c008c2c:	42000204 	addi	r8,r8,8
 c008c30:	843ffc04 	addi	r16,r16,-16
 c008c34:	8c3ef50e 	bge	r17,r16,c00880c <__alt_data_end+0xfc00880c>
 c008c38:	18c00404 	addi	r3,r3,16
 c008c3c:	10800044 	addi	r2,r2,1
 c008c40:	45000015 	stw	r20,0(r8)
 c008c44:	44400115 	stw	r17,4(r8)
 c008c48:	d8c02015 	stw	r3,128(sp)
 c008c4c:	d8801f15 	stw	r2,124(sp)
 c008c50:	b0bff60e 	bge	r22,r2,c008c2c <__alt_data_end+0xfc008c2c>
 c008c54:	d9801e04 	addi	r6,sp,120
 c008c58:	b80b883a 	mov	r5,r23
 c008c5c:	9809883a 	mov	r4,r19
 c008c60:	c0143980 	call	c014398 <__sprint_r>
 c008c64:	103b7d1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008c68:	d8c02017 	ldw	r3,128(sp)
 c008c6c:	d8801f17 	ldw	r2,124(sp)
 c008c70:	da000404 	addi	r8,sp,16
 c008c74:	003fee06 	br	c008c30 <__alt_data_end+0xfc008c30>
 c008c78:	9088703a 	and	r4,r18,r2
 c008c7c:	203eab1e 	bne	r4,zero,c00872c <__alt_data_end+0xfc00872c>
 c008c80:	dc401f17 	ldw	r17,124(sp)
 c008c84:	40800115 	stw	r2,4(r8)
 c008c88:	44000015 	stw	r16,0(r8)
 c008c8c:	8c400044 	addi	r17,r17,1
 c008c90:	d8c02015 	stw	r3,128(sp)
 c008c94:	dc401f15 	stw	r17,124(sp)
 c008c98:	008001c4 	movi	r2,7
 c008c9c:	14400e16 	blt	r2,r17,c008cd8 <___vfprintf_internal_r+0x168c>
 c008ca0:	45800204 	addi	r22,r8,8
 c008ca4:	003eca06 	br	c0087d0 <__alt_data_end+0xfc0087d0>
 c008ca8:	010300b4 	movhi	r4,3074
 c008cac:	21369084 	addi	r4,r4,-9662
 c008cb0:	d9002c15 	stw	r4,176(sp)
 c008cb4:	d8802c17 	ldw	r2,176(sp)
 c008cb8:	1c07883a 	add	r3,r3,r16
 c008cbc:	8c400044 	addi	r17,r17,1
 c008cc0:	b0800015 	stw	r2,0(r22)
 c008cc4:	b4000115 	stw	r16,4(r22)
 c008cc8:	d8c02015 	stw	r3,128(sp)
 c008ccc:	dc401f15 	stw	r17,124(sp)
 c008cd0:	008001c4 	movi	r2,7
 c008cd4:	147ebd0e 	bge	r2,r17,c0087cc <__alt_data_end+0xfc0087cc>
 c008cd8:	d9002d17 	ldw	r4,180(sp)
 c008cdc:	d9801e04 	addi	r6,sp,120
 c008ce0:	b80b883a 	mov	r5,r23
 c008ce4:	c0143980 	call	c014398 <__sprint_r>
 c008ce8:	103b5c1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008cec:	d8c02017 	ldw	r3,128(sp)
 c008cf0:	dc401f17 	ldw	r17,124(sp)
 c008cf4:	dd800404 	addi	r22,sp,16
 c008cf8:	003eb506 	br	c0087d0 <__alt_data_end+0xfc0087d0>
 c008cfc:	d9002d17 	ldw	r4,180(sp)
 c008d00:	d9801e04 	addi	r6,sp,120
 c008d04:	b80b883a 	mov	r5,r23
 c008d08:	c0143980 	call	c014398 <__sprint_r>
 c008d0c:	103b531e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008d10:	d8c02017 	ldw	r3,128(sp)
 c008d14:	dc401f17 	ldw	r17,124(sp)
 c008d18:	da000404 	addi	r8,sp,16
 c008d1c:	003e8d06 	br	c008754 <__alt_data_end+0xfc008754>
 c008d20:	d9002d17 	ldw	r4,180(sp)
 c008d24:	d9801e04 	addi	r6,sp,120
 c008d28:	b80b883a 	mov	r5,r23
 c008d2c:	c0143980 	call	c014398 <__sprint_r>
 c008d30:	103b4a1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008d34:	d8c02017 	ldw	r3,128(sp)
 c008d38:	dc401f17 	ldw	r17,124(sp)
 c008d3c:	dd800404 	addi	r22,sp,16
 c008d40:	003e8f06 	br	c008780 <__alt_data_end+0xfc008780>
 c008d44:	0027883a 	mov	r19,zero
 c008d48:	003f4a06 	br	c008a74 <__alt_data_end+0xfc008a74>
 c008d4c:	d9002d17 	ldw	r4,180(sp)
 c008d50:	d9801e04 	addi	r6,sp,120
 c008d54:	b80b883a 	mov	r5,r23
 c008d58:	c0143980 	call	c014398 <__sprint_r>
 c008d5c:	103b3f1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c008d60:	d8c02017 	ldw	r3,128(sp)
 c008d64:	da000404 	addi	r8,sp,16
 c008d68:	003c7b06 	br	c007f58 <__alt_data_end+0xfc007f58>
 c008d6c:	d9402a17 	ldw	r5,168(sp)
 c008d70:	04e7c83a 	sub	r19,zero,r19
 c008d74:	07000b44 	movi	fp,45
 c008d78:	9804c03a 	cmpne	r2,r19,zero
 c008d7c:	05adc83a 	sub	r22,zero,r22
 c008d80:	df002785 	stb	fp,158(sp)
 c008d84:	b0adc83a 	sub	r22,r22,r2
 c008d88:	28017b16 	blt	r5,zero,c009378 <___vfprintf_internal_r+0x1d2c>
 c008d8c:	00bfdfc4 	movi	r2,-129
 c008d90:	90a4703a 	and	r18,r18,r2
 c008d94:	003b8906 	br	c007bbc <__alt_data_end+0xfc007bbc>
 c008d98:	d9003617 	ldw	r4,216(sp)
 c008d9c:	d9403817 	ldw	r5,224(sp)
 c008da0:	da003d15 	stw	r8,244(sp)
 c008da4:	c0104bc0 	call	c0104bc <__fpclassifyd>
 c008da8:	da003d17 	ldw	r8,244(sp)
 c008dac:	1000f026 	beq	r2,zero,c009170 <___vfprintf_internal_r+0x1b24>
 c008db0:	d9002a17 	ldw	r4,168(sp)
 c008db4:	05bff7c4 	movi	r22,-33
 c008db8:	00bfffc4 	movi	r2,-1
 c008dbc:	8dac703a 	and	r22,r17,r22
 c008dc0:	20820026 	beq	r4,r2,c0095c4 <___vfprintf_internal_r+0x1f78>
 c008dc4:	008011c4 	movi	r2,71
 c008dc8:	b081f726 	beq	r22,r2,c0095a8 <___vfprintf_internal_r+0x1f5c>
 c008dcc:	d9003817 	ldw	r4,224(sp)
 c008dd0:	90c04014 	ori	r3,r18,256
 c008dd4:	d8c02c15 	stw	r3,176(sp)
 c008dd8:	20021516 	blt	r4,zero,c009630 <___vfprintf_internal_r+0x1fe4>
 c008ddc:	dcc03817 	ldw	r19,224(sp)
 c008de0:	d8002905 	stb	zero,164(sp)
 c008de4:	00801984 	movi	r2,102
 c008de8:	8881f926 	beq	r17,r2,c0095d0 <___vfprintf_internal_r+0x1f84>
 c008dec:	00801184 	movi	r2,70
 c008df0:	88821c26 	beq	r17,r2,c009664 <___vfprintf_internal_r+0x2018>
 c008df4:	00801144 	movi	r2,69
 c008df8:	b081ef26 	beq	r22,r2,c0095b8 <___vfprintf_internal_r+0x1f6c>
 c008dfc:	d8c02a17 	ldw	r3,168(sp)
 c008e00:	d8802104 	addi	r2,sp,132
 c008e04:	d8800315 	stw	r2,12(sp)
 c008e08:	d9403617 	ldw	r5,216(sp)
 c008e0c:	d8802504 	addi	r2,sp,148
 c008e10:	d9002d17 	ldw	r4,180(sp)
 c008e14:	d8800215 	stw	r2,8(sp)
 c008e18:	d8802604 	addi	r2,sp,152
 c008e1c:	d8c00015 	stw	r3,0(sp)
 c008e20:	d8800115 	stw	r2,4(sp)
 c008e24:	01c00084 	movi	r7,2
 c008e28:	980d883a 	mov	r6,r19
 c008e2c:	d8c03c15 	stw	r3,240(sp)
 c008e30:	da003d15 	stw	r8,244(sp)
 c008e34:	c00b7d80 	call	c00b7d8 <_dtoa_r>
 c008e38:	1021883a 	mov	r16,r2
 c008e3c:	008019c4 	movi	r2,103
 c008e40:	d8c03c17 	ldw	r3,240(sp)
 c008e44:	da003d17 	ldw	r8,244(sp)
 c008e48:	88817126 	beq	r17,r2,c009410 <___vfprintf_internal_r+0x1dc4>
 c008e4c:	008011c4 	movi	r2,71
 c008e50:	88829126 	beq	r17,r2,c009898 <___vfprintf_internal_r+0x224c>
 c008e54:	80f9883a 	add	fp,r16,r3
 c008e58:	d9003617 	ldw	r4,216(sp)
 c008e5c:	000d883a 	mov	r6,zero
 c008e60:	000f883a 	mov	r7,zero
 c008e64:	980b883a 	mov	r5,r19
 c008e68:	da003d15 	stw	r8,244(sp)
 c008e6c:	c0191140 	call	c019114 <__eqdf2>
 c008e70:	da003d17 	ldw	r8,244(sp)
 c008e74:	10018d26 	beq	r2,zero,c0094ac <___vfprintf_internal_r+0x1e60>
 c008e78:	d8802117 	ldw	r2,132(sp)
 c008e7c:	1700062e 	bgeu	r2,fp,c008e98 <___vfprintf_internal_r+0x184c>
 c008e80:	01000c04 	movi	r4,48
 c008e84:	10c00044 	addi	r3,r2,1
 c008e88:	d8c02115 	stw	r3,132(sp)
 c008e8c:	11000005 	stb	r4,0(r2)
 c008e90:	d8802117 	ldw	r2,132(sp)
 c008e94:	173ffb36 	bltu	r2,fp,c008e84 <__alt_data_end+0xfc008e84>
 c008e98:	1405c83a 	sub	r2,r2,r16
 c008e9c:	d8803315 	stw	r2,204(sp)
 c008ea0:	008011c4 	movi	r2,71
 c008ea4:	b0817626 	beq	r22,r2,c009480 <___vfprintf_internal_r+0x1e34>
 c008ea8:	00801944 	movi	r2,101
 c008eac:	1442800e 	bge	r2,r17,c0098b0 <___vfprintf_internal_r+0x2264>
 c008eb0:	d8c02617 	ldw	r3,152(sp)
 c008eb4:	00801984 	movi	r2,102
 c008eb8:	d8c03215 	stw	r3,200(sp)
 c008ebc:	8881fe26 	beq	r17,r2,c0096b8 <___vfprintf_internal_r+0x206c>
 c008ec0:	d8c03217 	ldw	r3,200(sp)
 c008ec4:	d9003317 	ldw	r4,204(sp)
 c008ec8:	1901dd16 	blt	r3,r4,c009640 <___vfprintf_internal_r+0x1ff4>
 c008ecc:	9480004c 	andi	r18,r18,1
 c008ed0:	90022b1e 	bne	r18,zero,c009780 <___vfprintf_internal_r+0x2134>
 c008ed4:	1805883a 	mov	r2,r3
 c008ed8:	18028316 	blt	r3,zero,c0098e8 <___vfprintf_internal_r+0x229c>
 c008edc:	d8c03217 	ldw	r3,200(sp)
 c008ee0:	044019c4 	movi	r17,103
 c008ee4:	d8c02b15 	stw	r3,172(sp)
 c008ee8:	df002907 	ldb	fp,164(sp)
 c008eec:	e001531e 	bne	fp,zero,c00943c <___vfprintf_internal_r+0x1df0>
 c008ef0:	df002783 	ldbu	fp,158(sp)
 c008ef4:	d8802915 	stw	r2,164(sp)
 c008ef8:	dc802c17 	ldw	r18,176(sp)
 c008efc:	d8002a15 	stw	zero,168(sp)
 c008f00:	003baf06 	br	c007dc0 <__alt_data_end+0xfc007dc0>
 c008f04:	d8c02e17 	ldw	r3,184(sp)
 c008f08:	d9002e17 	ldw	r4,184(sp)
 c008f0c:	d9402e17 	ldw	r5,184(sp)
 c008f10:	18c00017 	ldw	r3,0(r3)
 c008f14:	21000117 	ldw	r4,4(r4)
 c008f18:	29400204 	addi	r5,r5,8
 c008f1c:	d8c03615 	stw	r3,216(sp)
 c008f20:	d9003815 	stw	r4,224(sp)
 c008f24:	d9402e15 	stw	r5,184(sp)
 c008f28:	003b5006 	br	c007c6c <__alt_data_end+0xfc007c6c>
 c008f2c:	ac400007 	ldb	r17,0(r21)
 c008f30:	003a2806 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c008f34:	9080100c 	andi	r2,r18,64
 c008f38:	1000a826 	beq	r2,zero,c0091dc <___vfprintf_internal_r+0x1b90>
 c008f3c:	d8c02e17 	ldw	r3,184(sp)
 c008f40:	002d883a 	mov	r22,zero
 c008f44:	1cc0000b 	ldhu	r19,0(r3)
 c008f48:	18c00104 	addi	r3,r3,4
 c008f4c:	d8c02e15 	stw	r3,184(sp)
 c008f50:	003caf06 	br	c008210 <__alt_data_end+0xfc008210>
 c008f54:	d9002e17 	ldw	r4,184(sp)
 c008f58:	d9402a17 	ldw	r5,168(sp)
 c008f5c:	002d883a 	mov	r22,zero
 c008f60:	20800104 	addi	r2,r4,4
 c008f64:	24c00017 	ldw	r19,0(r4)
 c008f68:	283ebb0e 	bge	r5,zero,c008a58 <__alt_data_end+0xfc008a58>
 c008f6c:	003ef106 	br	c008b34 <__alt_data_end+0xfc008b34>
 c008f70:	9080040c 	andi	r2,r18,16
 c008f74:	1000921e 	bne	r2,zero,c0091c0 <___vfprintf_internal_r+0x1b74>
 c008f78:	9480100c 	andi	r18,r18,64
 c008f7c:	90013926 	beq	r18,zero,c009464 <___vfprintf_internal_r+0x1e18>
 c008f80:	d9402e17 	ldw	r5,184(sp)
 c008f84:	d8c02f17 	ldw	r3,188(sp)
 c008f88:	28800017 	ldw	r2,0(r5)
 c008f8c:	29400104 	addi	r5,r5,4
 c008f90:	d9402e15 	stw	r5,184(sp)
 c008f94:	10c0000d 	sth	r3,0(r2)
 c008f98:	0039e406 	br	c00772c <__alt_data_end+0xfc00772c>
 c008f9c:	9080100c 	andi	r2,r18,64
 c008fa0:	10008026 	beq	r2,zero,c0091a4 <___vfprintf_internal_r+0x1b58>
 c008fa4:	d8802e17 	ldw	r2,184(sp)
 c008fa8:	14c0000f 	ldh	r19,0(r2)
 c008fac:	10800104 	addi	r2,r2,4
 c008fb0:	d8802e15 	stw	r2,184(sp)
 c008fb4:	982dd7fa 	srai	r22,r19,31
 c008fb8:	b005883a 	mov	r2,r22
 c008fbc:	003af706 	br	c007b9c <__alt_data_end+0xfc007b9c>
 c008fc0:	9080100c 	andi	r2,r18,64
 c008fc4:	d8002785 	stb	zero,158(sp)
 c008fc8:	10008a1e 	bne	r2,zero,c0091f4 <___vfprintf_internal_r+0x1ba8>
 c008fcc:	d9002e17 	ldw	r4,184(sp)
 c008fd0:	d9402a17 	ldw	r5,168(sp)
 c008fd4:	002d883a 	mov	r22,zero
 c008fd8:	20800104 	addi	r2,r4,4
 c008fdc:	24c00017 	ldw	r19,0(r4)
 c008fe0:	283e4b0e 	bge	r5,zero,c008910 <__alt_data_end+0xfc008910>
 c008fe4:	9d86b03a 	or	r3,r19,r22
 c008fe8:	d8802e15 	stw	r2,184(sp)
 c008fec:	183e4c1e 	bne	r3,zero,c008920 <__alt_data_end+0xfc008920>
 c008ff0:	0039883a 	mov	fp,zero
 c008ff4:	0005883a 	mov	r2,zero
 c008ff8:	003d4006 	br	c0084fc <__alt_data_end+0xfc0084fc>
 c008ffc:	014300b4 	movhi	r5,3074
 c009000:	29769084 	addi	r5,r5,-9662
 c009004:	d9402c15 	stw	r5,176(sp)
 c009008:	d9402c17 	ldw	r5,176(sp)
 c00900c:	1c47883a 	add	r3,r3,r17
 c009010:	10800044 	addi	r2,r2,1
 c009014:	41400015 	stw	r5,0(r8)
 c009018:	44400115 	stw	r17,4(r8)
 c00901c:	d8c02015 	stw	r3,128(sp)
 c009020:	d8801f15 	stw	r2,124(sp)
 c009024:	010001c4 	movi	r4,7
 c009028:	20bec816 	blt	r4,r2,c008b4c <__alt_data_end+0xfc008b4c>
 c00902c:	42000204 	addi	r8,r8,8
 c009030:	003ecd06 	br	c008b68 <__alt_data_end+0xfc008b68>
 c009034:	d9002a17 	ldw	r4,168(sp)
 c009038:	d8002785 	stb	zero,158(sp)
 c00903c:	203d2d16 	blt	r4,zero,c0084f4 <__alt_data_end+0xfc0084f4>
 c009040:	00bfdfc4 	movi	r2,-129
 c009044:	90a4703a 	and	r18,r18,r2
 c009048:	003a6106 	br	c0079d0 <__alt_data_end+0xfc0079d0>
 c00904c:	010300b4 	movhi	r4,3074
 c009050:	21369084 	addi	r4,r4,-9662
 c009054:	d9002c15 	stw	r4,176(sp)
 c009058:	003bea06 	br	c008004 <__alt_data_end+0xfc008004>
 c00905c:	d9002d17 	ldw	r4,180(sp)
 c009060:	d9801e04 	addi	r6,sp,120
 c009064:	b80b883a 	mov	r5,r23
 c009068:	c0143980 	call	c014398 <__sprint_r>
 c00906c:	103a7b1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c009070:	d8c02017 	ldw	r3,128(sp)
 c009074:	da000404 	addi	r8,sp,16
 c009078:	003d4106 	br	c008580 <__alt_data_end+0xfc008580>
 c00907c:	d8801f17 	ldw	r2,124(sp)
 c009080:	014300b4 	movhi	r5,3074
 c009084:	01000044 	movi	r4,1
 c009088:	18c00044 	addi	r3,r3,1
 c00908c:	10800044 	addi	r2,r2,1
 c009090:	29768804 	addi	r5,r5,-9696
 c009094:	41000115 	stw	r4,4(r8)
 c009098:	41400015 	stw	r5,0(r8)
 c00909c:	d8c02015 	stw	r3,128(sp)
 c0090a0:	d8801f15 	stw	r2,124(sp)
 c0090a4:	010001c4 	movi	r4,7
 c0090a8:	20805c16 	blt	r4,r2,c00921c <___vfprintf_internal_r+0x1bd0>
 c0090ac:	42000204 	addi	r8,r8,8
 c0090b0:	8800041e 	bne	r17,zero,c0090c4 <___vfprintf_internal_r+0x1a78>
 c0090b4:	d8803317 	ldw	r2,204(sp)
 c0090b8:	1000021e 	bne	r2,zero,c0090c4 <___vfprintf_internal_r+0x1a78>
 c0090bc:	9080004c 	andi	r2,r18,1
 c0090c0:	103be726 	beq	r2,zero,c008060 <__alt_data_end+0xfc008060>
 c0090c4:	d9003717 	ldw	r4,220(sp)
 c0090c8:	d8801f17 	ldw	r2,124(sp)
 c0090cc:	d9403417 	ldw	r5,208(sp)
 c0090d0:	20c7883a 	add	r3,r4,r3
 c0090d4:	10800044 	addi	r2,r2,1
 c0090d8:	41000115 	stw	r4,4(r8)
 c0090dc:	41400015 	stw	r5,0(r8)
 c0090e0:	d8c02015 	stw	r3,128(sp)
 c0090e4:	d8801f15 	stw	r2,124(sp)
 c0090e8:	010001c4 	movi	r4,7
 c0090ec:	20812116 	blt	r4,r2,c009574 <___vfprintf_internal_r+0x1f28>
 c0090f0:	42000204 	addi	r8,r8,8
 c0090f4:	0463c83a 	sub	r17,zero,r17
 c0090f8:	0440730e 	bge	zero,r17,c0092c8 <___vfprintf_internal_r+0x1c7c>
 c0090fc:	05800404 	movi	r22,16
 c009100:	b440860e 	bge	r22,r17,c00931c <___vfprintf_internal_r+0x1cd0>
 c009104:	014300b4 	movhi	r5,3074
 c009108:	29769084 	addi	r5,r5,-9662
 c00910c:	d9402c15 	stw	r5,176(sp)
 c009110:	070001c4 	movi	fp,7
 c009114:	dcc02d17 	ldw	r19,180(sp)
 c009118:	00000306 	br	c009128 <___vfprintf_internal_r+0x1adc>
 c00911c:	42000204 	addi	r8,r8,8
 c009120:	8c7ffc04 	addi	r17,r17,-16
 c009124:	b440800e 	bge	r22,r17,c009328 <___vfprintf_internal_r+0x1cdc>
 c009128:	18c00404 	addi	r3,r3,16
 c00912c:	10800044 	addi	r2,r2,1
 c009130:	45000015 	stw	r20,0(r8)
 c009134:	45800115 	stw	r22,4(r8)
 c009138:	d8c02015 	stw	r3,128(sp)
 c00913c:	d8801f15 	stw	r2,124(sp)
 c009140:	e0bff60e 	bge	fp,r2,c00911c <__alt_data_end+0xfc00911c>
 c009144:	d9801e04 	addi	r6,sp,120
 c009148:	b80b883a 	mov	r5,r23
 c00914c:	9809883a 	mov	r4,r19
 c009150:	c0143980 	call	c014398 <__sprint_r>
 c009154:	103a411e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c009158:	d8c02017 	ldw	r3,128(sp)
 c00915c:	d8801f17 	ldw	r2,124(sp)
 c009160:	da000404 	addi	r8,sp,16
 c009164:	003fee06 	br	c009120 <__alt_data_end+0xfc009120>
 c009168:	00bfffc4 	movi	r2,-1
 c00916c:	003a3f06 	br	c007a6c <__alt_data_end+0xfc007a6c>
 c009170:	008011c4 	movi	r2,71
 c009174:	1440b816 	blt	r2,r17,c009458 <___vfprintf_internal_r+0x1e0c>
 c009178:	040300b4 	movhi	r16,3074
 c00917c:	84367a04 	addi	r16,r16,-9752
 c009180:	00c000c4 	movi	r3,3
 c009184:	00bfdfc4 	movi	r2,-129
 c009188:	d8c02915 	stw	r3,164(sp)
 c00918c:	90a4703a 	and	r18,r18,r2
 c009190:	df002783 	ldbu	fp,158(sp)
 c009194:	d8c02b15 	stw	r3,172(sp)
 c009198:	d8002a15 	stw	zero,168(sp)
 c00919c:	d8003215 	stw	zero,200(sp)
 c0091a0:	003b0706 	br	c007dc0 <__alt_data_end+0xfc007dc0>
 c0091a4:	d8c02e17 	ldw	r3,184(sp)
 c0091a8:	1cc00017 	ldw	r19,0(r3)
 c0091ac:	18c00104 	addi	r3,r3,4
 c0091b0:	d8c02e15 	stw	r3,184(sp)
 c0091b4:	982dd7fa 	srai	r22,r19,31
 c0091b8:	b005883a 	mov	r2,r22
 c0091bc:	003a7706 	br	c007b9c <__alt_data_end+0xfc007b9c>
 c0091c0:	d8c02e17 	ldw	r3,184(sp)
 c0091c4:	d9002f17 	ldw	r4,188(sp)
 c0091c8:	18800017 	ldw	r2,0(r3)
 c0091cc:	18c00104 	addi	r3,r3,4
 c0091d0:	d8c02e15 	stw	r3,184(sp)
 c0091d4:	11000015 	stw	r4,0(r2)
 c0091d8:	00395406 	br	c00772c <__alt_data_end+0xfc00772c>
 c0091dc:	d9002e17 	ldw	r4,184(sp)
 c0091e0:	002d883a 	mov	r22,zero
 c0091e4:	24c00017 	ldw	r19,0(r4)
 c0091e8:	21000104 	addi	r4,r4,4
 c0091ec:	d9002e15 	stw	r4,184(sp)
 c0091f0:	003c0706 	br	c008210 <__alt_data_end+0xfc008210>
 c0091f4:	d9402e17 	ldw	r5,184(sp)
 c0091f8:	d8c02a17 	ldw	r3,168(sp)
 c0091fc:	002d883a 	mov	r22,zero
 c009200:	28800104 	addi	r2,r5,4
 c009204:	2cc0000b 	ldhu	r19,0(r5)
 c009208:	183dc10e 	bge	r3,zero,c008910 <__alt_data_end+0xfc008910>
 c00920c:	003f7506 	br	c008fe4 <__alt_data_end+0xfc008fe4>
 c009210:	040300b4 	movhi	r16,3074
 c009214:	84367804 	addi	r16,r16,-9760
 c009218:	003aa706 	br	c007cb8 <__alt_data_end+0xfc007cb8>
 c00921c:	d9002d17 	ldw	r4,180(sp)
 c009220:	d9801e04 	addi	r6,sp,120
 c009224:	b80b883a 	mov	r5,r23
 c009228:	c0143980 	call	c014398 <__sprint_r>
 c00922c:	103a0b1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c009230:	dc402617 	ldw	r17,152(sp)
 c009234:	d8c02017 	ldw	r3,128(sp)
 c009238:	da000404 	addi	r8,sp,16
 c00923c:	003f9c06 	br	c0090b0 <__alt_data_end+0xfc0090b0>
 c009240:	ac400043 	ldbu	r17,1(r21)
 c009244:	84000814 	ori	r16,r16,32
 c009248:	ad400044 	addi	r21,r21,1
 c00924c:	8c403fcc 	andi	r17,r17,255
 c009250:	8c40201c 	xori	r17,r17,128
 c009254:	8c7fe004 	addi	r17,r17,-128
 c009258:	00395e06 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c00925c:	d8c02e15 	stw	r3,184(sp)
 c009260:	0039883a 	mov	fp,zero
 c009264:	003e3506 	br	c008b3c <__alt_data_end+0xfc008b3c>
 c009268:	d9002d17 	ldw	r4,180(sp)
 c00926c:	d9801e04 	addi	r6,sp,120
 c009270:	b80b883a 	mov	r5,r23
 c009274:	c0143980 	call	c014398 <__sprint_r>
 c009278:	1039f81e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c00927c:	d8c02017 	ldw	r3,128(sp)
 c009280:	da000404 	addi	r8,sp,16
 c009284:	003cd006 	br	c0085c8 <__alt_data_end+0xfc0085c8>
 c009288:	8009883a 	mov	r4,r16
 c00928c:	df003d15 	stw	fp,244(sp)
 c009290:	c0052f80 	call	c0052f8 <strlen>
 c009294:	d8802b15 	stw	r2,172(sp)
 c009298:	da003d17 	ldw	r8,244(sp)
 c00929c:	103c200e 	bge	r2,zero,c008320 <__alt_data_end+0xfc008320>
 c0092a0:	0005883a 	mov	r2,zero
 c0092a4:	003c1e06 	br	c008320 <__alt_data_end+0xfc008320>
 c0092a8:	d9002d17 	ldw	r4,180(sp)
 c0092ac:	d9801e04 	addi	r6,sp,120
 c0092b0:	b80b883a 	mov	r5,r23
 c0092b4:	c0143980 	call	c014398 <__sprint_r>
 c0092b8:	1039e81e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c0092bc:	d8c02017 	ldw	r3,128(sp)
 c0092c0:	d8801f17 	ldw	r2,124(sp)
 c0092c4:	da000404 	addi	r8,sp,16
 c0092c8:	d9403317 	ldw	r5,204(sp)
 c0092cc:	10800044 	addi	r2,r2,1
 c0092d0:	44000015 	stw	r16,0(r8)
 c0092d4:	28c7883a 	add	r3,r5,r3
 c0092d8:	003b5b06 	br	c008048 <__alt_data_end+0xfc008048>
 c0092dc:	010300b4 	movhi	r4,3074
 c0092e0:	21369484 	addi	r4,r4,-9646
 c0092e4:	d9003515 	stw	r4,212(sp)
 c0092e8:	003af206 	br	c007eb4 <__alt_data_end+0xfc007eb4>
 c0092ec:	013fffc4 	movi	r4,-1
 c0092f0:	003a0806 	br	c007b14 <__alt_data_end+0xfc007b14>
 c0092f4:	0023883a 	mov	r17,zero
 c0092f8:	003d9d06 	br	c008970 <__alt_data_end+0xfc008970>
 c0092fc:	d9002d17 	ldw	r4,180(sp)
 c009300:	d9801e04 	addi	r6,sp,120
 c009304:	b80b883a 	mov	r5,r23
 c009308:	c0143980 	call	c014398 <__sprint_r>
 c00930c:	1039d31e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c009310:	d8c02017 	ldw	r3,128(sp)
 c009314:	da000404 	addi	r8,sp,16
 c009318:	003d9406 	br	c00896c <__alt_data_end+0xfc00896c>
 c00931c:	010300b4 	movhi	r4,3074
 c009320:	21369084 	addi	r4,r4,-9662
 c009324:	d9002c15 	stw	r4,176(sp)
 c009328:	d9002c17 	ldw	r4,176(sp)
 c00932c:	1c47883a 	add	r3,r3,r17
 c009330:	10800044 	addi	r2,r2,1
 c009334:	41000015 	stw	r4,0(r8)
 c009338:	44400115 	stw	r17,4(r8)
 c00933c:	d8c02015 	stw	r3,128(sp)
 c009340:	d8801f15 	stw	r2,124(sp)
 c009344:	010001c4 	movi	r4,7
 c009348:	20bfd716 	blt	r4,r2,c0092a8 <__alt_data_end+0xfc0092a8>
 c00934c:	42000204 	addi	r8,r8,8
 c009350:	003fdd06 	br	c0092c8 <__alt_data_end+0xfc0092c8>
 c009354:	d9002d17 	ldw	r4,180(sp)
 c009358:	d9801e04 	addi	r6,sp,120
 c00935c:	b80b883a 	mov	r5,r23
 c009360:	c0143980 	call	c014398 <__sprint_r>
 c009364:	1039bd1e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c009368:	d8802617 	ldw	r2,152(sp)
 c00936c:	d8c02017 	ldw	r3,128(sp)
 c009370:	da000404 	addi	r8,sp,16
 c009374:	003e1006 	br	c008bb8 <__alt_data_end+0xfc008bb8>
 c009378:	00800044 	movi	r2,1
 c00937c:	10803fcc 	andi	r2,r2,255
 c009380:	00c00044 	movi	r3,1
 c009384:	10fa0d26 	beq	r2,r3,c007bbc <__alt_data_end+0xfc007bbc>
 c009388:	00c00084 	movi	r3,2
 c00938c:	10fbaf26 	beq	r2,r3,c00824c <__alt_data_end+0xfc00824c>
 c009390:	003a6d06 	br	c007d48 <__alt_data_end+0xfc007d48>
 c009394:	010300b4 	movhi	r4,3074
 c009398:	21369484 	addi	r4,r4,-9646
 c00939c:	d9003515 	stw	r4,212(sp)
 c0093a0:	003b5406 	br	c0080f4 <__alt_data_end+0xfc0080f4>
 c0093a4:	d8802a17 	ldw	r2,168(sp)
 c0093a8:	00c00184 	movi	r3,6
 c0093ac:	1880012e 	bgeu	r3,r2,c0093b4 <___vfprintf_internal_r+0x1d68>
 c0093b0:	1805883a 	mov	r2,r3
 c0093b4:	d8802b15 	stw	r2,172(sp)
 c0093b8:	1000ef16 	blt	r2,zero,c009778 <___vfprintf_internal_r+0x212c>
 c0093bc:	040300b4 	movhi	r16,3074
 c0093c0:	d8802915 	stw	r2,164(sp)
 c0093c4:	dcc02e15 	stw	r19,184(sp)
 c0093c8:	d8002a15 	stw	zero,168(sp)
 c0093cc:	d8003215 	stw	zero,200(sp)
 c0093d0:	84368604 	addi	r16,r16,-9704
 c0093d4:	0039883a 	mov	fp,zero
 c0093d8:	003a8006 	br	c007ddc <__alt_data_end+0xfc007ddc>
 c0093dc:	0021883a 	mov	r16,zero
 c0093e0:	003e0706 	br	c008c00 <__alt_data_end+0xfc008c00>
 c0093e4:	d9002d17 	ldw	r4,180(sp)
 c0093e8:	d9801e04 	addi	r6,sp,120
 c0093ec:	b80b883a 	mov	r5,r23
 c0093f0:	c0143980 	call	c014398 <__sprint_r>
 c0093f4:	1039991e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c0093f8:	d8802617 	ldw	r2,152(sp)
 c0093fc:	d9403317 	ldw	r5,204(sp)
 c009400:	d8c02017 	ldw	r3,128(sp)
 c009404:	da000404 	addi	r8,sp,16
 c009408:	2885c83a 	sub	r2,r5,r2
 c00940c:	003dfb06 	br	c008bfc <__alt_data_end+0xfc008bfc>
 c009410:	9080004c 	andi	r2,r18,1
 c009414:	103e8f1e 	bne	r2,zero,c008e54 <__alt_data_end+0xfc008e54>
 c009418:	d8802117 	ldw	r2,132(sp)
 c00941c:	003e9e06 	br	c008e98 <__alt_data_end+0xfc008e98>
 c009420:	1025883a 	mov	r18,r2
 c009424:	0039883a 	mov	fp,zero
 c009428:	00800084 	movi	r2,2
 c00942c:	003fd306 	br	c00937c <__alt_data_end+0xfc00937c>
 c009430:	07000b44 	movi	fp,45
 c009434:	df002785 	stb	fp,158(sp)
 c009438:	003a1b06 	br	c007ca8 <__alt_data_end+0xfc007ca8>
 c00943c:	00c00b44 	movi	r3,45
 c009440:	d8c02785 	stb	r3,158(sp)
 c009444:	d8802915 	stw	r2,164(sp)
 c009448:	dc802c17 	ldw	r18,176(sp)
 c00944c:	d8002a15 	stw	zero,168(sp)
 c009450:	07000b44 	movi	fp,45
 c009454:	003a5e06 	br	c007dd0 <__alt_data_end+0xfc007dd0>
 c009458:	040300b4 	movhi	r16,3074
 c00945c:	84367b04 	addi	r16,r16,-9748
 c009460:	003f4706 	br	c009180 <__alt_data_end+0xfc009180>
 c009464:	d9002e17 	ldw	r4,184(sp)
 c009468:	d9402f17 	ldw	r5,188(sp)
 c00946c:	20800017 	ldw	r2,0(r4)
 c009470:	21000104 	addi	r4,r4,4
 c009474:	d9002e15 	stw	r4,184(sp)
 c009478:	11400015 	stw	r5,0(r2)
 c00947c:	0038ab06 	br	c00772c <__alt_data_end+0xfc00772c>
 c009480:	dd802617 	ldw	r22,152(sp)
 c009484:	00bfff44 	movi	r2,-3
 c009488:	b0801c16 	blt	r22,r2,c0094fc <___vfprintf_internal_r+0x1eb0>
 c00948c:	d9402a17 	ldw	r5,168(sp)
 c009490:	2d801a16 	blt	r5,r22,c0094fc <___vfprintf_internal_r+0x1eb0>
 c009494:	dd803215 	stw	r22,200(sp)
 c009498:	003e8906 	br	c008ec0 <__alt_data_end+0xfc008ec0>
 c00949c:	010300b4 	movhi	r4,3074
 c0094a0:	21369084 	addi	r4,r4,-9662
 c0094a4:	d9002c15 	stw	r4,176(sp)
 c0094a8:	003c9106 	br	c0086f0 <__alt_data_end+0xfc0086f0>
 c0094ac:	e005883a 	mov	r2,fp
 c0094b0:	003e7906 	br	c008e98 <__alt_data_end+0xfc008e98>
 c0094b4:	d9002a17 	ldw	r4,168(sp)
 c0094b8:	df002783 	ldbu	fp,158(sp)
 c0094bc:	dcc02e15 	stw	r19,184(sp)
 c0094c0:	d9002915 	stw	r4,164(sp)
 c0094c4:	d9002b15 	stw	r4,172(sp)
 c0094c8:	d8002a15 	stw	zero,168(sp)
 c0094cc:	d8003215 	stw	zero,200(sp)
 c0094d0:	003a3b06 	br	c007dc0 <__alt_data_end+0xfc007dc0>
 c0094d4:	9080004c 	andi	r2,r18,1
 c0094d8:	0039883a 	mov	fp,zero
 c0094dc:	10000426 	beq	r2,zero,c0094f0 <___vfprintf_internal_r+0x1ea4>
 c0094e0:	00800c04 	movi	r2,48
 c0094e4:	dc001dc4 	addi	r16,sp,119
 c0094e8:	d8801dc5 	stb	r2,119(sp)
 c0094ec:	003b6406 	br	c008280 <__alt_data_end+0xfc008280>
 c0094f0:	d8002b15 	stw	zero,172(sp)
 c0094f4:	dc001e04 	addi	r16,sp,120
 c0094f8:	003a2b06 	br	c007da8 <__alt_data_end+0xfc007da8>
 c0094fc:	8c7fff84 	addi	r17,r17,-2
 c009500:	b5bfffc4 	addi	r22,r22,-1
 c009504:	dd802615 	stw	r22,152(sp)
 c009508:	dc4022c5 	stb	r17,139(sp)
 c00950c:	b000bf16 	blt	r22,zero,c00980c <___vfprintf_internal_r+0x21c0>
 c009510:	00800ac4 	movi	r2,43
 c009514:	d8802305 	stb	r2,140(sp)
 c009518:	00800244 	movi	r2,9
 c00951c:	15807016 	blt	r2,r22,c0096e0 <___vfprintf_internal_r+0x2094>
 c009520:	00800c04 	movi	r2,48
 c009524:	b5800c04 	addi	r22,r22,48
 c009528:	d8802345 	stb	r2,141(sp)
 c00952c:	dd802385 	stb	r22,142(sp)
 c009530:	d88023c4 	addi	r2,sp,143
 c009534:	df0022c4 	addi	fp,sp,139
 c009538:	d8c03317 	ldw	r3,204(sp)
 c00953c:	1739c83a 	sub	fp,r2,fp
 c009540:	d9003317 	ldw	r4,204(sp)
 c009544:	e0c7883a 	add	r3,fp,r3
 c009548:	df003a15 	stw	fp,232(sp)
 c00954c:	d8c02b15 	stw	r3,172(sp)
 c009550:	00800044 	movi	r2,1
 c009554:	1100b30e 	bge	r2,r4,c009824 <___vfprintf_internal_r+0x21d8>
 c009558:	d8c02b17 	ldw	r3,172(sp)
 c00955c:	18c00044 	addi	r3,r3,1
 c009560:	d8c02b15 	stw	r3,172(sp)
 c009564:	1805883a 	mov	r2,r3
 c009568:	1800ac16 	blt	r3,zero,c00981c <___vfprintf_internal_r+0x21d0>
 c00956c:	d8003215 	stw	zero,200(sp)
 c009570:	003e5d06 	br	c008ee8 <__alt_data_end+0xfc008ee8>
 c009574:	d9002d17 	ldw	r4,180(sp)
 c009578:	d9801e04 	addi	r6,sp,120
 c00957c:	b80b883a 	mov	r5,r23
 c009580:	c0143980 	call	c014398 <__sprint_r>
 c009584:	1039351e 	bne	r2,zero,c007a5c <__alt_data_end+0xfc007a5c>
 c009588:	dc402617 	ldw	r17,152(sp)
 c00958c:	d8c02017 	ldw	r3,128(sp)
 c009590:	d8801f17 	ldw	r2,124(sp)
 c009594:	da000404 	addi	r8,sp,16
 c009598:	003ed606 	br	c0090f4 <__alt_data_end+0xfc0090f4>
 c00959c:	182b883a 	mov	r21,r3
 c0095a0:	d8002a15 	stw	zero,168(sp)
 c0095a4:	00388c06 	br	c0077d8 <__alt_data_end+0xfc0077d8>
 c0095a8:	d8802a17 	ldw	r2,168(sp)
 c0095ac:	103e071e 	bne	r2,zero,c008dcc <__alt_data_end+0xfc008dcc>
 c0095b0:	dc002a15 	stw	r16,168(sp)
 c0095b4:	003e0506 	br	c008dcc <__alt_data_end+0xfc008dcc>
 c0095b8:	d9002a17 	ldw	r4,168(sp)
 c0095bc:	20c00044 	addi	r3,r4,1
 c0095c0:	003e0f06 	br	c008e00 <__alt_data_end+0xfc008e00>
 c0095c4:	01400184 	movi	r5,6
 c0095c8:	d9402a15 	stw	r5,168(sp)
 c0095cc:	003dff06 	br	c008dcc <__alt_data_end+0xfc008dcc>
 c0095d0:	d8802104 	addi	r2,sp,132
 c0095d4:	d8800315 	stw	r2,12(sp)
 c0095d8:	d8802504 	addi	r2,sp,148
 c0095dc:	d8800215 	stw	r2,8(sp)
 c0095e0:	d8802604 	addi	r2,sp,152
 c0095e4:	d8800115 	stw	r2,4(sp)
 c0095e8:	d8802a17 	ldw	r2,168(sp)
 c0095ec:	d9403617 	ldw	r5,216(sp)
 c0095f0:	d9002d17 	ldw	r4,180(sp)
 c0095f4:	d8800015 	stw	r2,0(sp)
 c0095f8:	01c000c4 	movi	r7,3
 c0095fc:	980d883a 	mov	r6,r19
 c009600:	da003d15 	stw	r8,244(sp)
 c009604:	c00b7d80 	call	c00b7d8 <_dtoa_r>
 c009608:	d8c02a17 	ldw	r3,168(sp)
 c00960c:	da003d17 	ldw	r8,244(sp)
 c009610:	1021883a 	mov	r16,r2
 c009614:	10f9883a 	add	fp,r2,r3
 c009618:	81000007 	ldb	r4,0(r16)
 c00961c:	00800c04 	movi	r2,48
 c009620:	20805e26 	beq	r4,r2,c00979c <___vfprintf_internal_r+0x2150>
 c009624:	d8c02617 	ldw	r3,152(sp)
 c009628:	e0f9883a 	add	fp,fp,r3
 c00962c:	003e0a06 	br	c008e58 <__alt_data_end+0xfc008e58>
 c009630:	00c00b44 	movi	r3,45
 c009634:	24e0003c 	xorhi	r19,r4,32768
 c009638:	d8c02905 	stb	r3,164(sp)
 c00963c:	003de906 	br	c008de4 <__alt_data_end+0xfc008de4>
 c009640:	d8c03217 	ldw	r3,200(sp)
 c009644:	00c07a0e 	bge	zero,r3,c009830 <___vfprintf_internal_r+0x21e4>
 c009648:	00800044 	movi	r2,1
 c00964c:	d9003317 	ldw	r4,204(sp)
 c009650:	1105883a 	add	r2,r2,r4
 c009654:	d8802b15 	stw	r2,172(sp)
 c009658:	10004e16 	blt	r2,zero,c009794 <___vfprintf_internal_r+0x2148>
 c00965c:	044019c4 	movi	r17,103
 c009660:	003e2106 	br	c008ee8 <__alt_data_end+0xfc008ee8>
 c009664:	d9002a17 	ldw	r4,168(sp)
 c009668:	d8802104 	addi	r2,sp,132
 c00966c:	d8800315 	stw	r2,12(sp)
 c009670:	d9000015 	stw	r4,0(sp)
 c009674:	d8802504 	addi	r2,sp,148
 c009678:	d9403617 	ldw	r5,216(sp)
 c00967c:	d9002d17 	ldw	r4,180(sp)
 c009680:	d8800215 	stw	r2,8(sp)
 c009684:	d8802604 	addi	r2,sp,152
 c009688:	d8800115 	stw	r2,4(sp)
 c00968c:	01c000c4 	movi	r7,3
 c009690:	980d883a 	mov	r6,r19
 c009694:	da003d15 	stw	r8,244(sp)
 c009698:	c00b7d80 	call	c00b7d8 <_dtoa_r>
 c00969c:	d8c02a17 	ldw	r3,168(sp)
 c0096a0:	da003d17 	ldw	r8,244(sp)
 c0096a4:	1021883a 	mov	r16,r2
 c0096a8:	00801184 	movi	r2,70
 c0096ac:	80f9883a 	add	fp,r16,r3
 c0096b0:	88bfd926 	beq	r17,r2,c009618 <__alt_data_end+0xfc009618>
 c0096b4:	003de806 	br	c008e58 <__alt_data_end+0xfc008e58>
 c0096b8:	d9002a17 	ldw	r4,168(sp)
 c0096bc:	00c04d0e 	bge	zero,r3,c0097f4 <___vfprintf_internal_r+0x21a8>
 c0096c0:	2000441e 	bne	r4,zero,c0097d4 <___vfprintf_internal_r+0x2188>
 c0096c4:	9480004c 	andi	r18,r18,1
 c0096c8:	9000421e 	bne	r18,zero,c0097d4 <___vfprintf_internal_r+0x2188>
 c0096cc:	1805883a 	mov	r2,r3
 c0096d0:	18006f16 	blt	r3,zero,c009890 <___vfprintf_internal_r+0x2244>
 c0096d4:	d8c03217 	ldw	r3,200(sp)
 c0096d8:	d8c02b15 	stw	r3,172(sp)
 c0096dc:	003e0206 	br	c008ee8 <__alt_data_end+0xfc008ee8>
 c0096e0:	df0022c4 	addi	fp,sp,139
 c0096e4:	dc002a15 	stw	r16,168(sp)
 c0096e8:	4027883a 	mov	r19,r8
 c0096ec:	e021883a 	mov	r16,fp
 c0096f0:	b009883a 	mov	r4,r22
 c0096f4:	01400284 	movi	r5,10
 c0096f8:	c00460c0 	call	c00460c <__modsi3>
 c0096fc:	10800c04 	addi	r2,r2,48
 c009700:	843fffc4 	addi	r16,r16,-1
 c009704:	b009883a 	mov	r4,r22
 c009708:	01400284 	movi	r5,10
 c00970c:	80800005 	stb	r2,0(r16)
 c009710:	c0045880 	call	c004588 <__divsi3>
 c009714:	102d883a 	mov	r22,r2
 c009718:	00800244 	movi	r2,9
 c00971c:	15bff416 	blt	r2,r22,c0096f0 <__alt_data_end+0xfc0096f0>
 c009720:	9811883a 	mov	r8,r19
 c009724:	b0800c04 	addi	r2,r22,48
 c009728:	8027883a 	mov	r19,r16
 c00972c:	997fffc4 	addi	r5,r19,-1
 c009730:	98bfffc5 	stb	r2,-1(r19)
 c009734:	dc002a17 	ldw	r16,168(sp)
 c009738:	2f006d2e 	bgeu	r5,fp,c0098f0 <___vfprintf_internal_r+0x22a4>
 c00973c:	d9c02384 	addi	r7,sp,142
 c009740:	3ccfc83a 	sub	r7,r7,r19
 c009744:	d9002344 	addi	r4,sp,141
 c009748:	e1cf883a 	add	r7,fp,r7
 c00974c:	00000106 	br	c009754 <___vfprintf_internal_r+0x2108>
 c009750:	28800003 	ldbu	r2,0(r5)
 c009754:	20800005 	stb	r2,0(r4)
 c009758:	21000044 	addi	r4,r4,1
 c00975c:	29400044 	addi	r5,r5,1
 c009760:	393ffb1e 	bne	r7,r4,c009750 <__alt_data_end+0xfc009750>
 c009764:	d8802304 	addi	r2,sp,140
 c009768:	14c5c83a 	sub	r2,r2,r19
 c00976c:	d8c02344 	addi	r3,sp,141
 c009770:	1885883a 	add	r2,r3,r2
 c009774:	003f7006 	br	c009538 <__alt_data_end+0xfc009538>
 c009778:	0005883a 	mov	r2,zero
 c00977c:	003f0f06 	br	c0093bc <__alt_data_end+0xfc0093bc>
 c009780:	d8c03217 	ldw	r3,200(sp)
 c009784:	18c00044 	addi	r3,r3,1
 c009788:	d8c02b15 	stw	r3,172(sp)
 c00978c:	1805883a 	mov	r2,r3
 c009790:	183fb20e 	bge	r3,zero,c00965c <__alt_data_end+0xfc00965c>
 c009794:	0005883a 	mov	r2,zero
 c009798:	003fb006 	br	c00965c <__alt_data_end+0xfc00965c>
 c00979c:	d9003617 	ldw	r4,216(sp)
 c0097a0:	000d883a 	mov	r6,zero
 c0097a4:	000f883a 	mov	r7,zero
 c0097a8:	980b883a 	mov	r5,r19
 c0097ac:	d8c03c15 	stw	r3,240(sp)
 c0097b0:	da003d15 	stw	r8,244(sp)
 c0097b4:	c0191140 	call	c019114 <__eqdf2>
 c0097b8:	d8c03c17 	ldw	r3,240(sp)
 c0097bc:	da003d17 	ldw	r8,244(sp)
 c0097c0:	103f9826 	beq	r2,zero,c009624 <__alt_data_end+0xfc009624>
 c0097c4:	00800044 	movi	r2,1
 c0097c8:	10c7c83a 	sub	r3,r2,r3
 c0097cc:	d8c02615 	stw	r3,152(sp)
 c0097d0:	003f9506 	br	c009628 <__alt_data_end+0xfc009628>
 c0097d4:	d9002a17 	ldw	r4,168(sp)
 c0097d8:	d8c03217 	ldw	r3,200(sp)
 c0097dc:	20800044 	addi	r2,r4,1
 c0097e0:	1885883a 	add	r2,r3,r2
 c0097e4:	d8802b15 	stw	r2,172(sp)
 c0097e8:	103dbf0e 	bge	r2,zero,c008ee8 <__alt_data_end+0xfc008ee8>
 c0097ec:	0005883a 	mov	r2,zero
 c0097f0:	003dbd06 	br	c008ee8 <__alt_data_end+0xfc008ee8>
 c0097f4:	2000201e 	bne	r4,zero,c009878 <___vfprintf_internal_r+0x222c>
 c0097f8:	9480004c 	andi	r18,r18,1
 c0097fc:	90001e1e 	bne	r18,zero,c009878 <___vfprintf_internal_r+0x222c>
 c009800:	00800044 	movi	r2,1
 c009804:	d8802b15 	stw	r2,172(sp)
 c009808:	003db706 	br	c008ee8 <__alt_data_end+0xfc008ee8>
 c00980c:	00800b44 	movi	r2,45
 c009810:	05adc83a 	sub	r22,zero,r22
 c009814:	d8802305 	stb	r2,140(sp)
 c009818:	003f3f06 	br	c009518 <__alt_data_end+0xfc009518>
 c00981c:	0005883a 	mov	r2,zero
 c009820:	003f5206 	br	c00956c <__alt_data_end+0xfc00956c>
 c009824:	90a4703a 	and	r18,r18,r2
 c009828:	903f4e26 	beq	r18,zero,c009564 <__alt_data_end+0xfc009564>
 c00982c:	003f4a06 	br	c009558 <__alt_data_end+0xfc009558>
 c009830:	00800084 	movi	r2,2
 c009834:	10c5c83a 	sub	r2,r2,r3
 c009838:	003f8406 	br	c00964c <__alt_data_end+0xfc00964c>
 c00983c:	d9402e17 	ldw	r5,184(sp)
 c009840:	d9002e17 	ldw	r4,184(sp)
 c009844:	ac400043 	ldbu	r17,1(r21)
 c009848:	29400017 	ldw	r5,0(r5)
 c00984c:	20800104 	addi	r2,r4,4
 c009850:	d8802e15 	stw	r2,184(sp)
 c009854:	d9402a15 	stw	r5,168(sp)
 c009858:	182b883a 	mov	r21,r3
 c00985c:	283e7b0e 	bge	r5,zero,c00924c <__alt_data_end+0xfc00924c>
 c009860:	8c403fcc 	andi	r17,r17,255
 c009864:	017fffc4 	movi	r5,-1
 c009868:	8c40201c 	xori	r17,r17,128
 c00986c:	d9402a15 	stw	r5,168(sp)
 c009870:	8c7fe004 	addi	r17,r17,-128
 c009874:	0037d706 	br	c0077d4 <__alt_data_end+0xfc0077d4>
 c009878:	d8c02a17 	ldw	r3,168(sp)
 c00987c:	18c00084 	addi	r3,r3,2
 c009880:	d8c02b15 	stw	r3,172(sp)
 c009884:	1805883a 	mov	r2,r3
 c009888:	183d970e 	bge	r3,zero,c008ee8 <__alt_data_end+0xfc008ee8>
 c00988c:	003fd706 	br	c0097ec <__alt_data_end+0xfc0097ec>
 c009890:	0005883a 	mov	r2,zero
 c009894:	003f8f06 	br	c0096d4 <__alt_data_end+0xfc0096d4>
 c009898:	9080004c 	andi	r2,r18,1
 c00989c:	103f821e 	bne	r2,zero,c0096a8 <__alt_data_end+0xfc0096a8>
 c0098a0:	d8802117 	ldw	r2,132(sp)
 c0098a4:	1405c83a 	sub	r2,r2,r16
 c0098a8:	d8803315 	stw	r2,204(sp)
 c0098ac:	b47ef426 	beq	r22,r17,c009480 <__alt_data_end+0xfc009480>
 c0098b0:	dd802617 	ldw	r22,152(sp)
 c0098b4:	003f1206 	br	c009500 <__alt_data_end+0xfc009500>
 c0098b8:	d8c02b03 	ldbu	r3,172(sp)
 c0098bc:	d8c02785 	stb	r3,158(sp)
 c0098c0:	0038df06 	br	c007c40 <__alt_data_end+0xfc007c40>
 c0098c4:	d8c02b03 	ldbu	r3,172(sp)
 c0098c8:	d8c02785 	stb	r3,158(sp)
 c0098cc:	0038aa06 	br	c007b78 <__alt_data_end+0xfc007b78>
 c0098d0:	d8c02b03 	ldbu	r3,172(sp)
 c0098d4:	d8c02785 	stb	r3,158(sp)
 c0098d8:	003a4306 	br	c0081e8 <__alt_data_end+0xfc0081e8>
 c0098dc:	d8c02b03 	ldbu	r3,172(sp)
 c0098e0:	d8c02785 	stb	r3,158(sp)
 c0098e4:	003af506 	br	c0084bc <__alt_data_end+0xfc0084bc>
 c0098e8:	0005883a 	mov	r2,zero
 c0098ec:	003d7b06 	br	c008edc <__alt_data_end+0xfc008edc>
 c0098f0:	d8802344 	addi	r2,sp,141
 c0098f4:	003f1006 	br	c009538 <__alt_data_end+0xfc009538>
 c0098f8:	d8c02b03 	ldbu	r3,172(sp)
 c0098fc:	d8c02785 	stb	r3,158(sp)
 c009900:	0038fd06 	br	c007cf8 <__alt_data_end+0xfc007cf8>
 c009904:	d8c02b03 	ldbu	r3,172(sp)
 c009908:	d8c02785 	stb	r3,158(sp)
 c00990c:	003a9706 	br	c00836c <__alt_data_end+0xfc00836c>
 c009910:	d8c02b03 	ldbu	r3,172(sp)
 c009914:	d8c02785 	stb	r3,158(sp)
 c009918:	003a1806 	br	c00817c <__alt_data_end+0xfc00817c>
 c00991c:	d8c02b03 	ldbu	r3,172(sp)
 c009920:	d8c02785 	stb	r3,158(sp)
 c009924:	003abe06 	br	c008420 <__alt_data_end+0xfc008420>

0c009928 <__vfprintf_internal>:
 c009928:	008300b4 	movhi	r2,3074
 c00992c:	10bfc304 	addi	r2,r2,-244
 c009930:	300f883a 	mov	r7,r6
 c009934:	280d883a 	mov	r6,r5
 c009938:	200b883a 	mov	r5,r4
 c00993c:	11000017 	ldw	r4,0(r2)
 c009940:	c00764c1 	jmpi	c00764c <___vfprintf_internal_r>

0c009944 <__sbprintf>:
 c009944:	2880030b 	ldhu	r2,12(r5)
 c009948:	2ac01917 	ldw	r11,100(r5)
 c00994c:	2a80038b 	ldhu	r10,14(r5)
 c009950:	2a400717 	ldw	r9,28(r5)
 c009954:	2a000917 	ldw	r8,36(r5)
 c009958:	defee204 	addi	sp,sp,-1144
 c00995c:	00c10004 	movi	r3,1024
 c009960:	dc011a15 	stw	r16,1128(sp)
 c009964:	10bfff4c 	andi	r2,r2,65533
 c009968:	2821883a 	mov	r16,r5
 c00996c:	d8cb883a 	add	r5,sp,r3
 c009970:	dc811c15 	stw	r18,1136(sp)
 c009974:	dc411b15 	stw	r17,1132(sp)
 c009978:	dfc11d15 	stw	ra,1140(sp)
 c00997c:	2025883a 	mov	r18,r4
 c009980:	d881030d 	sth	r2,1036(sp)
 c009984:	dac11915 	stw	r11,1124(sp)
 c009988:	da81038d 	sth	r10,1038(sp)
 c00998c:	da410715 	stw	r9,1052(sp)
 c009990:	da010915 	stw	r8,1060(sp)
 c009994:	dec10015 	stw	sp,1024(sp)
 c009998:	dec10415 	stw	sp,1040(sp)
 c00999c:	d8c10215 	stw	r3,1032(sp)
 c0099a0:	d8c10515 	stw	r3,1044(sp)
 c0099a4:	d8010615 	stw	zero,1048(sp)
 c0099a8:	c00764c0 	call	c00764c <___vfprintf_internal_r>
 c0099ac:	1023883a 	mov	r17,r2
 c0099b0:	10000416 	blt	r2,zero,c0099c4 <__sbprintf+0x80>
 c0099b4:	d9410004 	addi	r5,sp,1024
 c0099b8:	9009883a 	mov	r4,r18
 c0099bc:	c00d07c0 	call	c00d07c <_fflush_r>
 c0099c0:	10000d1e 	bne	r2,zero,c0099f8 <__sbprintf+0xb4>
 c0099c4:	d881030b 	ldhu	r2,1036(sp)
 c0099c8:	1080100c 	andi	r2,r2,64
 c0099cc:	10000326 	beq	r2,zero,c0099dc <__sbprintf+0x98>
 c0099d0:	8080030b 	ldhu	r2,12(r16)
 c0099d4:	10801014 	ori	r2,r2,64
 c0099d8:	8080030d 	sth	r2,12(r16)
 c0099dc:	8805883a 	mov	r2,r17
 c0099e0:	dfc11d17 	ldw	ra,1140(sp)
 c0099e4:	dc811c17 	ldw	r18,1136(sp)
 c0099e8:	dc411b17 	ldw	r17,1132(sp)
 c0099ec:	dc011a17 	ldw	r16,1128(sp)
 c0099f0:	dec11e04 	addi	sp,sp,1144
 c0099f4:	f800283a 	ret
 c0099f8:	047fffc4 	movi	r17,-1
 c0099fc:	003ff106 	br	c0099c4 <__alt_data_end+0xfc0099c4>

0c009a00 <__svfscanf_r>:
 c009a00:	2880030b 	ldhu	r2,12(r5)
 c009a04:	deff4b04 	addi	sp,sp,-724
 c009a08:	df00b315 	stw	fp,716(sp)
 c009a0c:	ddc0b215 	stw	r23,712(sp)
 c009a10:	dfc0b415 	stw	ra,720(sp)
 c009a14:	dd80b115 	stw	r22,708(sp)
 c009a18:	dd40b015 	stw	r21,704(sp)
 c009a1c:	dd00af15 	stw	r20,700(sp)
 c009a20:	dcc0ae15 	stw	r19,696(sp)
 c009a24:	dc80ad15 	stw	r18,692(sp)
 c009a28:	dc40ac15 	stw	r17,688(sp)
 c009a2c:	dc00ab15 	stw	r16,684(sp)
 c009a30:	10c8000c 	andi	r3,r2,8192
 c009a34:	d9c09c15 	stw	r7,624(sp)
 c009a38:	2839883a 	mov	fp,r5
 c009a3c:	202f883a 	mov	r23,r4
 c009a40:	1800061e 	bne	r3,zero,c009a5c <__svfscanf_r+0x5c>
 c009a44:	29001917 	ldw	r4,100(r5)
 c009a48:	00f7ffc4 	movi	r3,-8193
 c009a4c:	10880014 	ori	r2,r2,8192
 c009a50:	20c6703a 	and	r3,r4,r3
 c009a54:	2880030d 	sth	r2,12(r5)
 c009a58:	28c01915 	stw	r3,100(r5)
 c009a5c:	30800003 	ldbu	r2,0(r6)
 c009a60:	0021883a 	mov	r16,zero
 c009a64:	058300b4 	movhi	r22,3074
 c009a68:	d800a115 	stw	zero,644(sp)
 c009a6c:	d8009e15 	stw	zero,632(sp)
 c009a70:	d800a015 	stw	zero,640(sp)
 c009a74:	d8809b15 	stw	r2,620(sp)
 c009a78:	b5bfc104 	addi	r22,r22,-252
 c009a7c:	8025883a 	mov	r18,r16
 c009a80:	e027883a 	mov	r19,fp
 c009a84:	35000044 	addi	r20,r6,1
 c009a88:	10001e26 	beq	r2,zero,c009b04 <__svfscanf_r+0x104>
 c009a8c:	b4000017 	ldw	r16,0(r22)
 c009a90:	8087883a 	add	r3,r16,r2
 c009a94:	18c00043 	ldbu	r3,1(r3)
 c009a98:	18c0020c 	andi	r3,r3,8
 c009a9c:	18001b26 	beq	r3,zero,c009b0c <__svfscanf_r+0x10c>
 c009aa0:	98800117 	ldw	r2,4(r19)
 c009aa4:	00800e0e 	bge	zero,r2,c009ae0 <__svfscanf_r+0xe0>
 c009aa8:	98c00017 	ldw	r3,0(r19)
 c009aac:	b1000017 	ldw	r4,0(r22)
 c009ab0:	18800003 	ldbu	r2,0(r3)
 c009ab4:	2085883a 	add	r2,r4,r2
 c009ab8:	10800043 	ldbu	r2,1(r2)
 c009abc:	1080020c 	andi	r2,r2,8
 c009ac0:	10000b26 	beq	r2,zero,c009af0 <__svfscanf_r+0xf0>
 c009ac4:	98800117 	ldw	r2,4(r19)
 c009ac8:	18c00044 	addi	r3,r3,1
 c009acc:	98c00015 	stw	r3,0(r19)
 c009ad0:	10bfffc4 	addi	r2,r2,-1
 c009ad4:	98800115 	stw	r2,4(r19)
 c009ad8:	94800044 	addi	r18,r18,1
 c009adc:	00bff216 	blt	zero,r2,c009aa8 <__alt_data_end+0xfc009aa8>
 c009ae0:	980b883a 	mov	r5,r19
 c009ae4:	b809883a 	mov	r4,r23
 c009ae8:	c0102e80 	call	c0102e8 <__srefill_r>
 c009aec:	103fee26 	beq	r2,zero,c009aa8 <__alt_data_end+0xfc009aa8>
 c009af0:	a00d883a 	mov	r6,r20
 c009af4:	30800003 	ldbu	r2,0(r6)
 c009af8:	35000044 	addi	r20,r6,1
 c009afc:	d8809b15 	stw	r2,620(sp)
 c009b00:	103fe21e 	bne	r2,zero,c009a8c <__alt_data_end+0xfc009a8c>
 c009b04:	d880a017 	ldw	r2,640(sp)
 c009b08:	00009a06 	br	c009d74 <__svfscanf_r+0x374>
 c009b0c:	00c00944 	movi	r3,37
 c009b10:	10c0891e 	bne	r2,r3,c009d38 <__svfscanf_r+0x338>
 c009b14:	0039883a 	mov	fp,zero
 c009b18:	35400043 	ldbu	r21,1(r6)
 c009b1c:	0023883a 	mov	r17,zero
 c009b20:	01801e04 	movi	r6,120
 c009b24:	00c01b04 	movi	r3,108
 c009b28:	e009883a 	mov	r4,fp
 c009b2c:	a1c00044 	addi	r7,r20,1
 c009b30:	3540a236 	bltu	r6,r21,c009dbc <__svfscanf_r+0x3bc>
 c009b34:	a80490ba 	slli	r2,r21,2
 c009b38:	01430074 	movhi	r5,3073
 c009b3c:	2966d304 	addi	r5,r5,-25780
 c009b40:	1145883a 	add	r2,r2,r5
 c009b44:	10800017 	ldw	r2,0(r2)
 c009b48:	1000683a 	jmp	r2
 c009b4c:	0c009d70 	cmpltui	r16,at,629
 c009b50:	0c009dbc 	xorhi	r16,at,630
 c009b54:	0c009dbc 	xorhi	r16,at,630
 c009b58:	0c009dbc 	xorhi	r16,at,630
 c009b5c:	0c009dbc 	xorhi	r16,at,630
 c009b60:	0c009dbc 	xorhi	r16,at,630
 c009b64:	0c009dbc 	xorhi	r16,at,630
 c009b68:	0c009dbc 	xorhi	r16,at,630
 c009b6c:	0c009dbc 	xorhi	r16,at,630
 c009b70:	0c009dbc 	xorhi	r16,at,630
 c009b74:	0c009dbc 	xorhi	r16,at,630
 c009b78:	0c009dbc 	xorhi	r16,at,630
 c009b7c:	0c009dbc 	xorhi	r16,at,630
 c009b80:	0c009dbc 	xorhi	r16,at,630
 c009b84:	0c009dbc 	xorhi	r16,at,630
 c009b88:	0c009dbc 	xorhi	r16,at,630
 c009b8c:	0c009dbc 	xorhi	r16,at,630
 c009b90:	0c009dbc 	xorhi	r16,at,630
 c009b94:	0c009dbc 	xorhi	r16,at,630
 c009b98:	0c009dbc 	xorhi	r16,at,630
 c009b9c:	0c009dbc 	xorhi	r16,at,630
 c009ba0:	0c009dbc 	xorhi	r16,at,630
 c009ba4:	0c009dbc 	xorhi	r16,at,630
 c009ba8:	0c009dbc 	xorhi	r16,at,630
 c009bac:	0c009dbc 	xorhi	r16,at,630
 c009bb0:	0c009dbc 	xorhi	r16,at,630
 c009bb4:	0c009dbc 	xorhi	r16,at,630
 c009bb8:	0c009dbc 	xorhi	r16,at,630
 c009bbc:	0c009dbc 	xorhi	r16,at,630
 c009bc0:	0c009dbc 	xorhi	r16,at,630
 c009bc4:	0c009dbc 	xorhi	r16,at,630
 c009bc8:	0c009dbc 	xorhi	r16,at,630
 c009bcc:	0c009dbc 	xorhi	r16,at,630
 c009bd0:	0c009dbc 	xorhi	r16,at,630
 c009bd4:	0c009dbc 	xorhi	r16,at,630
 c009bd8:	0c009dbc 	xorhi	r16,at,630
 c009bdc:	0c009dbc 	xorhi	r16,at,630
 c009be0:	0c009d30 	cmpltui	r16,at,628
 c009be4:	0c009dbc 	xorhi	r16,at,630
 c009be8:	0c009dbc 	xorhi	r16,at,630
 c009bec:	0c009dbc 	xorhi	r16,at,630
 c009bf0:	0c009dbc 	xorhi	r16,at,630
 c009bf4:	0c009da4 	muli	r16,at,630
 c009bf8:	0c009dbc 	xorhi	r16,at,630
 c009bfc:	0c009dbc 	xorhi	r16,at,630
 c009c00:	0c009dbc 	xorhi	r16,at,630
 c009c04:	0c009dbc 	xorhi	r16,at,630
 c009c08:	0c009dbc 	xorhi	r16,at,630
 c009c0c:	0c009f04 	addi	r16,at,636
 c009c10:	0c009f04 	addi	r16,at,636
 c009c14:	0c009f04 	addi	r16,at,636
 c009c18:	0c009f04 	addi	r16,at,636
 c009c1c:	0c009f04 	addi	r16,at,636
 c009c20:	0c009f04 	addi	r16,at,636
 c009c24:	0c009f04 	addi	r16,at,636
 c009c28:	0c009f04 	addi	r16,at,636
 c009c2c:	0c009f04 	addi	r16,at,636
 c009c30:	0c009f04 	addi	r16,at,636
 c009c34:	0c009dbc 	xorhi	r16,at,630
 c009c38:	0c009dbc 	xorhi	r16,at,630
 c009c3c:	0c009dbc 	xorhi	r16,at,630
 c009c40:	0c009dbc 	xorhi	r16,at,630
 c009c44:	0c009dbc 	xorhi	r16,at,630
 c009c48:	0c009dbc 	xorhi	r16,at,630
 c009c4c:	0c009dbc 	xorhi	r16,at,630
 c009c50:	0c009dbc 	xorhi	r16,at,630
 c009c54:	0c009dbc 	xorhi	r16,at,630
 c009c58:	0c009dbc 	xorhi	r16,at,630
 c009c5c:	0c009ed4 	ori	r16,at,635
 c009c60:	0c009fb0 	cmpltui	r16,at,638
 c009c64:	0c009dbc 	xorhi	r16,at,630
 c009c68:	0c009fb0 	cmpltui	r16,at,638
 c009c6c:	0c009dbc 	xorhi	r16,at,630
 c009c70:	0c009dbc 	xorhi	r16,at,630
 c009c74:	0c009dbc 	xorhi	r16,at,630
 c009c78:	0c009dbc 	xorhi	r16,at,630
 c009c7c:	0c009f9c 	xori	r16,at,638
 c009c80:	0c009dbc 	xorhi	r16,at,630
 c009c84:	0c009dbc 	xorhi	r16,at,630
 c009c88:	0c009f6c 	andhi	r16,at,637
 c009c8c:	0c009dbc 	xorhi	r16,at,630
 c009c90:	0c009dbc 	xorhi	r16,at,630
 c009c94:	0c009dbc 	xorhi	r16,at,630
 c009c98:	0c009dbc 	xorhi	r16,at,630
 c009c9c:	0c009dbc 	xorhi	r16,at,630
 c009ca0:	0c009dbc 	xorhi	r16,at,630
 c009ca4:	0c009dbc 	xorhi	r16,at,630
 c009ca8:	0c009dbc 	xorhi	r16,at,630
 c009cac:	0c009f3c 	xorhi	r16,at,636
 c009cb0:	0c009dbc 	xorhi	r16,at,630
 c009cb4:	0c009dbc 	xorhi	r16,at,630
 c009cb8:	0c00a0f8 	rdprs	r16,at,643
 c009cbc:	0c009dbc 	xorhi	r16,at,630
 c009cc0:	0c009dbc 	xorhi	r16,at,630
 c009cc4:	0c009dbc 	xorhi	r16,at,630
 c009cc8:	0c009dbc 	xorhi	r16,at,630
 c009ccc:	0c009dbc 	xorhi	r16,at,630
 c009cd0:	0c009dbc 	xorhi	r16,at,630
 c009cd4:	0c009dbc 	xorhi	r16,at,630
 c009cd8:	0c00a078 	rdprs	r16,at,641
 c009cdc:	0c00a04c 	andi	r16,at,641
 c009ce0:	0c009fb0 	cmpltui	r16,at,638
 c009ce4:	0c009fb0 	cmpltui	r16,at,638
 c009ce8:	0c009fb0 	cmpltui	r16,at,638
 c009cec:	0c00a038 	rdprs	r16,at,640
 c009cf0:	0c00a188 	cmpgei	r16,at,646
 c009cf4:	0c009dbc 	xorhi	r16,at,630
 c009cf8:	0c009dbc 	xorhi	r16,at,630
 c009cfc:	0c00a024 	muli	r16,at,640
 c009d00:	0c009dbc 	xorhi	r16,at,630
 c009d04:	0c009ff4 	orhi	r16,at,639
 c009d08:	0c009fc8 	cmpgei	r16,at,639
 c009d0c:	0c009ea4 	muli	r16,at,634
 c009d10:	0c009dbc 	xorhi	r16,at,630
 c009d14:	0c009dbc 	xorhi	r16,at,630
 c009d18:	0c009e8c 	andi	r16,at,634
 c009d1c:	0c009dbc 	xorhi	r16,at,630
 c009d20:	0c009e10 	cmplti	r16,at,632
 c009d24:	0c009dbc 	xorhi	r16,at,630
 c009d28:	0c009dbc 	xorhi	r16,at,630
 c009d2c:	0c009f3c 	xorhi	r16,at,636
 c009d30:	d9c09d15 	stw	r7,628(sp)
 c009d34:	3829883a 	mov	r20,r7
 c009d38:	98800117 	ldw	r2,4(r19)
 c009d3c:	0081c60e 	bge	zero,r2,c00a458 <__svfscanf_r+0xa58>
 c009d40:	98800017 	ldw	r2,0(r19)
 c009d44:	a0ffffc3 	ldbu	r3,-1(r20)
 c009d48:	11000003 	ldbu	r4,0(r2)
 c009d4c:	20ff6d1e 	bne	r4,r3,c009b04 <__alt_data_end+0xfc009b04>
 c009d50:	98c00117 	ldw	r3,4(r19)
 c009d54:	10800044 	addi	r2,r2,1
 c009d58:	98800015 	stw	r2,0(r19)
 c009d5c:	18bfffc4 	addi	r2,r3,-1
 c009d60:	98800115 	stw	r2,4(r19)
 c009d64:	94800044 	addi	r18,r18,1
 c009d68:	a00d883a 	mov	r6,r20
 c009d6c:	003f6106 	br	c009af4 <__alt_data_end+0xfc009af4>
 c009d70:	00bfffc4 	movi	r2,-1
 c009d74:	dfc0b417 	ldw	ra,720(sp)
 c009d78:	df00b317 	ldw	fp,716(sp)
 c009d7c:	ddc0b217 	ldw	r23,712(sp)
 c009d80:	dd80b117 	ldw	r22,708(sp)
 c009d84:	dd40b017 	ldw	r21,704(sp)
 c009d88:	dd00af17 	ldw	r20,700(sp)
 c009d8c:	dcc0ae17 	ldw	r19,696(sp)
 c009d90:	dc80ad17 	ldw	r18,692(sp)
 c009d94:	dc40ac17 	ldw	r17,688(sp)
 c009d98:	dc00ab17 	ldw	r16,684(sp)
 c009d9c:	dec0b504 	addi	sp,sp,724
 c009da0:	f800283a 	ret
 c009da4:	a1400043 	ldbu	r5,1(r20)
 c009da8:	3829883a 	mov	r20,r7
 c009dac:	8c400414 	ori	r17,r17,16
 c009db0:	2d403fcc 	andi	r21,r5,255
 c009db4:	a1c00044 	addi	r7,r20,1
 c009db8:	357f5e2e 	bgeu	r6,r21,c009b34 <__alt_data_end+0xfc009b34>
 c009dbc:	856b883a 	add	r21,r16,r21
 c009dc0:	a8800043 	ldbu	r2,1(r21)
 c009dc4:	d9c09d15 	stw	r7,628(sp)
 c009dc8:	00c00044 	movi	r3,1
 c009dcc:	108000cc 	andi	r2,r2,3
 c009dd0:	2039883a 	mov	fp,r4
 c009dd4:	10c1a526 	beq	r2,r3,c00a46c <__svfscanf_r+0xa6c>
 c009dd8:	98800117 	ldw	r2,4(r19)
 c009ddc:	00804216 	blt	zero,r2,c009ee8 <__svfscanf_r+0x4e8>
 c009de0:	980b883a 	mov	r5,r19
 c009de4:	b809883a 	mov	r4,r23
 c009de8:	c0102e80 	call	c0102e8 <__srefill_r>
 c009dec:	10015e1e 	bne	r2,zero,c00a368 <__svfscanf_r+0x968>
 c009df0:	01030074 	movhi	r4,3073
 c009df4:	2107e004 	addi	r4,r4,8064
 c009df8:	01400284 	movi	r5,10
 c009dfc:	b4000017 	ldw	r16,0(r22)
 c009e00:	d900a115 	stw	r4,644(sp)
 c009e04:	d9409e15 	stw	r5,632(sp)
 c009e08:	050000c4 	movi	r20,3
 c009e0c:	00000a06 	br	c009e38 <__svfscanf_r+0x438>
 c009e10:	98800117 	ldw	r2,4(r19)
 c009e14:	d9c09d15 	stw	r7,628(sp)
 c009e18:	2039883a 	mov	fp,r4
 c009e1c:	0081e20e 	bge	zero,r2,c00a5a8 <__svfscanf_r+0xba8>
 c009e20:	00c30074 	movhi	r3,3073
 c009e24:	18c93e04 	addi	r3,r3,9464
 c009e28:	01000284 	movi	r4,10
 c009e2c:	d8c0a115 	stw	r3,644(sp)
 c009e30:	d9009e15 	stw	r4,632(sp)
 c009e34:	050000c4 	movi	r20,3
 c009e38:	98c00017 	ldw	r3,0(r19)
 c009e3c:	00000206 	br	c009e48 <__svfscanf_r+0x448>
 c009e40:	18c00044 	addi	r3,r3,1
 c009e44:	98c00015 	stw	r3,0(r19)
 c009e48:	19000003 	ldbu	r4,0(r3)
 c009e4c:	20803fcc 	andi	r2,r4,255
 c009e50:	8085883a 	add	r2,r16,r2
 c009e54:	10800043 	ldbu	r2,1(r2)
 c009e58:	1140020c 	andi	r5,r2,8
 c009e5c:	28020126 	beq	r5,zero,c00a664 <__svfscanf_r+0xc64>
 c009e60:	98800117 	ldw	r2,4(r19)
 c009e64:	94800044 	addi	r18,r18,1
 c009e68:	10bfffc4 	addi	r2,r2,-1
 c009e6c:	98800115 	stw	r2,4(r19)
 c009e70:	00bff316 	blt	zero,r2,c009e40 <__alt_data_end+0xfc009e40>
 c009e74:	980b883a 	mov	r5,r19
 c009e78:	b809883a 	mov	r4,r23
 c009e7c:	c0102e80 	call	c0102e8 <__srefill_r>
 c009e80:	1001391e 	bne	r2,zero,c00a368 <__svfscanf_r+0x968>
 c009e84:	b4000017 	ldw	r16,0(r22)
 c009e88:	003feb06 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009e8c:	98800117 	ldw	r2,4(r19)
 c009e90:	d9c09d15 	stw	r7,628(sp)
 c009e94:	2039883a 	mov	fp,r4
 c009e98:	0081aa0e 	bge	zero,r2,c00a544 <__svfscanf_r+0xb44>
 c009e9c:	05000084 	movi	r20,2
 c009ea0:	003fe506 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009ea4:	98800117 	ldw	r2,4(r19)
 c009ea8:	d9c09d15 	stw	r7,628(sp)
 c009eac:	2039883a 	mov	fp,r4
 c009eb0:	8c408814 	ori	r17,r17,544
 c009eb4:	0081df0e 	bge	zero,r2,c00a634 <__svfscanf_r+0xc34>
 c009eb8:	00c30074 	movhi	r3,3073
 c009ebc:	18c93e04 	addi	r3,r3,9464
 c009ec0:	01000404 	movi	r4,16
 c009ec4:	d8c0a115 	stw	r3,644(sp)
 c009ec8:	d9009e15 	stw	r4,632(sp)
 c009ecc:	050000c4 	movi	r20,3
 c009ed0:	003fd906 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009ed4:	98800117 	ldw	r2,4(r19)
 c009ed8:	d9c09d15 	stw	r7,628(sp)
 c009edc:	2039883a 	mov	fp,r4
 c009ee0:	8c400054 	ori	r17,r17,1
 c009ee4:	0081850e 	bge	zero,r2,c00a4fc <__svfscanf_r+0xafc>
 c009ee8:	00c30074 	movhi	r3,3073
 c009eec:	18c7e004 	addi	r3,r3,8064
 c009ef0:	01000284 	movi	r4,10
 c009ef4:	d8c0a115 	stw	r3,644(sp)
 c009ef8:	d9009e15 	stw	r4,632(sp)
 c009efc:	050000c4 	movi	r20,3
 c009f00:	003fcd06 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009f04:	01400284 	movi	r5,10
 c009f08:	d8c0a615 	stw	r3,664(sp)
 c009f0c:	d980a915 	stw	r6,676(sp)
 c009f10:	d9c0aa15 	stw	r7,680(sp)
 c009f14:	c00473c0 	call	c00473c <__mulsi3>
 c009f18:	a1400043 	ldbu	r5,1(r20)
 c009f1c:	d9c0aa17 	ldw	r7,680(sp)
 c009f20:	1545883a 	add	r2,r2,r21
 c009f24:	113ff404 	addi	r4,r2,-48
 c009f28:	3829883a 	mov	r20,r7
 c009f2c:	2d403fcc 	andi	r21,r5,255
 c009f30:	d8c0a617 	ldw	r3,664(sp)
 c009f34:	d980a917 	ldw	r6,676(sp)
 c009f38:	003efc06 	br	c009b2c <__alt_data_end+0xfc009b2c>
 c009f3c:	98800117 	ldw	r2,4(r19)
 c009f40:	d9c09d15 	stw	r7,628(sp)
 c009f44:	2039883a 	mov	fp,r4
 c009f48:	8c408014 	ori	r17,r17,512
 c009f4c:	0081710e 	bge	zero,r2,c00a514 <__svfscanf_r+0xb14>
 c009f50:	01430074 	movhi	r5,3073
 c009f54:	29493e04 	addi	r5,r5,9464
 c009f58:	00800404 	movi	r2,16
 c009f5c:	d940a115 	stw	r5,644(sp)
 c009f60:	d8809e15 	stw	r2,632(sp)
 c009f64:	050000c4 	movi	r20,3
 c009f68:	003fb306 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009f6c:	98800117 	ldw	r2,4(r19)
 c009f70:	d9c09d15 	stw	r7,628(sp)
 c009f74:	2039883a 	mov	fp,r4
 c009f78:	8c400054 	ori	r17,r17,1
 c009f7c:	0081840e 	bge	zero,r2,c00a590 <__svfscanf_r+0xb90>
 c009f80:	01430074 	movhi	r5,3073
 c009f84:	29493e04 	addi	r5,r5,9464
 c009f88:	00800204 	movi	r2,8
 c009f8c:	d940a115 	stw	r5,644(sp)
 c009f90:	d8809e15 	stw	r2,632(sp)
 c009f94:	050000c4 	movi	r20,3
 c009f98:	003fa706 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009f9c:	a1400043 	ldbu	r5,1(r20)
 c009fa0:	8c400094 	ori	r17,r17,2
 c009fa4:	3829883a 	mov	r20,r7
 c009fa8:	2d403fcc 	andi	r21,r5,255
 c009fac:	003edf06 	br	c009b2c <__alt_data_end+0xfc009b2c>
 c009fb0:	98800117 	ldw	r2,4(r19)
 c009fb4:	d9c09d15 	stw	r7,628(sp)
 c009fb8:	2039883a 	mov	fp,r4
 c009fbc:	00816d0e 	bge	zero,r2,c00a574 <__svfscanf_r+0xb74>
 c009fc0:	05000104 	movi	r20,4
 c009fc4:	003f9c06 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009fc8:	98800117 	ldw	r2,4(r19)
 c009fcc:	d9c09d15 	stw	r7,628(sp)
 c009fd0:	2039883a 	mov	fp,r4
 c009fd4:	0081800e 	bge	zero,r2,c00a5d8 <__svfscanf_r+0xbd8>
 c009fd8:	01030074 	movhi	r4,3073
 c009fdc:	21093e04 	addi	r4,r4,9464
 c009fe0:	01400204 	movi	r5,8
 c009fe4:	d900a115 	stw	r4,644(sp)
 c009fe8:	d9409e15 	stw	r5,632(sp)
 c009fec:	050000c4 	movi	r20,3
 c009ff0:	003f9106 	br	c009e38 <__alt_data_end+0xfc009e38>
 c009ff4:	d9c09d15 	stw	r7,628(sp)
 c009ff8:	8880040c 	andi	r2,r17,16
 c009ffc:	1000a01e 	bne	r2,zero,c00a280 <__svfscanf_r+0x880>
 c00a000:	8880010c 	andi	r2,r17,4
 c00a004:	10012826 	beq	r2,zero,c00a4a8 <__svfscanf_r+0xaa8>
 c00a008:	d9009c17 	ldw	r4,624(sp)
 c00a00c:	3829883a 	mov	r20,r7
 c00a010:	20800017 	ldw	r2,0(r4)
 c00a014:	21000104 	addi	r4,r4,4
 c00a018:	d9009c15 	stw	r4,624(sp)
 c00a01c:	1480000d 	sth	r18,0(r2)
 c00a020:	003eb306 	br	c009af0 <__alt_data_end+0xfc009af0>
 c00a024:	a5400043 	ldbu	r21,1(r20)
 c00a028:	a8c11a26 	beq	r21,r3,c00a494 <__svfscanf_r+0xa94>
 c00a02c:	8c400054 	ori	r17,r17,1
 c00a030:	3829883a 	mov	r20,r7
 c00a034:	003ebd06 	br	c009b2c <__alt_data_end+0xfc009b2c>
 c00a038:	a1400043 	ldbu	r5,1(r20)
 c00a03c:	8c400114 	ori	r17,r17,4
 c00a040:	3829883a 	mov	r20,r7
 c00a044:	2d403fcc 	andi	r21,r5,255
 c00a048:	003eb806 	br	c009b2c <__alt_data_end+0xfc009b2c>
 c00a04c:	98800117 	ldw	r2,4(r19)
 c00a050:	d9c09d15 	stw	r7,628(sp)
 c00a054:	2039883a 	mov	fp,r4
 c00a058:	00bf610e 	bge	zero,r2,c009de0 <__alt_data_end+0xfc009de0>
 c00a05c:	00830074 	movhi	r2,3073
 c00a060:	1087e004 	addi	r2,r2,8064
 c00a064:	00c00284 	movi	r3,10
 c00a068:	d880a115 	stw	r2,644(sp)
 c00a06c:	d8c09e15 	stw	r3,632(sp)
 c00a070:	050000c4 	movi	r20,3
 c00a074:	003f7006 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a078:	98800117 	ldw	r2,4(r19)
 c00a07c:	d9c09d15 	stw	r7,628(sp)
 c00a080:	2039883a 	mov	fp,r4
 c00a084:	0080c60e 	bge	zero,r2,c00a3a0 <__svfscanf_r+0x9a0>
 c00a088:	e000011e 	bne	fp,zero,c00a090 <__svfscanf_r+0x690>
 c00a08c:	07000044 	movi	fp,1
 c00a090:	8880004c 	andi	r2,r17,1
 c00a094:	1000461e 	bne	r2,zero,c00a1b0 <__svfscanf_r+0x7b0>
 c00a098:	8c40040c 	andi	r17,r17,16
 c00a09c:	8800dc26 	beq	r17,zero,c00a410 <__svfscanf_r+0xa10>
 c00a0a0:	0021883a 	mov	r16,zero
 c00a0a4:	00000806 	br	c00a0c8 <__svfscanf_r+0x6c8>
 c00a0a8:	1887883a 	add	r3,r3,r2
 c00a0ac:	980b883a 	mov	r5,r19
 c00a0b0:	b809883a 	mov	r4,r23
 c00a0b4:	98c00015 	stw	r3,0(r19)
 c00a0b8:	80a1883a 	add	r16,r16,r2
 c00a0bc:	e0b9c83a 	sub	fp,fp,r2
 c00a0c0:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a0c4:	1000cc1e 	bne	r2,zero,c00a3f8 <__svfscanf_r+0x9f8>
 c00a0c8:	98800117 	ldw	r2,4(r19)
 c00a0cc:	98c00017 	ldw	r3,0(r19)
 c00a0d0:	173ff516 	blt	r2,fp,c00a0a8 <__alt_data_end+0xfc00a0a8>
 c00a0d4:	1705c83a 	sub	r2,r2,fp
 c00a0d8:	1f15883a 	add	r10,r3,fp
 c00a0dc:	8721883a 	add	r16,r16,fp
 c00a0e0:	98800115 	stw	r2,4(r19)
 c00a0e4:	9a800015 	stw	r10,0(r19)
 c00a0e8:	dd009d17 	ldw	r20,628(sp)
 c00a0ec:	9425883a 	add	r18,r18,r16
 c00a0f0:	a00d883a 	mov	r6,r20
 c00a0f4:	003e7f06 	br	c009af4 <__alt_data_end+0xfc009af4>
 c00a0f8:	2039883a 	mov	fp,r4
 c00a0fc:	380b883a 	mov	r5,r7
 c00a100:	d9005884 	addi	r4,sp,354
 c00a104:	d9c09d15 	stw	r7,628(sp)
 c00a108:	c0105300 	call	c010530 <__sccl>
 c00a10c:	1029883a 	mov	r20,r2
 c00a110:	98800117 	ldw	r2,4(r19)
 c00a114:	0081120e 	bge	zero,r2,c00a560 <__svfscanf_r+0xb60>
 c00a118:	99000017 	ldw	r4,0(r19)
 c00a11c:	20800003 	ldbu	r2,0(r4)
 c00a120:	e0005a26 	beq	fp,zero,c00a28c <__svfscanf_r+0x88c>
 c00a124:	8c40040c 	andi	r17,r17,16
 c00a128:	88005b26 	beq	r17,zero,c00a298 <__svfscanf_r+0x898>
 c00a12c:	e023883a 	mov	r17,fp
 c00a130:	0021883a 	mov	r16,zero
 c00a134:	00000106 	br	c00a13c <__svfscanf_r+0x73c>
 c00a138:	20800003 	ldbu	r2,0(r4)
 c00a13c:	10803fcc 	andi	r2,r2,255
 c00a140:	d8c05884 	addi	r3,sp,354
 c00a144:	1885883a 	add	r2,r3,r2
 c00a148:	10800007 	ldb	r2,0(r2)
 c00a14c:	1000ae26 	beq	r2,zero,c00a408 <__svfscanf_r+0xa08>
 c00a150:	98800117 	ldw	r2,4(r19)
 c00a154:	21000044 	addi	r4,r4,1
 c00a158:	84000044 	addi	r16,r16,1
 c00a15c:	10bfffc4 	addi	r2,r2,-1
 c00a160:	98800115 	stw	r2,4(r19)
 c00a164:	99000015 	stw	r4,0(r19)
 c00a168:	8700a126 	beq	r16,fp,c00a3f0 <__svfscanf_r+0x9f0>
 c00a16c:	00bff216 	blt	zero,r2,c00a138 <__alt_data_end+0xfc00a138>
 c00a170:	980b883a 	mov	r5,r19
 c00a174:	b809883a 	mov	r4,r23
 c00a178:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a17c:	10009b1e 	bne	r2,zero,c00a3ec <__svfscanf_r+0x9ec>
 c00a180:	99000017 	ldw	r4,0(r19)
 c00a184:	003fec06 	br	c00a138 <__alt_data_end+0xfc00a138>
 c00a188:	98800117 	ldw	r2,4(r19)
 c00a18c:	d9c09d15 	stw	r7,628(sp)
 c00a190:	2039883a 	mov	fp,r4
 c00a194:	00811c0e 	bge	zero,r2,c00a608 <__svfscanf_r+0xc08>
 c00a198:	01430074 	movhi	r5,3073
 c00a19c:	2947e004 	addi	r5,r5,8064
 c00a1a0:	d940a115 	stw	r5,644(sp)
 c00a1a4:	d8009e15 	stw	zero,632(sp)
 c00a1a8:	050000c4 	movi	r20,3
 c00a1ac:	003f2206 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a1b0:	dd409904 	addi	r21,sp,612
 c00a1b4:	8c40040c 	andi	r17,r17,16
 c00a1b8:	01800204 	movi	r6,8
 c00a1bc:	000b883a 	mov	r5,zero
 c00a1c0:	a809883a 	mov	r4,r21
 c00a1c4:	dc409f15 	stw	r17,636(sp)
 c00a1c8:	c00ea200 	call	c00ea20 <memset>
 c00a1cc:	dc409f17 	ldw	r17,636(sp)
 c00a1d0:	88006e26 	beq	r17,zero,c00a38c <__svfscanf_r+0x98c>
 c00a1d4:	0029883a 	mov	r20,zero
 c00a1d8:	0023883a 	mov	r17,zero
 c00a1dc:	c00e2640 	call	c00e264 <__locale_mb_cur_max>
 c00a1e0:	14406126 	beq	r2,r17,c00a368 <__svfscanf_r+0x968>
 c00a1e4:	98800017 	ldw	r2,0(r19)
 c00a1e8:	98c00117 	ldw	r3,4(r19)
 c00a1ec:	d9000104 	addi	r4,sp,4
 c00a1f0:	12000003 	ldbu	r8,0(r2)
 c00a1f4:	18ffffc4 	addi	r3,r3,-1
 c00a1f8:	10800044 	addi	r2,r2,1
 c00a1fc:	98c00115 	stw	r3,4(r19)
 c00a200:	98800015 	stw	r2,0(r19)
 c00a204:	8c000044 	addi	r16,r17,1
 c00a208:	dd400015 	stw	r21,0(sp)
 c00a20c:	2463883a 	add	r17,r4,r17
 c00a210:	200d883a 	mov	r6,r4
 c00a214:	a00b883a 	mov	r5,r20
 c00a218:	800f883a 	mov	r7,r16
 c00a21c:	b809883a 	mov	r4,r23
 c00a220:	8a000005 	stb	r8,0(r17)
 c00a224:	c00e4740 	call	c00e474 <_mbrtowc_r>
 c00a228:	017fffc4 	movi	r5,-1
 c00a22c:	11404e26 	beq	r2,r5,c00a368 <__svfscanf_r+0x968>
 c00a230:	1000601e 	bne	r2,zero,c00a3b4 <__svfscanf_r+0x9b4>
 c00a234:	d8c09f17 	ldw	r3,636(sp)
 c00a238:	1800641e 	bne	r3,zero,c00a3cc <__svfscanf_r+0x9cc>
 c00a23c:	a0000015 	stw	zero,0(r20)
 c00a240:	9425883a 	add	r18,r18,r16
 c00a244:	e179883a 	add	fp,fp,r5
 c00a248:	a5000104 	addi	r20,r20,4
 c00a24c:	98800117 	ldw	r2,4(r19)
 c00a250:	0023883a 	mov	r17,zero
 c00a254:	00804b16 	blt	zero,r2,c00a384 <__svfscanf_r+0x984>
 c00a258:	980b883a 	mov	r5,r19
 c00a25c:	b809883a 	mov	r4,r23
 c00a260:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a264:	10004726 	beq	r2,zero,c00a384 <__svfscanf_r+0x984>
 c00a268:	88003f1e 	bne	r17,zero,c00a368 <__svfscanf_r+0x968>
 c00a26c:	d8c09f17 	ldw	r3,636(sp)
 c00a270:	1800031e 	bne	r3,zero,c00a280 <__svfscanf_r+0x880>
 c00a274:	d900a017 	ldw	r4,640(sp)
 c00a278:	21000044 	addi	r4,r4,1
 c00a27c:	d900a015 	stw	r4,640(sp)
 c00a280:	dd009d17 	ldw	r20,628(sp)
 c00a284:	a00d883a 	mov	r6,r20
 c00a288:	003e1a06 	br	c009af4 <__alt_data_end+0xfc009af4>
 c00a28c:	8c40040c 	andi	r17,r17,16
 c00a290:	073fffc4 	movi	fp,-1
 c00a294:	883fa51e 	bne	r17,zero,c00a12c <__alt_data_end+0xfc00a12c>
 c00a298:	d9409c17 	ldw	r5,624(sp)
 c00a29c:	e2bfffc4 	addi	r10,fp,-1
 c00a2a0:	2c000017 	ldw	r16,0(r5)
 c00a2a4:	2c400104 	addi	r17,r5,4
 c00a2a8:	8007883a 	mov	r3,r16
 c00a2ac:	82ab883a 	add	r21,r16,r10
 c00a2b0:	00000306 	br	c00a2c0 <__svfscanf_r+0x8c0>
 c00a2b4:	99000017 	ldw	r4,0(r19)
 c00a2b8:	e007883a 	mov	r3,fp
 c00a2bc:	20800003 	ldbu	r2,0(r4)
 c00a2c0:	10803fcc 	andi	r2,r2,255
 c00a2c4:	d9405884 	addi	r5,sp,354
 c00a2c8:	2885883a 	add	r2,r5,r2
 c00a2cc:	10800007 	ldb	r2,0(r2)
 c00a2d0:	10004b26 	beq	r2,zero,c00a400 <__svfscanf_r+0xa00>
 c00a2d4:	98800117 	ldw	r2,4(r19)
 c00a2d8:	21400044 	addi	r5,r4,1
 c00a2dc:	99400015 	stw	r5,0(r19)
 c00a2e0:	10bfffc4 	addi	r2,r2,-1
 c00a2e4:	98800115 	stw	r2,4(r19)
 c00a2e8:	20800003 	ldbu	r2,0(r4)
 c00a2ec:	1f000044 	addi	fp,r3,1
 c00a2f0:	18800005 	stb	r2,0(r3)
 c00a2f4:	1d400726 	beq	r3,r21,c00a314 <__svfscanf_r+0x914>
 c00a2f8:	98800117 	ldw	r2,4(r19)
 c00a2fc:	00bfed16 	blt	zero,r2,c00a2b4 <__alt_data_end+0xfc00a2b4>
 c00a300:	980b883a 	mov	r5,r19
 c00a304:	b809883a 	mov	r4,r23
 c00a308:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a30c:	103fe926 	beq	r2,zero,c00a2b4 <__alt_data_end+0xfc00a2b4>
 c00a310:	87001526 	beq	r16,fp,c00a368 <__svfscanf_r+0x968>
 c00a314:	e421c83a 	sub	r16,fp,r16
 c00a318:	803dfa26 	beq	r16,zero,c009b04 <__alt_data_end+0xfc009b04>
 c00a31c:	d880a017 	ldw	r2,640(sp)
 c00a320:	e0000005 	stb	zero,0(fp)
 c00a324:	dc409c15 	stw	r17,624(sp)
 c00a328:	10800044 	addi	r2,r2,1
 c00a32c:	d880a015 	stw	r2,640(sp)
 c00a330:	9425883a 	add	r18,r18,r16
 c00a334:	a00d883a 	mov	r6,r20
 c00a338:	003dee06 	br	c009af4 <__alt_data_end+0xfc009af4>
 c00a33c:	013fff84 	movi	r4,-2
 c00a340:	1103ed1e 	bne	r2,r4,c00b2f8 <__svfscanf_r+0x18f8>
 c00a344:	8821883a 	mov	r16,r17
 c00a348:	98800117 	ldw	r2,4(r19)
 c00a34c:	00834116 	blt	zero,r2,c00b054 <__svfscanf_r+0x1654>
 c00a350:	980b883a 	mov	r5,r19
 c00a354:	b809883a 	mov	r4,r23
 c00a358:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a35c:	10033d26 	beq	r2,zero,c00b054 <__svfscanf_r+0x1654>
 c00a360:	dc409f17 	ldw	r17,636(sp)
 c00a364:	80034426 	beq	r16,zero,c00b078 <__svfscanf_r+0x1678>
 c00a368:	d900a017 	ldw	r4,640(sp)
 c00a36c:	203e8026 	beq	r4,zero,c009d70 <__alt_data_end+0xfc009d70>
 c00a370:	9880030b 	ldhu	r2,12(r19)
 c00a374:	1080100c 	andi	r2,r2,64
 c00a378:	103e7d1e 	bne	r2,zero,c009d70 <__alt_data_end+0xfc009d70>
 c00a37c:	2005883a 	mov	r2,r4
 c00a380:	003e7c06 	br	c009d74 <__alt_data_end+0xfc009d74>
 c00a384:	e03f951e 	bne	fp,zero,c00a1dc <__alt_data_end+0xfc00a1dc>
 c00a388:	003fb806 	br	c00a26c <__alt_data_end+0xfc00a26c>
 c00a38c:	d8809c17 	ldw	r2,624(sp)
 c00a390:	15000017 	ldw	r20,0(r2)
 c00a394:	10800104 	addi	r2,r2,4
 c00a398:	d8809c15 	stw	r2,624(sp)
 c00a39c:	003f8e06 	br	c00a1d8 <__alt_data_end+0xfc00a1d8>
 c00a3a0:	980b883a 	mov	r5,r19
 c00a3a4:	b809883a 	mov	r4,r23
 c00a3a8:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a3ac:	103f3626 	beq	r2,zero,c00a088 <__alt_data_end+0xfc00a088>
 c00a3b0:	003fed06 	br	c00a368 <__alt_data_end+0xfc00a368>
 c00a3b4:	013fff84 	movi	r4,-2
 c00a3b8:	1100071e 	bne	r2,r4,c00a3d8 <__svfscanf_r+0x9d8>
 c00a3bc:	98800117 	ldw	r2,4(r19)
 c00a3c0:	8023883a 	mov	r17,r16
 c00a3c4:	00bf8516 	blt	zero,r2,c00a1dc <__alt_data_end+0xfc00a1dc>
 c00a3c8:	003fa306 	br	c00a258 <__alt_data_end+0xfc00a258>
 c00a3cc:	9425883a 	add	r18,r18,r16
 c00a3d0:	e73fffc4 	addi	fp,fp,-1
 c00a3d4:	003f9d06 	br	c00a24c <__alt_data_end+0xfc00a24c>
 c00a3d8:	d8c09f17 	ldw	r3,636(sp)
 c00a3dc:	9425883a 	add	r18,r18,r16
 c00a3e0:	e73fffc4 	addi	fp,fp,-1
 c00a3e4:	183f9826 	beq	r3,zero,c00a248 <__alt_data_end+0xfc00a248>
 c00a3e8:	003f9806 	br	c00a24c <__alt_data_end+0xfc00a24c>
 c00a3ec:	8023883a 	mov	r17,r16
 c00a3f0:	8821883a 	mov	r16,r17
 c00a3f4:	003fce06 	br	c00a330 <__alt_data_end+0xfc00a330>
 c00a3f8:	803f3b1e 	bne	r16,zero,c00a0e8 <__alt_data_end+0xfc00a0e8>
 c00a3fc:	003fda06 	br	c00a368 <__alt_data_end+0xfc00a368>
 c00a400:	1839883a 	mov	fp,r3
 c00a404:	003fc306 	br	c00a314 <__alt_data_end+0xfc00a314>
 c00a408:	803fc91e 	bne	r16,zero,c00a330 <__alt_data_end+0xfc00a330>
 c00a40c:	003dbd06 	br	c009b04 <__alt_data_end+0xfc009b04>
 c00a410:	d8809c17 	ldw	r2,624(sp)
 c00a414:	dcc00015 	stw	r19,0(sp)
 c00a418:	b809883a 	mov	r4,r23
 c00a41c:	11400017 	ldw	r5,0(r2)
 c00a420:	e00f883a 	mov	r7,fp
 c00a424:	01800044 	movi	r6,1
 c00a428:	c00d4b80 	call	c00d4b8 <_fread_r>
 c00a42c:	d9009c17 	ldw	r4,624(sp)
 c00a430:	20c00104 	addi	r3,r4,4
 c00a434:	103fcc26 	beq	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a438:	d940a017 	ldw	r5,640(sp)
 c00a43c:	dd009d17 	ldw	r20,628(sp)
 c00a440:	90a5883a 	add	r18,r18,r2
 c00a444:	29400044 	addi	r5,r5,1
 c00a448:	d940a015 	stw	r5,640(sp)
 c00a44c:	d8c09c15 	stw	r3,624(sp)
 c00a450:	a00d883a 	mov	r6,r20
 c00a454:	003da706 	br	c009af4 <__alt_data_end+0xfc009af4>
 c00a458:	980b883a 	mov	r5,r19
 c00a45c:	b809883a 	mov	r4,r23
 c00a460:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a464:	103e3626 	beq	r2,zero,c009d40 <__alt_data_end+0xfc009d40>
 c00a468:	003fbf06 	br	c00a368 <__alt_data_end+0xfc00a368>
 c00a46c:	98800117 	ldw	r2,4(r19)
 c00a470:	88e2b03a 	or	r17,r17,r3
 c00a474:	0080210e 	bge	zero,r2,c00a4fc <__svfscanf_r+0xafc>
 c00a478:	01430074 	movhi	r5,3073
 c00a47c:	2947e004 	addi	r5,r5,8064
 c00a480:	00800284 	movi	r2,10
 c00a484:	d940a115 	stw	r5,644(sp)
 c00a488:	d8809e15 	stw	r2,632(sp)
 c00a48c:	050000c4 	movi	r20,3
 c00a490:	003e6906 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a494:	a1400083 	ldbu	r5,2(r20)
 c00a498:	8c400094 	ori	r17,r17,2
 c00a49c:	a5000084 	addi	r20,r20,2
 c00a4a0:	2d403fcc 	andi	r21,r5,255
 c00a4a4:	003da106 	br	c009b2c <__alt_data_end+0xfc009b2c>
 c00a4a8:	8880004c 	andi	r2,r17,1
 c00a4ac:	10000c1e 	bne	r2,zero,c00a4e0 <__svfscanf_r+0xae0>
 c00a4b0:	8c40008c 	andi	r17,r17,2
 c00a4b4:	88000a26 	beq	r17,zero,c00a4e0 <__svfscanf_r+0xae0>
 c00a4b8:	d8c09c17 	ldw	r3,624(sp)
 c00a4bc:	d9009c17 	ldw	r4,624(sp)
 c00a4c0:	dd009d17 	ldw	r20,628(sp)
 c00a4c4:	18800017 	ldw	r2,0(r3)
 c00a4c8:	9007d7fa 	srai	r3,r18,31
 c00a4cc:	21000104 	addi	r4,r4,4
 c00a4d0:	14800015 	stw	r18,0(r2)
 c00a4d4:	10c00115 	stw	r3,4(r2)
 c00a4d8:	d9009c15 	stw	r4,624(sp)
 c00a4dc:	003d8406 	br	c009af0 <__alt_data_end+0xfc009af0>
 c00a4e0:	d9409c17 	ldw	r5,624(sp)
 c00a4e4:	dd009d17 	ldw	r20,628(sp)
 c00a4e8:	28800017 	ldw	r2,0(r5)
 c00a4ec:	29400104 	addi	r5,r5,4
 c00a4f0:	d9409c15 	stw	r5,624(sp)
 c00a4f4:	14800015 	stw	r18,0(r2)
 c00a4f8:	003d7d06 	br	c009af0 <__alt_data_end+0xfc009af0>
 c00a4fc:	980b883a 	mov	r5,r19
 c00a500:	b809883a 	mov	r4,r23
 c00a504:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a508:	103f971e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a50c:	b4000017 	ldw	r16,0(r22)
 c00a510:	003ed206 	br	c00a05c <__alt_data_end+0xfc00a05c>
 c00a514:	980b883a 	mov	r5,r19
 c00a518:	b809883a 	mov	r4,r23
 c00a51c:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a520:	103f911e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a524:	01030074 	movhi	r4,3073
 c00a528:	21093e04 	addi	r4,r4,9464
 c00a52c:	01400404 	movi	r5,16
 c00a530:	b4000017 	ldw	r16,0(r22)
 c00a534:	d900a115 	stw	r4,644(sp)
 c00a538:	d9409e15 	stw	r5,632(sp)
 c00a53c:	050000c4 	movi	r20,3
 c00a540:	003e3d06 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a544:	980b883a 	mov	r5,r19
 c00a548:	b809883a 	mov	r4,r23
 c00a54c:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a550:	103f851e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a554:	b4000017 	ldw	r16,0(r22)
 c00a558:	05000084 	movi	r20,2
 c00a55c:	003e3606 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a560:	980b883a 	mov	r5,r19
 c00a564:	b809883a 	mov	r4,r23
 c00a568:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a56c:	103eea26 	beq	r2,zero,c00a118 <__alt_data_end+0xfc00a118>
 c00a570:	003f7d06 	br	c00a368 <__alt_data_end+0xfc00a368>
 c00a574:	980b883a 	mov	r5,r19
 c00a578:	b809883a 	mov	r4,r23
 c00a57c:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a580:	103f791e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a584:	b4000017 	ldw	r16,0(r22)
 c00a588:	05000104 	movi	r20,4
 c00a58c:	003e2a06 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a590:	980b883a 	mov	r5,r19
 c00a594:	b809883a 	mov	r4,r23
 c00a598:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a59c:	103f721e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a5a0:	b4000017 	ldw	r16,0(r22)
 c00a5a4:	003e8c06 	br	c009fd8 <__alt_data_end+0xfc009fd8>
 c00a5a8:	980b883a 	mov	r5,r19
 c00a5ac:	b809883a 	mov	r4,r23
 c00a5b0:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a5b4:	103f6c1e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a5b8:	00830074 	movhi	r2,3073
 c00a5bc:	10893e04 	addi	r2,r2,9464
 c00a5c0:	00c00284 	movi	r3,10
 c00a5c4:	b4000017 	ldw	r16,0(r22)
 c00a5c8:	d880a115 	stw	r2,644(sp)
 c00a5cc:	d8c09e15 	stw	r3,632(sp)
 c00a5d0:	050000c4 	movi	r20,3
 c00a5d4:	003e1806 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a5d8:	980b883a 	mov	r5,r19
 c00a5dc:	b809883a 	mov	r4,r23
 c00a5e0:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a5e4:	103f601e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a5e8:	00830074 	movhi	r2,3073
 c00a5ec:	10893e04 	addi	r2,r2,9464
 c00a5f0:	00c00204 	movi	r3,8
 c00a5f4:	b4000017 	ldw	r16,0(r22)
 c00a5f8:	d880a115 	stw	r2,644(sp)
 c00a5fc:	d8c09e15 	stw	r3,632(sp)
 c00a600:	050000c4 	movi	r20,3
 c00a604:	003e0c06 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a608:	980b883a 	mov	r5,r19
 c00a60c:	b809883a 	mov	r4,r23
 c00a610:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a614:	103f541e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a618:	00830074 	movhi	r2,3073
 c00a61c:	1087e004 	addi	r2,r2,8064
 c00a620:	b4000017 	ldw	r16,0(r22)
 c00a624:	d880a115 	stw	r2,644(sp)
 c00a628:	d8009e15 	stw	zero,632(sp)
 c00a62c:	050000c4 	movi	r20,3
 c00a630:	003e0106 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a634:	980b883a 	mov	r5,r19
 c00a638:	b809883a 	mov	r4,r23
 c00a63c:	c0102e80 	call	c0102e8 <__srefill_r>
 c00a640:	103f491e 	bne	r2,zero,c00a368 <__alt_data_end+0xfc00a368>
 c00a644:	00830074 	movhi	r2,3073
 c00a648:	10893e04 	addi	r2,r2,9464
 c00a64c:	00c00404 	movi	r3,16
 c00a650:	b4000017 	ldw	r16,0(r22)
 c00a654:	d880a115 	stw	r2,644(sp)
 c00a658:	d8c09e15 	stw	r3,632(sp)
 c00a65c:	050000c4 	movi	r20,3
 c00a660:	003df506 	br	c009e38 <__alt_data_end+0xfc009e38>
 c00a664:	014000c4 	movi	r5,3
 c00a668:	a1416726 	beq	r20,r5,c00ac08 <__svfscanf_r+0x1208>
 c00a66c:	01000104 	movi	r4,4
 c00a670:	a101491e 	bne	r20,r4,c00ab98 <__svfscanf_r+0x1198>
 c00a674:	b809883a 	mov	r4,r23
 c00a678:	c00e2880 	call	c00e288 <_localeconv_r>
 c00a67c:	10800017 	ldw	r2,0(r2)
 c00a680:	e0ffffc4 	addi	r3,fp,-1
 c00a684:	d880a315 	stw	r2,652(sp)
 c00a688:	00805704 	movi	r2,348
 c00a68c:	10c21e2e 	bgeu	r2,r3,c00af08 <__svfscanf_r+0x1508>
 c00a690:	e73fa8c4 	addi	fp,fp,-349
 c00a694:	df00a215 	stw	fp,648(sp)
 c00a698:	07005744 	movi	fp,349
 c00a69c:	8d01e014 	ori	r20,r17,1920
 c00a6a0:	0023883a 	mov	r17,zero
 c00a6a4:	dc000104 	addi	r16,sp,4
 c00a6a8:	002b883a 	mov	r21,zero
 c00a6ac:	8805883a 	mov	r2,r17
 c00a6b0:	0007883a 	mov	r3,zero
 c00a6b4:	8023883a 	mov	r17,r16
 c00a6b8:	b80d883a 	mov	r6,r23
 c00a6bc:	e021883a 	mov	r16,fp
 c00a6c0:	a82f883a 	mov	r23,r21
 c00a6c4:	d800a515 	stw	zero,660(sp)
 c00a6c8:	d800a415 	stw	zero,656(sp)
 c00a6cc:	d8009f15 	stw	zero,636(sp)
 c00a6d0:	01c01384 	movi	r7,78
 c00a6d4:	182b883a 	mov	r21,r3
 c00a6d8:	1039883a 	mov	fp,r2
 c00a6dc:	99000017 	ldw	r4,0(r19)
 c00a6e0:	21400003 	ldbu	r5,0(r4)
 c00a6e4:	28bff544 	addi	r2,r5,-43
 c00a6e8:	10803fcc 	andi	r2,r2,255
 c00a6ec:	38810e36 	bltu	r7,r2,c00ab28 <__svfscanf_r+0x1128>
 c00a6f0:	100490ba 	slli	r2,r2,2
 c00a6f4:	00c30074 	movhi	r3,3073
 c00a6f8:	18e9c204 	addi	r3,r3,-22776
 c00a6fc:	10c5883a 	add	r2,r2,r3
 c00a700:	10800017 	ldw	r2,0(r2)
 c00a704:	1000683a 	jmp	r2
 c00a708:	0c00a9fc 	xorhi	r16,at,679
 c00a70c:	0c00ab28 	cmpgeui	r16,at,684
 c00a710:	0c00a9fc 	xorhi	r16,at,679
 c00a714:	0c00ab28 	cmpgeui	r16,at,684
 c00a718:	0c00ab28 	cmpgeui	r16,at,684
 c00a71c:	0c00a9d0 	cmplti	r16,at,679
 c00a720:	0c00a844 	addi	r16,at,673
 c00a724:	0c00a844 	addi	r16,at,673
 c00a728:	0c00a844 	addi	r16,at,673
 c00a72c:	0c00a844 	addi	r16,at,673
 c00a730:	0c00a844 	addi	r16,at,673
 c00a734:	0c00a844 	addi	r16,at,673
 c00a738:	0c00a844 	addi	r16,at,673
 c00a73c:	0c00a844 	addi	r16,at,673
 c00a740:	0c00a844 	addi	r16,at,673
 c00a744:	0c00ab28 	cmpgeui	r16,at,684
 c00a748:	0c00ab28 	cmpgeui	r16,at,684
 c00a74c:	0c00ab28 	cmpgeui	r16,at,684
 c00a750:	0c00ab28 	cmpgeui	r16,at,684
 c00a754:	0c00ab28 	cmpgeui	r16,at,684
 c00a758:	0c00ab28 	cmpgeui	r16,at,684
 c00a75c:	0c00ab28 	cmpgeui	r16,at,684
 c00a760:	0c00ab18 	cmpnei	r16,at,684
 c00a764:	0c00ab28 	cmpgeui	r16,at,684
 c00a768:	0c00ab28 	cmpgeui	r16,at,684
 c00a76c:	0c00ab28 	cmpgeui	r16,at,684
 c00a770:	0c00aad4 	ori	r16,at,683
 c00a774:	0c00aab8 	rdprs	r16,at,682
 c00a778:	0c00ab28 	cmpgeui	r16,at,684
 c00a77c:	0c00ab28 	cmpgeui	r16,at,684
 c00a780:	0c00aa80 	call	c00aa8 <__alt_mem_onchip_memory2_0+0xc00aa8>
 c00a784:	0c00ab28 	cmpgeui	r16,at,684
 c00a788:	0c00ab28 	cmpgeui	r16,at,684
 c00a78c:	0c00ab28 	cmpgeui	r16,at,684
 c00a790:	0c00ab28 	cmpgeui	r16,at,684
 c00a794:	0c00aa48 	cmpgei	r16,at,681
 c00a798:	0c00ab28 	cmpgeui	r16,at,684
 c00a79c:	0c00ab28 	cmpgeui	r16,at,684
 c00a7a0:	0c00ab28 	cmpgeui	r16,at,684
 c00a7a4:	0c00ab28 	cmpgeui	r16,at,684
 c00a7a8:	0c00ab28 	cmpgeui	r16,at,684
 c00a7ac:	0c00aa2c 	andhi	r16,at,680
 c00a7b0:	0c00ab28 	cmpgeui	r16,at,684
 c00a7b4:	0c00ab28 	cmpgeui	r16,at,684
 c00a7b8:	0c00ab28 	cmpgeui	r16,at,684
 c00a7bc:	0c00ab28 	cmpgeui	r16,at,684
 c00a7c0:	0c00aa10 	cmplti	r16,at,680
 c00a7c4:	0c00ab28 	cmpgeui	r16,at,684
 c00a7c8:	0c00ab28 	cmpgeui	r16,at,684
 c00a7cc:	0c00ab28 	cmpgeui	r16,at,684
 c00a7d0:	0c00ab28 	cmpgeui	r16,at,684
 c00a7d4:	0c00ab28 	cmpgeui	r16,at,684
 c00a7d8:	0c00ab28 	cmpgeui	r16,at,684
 c00a7dc:	0c00ab28 	cmpgeui	r16,at,684
 c00a7e0:	0c00ab18 	cmpnei	r16,at,684
 c00a7e4:	0c00ab28 	cmpgeui	r16,at,684
 c00a7e8:	0c00ab28 	cmpgeui	r16,at,684
 c00a7ec:	0c00ab28 	cmpgeui	r16,at,684
 c00a7f0:	0c00aad4 	ori	r16,at,683
 c00a7f4:	0c00aab8 	rdprs	r16,at,682
 c00a7f8:	0c00ab28 	cmpgeui	r16,at,684
 c00a7fc:	0c00ab28 	cmpgeui	r16,at,684
 c00a800:	0c00aa80 	call	c00aa8 <__alt_mem_onchip_memory2_0+0xc00aa8>
 c00a804:	0c00ab28 	cmpgeui	r16,at,684
 c00a808:	0c00ab28 	cmpgeui	r16,at,684
 c00a80c:	0c00ab28 	cmpgeui	r16,at,684
 c00a810:	0c00ab28 	cmpgeui	r16,at,684
 c00a814:	0c00aa48 	cmpgei	r16,at,681
 c00a818:	0c00ab28 	cmpgeui	r16,at,684
 c00a81c:	0c00ab28 	cmpgeui	r16,at,684
 c00a820:	0c00ab28 	cmpgeui	r16,at,684
 c00a824:	0c00ab28 	cmpgeui	r16,at,684
 c00a828:	0c00ab28 	cmpgeui	r16,at,684
 c00a82c:	0c00aa2c 	andhi	r16,at,680
 c00a830:	0c00ab28 	cmpgeui	r16,at,684
 c00a834:	0c00ab28 	cmpgeui	r16,at,684
 c00a838:	0c00ab28 	cmpgeui	r16,at,684
 c00a83c:	0c00ab28 	cmpgeui	r16,at,684
 c00a840:	0c00aa10 	cmplti	r16,at,680
 c00a844:	a8803fcc 	andi	r2,r21,255
 c00a848:	1080201c 	xori	r2,r2,128
 c00a84c:	10bfe004 	addi	r2,r2,-128
 c00a850:	b885883a 	add	r2,r23,r2
 c00a854:	10000d1e 	bne	r2,zero,c00a88c <__svfscanf_r+0xe8c>
 c00a858:	00bf9fc4 	movi	r2,-385
 c00a85c:	a0a8703a 	and	r20,r20,r2
 c00a860:	89400005 	stb	r5,0(r17)
 c00a864:	8c400044 	addi	r17,r17,1
 c00a868:	98800117 	ldw	r2,4(r19)
 c00a86c:	843fffc4 	addi	r16,r16,-1
 c00a870:	94800044 	addi	r18,r18,1
 c00a874:	10bfffc4 	addi	r2,r2,-1
 c00a878:	98800115 	stw	r2,4(r19)
 c00a87c:	0080b40e 	bge	zero,r2,c00ab50 <__svfscanf_r+0x1150>
 c00a880:	21000044 	addi	r4,r4,1
 c00a884:	99000015 	stw	r4,0(r19)
 c00a888:	803f941e 	bne	r16,zero,c00a6dc <__alt_data_end+0xfc00a6dc>
 c00a88c:	8821883a 	mov	r16,r17
 c00a890:	a807883a 	mov	r3,r21
 c00a894:	e023883a 	mov	r17,fp
 c00a898:	b82b883a 	mov	r21,r23
 c00a89c:	302f883a 	mov	r23,r6
 c00a8a0:	e001961e 	bne	fp,zero,c00aefc <__svfscanf_r+0x14fc>
 c00a8a4:	ab3fffc4 	addi	r12,r21,-1
 c00a8a8:	00800044 	movi	r2,1
 c00a8ac:	1302a22e 	bgeu	r2,r12,c00b338 <__svfscanf_r+0x1938>
 c00a8b0:	18803fcc 	andi	r2,r3,255
 c00a8b4:	1080201c 	xori	r2,r2,128
 c00a8b8:	10bfe004 	addi	r2,r2,-128
 c00a8bc:	113fffc4 	addi	r4,r2,-1
 c00a8c0:	01400184 	movi	r5,6
 c00a8c4:	29001136 	bltu	r5,r4,c00a90c <__svfscanf_r+0xf0c>
 c00a8c8:	01000084 	movi	r4,2
 c00a8cc:	2082770e 	bge	r4,r2,c00b2ac <__svfscanf_r+0x18ac>
 c00a8d0:	054000c4 	movi	r21,3
 c00a8d4:	1839883a 	mov	fp,r3
 c00a8d8:	15400c26 	beq	r2,r21,c00a90c <__svfscanf_r+0xf0c>
 c00a8dc:	9425c83a 	sub	r18,r18,r16
 c00a8e0:	843fffc4 	addi	r16,r16,-1
 c00a8e4:	81400007 	ldb	r5,0(r16)
 c00a8e8:	980d883a 	mov	r6,r19
 c00a8ec:	b809883a 	mov	r4,r23
 c00a8f0:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00a8f4:	e0bfffc4 	addi	r2,fp,-1
 c00a8f8:	10c03fcc 	andi	r3,r2,255
 c00a8fc:	8493883a 	add	r9,r16,r18
 c00a900:	1039883a 	mov	fp,r2
 c00a904:	a8fff636 	bltu	r21,r3,c00a8e0 <__alt_data_end+0xfc00a8e0>
 c00a908:	4825883a 	mov	r18,r9
 c00a90c:	a080400c 	andi	r2,r20,256
 c00a910:	10001426 	beq	r2,zero,c00a964 <__svfscanf_r+0xf64>
 c00a914:	a081000c 	andi	r2,r20,1024
 c00a918:	10027b1e 	bne	r2,zero,c00b308 <__svfscanf_r+0x1908>
 c00a91c:	817fffc7 	ldb	r5,-1(r16)
 c00a920:	00801944 	movi	r2,101
 c00a924:	873fffc4 	addi	fp,r16,-1
 c00a928:	957fffc4 	addi	r21,r18,-1
 c00a92c:	28800826 	beq	r5,r2,c00a950 <__svfscanf_r+0xf50>
 c00a930:	00801144 	movi	r2,69
 c00a934:	28800626 	beq	r5,r2,c00a950 <__svfscanf_r+0xf50>
 c00a938:	980d883a 	mov	r6,r19
 c00a93c:	b809883a 	mov	r4,r23
 c00a940:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00a944:	817fff87 	ldb	r5,-2(r16)
 c00a948:	873fff84 	addi	fp,r16,-2
 c00a94c:	957fff84 	addi	r21,r18,-2
 c00a950:	980d883a 	mov	r6,r19
 c00a954:	b809883a 	mov	r4,r23
 c00a958:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00a95c:	a825883a 	mov	r18,r21
 c00a960:	e021883a 	mov	r16,fp
 c00a964:	a080040c 	andi	r2,r20,16
 c00a968:	103e451e 	bne	r2,zero,c00a280 <__alt_data_end+0xfc00a280>
 c00a96c:	80000005 	stb	zero,0(r16)
 c00a970:	a081800c 	andi	r2,r20,1536
 c00a974:	01010004 	movi	r4,1024
 c00a978:	1101ea26 	beq	r2,r4,c00b124 <__svfscanf_r+0x1724>
 c00a97c:	d8c0a417 	ldw	r3,656(sp)
 c00a980:	1801f41e 	bne	r3,zero,c00b154 <__svfscanf_r+0x1754>
 c00a984:	000d883a 	mov	r6,zero
 c00a988:	d9400104 	addi	r5,sp,4
 c00a98c:	b809883a 	mov	r4,r23
 c00a990:	c0108840 	call	c010884 <_strtod_r>
 c00a994:	1021883a 	mov	r16,r2
 c00a998:	a080004c 	andi	r2,r20,1
 c00a99c:	1001b926 	beq	r2,zero,c00b084 <__svfscanf_r+0x1684>
 c00a9a0:	d9009c17 	ldw	r4,624(sp)
 c00a9a4:	20800017 	ldw	r2,0(r4)
 c00a9a8:	21000104 	addi	r4,r4,4
 c00a9ac:	d9009c15 	stw	r4,624(sp)
 c00a9b0:	14000015 	stw	r16,0(r2)
 c00a9b4:	10c00115 	stw	r3,4(r2)
 c00a9b8:	d8c0a017 	ldw	r3,640(sp)
 c00a9bc:	dd009d17 	ldw	r20,628(sp)
 c00a9c0:	18c00044 	addi	r3,r3,1
 c00a9c4:	d8c0a015 	stw	r3,640(sp)
 c00a9c8:	a00d883a 	mov	r6,r20
 c00a9cc:	003c4906 	br	c009af4 <__alt_data_end+0xfc009af4>
 c00a9d0:	a080400c 	andi	r2,r20,256
 c00a9d4:	103f9b26 	beq	r2,zero,c00a844 <__alt_data_end+0xfc00a844>
 c00a9d8:	d8c0a217 	ldw	r3,648(sp)
 c00a9dc:	00bfdfc4 	movi	r2,-129
 c00a9e0:	a0a8703a 	and	r20,r20,r2
 c00a9e4:	e7000044 	addi	fp,fp,1
 c00a9e8:	183f9f26 	beq	r3,zero,c00a868 <__alt_data_end+0xfc00a868>
 c00a9ec:	18ffffc4 	addi	r3,r3,-1
 c00a9f0:	d8c0a215 	stw	r3,648(sp)
 c00a9f4:	84000044 	addi	r16,r16,1
 c00a9f8:	003f9b06 	br	c00a868 <__alt_data_end+0xfc00a868>
 c00a9fc:	a080200c 	andi	r2,r20,128
 c00aa00:	103fa226 	beq	r2,zero,c00a88c <__alt_data_end+0xfc00a88c>
 c00aa04:	00bfdfc4 	movi	r2,-129
 c00aa08:	a0a8703a 	and	r20,r20,r2
 c00aa0c:	003f9406 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00aa10:	a8803fcc 	andi	r2,r21,255
 c00aa14:	1080201c 	xori	r2,r2,128
 c00aa18:	10bfe004 	addi	r2,r2,-128
 c00aa1c:	00c001c4 	movi	r3,7
 c00aa20:	10ff9a1e 	bne	r2,r3,c00a88c <__alt_data_end+0xfc00a88c>
 c00aa24:	05400204 	movi	r21,8
 c00aa28:	003f8d06 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00aa2c:	a8803fcc 	andi	r2,r21,255
 c00aa30:	1080201c 	xori	r2,r2,128
 c00aa34:	10bfe004 	addi	r2,r2,-128
 c00aa38:	02000184 	movi	r8,6
 c00aa3c:	123f931e 	bne	r2,r8,c00a88c <__alt_data_end+0xfc00a88c>
 c00aa40:	054001c4 	movi	r21,7
 c00aa44:	003f8606 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00aa48:	b8004f1e 	bne	r23,zero,c00ab88 <__svfscanf_r+0x1188>
 c00aa4c:	e000031e 	bne	fp,zero,c00aa5c <__svfscanf_r+0x105c>
 c00aa50:	a081c00c 	andi	r2,r20,1792
 c00aa54:	0201c004 	movi	r8,1792
 c00aa58:	1201a226 	beq	r2,r8,c00b0e4 <__svfscanf_r+0x16e4>
 c00aa5c:	a8803fcc 	andi	r2,r21,255
 c00aa60:	1080201c 	xori	r2,r2,128
 c00aa64:	10bfe004 	addi	r2,r2,-128
 c00aa68:	02000044 	movi	r8,1
 c00aa6c:	12000226 	beq	r2,r8,c00aa78 <__svfscanf_r+0x1078>
 c00aa70:	02000104 	movi	r8,4
 c00aa74:	123f851e 	bne	r2,r8,c00a88c <__alt_data_end+0xfc00a88c>
 c00aa78:	ad400044 	addi	r21,r21,1
 c00aa7c:	003f7806 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00aa80:	a8803fcc 	andi	r2,r21,255
 c00aa84:	1080201c 	xori	r2,r2,128
 c00aa88:	10bfe004 	addi	r2,r2,-128
 c00aa8c:	1000391e 	bne	r2,zero,c00ab74 <__svfscanf_r+0x1174>
 c00aa90:	e001151e 	bne	fp,zero,c00aee8 <__svfscanf_r+0x14e8>
 c00aa94:	a081c00c 	andi	r2,r20,1792
 c00aa98:	0201c004 	movi	r8,1792
 c00aa9c:	12019b26 	beq	r2,r8,c00b10c <__svfscanf_r+0x170c>
 c00aaa0:	8821883a 	mov	r16,r17
 c00aaa4:	a807883a 	mov	r3,r21
 c00aaa8:	e023883a 	mov	r17,fp
 c00aaac:	b82b883a 	mov	r21,r23
 c00aab0:	302f883a 	mov	r23,r6
 c00aab4:	003f7b06 	br	c00a8a4 <__alt_data_end+0xfc00a8a4>
 c00aab8:	a8803fcc 	andi	r2,r21,255
 c00aabc:	1080201c 	xori	r2,r2,128
 c00aac0:	10bfe004 	addi	r2,r2,-128
 c00aac4:	02000084 	movi	r8,2
 c00aac8:	123f701e 	bne	r2,r8,c00a88c <__alt_data_end+0xfc00a88c>
 c00aacc:	054000c4 	movi	r21,3
 c00aad0:	003f6306 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00aad4:	a081400c 	andi	r2,r20,1280
 c00aad8:	00c10004 	movi	r3,1024
 c00aadc:	10c00326 	beq	r2,r3,c00aaec <__svfscanf_r+0x10ec>
 c00aae0:	a0c4703a 	and	r2,r20,r3
 c00aae4:	103f6926 	beq	r2,zero,c00a88c <__alt_data_end+0xfc00a88c>
 c00aae8:	e03fed26 	beq	fp,zero,c00aaa0 <__alt_data_end+0xfc00aaa0>
 c00aaec:	a080800c 	andi	r2,r20,512
 c00aaf0:	1000041e 	bne	r2,zero,c00ab04 <__svfscanf_r+0x1104>
 c00aaf4:	d8c09f17 	ldw	r3,636(sp)
 c00aaf8:	dc40a515 	stw	r17,660(sp)
 c00aafc:	e0f9c83a 	sub	fp,fp,r3
 c00ab00:	df00a415 	stw	fp,656(sp)
 c00ab04:	00be1fc4 	movi	r2,-1921
 c00ab08:	a0a8703a 	and	r20,r20,r2
 c00ab0c:	a5006014 	ori	r20,r20,384
 c00ab10:	0039883a 	mov	fp,zero
 c00ab14:	003f5206 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00ab18:	00800044 	movi	r2,1
 c00ab1c:	b8bf5b1e 	bne	r23,r2,c00a88c <__alt_data_end+0xfc00a88c>
 c00ab20:	05c00084 	movi	r23,2
 c00ab24:	003f4e06 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00ab28:	d8c0a317 	ldw	r3,652(sp)
 c00ab2c:	2a003fcc 	andi	r8,r5,255
 c00ab30:	18800003 	ldbu	r2,0(r3)
 c00ab34:	40bf551e 	bne	r8,r2,c00a88c <__alt_data_end+0xfc00a88c>
 c00ab38:	a080800c 	andi	r2,r20,512
 c00ab3c:	103f5326 	beq	r2,zero,c00a88c <__alt_data_end+0xfc00a88c>
 c00ab40:	00bf5fc4 	movi	r2,-641
 c00ab44:	a0a8703a 	and	r20,r20,r2
 c00ab48:	df009f15 	stw	fp,636(sp)
 c00ab4c:	003f4406 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00ab50:	3009883a 	mov	r4,r6
 c00ab54:	980b883a 	mov	r5,r19
 c00ab58:	d980a915 	stw	r6,676(sp)
 c00ab5c:	d9c0aa15 	stw	r7,680(sp)
 c00ab60:	c0102e80 	call	c0102e8 <__srefill_r>
 c00ab64:	d980a917 	ldw	r6,676(sp)
 c00ab68:	d9c0aa17 	ldw	r7,680(sp)
 c00ab6c:	103f4626 	beq	r2,zero,c00a888 <__alt_data_end+0xfc00a888>
 c00ab70:	003f4606 	br	c00a88c <__alt_data_end+0xfc00a88c>
 c00ab74:	020000c4 	movi	r8,3
 c00ab78:	123fbf26 	beq	r2,r8,c00aa78 <__alt_data_end+0xfc00aa78>
 c00ab7c:	02000144 	movi	r8,5
 c00ab80:	123fbd26 	beq	r2,r8,c00aa78 <__alt_data_end+0xfc00aa78>
 c00ab84:	003f4106 	br	c00a88c <__alt_data_end+0xfc00a88c>
 c00ab88:	00800084 	movi	r2,2
 c00ab8c:	b8bfb31e 	bne	r23,r2,c00aa5c <__alt_data_end+0xfc00aa5c>
 c00ab90:	05c000c4 	movi	r23,3
 c00ab94:	003f3206 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00ab98:	e000011e 	bne	fp,zero,c00aba0 <__svfscanf_r+0x11a0>
 c00ab9c:	073fffc4 	movi	fp,-1
 c00aba0:	8900004c 	andi	r4,r17,1
 c00aba4:	20011d1e 	bne	r4,zero,c00b01c <__svfscanf_r+0x161c>
 c00aba8:	8c40040c 	andi	r17,r17,16
 c00abac:	8800da26 	beq	r17,zero,c00af18 <__svfscanf_r+0x1518>
 c00abb0:	0023883a 	mov	r17,zero
 c00abb4:	00000306 	br	c00abc4 <__svfscanf_r+0x11c4>
 c00abb8:	18800003 	ldbu	r2,0(r3)
 c00abbc:	8085883a 	add	r2,r16,r2
 c00abc0:	10800043 	ldbu	r2,1(r2)
 c00abc4:	1080020c 	andi	r2,r2,8
 c00abc8:	1000fc1e 	bne	r2,zero,c00afbc <__svfscanf_r+0x15bc>
 c00abcc:	98800117 	ldw	r2,4(r19)
 c00abd0:	18c00044 	addi	r3,r3,1
 c00abd4:	8c400044 	addi	r17,r17,1
 c00abd8:	10bfffc4 	addi	r2,r2,-1
 c00abdc:	98800115 	stw	r2,4(r19)
 c00abe0:	98c00015 	stw	r3,0(r19)
 c00abe4:	8f00f526 	beq	r17,fp,c00afbc <__svfscanf_r+0x15bc>
 c00abe8:	00bff316 	blt	zero,r2,c00abb8 <__alt_data_end+0xfc00abb8>
 c00abec:	980b883a 	mov	r5,r19
 c00abf0:	b809883a 	mov	r4,r23
 c00abf4:	c0102e80 	call	c0102e8 <__srefill_r>
 c00abf8:	1000f01e 	bne	r2,zero,c00afbc <__svfscanf_r+0x15bc>
 c00abfc:	b4000017 	ldw	r16,0(r22)
 c00ac00:	98c00017 	ldw	r3,0(r19)
 c00ac04:	003fec06 	br	c00abb8 <__alt_data_end+0xfc00abb8>
 c00ac08:	e0bfffc4 	addi	r2,fp,-1
 c00ac0c:	01405704 	movi	r5,348
 c00ac10:	2880bf2e 	bgeu	r5,r2,c00af10 <__svfscanf_r+0x1510>
 c00ac14:	e1ffa8c4 	addi	r7,fp,-349
 c00ac18:	07005744 	movi	fp,349
 c00ac1c:	8c436014 	ori	r17,r17,3456
 c00ac20:	9013883a 	mov	r9,r18
 c00ac24:	8825883a 	mov	r18,r17
 c00ac28:	dc409e17 	ldw	r17,632(sp)
 c00ac2c:	0029883a 	mov	r20,zero
 c00ac30:	dc000104 	addi	r16,sp,4
 c00ac34:	05401344 	movi	r21,77
 c00ac38:	02c08004 	movi	r11,512
 c00ac3c:	01bf7fc4 	movi	r6,-513
 c00ac40:	023fdfc4 	movi	r8,-129
 c00ac44:	20bff544 	addi	r2,r4,-43
 c00ac48:	10803fcc 	andi	r2,r2,255
 c00ac4c:	a8807236 	bltu	r21,r2,c00ae18 <__svfscanf_r+0x1418>
 c00ac50:	100490ba 	slli	r2,r2,2
 c00ac54:	01430074 	movhi	r5,3073
 c00ac58:	296b1a04 	addi	r5,r5,-21400
 c00ac5c:	1145883a 	add	r2,r2,r5
 c00ac60:	10800017 	ldw	r2,0(r2)
 c00ac64:	1000683a 	jmp	r2
 c00ac68:	0c00ae9c 	xori	r16,at,698
 c00ac6c:	0c00ae18 	cmpnei	r16,at,696
 c00ac70:	0c00ae9c 	xori	r16,at,698
 c00ac74:	0c00ae18 	cmpnei	r16,at,696
 c00ac78:	0c00ae18 	cmpnei	r16,at,696
 c00ac7c:	0c00ae74 	orhi	r16,at,697
 c00ac80:	0c00ae54 	ori	r16,at,697
 c00ac84:	0c00ae54 	ori	r16,at,697
 c00ac88:	0c00ae54 	ori	r16,at,697
 c00ac8c:	0c00ae54 	ori	r16,at,697
 c00ac90:	0c00ae54 	ori	r16,at,697
 c00ac94:	0c00ae54 	ori	r16,at,697
 c00ac98:	0c00ae54 	ori	r16,at,697
 c00ac9c:	0c00adfc 	xorhi	r16,at,695
 c00aca0:	0c00adfc 	xorhi	r16,at,695
 c00aca4:	0c00ae18 	cmpnei	r16,at,696
 c00aca8:	0c00ae18 	cmpnei	r16,at,696
 c00acac:	0c00ae18 	cmpnei	r16,at,696
 c00acb0:	0c00ae18 	cmpnei	r16,at,696
 c00acb4:	0c00ae18 	cmpnei	r16,at,696
 c00acb8:	0c00ae18 	cmpnei	r16,at,696
 c00acbc:	0c00ae18 	cmpnei	r16,at,696
 c00acc0:	0c00ade8 	cmpgeui	r16,at,695
 c00acc4:	0c00ade8 	cmpgeui	r16,at,695
 c00acc8:	0c00ade8 	cmpgeui	r16,at,695
 c00accc:	0c00ade8 	cmpgeui	r16,at,695
 c00acd0:	0c00ade8 	cmpgeui	r16,at,695
 c00acd4:	0c00ade8 	cmpgeui	r16,at,695
 c00acd8:	0c00ae18 	cmpnei	r16,at,696
 c00acdc:	0c00ae18 	cmpnei	r16,at,696
 c00ace0:	0c00ae18 	cmpnei	r16,at,696
 c00ace4:	0c00ae18 	cmpnei	r16,at,696
 c00ace8:	0c00ae18 	cmpnei	r16,at,696
 c00acec:	0c00ae18 	cmpnei	r16,at,696
 c00acf0:	0c00ae18 	cmpnei	r16,at,696
 c00acf4:	0c00ae18 	cmpnei	r16,at,696
 c00acf8:	0c00ae18 	cmpnei	r16,at,696
 c00acfc:	0c00ae18 	cmpnei	r16,at,696
 c00ad00:	0c00ae18 	cmpnei	r16,at,696
 c00ad04:	0c00ae18 	cmpnei	r16,at,696
 c00ad08:	0c00ae18 	cmpnei	r16,at,696
 c00ad0c:	0c00ae18 	cmpnei	r16,at,696
 c00ad10:	0c00ae18 	cmpnei	r16,at,696
 c00ad14:	0c00ae18 	cmpnei	r16,at,696
 c00ad18:	0c00ae18 	cmpnei	r16,at,696
 c00ad1c:	0c00ada0 	cmpeqi	r16,at,694
 c00ad20:	0c00ae18 	cmpnei	r16,at,696
 c00ad24:	0c00ae18 	cmpnei	r16,at,696
 c00ad28:	0c00ae18 	cmpnei	r16,at,696
 c00ad2c:	0c00ae18 	cmpnei	r16,at,696
 c00ad30:	0c00ae18 	cmpnei	r16,at,696
 c00ad34:	0c00ae18 	cmpnei	r16,at,696
 c00ad38:	0c00ae18 	cmpnei	r16,at,696
 c00ad3c:	0c00ae18 	cmpnei	r16,at,696
 c00ad40:	0c00ade8 	cmpgeui	r16,at,695
 c00ad44:	0c00ade8 	cmpgeui	r16,at,695
 c00ad48:	0c00ade8 	cmpgeui	r16,at,695
 c00ad4c:	0c00ade8 	cmpgeui	r16,at,695
 c00ad50:	0c00ade8 	cmpgeui	r16,at,695
 c00ad54:	0c00ade8 	cmpgeui	r16,at,695
 c00ad58:	0c00ae18 	cmpnei	r16,at,696
 c00ad5c:	0c00ae18 	cmpnei	r16,at,696
 c00ad60:	0c00ae18 	cmpnei	r16,at,696
 c00ad64:	0c00ae18 	cmpnei	r16,at,696
 c00ad68:	0c00ae18 	cmpnei	r16,at,696
 c00ad6c:	0c00ae18 	cmpnei	r16,at,696
 c00ad70:	0c00ae18 	cmpnei	r16,at,696
 c00ad74:	0c00ae18 	cmpnei	r16,at,696
 c00ad78:	0c00ae18 	cmpnei	r16,at,696
 c00ad7c:	0c00ae18 	cmpnei	r16,at,696
 c00ad80:	0c00ae18 	cmpnei	r16,at,696
 c00ad84:	0c00ae18 	cmpnei	r16,at,696
 c00ad88:	0c00ae18 	cmpnei	r16,at,696
 c00ad8c:	0c00ae18 	cmpnei	r16,at,696
 c00ad90:	0c00ae18 	cmpnei	r16,at,696
 c00ad94:	0c00ae18 	cmpnei	r16,at,696
 c00ad98:	0c00ae18 	cmpnei	r16,at,696
 c00ad9c:	0c00ada0 	cmpeqi	r16,at,694
 c00ada0:	9081800c 	andi	r2,r18,1536
 c00ada4:	12c01c1e 	bne	r2,r11,c00ae18 <__svfscanf_r+0x1418>
 c00ada8:	91a4703a 	and	r18,r18,r6
 c00adac:	94814014 	ori	r18,r18,1280
 c00adb0:	04400404 	movi	r17,16
 c00adb4:	81000005 	stb	r4,0(r16)
 c00adb8:	84000044 	addi	r16,r16,1
 c00adbc:	98800117 	ldw	r2,4(r19)
 c00adc0:	10bfffc4 	addi	r2,r2,-1
 c00adc4:	98800115 	stw	r2,4(r19)
 c00adc8:	0080380e 	bge	zero,r2,c00aeac <__svfscanf_r+0x14ac>
 c00adcc:	18c00044 	addi	r3,r3,1
 c00add0:	98c00015 	stw	r3,0(r19)
 c00add4:	e73fffc4 	addi	fp,fp,-1
 c00add8:	e0000f26 	beq	fp,zero,c00ae18 <__svfscanf_r+0x1418>
 c00addc:	98c00017 	ldw	r3,0(r19)
 c00ade0:	19000003 	ldbu	r4,0(r3)
 c00ade4:	003f9706 	br	c00ac44 <__alt_data_end+0xfc00ac44>
 c00ade8:	00800284 	movi	r2,10
 c00adec:	14400a0e 	bge	r2,r17,c00ae18 <__svfscanf_r+0x1418>
 c00adf0:	00bd1fc4 	movi	r2,-2945
 c00adf4:	90a4703a 	and	r18,r18,r2
 c00adf8:	003fee06 	br	c00adb4 <__alt_data_end+0xfc00adb4>
 c00adfc:	014300b4 	movhi	r5,3074
 c00ae00:	8c63883a 	add	r17,r17,r17
 c00ae04:	29769a84 	addi	r5,r5,-9622
 c00ae08:	2c45883a 	add	r2,r5,r17
 c00ae0c:	1440000f 	ldh	r17,0(r2)
 c00ae10:	00800204 	movi	r2,8
 c00ae14:	147ff616 	blt	r2,r17,c00adf0 <__alt_data_end+0xfc00adf0>
 c00ae18:	dc409e15 	stw	r17,632(sp)
 c00ae1c:	9023883a 	mov	r17,r18
 c00ae20:	8880400c 	andi	r2,r17,256
 c00ae24:	4825883a 	mov	r18,r9
 c00ae28:	10000426 	beq	r2,zero,c00ae3c <__svfscanf_r+0x143c>
 c00ae2c:	d8800104 	addi	r2,sp,4
 c00ae30:	1400b036 	bltu	r2,r16,c00b0f4 <__svfscanf_r+0x16f4>
 c00ae34:	d8c00104 	addi	r3,sp,4
 c00ae38:	1c3b3226 	beq	r3,r16,c009b04 <__alt_data_end+0xfc009b04>
 c00ae3c:	8880040c 	andi	r2,r17,16
 c00ae40:	10006226 	beq	r2,zero,c00afcc <__svfscanf_r+0x15cc>
 c00ae44:	d8800104 	addi	r2,sp,4
 c00ae48:	80a1c83a 	sub	r16,r16,r2
 c00ae4c:	8521883a 	add	r16,r16,r20
 c00ae50:	003ca506 	br	c00a0e8 <__alt_data_end+0xfc00a0e8>
 c00ae54:	014300b4 	movhi	r5,3074
 c00ae58:	8c63883a 	add	r17,r17,r17
 c00ae5c:	29769a84 	addi	r5,r5,-9622
 c00ae60:	2c45883a 	add	r2,r5,r17
 c00ae64:	1440000f 	ldh	r17,0(r2)
 c00ae68:	00bd1fc4 	movi	r2,-2945
 c00ae6c:	90a4703a 	and	r18,r18,r2
 c00ae70:	003fd006 	br	c00adb4 <__alt_data_end+0xfc00adb4>
 c00ae74:	9082000c 	andi	r2,r18,2048
 c00ae78:	103fce26 	beq	r2,zero,c00adb4 <__alt_data_end+0xfc00adb4>
 c00ae7c:	8800021e 	bne	r17,zero,c00ae88 <__svfscanf_r+0x1488>
 c00ae80:	94808014 	ori	r18,r18,512
 c00ae84:	04400204 	movi	r17,8
 c00ae88:	9081000c 	andi	r2,r18,1024
 c00ae8c:	10008626 	beq	r2,zero,c00b0a8 <__svfscanf_r+0x16a8>
 c00ae90:	00be9fc4 	movi	r2,-1409
 c00ae94:	90a4703a 	and	r18,r18,r2
 c00ae98:	003fc606 	br	c00adb4 <__alt_data_end+0xfc00adb4>
 c00ae9c:	9080200c 	andi	r2,r18,128
 c00aea0:	103fdd26 	beq	r2,zero,c00ae18 <__alt_data_end+0xfc00ae18>
 c00aea4:	9224703a 	and	r18,r18,r8
 c00aea8:	003fc206 	br	c00adb4 <__alt_data_end+0xfc00adb4>
 c00aeac:	980b883a 	mov	r5,r19
 c00aeb0:	b809883a 	mov	r4,r23
 c00aeb4:	d980a915 	stw	r6,676(sp)
 c00aeb8:	d9c0aa15 	stw	r7,680(sp)
 c00aebc:	da00a715 	stw	r8,668(sp)
 c00aec0:	da40a815 	stw	r9,672(sp)
 c00aec4:	dac0a615 	stw	r11,664(sp)
 c00aec8:	c0102e80 	call	c0102e8 <__srefill_r>
 c00aecc:	d980a917 	ldw	r6,676(sp)
 c00aed0:	d9c0aa17 	ldw	r7,680(sp)
 c00aed4:	da00a717 	ldw	r8,668(sp)
 c00aed8:	da40a817 	ldw	r9,672(sp)
 c00aedc:	dac0a617 	ldw	r11,664(sp)
 c00aee0:	103fbc26 	beq	r2,zero,c00add4 <__alt_data_end+0xfc00add4>
 c00aee4:	003fcc06 	br	c00ae18 <__alt_data_end+0xfc00ae18>
 c00aee8:	8821883a 	mov	r16,r17
 c00aeec:	a807883a 	mov	r3,r21
 c00aef0:	e023883a 	mov	r17,fp
 c00aef4:	b82b883a 	mov	r21,r23
 c00aef8:	302f883a 	mov	r23,r6
 c00aefc:	00bfbfc4 	movi	r2,-257
 c00af00:	a0a8703a 	and	r20,r20,r2
 c00af04:	003e6706 	br	c00a8a4 <__alt_data_end+0xfc00a8a4>
 c00af08:	d800a215 	stw	zero,648(sp)
 c00af0c:	003de306 	br	c00a69c <__alt_data_end+0xfc00a69c>
 c00af10:	000f883a 	mov	r7,zero
 c00af14:	003f4106 	br	c00ac1c <__alt_data_end+0xfc00ac1c>
 c00af18:	d9409c17 	ldw	r5,624(sp)
 c00af1c:	e2bfffc4 	addi	r10,fp,-1
 c00af20:	2c400017 	ldw	r17,0(r5)
 c00af24:	2c000104 	addi	r16,r5,4
 c00af28:	8aa9883a 	add	r20,r17,r10
 c00af2c:	880b883a 	mov	r5,r17
 c00af30:	00000606 	br	c00af4c <__svfscanf_r+0x154c>
 c00af34:	98c00017 	ldw	r3,0(r19)
 c00af38:	b1000017 	ldw	r4,0(r22)
 c00af3c:	a80b883a 	mov	r5,r21
 c00af40:	18800003 	ldbu	r2,0(r3)
 c00af44:	2085883a 	add	r2,r4,r2
 c00af48:	10800043 	ldbu	r2,1(r2)
 c00af4c:	1080020c 	andi	r2,r2,8
 c00af50:	1000621e 	bne	r2,zero,c00b0dc <__svfscanf_r+0x16dc>
 c00af54:	98800117 	ldw	r2,4(r19)
 c00af58:	19000044 	addi	r4,r3,1
 c00af5c:	99000015 	stw	r4,0(r19)
 c00af60:	10bfffc4 	addi	r2,r2,-1
 c00af64:	98800115 	stw	r2,4(r19)
 c00af68:	18800003 	ldbu	r2,0(r3)
 c00af6c:	2d400044 	addi	r21,r5,1
 c00af70:	a839883a 	mov	fp,r21
 c00af74:	28800005 	stb	r2,0(r5)
 c00af78:	2d000626 	beq	r5,r20,c00af94 <__svfscanf_r+0x1594>
 c00af7c:	98800117 	ldw	r2,4(r19)
 c00af80:	00bfec16 	blt	zero,r2,c00af34 <__alt_data_end+0xfc00af34>
 c00af84:	980b883a 	mov	r5,r19
 c00af88:	b809883a 	mov	r4,r23
 c00af8c:	c0102e80 	call	c0102e8 <__srefill_r>
 c00af90:	103fe826 	beq	r2,zero,c00af34 <__alt_data_end+0xfc00af34>
 c00af94:	d880a017 	ldw	r2,640(sp)
 c00af98:	dd009d17 	ldw	r20,628(sp)
 c00af9c:	e463c83a 	sub	r17,fp,r17
 c00afa0:	10800044 	addi	r2,r2,1
 c00afa4:	e0000005 	stb	zero,0(fp)
 c00afa8:	9465883a 	add	r18,r18,r17
 c00afac:	d880a015 	stw	r2,640(sp)
 c00afb0:	dc009c15 	stw	r16,624(sp)
 c00afb4:	a00d883a 	mov	r6,r20
 c00afb8:	003ace06 	br	c009af4 <__alt_data_end+0xfc009af4>
 c00afbc:	dd009d17 	ldw	r20,628(sp)
 c00afc0:	9465883a 	add	r18,r18,r17
 c00afc4:	a00d883a 	mov	r6,r20
 c00afc8:	003aca06 	br	c009af4 <__alt_data_end+0xfc009af4>
 c00afcc:	d8c0a117 	ldw	r3,644(sp)
 c00afd0:	d9c09e17 	ldw	r7,632(sp)
 c00afd4:	000d883a 	mov	r6,zero
 c00afd8:	d9400104 	addi	r5,sp,4
 c00afdc:	b809883a 	mov	r4,r23
 c00afe0:	80000005 	stb	zero,0(r16)
 c00afe4:	183ee83a 	callr	r3
 c00afe8:	88c0080c 	andi	r3,r17,32
 c00afec:	1800351e 	bne	r3,zero,c00b0c4 <__svfscanf_r+0x16c4>
 c00aff0:	88c0010c 	andi	r3,r17,4
 c00aff4:	18007026 	beq	r3,zero,c00b1b8 <__svfscanf_r+0x17b8>
 c00aff8:	d9409c17 	ldw	r5,624(sp)
 c00affc:	28c00017 	ldw	r3,0(r5)
 c00b000:	29400104 	addi	r5,r5,4
 c00b004:	d9409c15 	stw	r5,624(sp)
 c00b008:	1880000d 	sth	r2,0(r3)
 c00b00c:	d940a017 	ldw	r5,640(sp)
 c00b010:	29400044 	addi	r5,r5,1
 c00b014:	d940a015 	stw	r5,640(sp)
 c00b018:	003f8a06 	br	c00ae44 <__alt_data_end+0xfc00ae44>
 c00b01c:	dd409904 	addi	r21,sp,612
 c00b020:	8c40040c 	andi	r17,r17,16
 c00b024:	01800204 	movi	r6,8
 c00b028:	000b883a 	mov	r5,zero
 c00b02c:	a809883a 	mov	r4,r21
 c00b030:	c00ea200 	call	c00ea20 <memset>
 c00b034:	8800391e 	bne	r17,zero,c00b11c <__svfscanf_r+0x171c>
 c00b038:	d8c09c17 	ldw	r3,624(sp)
 c00b03c:	1d000017 	ldw	r20,0(r3)
 c00b040:	18c00104 	addi	r3,r3,4
 c00b044:	d8c09c15 	stw	r3,624(sp)
 c00b048:	000d883a 	mov	r6,zero
 c00b04c:	3021883a 	mov	r16,r6
 c00b050:	dc409f15 	stw	r17,636(sp)
 c00b054:	98800017 	ldw	r2,0(r19)
 c00b058:	b0c00017 	ldw	r3,0(r22)
 c00b05c:	10800003 	ldbu	r2,0(r2)
 c00b060:	1885883a 	add	r2,r3,r2
 c00b064:	10800043 	ldbu	r2,1(r2)
 c00b068:	1080020c 	andi	r2,r2,8
 c00b06c:	1000011e 	bne	r2,zero,c00b074 <__svfscanf_r+0x1674>
 c00b070:	e000651e 	bne	fp,zero,c00b208 <__svfscanf_r+0x1808>
 c00b074:	dc409f17 	ldw	r17,636(sp)
 c00b078:	883c811e 	bne	r17,zero,c00a280 <__alt_data_end+0xfc00a280>
 c00b07c:	a0000015 	stw	zero,0(r20)
 c00b080:	003c7c06 	br	c00a274 <__alt_data_end+0xfc00a274>
 c00b084:	a2c0008c 	andi	r11,r20,2
 c00b088:	58003c26 	beq	r11,zero,c00b17c <__svfscanf_r+0x177c>
 c00b08c:	d9409c17 	ldw	r5,624(sp)
 c00b090:	28800017 	ldw	r2,0(r5)
 c00b094:	29400104 	addi	r5,r5,4
 c00b098:	d9409c15 	stw	r5,624(sp)
 c00b09c:	14000015 	stw	r16,0(r2)
 c00b0a0:	10c00115 	stw	r3,4(r2)
 c00b0a4:	003e4406 	br	c00a9b8 <__alt_data_end+0xfc00a9b8>
 c00b0a8:	00bf1fc4 	movi	r2,-897
 c00b0ac:	90a4703a 	and	r18,r18,r2
 c00b0b0:	38000226 	beq	r7,zero,c00b0bc <__svfscanf_r+0x16bc>
 c00b0b4:	39ffffc4 	addi	r7,r7,-1
 c00b0b8:	e7000044 	addi	fp,fp,1
 c00b0bc:	a5000044 	addi	r20,r20,1
 c00b0c0:	003f3e06 	br	c00adbc <__alt_data_end+0xfc00adbc>
 c00b0c4:	d9009c17 	ldw	r4,624(sp)
 c00b0c8:	20c00017 	ldw	r3,0(r4)
 c00b0cc:	21000104 	addi	r4,r4,4
 c00b0d0:	d9009c15 	stw	r4,624(sp)
 c00b0d4:	18800015 	stw	r2,0(r3)
 c00b0d8:	003fcc06 	br	c00b00c <__alt_data_end+0xfc00b00c>
 c00b0dc:	2839883a 	mov	fp,r5
 c00b0e0:	003fac06 	br	c00af94 <__alt_data_end+0xfc00af94>
 c00b0e4:	00be1fc4 	movi	r2,-1921
 c00b0e8:	a0a8703a 	and	r20,r20,r2
 c00b0ec:	05c00044 	movi	r23,1
 c00b0f0:	003ddb06 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00b0f4:	817fffc7 	ldb	r5,-1(r16)
 c00b0f8:	980d883a 	mov	r6,r19
 c00b0fc:	b809883a 	mov	r4,r23
 c00b100:	843fffc4 	addi	r16,r16,-1
 c00b104:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00b108:	003f4a06 	br	c00ae34 <__alt_data_end+0xfc00ae34>
 c00b10c:	00fe1fc4 	movi	r3,-1921
 c00b110:	a0e8703a 	and	r20,r20,r3
 c00b114:	05400044 	movi	r21,1
 c00b118:	003dd106 	br	c00a860 <__alt_data_end+0xfc00a860>
 c00b11c:	dd009b04 	addi	r20,sp,620
 c00b120:	003fc906 	br	c00b048 <__alt_data_end+0xfc00b048>
 c00b124:	d8c09f17 	ldw	r3,636(sp)
 c00b128:	88e3c83a 	sub	r17,r17,r3
 c00b12c:	044dc83a 	sub	r6,zero,r17
 c00b130:	883e1426 	beq	r17,zero,c00a984 <__alt_data_end+0xfc00a984>
 c00b134:	d88055c4 	addi	r2,sp,343
 c00b138:	80800136 	bltu	r16,r2,c00b140 <__svfscanf_r+0x1740>
 c00b13c:	dc005584 	addi	r16,sp,342
 c00b140:	014300b4 	movhi	r5,3074
 c00b144:	29769904 	addi	r5,r5,-9628
 c00b148:	8009883a 	mov	r4,r16
 c00b14c:	c00528c0 	call	c00528c <sprintf>
 c00b150:	003e0c06 	br	c00a984 <__alt_data_end+0xfc00a984>
 c00b154:	d8c0a517 	ldw	r3,660(sp)
 c00b158:	000d883a 	mov	r6,zero
 c00b15c:	01c00284 	movi	r7,10
 c00b160:	19400044 	addi	r5,r3,1
 c00b164:	b809883a 	mov	r4,r23
 c00b168:	c011f800 	call	c011f80 <_strtol_r>
 c00b16c:	d8c0a417 	ldw	r3,656(sp)
 c00b170:	dc00a517 	ldw	r16,660(sp)
 c00b174:	10cdc83a 	sub	r6,r2,r3
 c00b178:	003fee06 	br	c00b134 <__alt_data_end+0xfc00b134>
 c00b17c:	d8809c17 	ldw	r2,624(sp)
 c00b180:	180b883a 	mov	r5,r3
 c00b184:	8009883a 	mov	r4,r16
 c00b188:	15000017 	ldw	r20,0(r2)
 c00b18c:	14400104 	addi	r17,r2,4
 c00b190:	d8c0a615 	stw	r3,664(sp)
 c00b194:	c0104bc0 	call	c0104bc <__fpclassifyd>
 c00b198:	d8c0a617 	ldw	r3,664(sp)
 c00b19c:	10007226 	beq	r2,zero,c00b368 <__svfscanf_r+0x1968>
 c00b1a0:	8009883a 	mov	r4,r16
 c00b1a4:	180b883a 	mov	r5,r3
 c00b1a8:	c01a6d80 	call	c01a6d8 <__truncdfsf2>
 c00b1ac:	a0800015 	stw	r2,0(r20)
 c00b1b0:	dc409c15 	stw	r17,624(sp)
 c00b1b4:	003e0006 	br	c00a9b8 <__alt_data_end+0xfc00a9b8>
 c00b1b8:	88c0004c 	andi	r3,r17,1
 c00b1bc:	183fc11e 	bne	r3,zero,c00b0c4 <__alt_data_end+0xfc00b0c4>
 c00b1c0:	8c40008c 	andi	r17,r17,2
 c00b1c4:	883fbf26 	beq	r17,zero,c00b0c4 <__alt_data_end+0xfc00b0c4>
 c00b1c8:	d940a117 	ldw	r5,644(sp)
 c00b1cc:	00830074 	movhi	r2,3073
 c00b1d0:	10893e04 	addi	r2,r2,9464
 c00b1d4:	d9c09e17 	ldw	r7,632(sp)
 c00b1d8:	000d883a 	mov	r6,zero
 c00b1dc:	28806726 	beq	r5,r2,c00b37c <__svfscanf_r+0x197c>
 c00b1e0:	d9400104 	addi	r5,sp,4
 c00b1e4:	b809883a 	mov	r4,r23
 c00b1e8:	c0121f40 	call	c0121f4 <_strtoll_r>
 c00b1ec:	d9409c17 	ldw	r5,624(sp)
 c00b1f0:	29000017 	ldw	r4,0(r5)
 c00b1f4:	29400104 	addi	r5,r5,4
 c00b1f8:	d9409c15 	stw	r5,624(sp)
 c00b1fc:	20800015 	stw	r2,0(r4)
 c00b200:	20c00115 	stw	r3,4(r4)
 c00b204:	003f8106 	br	c00b00c <__alt_data_end+0xfc00b00c>
 c00b208:	c00e2640 	call	c00e264 <__locale_mb_cur_max>
 c00b20c:	80bc5626 	beq	r16,r2,c00a368 <__alt_data_end+0xfc00a368>
 c00b210:	98800017 	ldw	r2,0(r19)
 c00b214:	99000117 	ldw	r4,4(r19)
 c00b218:	d9400104 	addi	r5,sp,4
 c00b21c:	12000003 	ldbu	r8,0(r2)
 c00b220:	213fffc4 	addi	r4,r4,-1
 c00b224:	10800044 	addi	r2,r2,1
 c00b228:	99000115 	stw	r4,4(r19)
 c00b22c:	98800015 	stw	r2,0(r19)
 c00b230:	84400044 	addi	r17,r16,1
 c00b234:	dd400015 	stw	r21,0(sp)
 c00b238:	2c21883a 	add	r16,r5,r16
 c00b23c:	280d883a 	mov	r6,r5
 c00b240:	880f883a 	mov	r7,r17
 c00b244:	a00b883a 	mov	r5,r20
 c00b248:	b809883a 	mov	r4,r23
 c00b24c:	82000005 	stb	r8,0(r16)
 c00b250:	c00e4740 	call	c00e474 <_mbrtowc_r>
 c00b254:	00ffffc4 	movi	r3,-1
 c00b258:	10fc4326 	beq	r2,r3,c00a368 <__alt_data_end+0xfc00a368>
 c00b25c:	103c371e 	bne	r2,zero,c00a33c <__alt_data_end+0xfc00a33c>
 c00b260:	a0000015 	stw	zero,0(r20)
 c00b264:	0009883a 	mov	r4,zero
 c00b268:	c00e1ac0 	call	c00e1ac <iswspace>
 c00b26c:	10001b26 	beq	r2,zero,c00b2dc <__svfscanf_r+0x18dc>
 c00b270:	8821883a 	mov	r16,r17
 c00b274:	dc409f17 	ldw	r17,636(sp)
 c00b278:	803f7f26 	beq	r16,zero,c00b078 <__alt_data_end+0xfc00b078>
 c00b27c:	843fffc4 	addi	r16,r16,-1
 c00b280:	d9400104 	addi	r5,sp,4
 c00b284:	2c2b883a 	add	r21,r5,r16
 c00b288:	00000106 	br	c00b290 <__svfscanf_r+0x1890>
 c00b28c:	843fffc4 	addi	r16,r16,-1
 c00b290:	a9400003 	ldbu	r5,0(r21)
 c00b294:	980d883a 	mov	r6,r19
 c00b298:	b809883a 	mov	r4,r23
 c00b29c:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00b2a0:	ad7fffc4 	addi	r21,r21,-1
 c00b2a4:	803ff91e 	bne	r16,zero,c00b28c <__alt_data_end+0xfc00b28c>
 c00b2a8:	003f7306 	br	c00b078 <__alt_data_end+0xfc00b078>
 c00b2ac:	d9400104 	addi	r5,sp,4
 c00b2b0:	802b883a 	mov	r21,r16
 c00b2b4:	9839883a 	mov	fp,r19
 c00b2b8:	2c3a122e 	bgeu	r5,r16,c009b04 <__alt_data_end+0xfc009b04>
 c00b2bc:	ad7fffc4 	addi	r21,r21,-1
 c00b2c0:	a9400007 	ldb	r5,0(r21)
 c00b2c4:	e00d883a 	mov	r6,fp
 c00b2c8:	b809883a 	mov	r4,r23
 c00b2cc:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00b2d0:	d8800104 	addi	r2,sp,4
 c00b2d4:	157ff91e 	bne	r2,r21,c00b2bc <__alt_data_end+0xfc00b2bc>
 c00b2d8:	003a0a06 	br	c009b04 <__alt_data_end+0xfc009b04>
 c00b2dc:	d8c09f17 	ldw	r3,636(sp)
 c00b2e0:	9465883a 	add	r18,r18,r17
 c00b2e4:	e73fffc4 	addi	fp,fp,-1
 c00b2e8:	1800051e 	bne	r3,zero,c00b300 <__svfscanf_r+0x1900>
 c00b2ec:	a5000104 	addi	r20,r20,4
 c00b2f0:	0021883a 	mov	r16,zero
 c00b2f4:	003c1406 	br	c00a348 <__alt_data_end+0xfc00a348>
 c00b2f8:	a1000017 	ldw	r4,0(r20)
 c00b2fc:	003fda06 	br	c00b268 <__alt_data_end+0xfc00b268>
 c00b300:	0021883a 	mov	r16,zero
 c00b304:	003c1006 	br	c00a348 <__alt_data_end+0xfc00a348>
 c00b308:	d8c00104 	addi	r3,sp,4
 c00b30c:	802b883a 	mov	r21,r16
 c00b310:	9839883a 	mov	fp,r19
 c00b314:	1c39fb2e 	bgeu	r3,r16,c009b04 <__alt_data_end+0xfc009b04>
 c00b318:	ad7fffc4 	addi	r21,r21,-1
 c00b31c:	a9400007 	ldb	r5,0(r21)
 c00b320:	b809883a 	mov	r4,r23
 c00b324:	e00d883a 	mov	r6,fp
 c00b328:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00b32c:	d9000104 	addi	r4,sp,4
 c00b330:	257ff91e 	bne	r4,r21,c00b318 <__alt_data_end+0xfc00b318>
 c00b334:	0039f306 	br	c009b04 <__alt_data_end+0xfc009b04>
 c00b338:	d8c00104 	addi	r3,sp,4
 c00b33c:	802b883a 	mov	r21,r16
 c00b340:	9839883a 	mov	fp,r19
 c00b344:	1c39ef2e 	bgeu	r3,r16,c009b04 <__alt_data_end+0xfc009b04>
 c00b348:	ad7fffc4 	addi	r21,r21,-1
 c00b34c:	a9400007 	ldb	r5,0(r21)
 c00b350:	b809883a 	mov	r4,r23
 c00b354:	e00d883a 	mov	r6,fp
 c00b358:	c0140f00 	call	c0140f0 <_ungetc_r>
 c00b35c:	d9000104 	addi	r4,sp,4
 c00b360:	257ff91e 	bne	r4,r21,c00b348 <__alt_data_end+0xfc00b348>
 c00b364:	0039e706 	br	c009b04 <__alt_data_end+0xfc009b04>
 c00b368:	0009883a 	mov	r4,zero
 c00b36c:	c0106000 	call	c010600 <nanf>
 c00b370:	a0800015 	stw	r2,0(r20)
 c00b374:	dc409c15 	stw	r17,624(sp)
 c00b378:	003d8f06 	br	c00a9b8 <__alt_data_end+0xfc00a9b8>
 c00b37c:	d9400104 	addi	r5,sp,4
 c00b380:	b809883a 	mov	r4,r23
 c00b384:	c01278c0 	call	c01278c <_strtoull_r>
 c00b388:	003f9806 	br	c00b1ec <__alt_data_end+0xfc00b1ec>

0c00b38c <vfscanf>:
 c00b38c:	008300b4 	movhi	r2,3074
 c00b390:	defffb04 	addi	sp,sp,-20
 c00b394:	10bfc304 	addi	r2,r2,-244
 c00b398:	dc000215 	stw	r16,8(sp)
 c00b39c:	14000017 	ldw	r16,0(r2)
 c00b3a0:	dc400315 	stw	r17,12(sp)
 c00b3a4:	dfc00415 	stw	ra,16(sp)
 c00b3a8:	2023883a 	mov	r17,r4
 c00b3ac:	80000826 	beq	r16,zero,c00b3d0 <vfscanf+0x44>
 c00b3b0:	80800e17 	ldw	r2,56(r16)
 c00b3b4:	1000061e 	bne	r2,zero,c00b3d0 <vfscanf+0x44>
 c00b3b8:	8009883a 	mov	r4,r16
 c00b3bc:	d9400015 	stw	r5,0(sp)
 c00b3c0:	d9800115 	stw	r6,4(sp)
 c00b3c4:	c00d4680 	call	c00d468 <__sinit>
 c00b3c8:	d9800117 	ldw	r6,4(sp)
 c00b3cc:	d9400017 	ldw	r5,0(sp)
 c00b3d0:	300f883a 	mov	r7,r6
 c00b3d4:	8009883a 	mov	r4,r16
 c00b3d8:	280d883a 	mov	r6,r5
 c00b3dc:	880b883a 	mov	r5,r17
 c00b3e0:	dfc00417 	ldw	ra,16(sp)
 c00b3e4:	dc400317 	ldw	r17,12(sp)
 c00b3e8:	dc000217 	ldw	r16,8(sp)
 c00b3ec:	dec00504 	addi	sp,sp,20
 c00b3f0:	c009a001 	jmpi	c009a00 <__svfscanf_r>

0c00b3f4 <__svfscanf>:
 c00b3f4:	008300b4 	movhi	r2,3074
 c00b3f8:	10bfc304 	addi	r2,r2,-244
 c00b3fc:	300f883a 	mov	r7,r6
 c00b400:	280d883a 	mov	r6,r5
 c00b404:	200b883a 	mov	r5,r4
 c00b408:	11000017 	ldw	r4,0(r2)
 c00b40c:	c009a001 	jmpi	c009a00 <__svfscanf_r>

0c00b410 <_vfscanf_r>:
 c00b410:	defffb04 	addi	sp,sp,-20
 c00b414:	dc000315 	stw	r16,12(sp)
 c00b418:	dfc00415 	stw	ra,16(sp)
 c00b41c:	2021883a 	mov	r16,r4
 c00b420:	20000926 	beq	r4,zero,c00b448 <_vfscanf_r+0x38>
 c00b424:	20800e17 	ldw	r2,56(r4)
 c00b428:	1000071e 	bne	r2,zero,c00b448 <_vfscanf_r+0x38>
 c00b42c:	d9400015 	stw	r5,0(sp)
 c00b430:	d9800115 	stw	r6,4(sp)
 c00b434:	d9c00215 	stw	r7,8(sp)
 c00b438:	c00d4680 	call	c00d468 <__sinit>
 c00b43c:	d9c00217 	ldw	r7,8(sp)
 c00b440:	d9800117 	ldw	r6,4(sp)
 c00b444:	d9400017 	ldw	r5,0(sp)
 c00b448:	8009883a 	mov	r4,r16
 c00b44c:	dfc00417 	ldw	ra,16(sp)
 c00b450:	dc000317 	ldw	r16,12(sp)
 c00b454:	dec00504 	addi	sp,sp,20
 c00b458:	c009a001 	jmpi	c009a00 <__svfscanf_r>

0c00b45c <__swsetup_r>:
 c00b45c:	008300b4 	movhi	r2,3074
 c00b460:	defffd04 	addi	sp,sp,-12
 c00b464:	10bfc304 	addi	r2,r2,-244
 c00b468:	dc400115 	stw	r17,4(sp)
 c00b46c:	2023883a 	mov	r17,r4
 c00b470:	11000017 	ldw	r4,0(r2)
 c00b474:	dc000015 	stw	r16,0(sp)
 c00b478:	dfc00215 	stw	ra,8(sp)
 c00b47c:	2821883a 	mov	r16,r5
 c00b480:	20000226 	beq	r4,zero,c00b48c <__swsetup_r+0x30>
 c00b484:	20800e17 	ldw	r2,56(r4)
 c00b488:	10003126 	beq	r2,zero,c00b550 <__swsetup_r+0xf4>
 c00b48c:	8080030b 	ldhu	r2,12(r16)
 c00b490:	10c0020c 	andi	r3,r2,8
 c00b494:	1009883a 	mov	r4,r2
 c00b498:	18000f26 	beq	r3,zero,c00b4d8 <__swsetup_r+0x7c>
 c00b49c:	80c00417 	ldw	r3,16(r16)
 c00b4a0:	18001526 	beq	r3,zero,c00b4f8 <__swsetup_r+0x9c>
 c00b4a4:	1100004c 	andi	r4,r2,1
 c00b4a8:	20001c1e 	bne	r4,zero,c00b51c <__swsetup_r+0xc0>
 c00b4ac:	1080008c 	andi	r2,r2,2
 c00b4b0:	1000291e 	bne	r2,zero,c00b558 <__swsetup_r+0xfc>
 c00b4b4:	80800517 	ldw	r2,20(r16)
 c00b4b8:	80800215 	stw	r2,8(r16)
 c00b4bc:	18001c26 	beq	r3,zero,c00b530 <__swsetup_r+0xd4>
 c00b4c0:	0005883a 	mov	r2,zero
 c00b4c4:	dfc00217 	ldw	ra,8(sp)
 c00b4c8:	dc400117 	ldw	r17,4(sp)
 c00b4cc:	dc000017 	ldw	r16,0(sp)
 c00b4d0:	dec00304 	addi	sp,sp,12
 c00b4d4:	f800283a 	ret
 c00b4d8:	2080040c 	andi	r2,r4,16
 c00b4dc:	10002e26 	beq	r2,zero,c00b598 <__swsetup_r+0x13c>
 c00b4e0:	2080010c 	andi	r2,r4,4
 c00b4e4:	10001e1e 	bne	r2,zero,c00b560 <__swsetup_r+0x104>
 c00b4e8:	80c00417 	ldw	r3,16(r16)
 c00b4ec:	20800214 	ori	r2,r4,8
 c00b4f0:	8080030d 	sth	r2,12(r16)
 c00b4f4:	183feb1e 	bne	r3,zero,c00b4a4 <__alt_data_end+0xfc00b4a4>
 c00b4f8:	1100a00c 	andi	r4,r2,640
 c00b4fc:	01408004 	movi	r5,512
 c00b500:	217fe826 	beq	r4,r5,c00b4a4 <__alt_data_end+0xfc00b4a4>
 c00b504:	800b883a 	mov	r5,r16
 c00b508:	8809883a 	mov	r4,r17
 c00b50c:	c00e2b80 	call	c00e2b8 <__smakebuf_r>
 c00b510:	8080030b 	ldhu	r2,12(r16)
 c00b514:	80c00417 	ldw	r3,16(r16)
 c00b518:	003fe206 	br	c00b4a4 <__alt_data_end+0xfc00b4a4>
 c00b51c:	80800517 	ldw	r2,20(r16)
 c00b520:	80000215 	stw	zero,8(r16)
 c00b524:	0085c83a 	sub	r2,zero,r2
 c00b528:	80800615 	stw	r2,24(r16)
 c00b52c:	183fe41e 	bne	r3,zero,c00b4c0 <__alt_data_end+0xfc00b4c0>
 c00b530:	80c0030b 	ldhu	r3,12(r16)
 c00b534:	0005883a 	mov	r2,zero
 c00b538:	1900200c 	andi	r4,r3,128
 c00b53c:	203fe126 	beq	r4,zero,c00b4c4 <__alt_data_end+0xfc00b4c4>
 c00b540:	18c01014 	ori	r3,r3,64
 c00b544:	80c0030d 	sth	r3,12(r16)
 c00b548:	00bfffc4 	movi	r2,-1
 c00b54c:	003fdd06 	br	c00b4c4 <__alt_data_end+0xfc00b4c4>
 c00b550:	c00d4680 	call	c00d468 <__sinit>
 c00b554:	003fcd06 	br	c00b48c <__alt_data_end+0xfc00b48c>
 c00b558:	0005883a 	mov	r2,zero
 c00b55c:	003fd606 	br	c00b4b8 <__alt_data_end+0xfc00b4b8>
 c00b560:	81400c17 	ldw	r5,48(r16)
 c00b564:	28000626 	beq	r5,zero,c00b580 <__swsetup_r+0x124>
 c00b568:	80801004 	addi	r2,r16,64
 c00b56c:	28800326 	beq	r5,r2,c00b57c <__swsetup_r+0x120>
 c00b570:	8809883a 	mov	r4,r17
 c00b574:	c00d84c0 	call	c00d84c <_free_r>
 c00b578:	8100030b 	ldhu	r4,12(r16)
 c00b57c:	80000c15 	stw	zero,48(r16)
 c00b580:	80c00417 	ldw	r3,16(r16)
 c00b584:	00bff6c4 	movi	r2,-37
 c00b588:	1108703a 	and	r4,r2,r4
 c00b58c:	80000115 	stw	zero,4(r16)
 c00b590:	80c00015 	stw	r3,0(r16)
 c00b594:	003fd506 	br	c00b4ec <__alt_data_end+0xfc00b4ec>
 c00b598:	00800244 	movi	r2,9
 c00b59c:	88800015 	stw	r2,0(r17)
 c00b5a0:	20801014 	ori	r2,r4,64
 c00b5a4:	8080030d 	sth	r2,12(r16)
 c00b5a8:	00bfffc4 	movi	r2,-1
 c00b5ac:	003fc506 	br	c00b4c4 <__alt_data_end+0xfc00b4c4>

0c00b5b0 <quorem>:
 c00b5b0:	defff204 	addi	sp,sp,-56
 c00b5b4:	ddc00b15 	stw	r23,44(sp)
 c00b5b8:	20800417 	ldw	r2,16(r4)
 c00b5bc:	2dc00417 	ldw	r23,16(r5)
 c00b5c0:	dfc00d15 	stw	ra,52(sp)
 c00b5c4:	df000c15 	stw	fp,48(sp)
 c00b5c8:	dd800a15 	stw	r22,40(sp)
 c00b5cc:	dd400915 	stw	r21,36(sp)
 c00b5d0:	dd000815 	stw	r20,32(sp)
 c00b5d4:	dcc00715 	stw	r19,28(sp)
 c00b5d8:	dc800615 	stw	r18,24(sp)
 c00b5dc:	dc400515 	stw	r17,20(sp)
 c00b5e0:	dc000415 	stw	r16,16(sp)
 c00b5e4:	15c07a16 	blt	r2,r23,c00b7d0 <quorem+0x220>
 c00b5e8:	bdffffc4 	addi	r23,r23,-1
 c00b5ec:	bde9883a 	add	r20,r23,r23
 c00b5f0:	28c00504 	addi	r3,r5,20
 c00b5f4:	a529883a 	add	r20,r20,r20
 c00b5f8:	1d39883a 	add	fp,r3,r20
 c00b5fc:	24c00504 	addi	r19,r4,20
 c00b600:	d9400215 	stw	r5,8(sp)
 c00b604:	9d29883a 	add	r20,r19,r20
 c00b608:	e1400017 	ldw	r5,0(fp)
 c00b60c:	d9000015 	stw	r4,0(sp)
 c00b610:	a1000017 	ldw	r4,0(r20)
 c00b614:	29400044 	addi	r5,r5,1
 c00b618:	d8c00115 	stw	r3,4(sp)
 c00b61c:	dd000315 	stw	r20,12(sp)
 c00b620:	c0046800 	call	c004680 <__udivsi3>
 c00b624:	1025883a 	mov	r18,r2
 c00b628:	10003026 	beq	r2,zero,c00b6ec <quorem+0x13c>
 c00b62c:	dc400117 	ldw	r17,4(sp)
 c00b630:	9829883a 	mov	r20,r19
 c00b634:	002d883a 	mov	r22,zero
 c00b638:	0021883a 	mov	r16,zero
 c00b63c:	8d400017 	ldw	r21,0(r17)
 c00b640:	900b883a 	mov	r5,r18
 c00b644:	8c400104 	addi	r17,r17,4
 c00b648:	a93fffcc 	andi	r4,r21,65535
 c00b64c:	c00473c0 	call	c00473c <__mulsi3>
 c00b650:	a808d43a 	srli	r4,r21,16
 c00b654:	900b883a 	mov	r5,r18
 c00b658:	15ad883a 	add	r22,r2,r22
 c00b65c:	c00473c0 	call	c00473c <__mulsi3>
 c00b660:	a1000017 	ldw	r4,0(r20)
 c00b664:	b00cd43a 	srli	r6,r22,16
 c00b668:	b0ffffcc 	andi	r3,r22,65535
 c00b66c:	217fffcc 	andi	r5,r4,65535
 c00b670:	2c21883a 	add	r16,r5,r16
 c00b674:	80c7c83a 	sub	r3,r16,r3
 c00b678:	2008d43a 	srli	r4,r4,16
 c00b67c:	1185883a 	add	r2,r2,r6
 c00b680:	1821d43a 	srai	r16,r3,16
 c00b684:	117fffcc 	andi	r5,r2,65535
 c00b688:	2149c83a 	sub	r4,r4,r5
 c00b68c:	2421883a 	add	r16,r4,r16
 c00b690:	8008943a 	slli	r4,r16,16
 c00b694:	18ffffcc 	andi	r3,r3,65535
 c00b698:	102cd43a 	srli	r22,r2,16
 c00b69c:	20c8b03a 	or	r4,r4,r3
 c00b6a0:	a1000015 	stw	r4,0(r20)
 c00b6a4:	8021d43a 	srai	r16,r16,16
 c00b6a8:	a5000104 	addi	r20,r20,4
 c00b6ac:	e47fe32e 	bgeu	fp,r17,c00b63c <__alt_data_end+0xfc00b63c>
 c00b6b0:	d8c00317 	ldw	r3,12(sp)
 c00b6b4:	18800017 	ldw	r2,0(r3)
 c00b6b8:	10000c1e 	bne	r2,zero,c00b6ec <quorem+0x13c>
 c00b6bc:	18bfff04 	addi	r2,r3,-4
 c00b6c0:	9880082e 	bgeu	r19,r2,c00b6e4 <quorem+0x134>
 c00b6c4:	18ffff17 	ldw	r3,-4(r3)
 c00b6c8:	18000326 	beq	r3,zero,c00b6d8 <quorem+0x128>
 c00b6cc:	00000506 	br	c00b6e4 <quorem+0x134>
 c00b6d0:	10c00017 	ldw	r3,0(r2)
 c00b6d4:	1800031e 	bne	r3,zero,c00b6e4 <quorem+0x134>
 c00b6d8:	10bfff04 	addi	r2,r2,-4
 c00b6dc:	bdffffc4 	addi	r23,r23,-1
 c00b6e0:	98bffb36 	bltu	r19,r2,c00b6d0 <__alt_data_end+0xfc00b6d0>
 c00b6e4:	d8c00017 	ldw	r3,0(sp)
 c00b6e8:	1dc00415 	stw	r23,16(r3)
 c00b6ec:	d9400217 	ldw	r5,8(sp)
 c00b6f0:	d9000017 	ldw	r4,0(sp)
 c00b6f4:	c00f4cc0 	call	c00f4cc <__mcmp>
 c00b6f8:	10002816 	blt	r2,zero,c00b79c <quorem+0x1ec>
 c00b6fc:	dc400117 	ldw	r17,4(sp)
 c00b700:	94800044 	addi	r18,r18,1
 c00b704:	980d883a 	mov	r6,r19
 c00b708:	0007883a 	mov	r3,zero
 c00b70c:	31000017 	ldw	r4,0(r6)
 c00b710:	89400017 	ldw	r5,0(r17)
 c00b714:	31800104 	addi	r6,r6,4
 c00b718:	20bfffcc 	andi	r2,r4,65535
 c00b71c:	10c7883a 	add	r3,r2,r3
 c00b720:	28bfffcc 	andi	r2,r5,65535
 c00b724:	1885c83a 	sub	r2,r3,r2
 c00b728:	280ad43a 	srli	r5,r5,16
 c00b72c:	2008d43a 	srli	r4,r4,16
 c00b730:	1007d43a 	srai	r3,r2,16
 c00b734:	10bfffcc 	andi	r2,r2,65535
 c00b738:	2149c83a 	sub	r4,r4,r5
 c00b73c:	20c9883a 	add	r4,r4,r3
 c00b740:	200a943a 	slli	r5,r4,16
 c00b744:	8c400104 	addi	r17,r17,4
 c00b748:	2007d43a 	srai	r3,r4,16
 c00b74c:	2884b03a 	or	r2,r5,r2
 c00b750:	30bfff15 	stw	r2,-4(r6)
 c00b754:	e47fed2e 	bgeu	fp,r17,c00b70c <__alt_data_end+0xfc00b70c>
 c00b758:	bdc5883a 	add	r2,r23,r23
 c00b75c:	1085883a 	add	r2,r2,r2
 c00b760:	9887883a 	add	r3,r19,r2
 c00b764:	18800017 	ldw	r2,0(r3)
 c00b768:	10000c1e 	bne	r2,zero,c00b79c <quorem+0x1ec>
 c00b76c:	18bfff04 	addi	r2,r3,-4
 c00b770:	9880082e 	bgeu	r19,r2,c00b794 <quorem+0x1e4>
 c00b774:	18ffff17 	ldw	r3,-4(r3)
 c00b778:	18000326 	beq	r3,zero,c00b788 <quorem+0x1d8>
 c00b77c:	00000506 	br	c00b794 <quorem+0x1e4>
 c00b780:	10c00017 	ldw	r3,0(r2)
 c00b784:	1800031e 	bne	r3,zero,c00b794 <quorem+0x1e4>
 c00b788:	10bfff04 	addi	r2,r2,-4
 c00b78c:	bdffffc4 	addi	r23,r23,-1
 c00b790:	98bffb36 	bltu	r19,r2,c00b780 <__alt_data_end+0xfc00b780>
 c00b794:	d8c00017 	ldw	r3,0(sp)
 c00b798:	1dc00415 	stw	r23,16(r3)
 c00b79c:	9005883a 	mov	r2,r18
 c00b7a0:	dfc00d17 	ldw	ra,52(sp)
 c00b7a4:	df000c17 	ldw	fp,48(sp)
 c00b7a8:	ddc00b17 	ldw	r23,44(sp)
 c00b7ac:	dd800a17 	ldw	r22,40(sp)
 c00b7b0:	dd400917 	ldw	r21,36(sp)
 c00b7b4:	dd000817 	ldw	r20,32(sp)
 c00b7b8:	dcc00717 	ldw	r19,28(sp)
 c00b7bc:	dc800617 	ldw	r18,24(sp)
 c00b7c0:	dc400517 	ldw	r17,20(sp)
 c00b7c4:	dc000417 	ldw	r16,16(sp)
 c00b7c8:	dec00e04 	addi	sp,sp,56
 c00b7cc:	f800283a 	ret
 c00b7d0:	0005883a 	mov	r2,zero
 c00b7d4:	003ff206 	br	c00b7a0 <__alt_data_end+0xfc00b7a0>

0c00b7d8 <_dtoa_r>:
 c00b7d8:	20801017 	ldw	r2,64(r4)
 c00b7dc:	deffde04 	addi	sp,sp,-136
 c00b7e0:	df002015 	stw	fp,128(sp)
 c00b7e4:	dcc01b15 	stw	r19,108(sp)
 c00b7e8:	dc801a15 	stw	r18,104(sp)
 c00b7ec:	dc401915 	stw	r17,100(sp)
 c00b7f0:	dc001815 	stw	r16,96(sp)
 c00b7f4:	dfc02115 	stw	ra,132(sp)
 c00b7f8:	ddc01f15 	stw	r23,124(sp)
 c00b7fc:	dd801e15 	stw	r22,120(sp)
 c00b800:	dd401d15 	stw	r21,116(sp)
 c00b804:	dd001c15 	stw	r20,112(sp)
 c00b808:	d9c00315 	stw	r7,12(sp)
 c00b80c:	2039883a 	mov	fp,r4
 c00b810:	3023883a 	mov	r17,r6
 c00b814:	2825883a 	mov	r18,r5
 c00b818:	dc002417 	ldw	r16,144(sp)
 c00b81c:	3027883a 	mov	r19,r6
 c00b820:	10000826 	beq	r2,zero,c00b844 <_dtoa_r+0x6c>
 c00b824:	21801117 	ldw	r6,68(r4)
 c00b828:	00c00044 	movi	r3,1
 c00b82c:	100b883a 	mov	r5,r2
 c00b830:	1986983a 	sll	r3,r3,r6
 c00b834:	11800115 	stw	r6,4(r2)
 c00b838:	10c00215 	stw	r3,8(r2)
 c00b83c:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00b840:	e0001015 	stw	zero,64(fp)
 c00b844:	88002e16 	blt	r17,zero,c00b900 <_dtoa_r+0x128>
 c00b848:	80000015 	stw	zero,0(r16)
 c00b84c:	889ffc2c 	andhi	r2,r17,32752
 c00b850:	00dffc34 	movhi	r3,32752
 c00b854:	10c01c26 	beq	r2,r3,c00b8c8 <_dtoa_r+0xf0>
 c00b858:	000d883a 	mov	r6,zero
 c00b85c:	000f883a 	mov	r7,zero
 c00b860:	9009883a 	mov	r4,r18
 c00b864:	980b883a 	mov	r5,r19
 c00b868:	c0191140 	call	c019114 <__eqdf2>
 c00b86c:	10002b1e 	bne	r2,zero,c00b91c <_dtoa_r+0x144>
 c00b870:	d9c02317 	ldw	r7,140(sp)
 c00b874:	00800044 	movi	r2,1
 c00b878:	38800015 	stw	r2,0(r7)
 c00b87c:	d8802517 	ldw	r2,148(sp)
 c00b880:	10019e26 	beq	r2,zero,c00befc <_dtoa_r+0x724>
 c00b884:	d8c02517 	ldw	r3,148(sp)
 c00b888:	008300b4 	movhi	r2,3074
 c00b88c:	10b68844 	addi	r2,r2,-9695
 c00b890:	18800015 	stw	r2,0(r3)
 c00b894:	10bfffc4 	addi	r2,r2,-1
 c00b898:	dfc02117 	ldw	ra,132(sp)
 c00b89c:	df002017 	ldw	fp,128(sp)
 c00b8a0:	ddc01f17 	ldw	r23,124(sp)
 c00b8a4:	dd801e17 	ldw	r22,120(sp)
 c00b8a8:	dd401d17 	ldw	r21,116(sp)
 c00b8ac:	dd001c17 	ldw	r20,112(sp)
 c00b8b0:	dcc01b17 	ldw	r19,108(sp)
 c00b8b4:	dc801a17 	ldw	r18,104(sp)
 c00b8b8:	dc401917 	ldw	r17,100(sp)
 c00b8bc:	dc001817 	ldw	r16,96(sp)
 c00b8c0:	dec02204 	addi	sp,sp,136
 c00b8c4:	f800283a 	ret
 c00b8c8:	d8c02317 	ldw	r3,140(sp)
 c00b8cc:	0089c3c4 	movi	r2,9999
 c00b8d0:	18800015 	stw	r2,0(r3)
 c00b8d4:	90017726 	beq	r18,zero,c00beb4 <_dtoa_r+0x6dc>
 c00b8d8:	008300b4 	movhi	r2,3074
 c00b8dc:	10b74704 	addi	r2,r2,-8932
 c00b8e0:	d9002517 	ldw	r4,148(sp)
 c00b8e4:	203fec26 	beq	r4,zero,c00b898 <__alt_data_end+0xfc00b898>
 c00b8e8:	10c000c7 	ldb	r3,3(r2)
 c00b8ec:	1801781e 	bne	r3,zero,c00bed0 <_dtoa_r+0x6f8>
 c00b8f0:	10c000c4 	addi	r3,r2,3
 c00b8f4:	d9802517 	ldw	r6,148(sp)
 c00b8f8:	30c00015 	stw	r3,0(r6)
 c00b8fc:	003fe606 	br	c00b898 <__alt_data_end+0xfc00b898>
 c00b900:	04e00034 	movhi	r19,32768
 c00b904:	9cffffc4 	addi	r19,r19,-1
 c00b908:	00800044 	movi	r2,1
 c00b90c:	8ce6703a 	and	r19,r17,r19
 c00b910:	80800015 	stw	r2,0(r16)
 c00b914:	9823883a 	mov	r17,r19
 c00b918:	003fcc06 	br	c00b84c <__alt_data_end+0xfc00b84c>
 c00b91c:	d8800204 	addi	r2,sp,8
 c00b920:	d8800015 	stw	r2,0(sp)
 c00b924:	d9c00104 	addi	r7,sp,4
 c00b928:	900b883a 	mov	r5,r18
 c00b92c:	980d883a 	mov	r6,r19
 c00b930:	e009883a 	mov	r4,fp
 c00b934:	8820d53a 	srli	r16,r17,20
 c00b938:	c00f8980 	call	c00f898 <__d2b>
 c00b93c:	d8800915 	stw	r2,36(sp)
 c00b940:	8001651e 	bne	r16,zero,c00bed8 <_dtoa_r+0x700>
 c00b944:	dd800217 	ldw	r22,8(sp)
 c00b948:	dc000117 	ldw	r16,4(sp)
 c00b94c:	00800804 	movi	r2,32
 c00b950:	b421883a 	add	r16,r22,r16
 c00b954:	80c10c84 	addi	r3,r16,1074
 c00b958:	10c2d10e 	bge	r2,r3,c00c4a0 <_dtoa_r+0xcc8>
 c00b95c:	00801004 	movi	r2,64
 c00b960:	81010484 	addi	r4,r16,1042
 c00b964:	10c7c83a 	sub	r3,r2,r3
 c00b968:	9108d83a 	srl	r4,r18,r4
 c00b96c:	88e2983a 	sll	r17,r17,r3
 c00b970:	2448b03a 	or	r4,r4,r17
 c00b974:	c01a6300 	call	c01a630 <__floatunsidf>
 c00b978:	017f8434 	movhi	r5,65040
 c00b97c:	01800044 	movi	r6,1
 c00b980:	1009883a 	mov	r4,r2
 c00b984:	194b883a 	add	r5,r3,r5
 c00b988:	843fffc4 	addi	r16,r16,-1
 c00b98c:	d9801115 	stw	r6,68(sp)
 c00b990:	000d883a 	mov	r6,zero
 c00b994:	01cffe34 	movhi	r7,16376
 c00b998:	c019bd80 	call	c019bd8 <__subdf3>
 c00b99c:	0198dbf4 	movhi	r6,25455
 c00b9a0:	01cff4f4 	movhi	r7,16339
 c00b9a4:	3190d844 	addi	r6,r6,17249
 c00b9a8:	39e1e9c4 	addi	r7,r7,-30809
 c00b9ac:	1009883a 	mov	r4,r2
 c00b9b0:	180b883a 	mov	r5,r3
 c00b9b4:	c01936c0 	call	c01936c <__muldf3>
 c00b9b8:	01a2d874 	movhi	r6,35681
 c00b9bc:	01cff1f4 	movhi	r7,16327
 c00b9c0:	31b22cc4 	addi	r6,r6,-14157
 c00b9c4:	39e28a04 	addi	r7,r7,-30168
 c00b9c8:	180b883a 	mov	r5,r3
 c00b9cc:	1009883a 	mov	r4,r2
 c00b9d0:	c017e980 	call	c017e98 <__adddf3>
 c00b9d4:	8009883a 	mov	r4,r16
 c00b9d8:	1029883a 	mov	r20,r2
 c00b9dc:	1823883a 	mov	r17,r3
 c00b9e0:	c01a5540 	call	c01a554 <__floatsidf>
 c00b9e4:	019427f4 	movhi	r6,20639
 c00b9e8:	01cff4f4 	movhi	r7,16339
 c00b9ec:	319e7ec4 	addi	r6,r6,31227
 c00b9f0:	39d104c4 	addi	r7,r7,17427
 c00b9f4:	1009883a 	mov	r4,r2
 c00b9f8:	180b883a 	mov	r5,r3
 c00b9fc:	c01936c0 	call	c01936c <__muldf3>
 c00ba00:	100d883a 	mov	r6,r2
 c00ba04:	180f883a 	mov	r7,r3
 c00ba08:	a009883a 	mov	r4,r20
 c00ba0c:	880b883a 	mov	r5,r17
 c00ba10:	c017e980 	call	c017e98 <__adddf3>
 c00ba14:	1009883a 	mov	r4,r2
 c00ba18:	180b883a 	mov	r5,r3
 c00ba1c:	1029883a 	mov	r20,r2
 c00ba20:	1823883a 	mov	r17,r3
 c00ba24:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c00ba28:	000d883a 	mov	r6,zero
 c00ba2c:	000f883a 	mov	r7,zero
 c00ba30:	a009883a 	mov	r4,r20
 c00ba34:	880b883a 	mov	r5,r17
 c00ba38:	d8800515 	stw	r2,20(sp)
 c00ba3c:	c0192780 	call	c019278 <__ledf2>
 c00ba40:	10028716 	blt	r2,zero,c00c460 <_dtoa_r+0xc88>
 c00ba44:	d8c00517 	ldw	r3,20(sp)
 c00ba48:	00800584 	movi	r2,22
 c00ba4c:	10c27536 	bltu	r2,r3,c00c424 <_dtoa_r+0xc4c>
 c00ba50:	180490fa 	slli	r2,r3,3
 c00ba54:	00c300b4 	movhi	r3,3074
 c00ba58:	18f76304 	addi	r3,r3,-8820
 c00ba5c:	1885883a 	add	r2,r3,r2
 c00ba60:	11000017 	ldw	r4,0(r2)
 c00ba64:	11400117 	ldw	r5,4(r2)
 c00ba68:	900d883a 	mov	r6,r18
 c00ba6c:	980f883a 	mov	r7,r19
 c00ba70:	c01919c0 	call	c01919c <__gedf2>
 c00ba74:	00828d0e 	bge	zero,r2,c00c4ac <_dtoa_r+0xcd4>
 c00ba78:	d9000517 	ldw	r4,20(sp)
 c00ba7c:	d8000e15 	stw	zero,56(sp)
 c00ba80:	213fffc4 	addi	r4,r4,-1
 c00ba84:	d9000515 	stw	r4,20(sp)
 c00ba88:	b42dc83a 	sub	r22,r22,r16
 c00ba8c:	b5bfffc4 	addi	r22,r22,-1
 c00ba90:	b0026f16 	blt	r22,zero,c00c450 <_dtoa_r+0xc78>
 c00ba94:	d8000815 	stw	zero,32(sp)
 c00ba98:	d9c00517 	ldw	r7,20(sp)
 c00ba9c:	38026416 	blt	r7,zero,c00c430 <_dtoa_r+0xc58>
 c00baa0:	b1ed883a 	add	r22,r22,r7
 c00baa4:	d9c00d15 	stw	r7,52(sp)
 c00baa8:	d8000a15 	stw	zero,40(sp)
 c00baac:	d9800317 	ldw	r6,12(sp)
 c00bab0:	00800244 	movi	r2,9
 c00bab4:	11811436 	bltu	r2,r6,c00bf08 <_dtoa_r+0x730>
 c00bab8:	00800144 	movi	r2,5
 c00babc:	1184e10e 	bge	r2,r6,c00ce44 <_dtoa_r+0x166c>
 c00bac0:	31bfff04 	addi	r6,r6,-4
 c00bac4:	d9800315 	stw	r6,12(sp)
 c00bac8:	0023883a 	mov	r17,zero
 c00bacc:	d9800317 	ldw	r6,12(sp)
 c00bad0:	008000c4 	movi	r2,3
 c00bad4:	30836726 	beq	r6,r2,c00c874 <_dtoa_r+0x109c>
 c00bad8:	1183410e 	bge	r2,r6,c00c7e0 <_dtoa_r+0x1008>
 c00badc:	d9c00317 	ldw	r7,12(sp)
 c00bae0:	00800104 	movi	r2,4
 c00bae4:	38827c26 	beq	r7,r2,c00c4d8 <_dtoa_r+0xd00>
 c00bae8:	00800144 	movi	r2,5
 c00baec:	3884c41e 	bne	r7,r2,c00ce00 <_dtoa_r+0x1628>
 c00baf0:	00800044 	movi	r2,1
 c00baf4:	d8800b15 	stw	r2,44(sp)
 c00baf8:	d8c00517 	ldw	r3,20(sp)
 c00bafc:	d9002217 	ldw	r4,136(sp)
 c00bb00:	1907883a 	add	r3,r3,r4
 c00bb04:	19800044 	addi	r6,r3,1
 c00bb08:	d8c00c15 	stw	r3,48(sp)
 c00bb0c:	d9800615 	stw	r6,24(sp)
 c00bb10:	0183a40e 	bge	zero,r6,c00c9a4 <_dtoa_r+0x11cc>
 c00bb14:	d9800617 	ldw	r6,24(sp)
 c00bb18:	3021883a 	mov	r16,r6
 c00bb1c:	e0001115 	stw	zero,68(fp)
 c00bb20:	008005c4 	movi	r2,23
 c00bb24:	1184c92e 	bgeu	r2,r6,c00ce4c <_dtoa_r+0x1674>
 c00bb28:	00c00044 	movi	r3,1
 c00bb2c:	00800104 	movi	r2,4
 c00bb30:	1085883a 	add	r2,r2,r2
 c00bb34:	11000504 	addi	r4,r2,20
 c00bb38:	180b883a 	mov	r5,r3
 c00bb3c:	18c00044 	addi	r3,r3,1
 c00bb40:	313ffb2e 	bgeu	r6,r4,c00bb30 <__alt_data_end+0xfc00bb30>
 c00bb44:	e1401115 	stw	r5,68(fp)
 c00bb48:	e009883a 	mov	r4,fp
 c00bb4c:	c00eb480 	call	c00eb48 <_Balloc>
 c00bb50:	d8800715 	stw	r2,28(sp)
 c00bb54:	e0801015 	stw	r2,64(fp)
 c00bb58:	00800384 	movi	r2,14
 c00bb5c:	1400f736 	bltu	r2,r16,c00bf3c <_dtoa_r+0x764>
 c00bb60:	8800f626 	beq	r17,zero,c00bf3c <_dtoa_r+0x764>
 c00bb64:	d9c00517 	ldw	r7,20(sp)
 c00bb68:	01c39a0e 	bge	zero,r7,c00c9d4 <_dtoa_r+0x11fc>
 c00bb6c:	388003cc 	andi	r2,r7,15
 c00bb70:	100490fa 	slli	r2,r2,3
 c00bb74:	382bd13a 	srai	r21,r7,4
 c00bb78:	00c300b4 	movhi	r3,3074
 c00bb7c:	18f76304 	addi	r3,r3,-8820
 c00bb80:	1885883a 	add	r2,r3,r2
 c00bb84:	a8c0040c 	andi	r3,r21,16
 c00bb88:	12400017 	ldw	r9,0(r2)
 c00bb8c:	12000117 	ldw	r8,4(r2)
 c00bb90:	18037926 	beq	r3,zero,c00c978 <_dtoa_r+0x11a0>
 c00bb94:	008300b4 	movhi	r2,3074
 c00bb98:	10b75904 	addi	r2,r2,-8860
 c00bb9c:	11800817 	ldw	r6,32(r2)
 c00bba0:	11c00917 	ldw	r7,36(r2)
 c00bba4:	9009883a 	mov	r4,r18
 c00bba8:	980b883a 	mov	r5,r19
 c00bbac:	da001715 	stw	r8,92(sp)
 c00bbb0:	da401615 	stw	r9,88(sp)
 c00bbb4:	c0187440 	call	c018744 <__divdf3>
 c00bbb8:	da001717 	ldw	r8,92(sp)
 c00bbbc:	da401617 	ldw	r9,88(sp)
 c00bbc0:	ad4003cc 	andi	r21,r21,15
 c00bbc4:	040000c4 	movi	r16,3
 c00bbc8:	1023883a 	mov	r17,r2
 c00bbcc:	1829883a 	mov	r20,r3
 c00bbd0:	a8001126 	beq	r21,zero,c00bc18 <_dtoa_r+0x440>
 c00bbd4:	05c300b4 	movhi	r23,3074
 c00bbd8:	bdf75904 	addi	r23,r23,-8860
 c00bbdc:	4805883a 	mov	r2,r9
 c00bbe0:	4007883a 	mov	r3,r8
 c00bbe4:	a980004c 	andi	r6,r21,1
 c00bbe8:	1009883a 	mov	r4,r2
 c00bbec:	a82bd07a 	srai	r21,r21,1
 c00bbf0:	180b883a 	mov	r5,r3
 c00bbf4:	30000426 	beq	r6,zero,c00bc08 <_dtoa_r+0x430>
 c00bbf8:	b9800017 	ldw	r6,0(r23)
 c00bbfc:	b9c00117 	ldw	r7,4(r23)
 c00bc00:	84000044 	addi	r16,r16,1
 c00bc04:	c01936c0 	call	c01936c <__muldf3>
 c00bc08:	bdc00204 	addi	r23,r23,8
 c00bc0c:	a83ff51e 	bne	r21,zero,c00bbe4 <__alt_data_end+0xfc00bbe4>
 c00bc10:	1013883a 	mov	r9,r2
 c00bc14:	1811883a 	mov	r8,r3
 c00bc18:	480d883a 	mov	r6,r9
 c00bc1c:	400f883a 	mov	r7,r8
 c00bc20:	8809883a 	mov	r4,r17
 c00bc24:	a00b883a 	mov	r5,r20
 c00bc28:	c0187440 	call	c018744 <__divdf3>
 c00bc2c:	d8800f15 	stw	r2,60(sp)
 c00bc30:	d8c01015 	stw	r3,64(sp)
 c00bc34:	d8c00e17 	ldw	r3,56(sp)
 c00bc38:	18000626 	beq	r3,zero,c00bc54 <_dtoa_r+0x47c>
 c00bc3c:	d9000f17 	ldw	r4,60(sp)
 c00bc40:	d9401017 	ldw	r5,64(sp)
 c00bc44:	000d883a 	mov	r6,zero
 c00bc48:	01cffc34 	movhi	r7,16368
 c00bc4c:	c0192780 	call	c019278 <__ledf2>
 c00bc50:	10040b16 	blt	r2,zero,c00cc80 <_dtoa_r+0x14a8>
 c00bc54:	8009883a 	mov	r4,r16
 c00bc58:	c01a5540 	call	c01a554 <__floatsidf>
 c00bc5c:	d9800f17 	ldw	r6,60(sp)
 c00bc60:	d9c01017 	ldw	r7,64(sp)
 c00bc64:	1009883a 	mov	r4,r2
 c00bc68:	180b883a 	mov	r5,r3
 c00bc6c:	c01936c0 	call	c01936c <__muldf3>
 c00bc70:	000d883a 	mov	r6,zero
 c00bc74:	01d00734 	movhi	r7,16412
 c00bc78:	1009883a 	mov	r4,r2
 c00bc7c:	180b883a 	mov	r5,r3
 c00bc80:	c017e980 	call	c017e98 <__adddf3>
 c00bc84:	1021883a 	mov	r16,r2
 c00bc88:	d8800617 	ldw	r2,24(sp)
 c00bc8c:	047f3034 	movhi	r17,64704
 c00bc90:	1c63883a 	add	r17,r3,r17
 c00bc94:	10031826 	beq	r2,zero,c00c8f8 <_dtoa_r+0x1120>
 c00bc98:	d8c00517 	ldw	r3,20(sp)
 c00bc9c:	db000617 	ldw	r12,24(sp)
 c00bca0:	d8c01315 	stw	r3,76(sp)
 c00bca4:	d9000b17 	ldw	r4,44(sp)
 c00bca8:	20038f26 	beq	r4,zero,c00cae8 <_dtoa_r+0x1310>
 c00bcac:	60bfffc4 	addi	r2,r12,-1
 c00bcb0:	100490fa 	slli	r2,r2,3
 c00bcb4:	00c300b4 	movhi	r3,3074
 c00bcb8:	18f76304 	addi	r3,r3,-8820
 c00bcbc:	1885883a 	add	r2,r3,r2
 c00bcc0:	11800017 	ldw	r6,0(r2)
 c00bcc4:	11c00117 	ldw	r7,4(r2)
 c00bcc8:	d8800717 	ldw	r2,28(sp)
 c00bccc:	0009883a 	mov	r4,zero
 c00bcd0:	014ff834 	movhi	r5,16352
 c00bcd4:	db001615 	stw	r12,88(sp)
 c00bcd8:	15c00044 	addi	r23,r2,1
 c00bcdc:	c0187440 	call	c018744 <__divdf3>
 c00bce0:	800d883a 	mov	r6,r16
 c00bce4:	880f883a 	mov	r7,r17
 c00bce8:	1009883a 	mov	r4,r2
 c00bcec:	180b883a 	mov	r5,r3
 c00bcf0:	c019bd80 	call	c019bd8 <__subdf3>
 c00bcf4:	d9401017 	ldw	r5,64(sp)
 c00bcf8:	d9000f17 	ldw	r4,60(sp)
 c00bcfc:	102b883a 	mov	r21,r2
 c00bd00:	d8c01215 	stw	r3,72(sp)
 c00bd04:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c00bd08:	1009883a 	mov	r4,r2
 c00bd0c:	1029883a 	mov	r20,r2
 c00bd10:	c01a5540 	call	c01a554 <__floatsidf>
 c00bd14:	d9000f17 	ldw	r4,60(sp)
 c00bd18:	d9401017 	ldw	r5,64(sp)
 c00bd1c:	100d883a 	mov	r6,r2
 c00bd20:	180f883a 	mov	r7,r3
 c00bd24:	c019bd80 	call	c019bd8 <__subdf3>
 c00bd28:	1823883a 	mov	r17,r3
 c00bd2c:	d8c00717 	ldw	r3,28(sp)
 c00bd30:	d9401217 	ldw	r5,72(sp)
 c00bd34:	a2000c04 	addi	r8,r20,48
 c00bd38:	1021883a 	mov	r16,r2
 c00bd3c:	1a000005 	stb	r8,0(r3)
 c00bd40:	800d883a 	mov	r6,r16
 c00bd44:	880f883a 	mov	r7,r17
 c00bd48:	a809883a 	mov	r4,r21
 c00bd4c:	4029883a 	mov	r20,r8
 c00bd50:	c01919c0 	call	c01919c <__gedf2>
 c00bd54:	00841d16 	blt	zero,r2,c00cdcc <_dtoa_r+0x15f4>
 c00bd58:	800d883a 	mov	r6,r16
 c00bd5c:	880f883a 	mov	r7,r17
 c00bd60:	0009883a 	mov	r4,zero
 c00bd64:	014ffc34 	movhi	r5,16368
 c00bd68:	c019bd80 	call	c019bd8 <__subdf3>
 c00bd6c:	d9401217 	ldw	r5,72(sp)
 c00bd70:	100d883a 	mov	r6,r2
 c00bd74:	180f883a 	mov	r7,r3
 c00bd78:	a809883a 	mov	r4,r21
 c00bd7c:	c01919c0 	call	c01919c <__gedf2>
 c00bd80:	db001617 	ldw	r12,88(sp)
 c00bd84:	00840e16 	blt	zero,r2,c00cdc0 <_dtoa_r+0x15e8>
 c00bd88:	00800044 	movi	r2,1
 c00bd8c:	13006b0e 	bge	r2,r12,c00bf3c <_dtoa_r+0x764>
 c00bd90:	d9000717 	ldw	r4,28(sp)
 c00bd94:	dd800f15 	stw	r22,60(sp)
 c00bd98:	dcc01015 	stw	r19,64(sp)
 c00bd9c:	2319883a 	add	r12,r4,r12
 c00bda0:	dcc01217 	ldw	r19,72(sp)
 c00bda4:	602d883a 	mov	r22,r12
 c00bda8:	dc801215 	stw	r18,72(sp)
 c00bdac:	b825883a 	mov	r18,r23
 c00bdb0:	00000906 	br	c00bdd8 <_dtoa_r+0x600>
 c00bdb4:	c019bd80 	call	c019bd8 <__subdf3>
 c00bdb8:	a80d883a 	mov	r6,r21
 c00bdbc:	980f883a 	mov	r7,r19
 c00bdc0:	1009883a 	mov	r4,r2
 c00bdc4:	180b883a 	mov	r5,r3
 c00bdc8:	c0192780 	call	c019278 <__ledf2>
 c00bdcc:	1003e816 	blt	r2,zero,c00cd70 <_dtoa_r+0x1598>
 c00bdd0:	b825883a 	mov	r18,r23
 c00bdd4:	bd83e926 	beq	r23,r22,c00cd7c <_dtoa_r+0x15a4>
 c00bdd8:	a809883a 	mov	r4,r21
 c00bddc:	980b883a 	mov	r5,r19
 c00bde0:	000d883a 	mov	r6,zero
 c00bde4:	01d00934 	movhi	r7,16420
 c00bde8:	c01936c0 	call	c01936c <__muldf3>
 c00bdec:	000d883a 	mov	r6,zero
 c00bdf0:	01d00934 	movhi	r7,16420
 c00bdf4:	8009883a 	mov	r4,r16
 c00bdf8:	880b883a 	mov	r5,r17
 c00bdfc:	102b883a 	mov	r21,r2
 c00be00:	1827883a 	mov	r19,r3
 c00be04:	c01936c0 	call	c01936c <__muldf3>
 c00be08:	180b883a 	mov	r5,r3
 c00be0c:	1009883a 	mov	r4,r2
 c00be10:	1821883a 	mov	r16,r3
 c00be14:	1023883a 	mov	r17,r2
 c00be18:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c00be1c:	1009883a 	mov	r4,r2
 c00be20:	1029883a 	mov	r20,r2
 c00be24:	c01a5540 	call	c01a554 <__floatsidf>
 c00be28:	8809883a 	mov	r4,r17
 c00be2c:	800b883a 	mov	r5,r16
 c00be30:	100d883a 	mov	r6,r2
 c00be34:	180f883a 	mov	r7,r3
 c00be38:	c019bd80 	call	c019bd8 <__subdf3>
 c00be3c:	a5000c04 	addi	r20,r20,48
 c00be40:	a80d883a 	mov	r6,r21
 c00be44:	980f883a 	mov	r7,r19
 c00be48:	1009883a 	mov	r4,r2
 c00be4c:	180b883a 	mov	r5,r3
 c00be50:	95000005 	stb	r20,0(r18)
 c00be54:	1021883a 	mov	r16,r2
 c00be58:	1823883a 	mov	r17,r3
 c00be5c:	c0192780 	call	c019278 <__ledf2>
 c00be60:	bdc00044 	addi	r23,r23,1
 c00be64:	800d883a 	mov	r6,r16
 c00be68:	880f883a 	mov	r7,r17
 c00be6c:	0009883a 	mov	r4,zero
 c00be70:	014ffc34 	movhi	r5,16368
 c00be74:	103fcf0e 	bge	r2,zero,c00bdb4 <__alt_data_end+0xfc00bdb4>
 c00be78:	d8c01317 	ldw	r3,76(sp)
 c00be7c:	d8c00515 	stw	r3,20(sp)
 c00be80:	d9400917 	ldw	r5,36(sp)
 c00be84:	e009883a 	mov	r4,fp
 c00be88:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00be8c:	d9000517 	ldw	r4,20(sp)
 c00be90:	d9802317 	ldw	r6,140(sp)
 c00be94:	d9c02517 	ldw	r7,148(sp)
 c00be98:	b8000005 	stb	zero,0(r23)
 c00be9c:	20800044 	addi	r2,r4,1
 c00bea0:	30800015 	stw	r2,0(r6)
 c00bea4:	3802aa26 	beq	r7,zero,c00c950 <_dtoa_r+0x1178>
 c00bea8:	3dc00015 	stw	r23,0(r7)
 c00beac:	d8800717 	ldw	r2,28(sp)
 c00beb0:	003e7906 	br	c00b898 <__alt_data_end+0xfc00b898>
 c00beb4:	00800434 	movhi	r2,16
 c00beb8:	10bfffc4 	addi	r2,r2,-1
 c00bebc:	88a2703a 	and	r17,r17,r2
 c00bec0:	883e851e 	bne	r17,zero,c00b8d8 <__alt_data_end+0xfc00b8d8>
 c00bec4:	008300b4 	movhi	r2,3074
 c00bec8:	10b74404 	addi	r2,r2,-8944
 c00becc:	003e8406 	br	c00b8e0 <__alt_data_end+0xfc00b8e0>
 c00bed0:	10c00204 	addi	r3,r2,8
 c00bed4:	003e8706 	br	c00b8f4 <__alt_data_end+0xfc00b8f4>
 c00bed8:	01400434 	movhi	r5,16
 c00bedc:	297fffc4 	addi	r5,r5,-1
 c00bee0:	994a703a 	and	r5,r19,r5
 c00bee4:	9009883a 	mov	r4,r18
 c00bee8:	843f0044 	addi	r16,r16,-1023
 c00beec:	294ffc34 	orhi	r5,r5,16368
 c00bef0:	dd800217 	ldw	r22,8(sp)
 c00bef4:	d8001115 	stw	zero,68(sp)
 c00bef8:	003ea506 	br	c00b990 <__alt_data_end+0xfc00b990>
 c00befc:	008300b4 	movhi	r2,3074
 c00bf00:	10b68804 	addi	r2,r2,-9696
 c00bf04:	003e6406 	br	c00b898 <__alt_data_end+0xfc00b898>
 c00bf08:	e0001115 	stw	zero,68(fp)
 c00bf0c:	000b883a 	mov	r5,zero
 c00bf10:	e009883a 	mov	r4,fp
 c00bf14:	c00eb480 	call	c00eb48 <_Balloc>
 c00bf18:	01bfffc4 	movi	r6,-1
 c00bf1c:	01c00044 	movi	r7,1
 c00bf20:	d8800715 	stw	r2,28(sp)
 c00bf24:	d9800c15 	stw	r6,48(sp)
 c00bf28:	e0801015 	stw	r2,64(fp)
 c00bf2c:	d8000315 	stw	zero,12(sp)
 c00bf30:	d9c00b15 	stw	r7,44(sp)
 c00bf34:	d9800615 	stw	r6,24(sp)
 c00bf38:	d8002215 	stw	zero,136(sp)
 c00bf3c:	d8800117 	ldw	r2,4(sp)
 c00bf40:	10008916 	blt	r2,zero,c00c168 <_dtoa_r+0x990>
 c00bf44:	d9000517 	ldw	r4,20(sp)
 c00bf48:	00c00384 	movi	r3,14
 c00bf4c:	19008616 	blt	r3,r4,c00c168 <_dtoa_r+0x990>
 c00bf50:	200490fa 	slli	r2,r4,3
 c00bf54:	00c300b4 	movhi	r3,3074
 c00bf58:	d9802217 	ldw	r6,136(sp)
 c00bf5c:	18f76304 	addi	r3,r3,-8820
 c00bf60:	1885883a 	add	r2,r3,r2
 c00bf64:	14000017 	ldw	r16,0(r2)
 c00bf68:	14400117 	ldw	r17,4(r2)
 c00bf6c:	30016316 	blt	r6,zero,c00c4fc <_dtoa_r+0xd24>
 c00bf70:	800d883a 	mov	r6,r16
 c00bf74:	880f883a 	mov	r7,r17
 c00bf78:	9009883a 	mov	r4,r18
 c00bf7c:	980b883a 	mov	r5,r19
 c00bf80:	c0187440 	call	c018744 <__divdf3>
 c00bf84:	180b883a 	mov	r5,r3
 c00bf88:	1009883a 	mov	r4,r2
 c00bf8c:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c00bf90:	1009883a 	mov	r4,r2
 c00bf94:	102b883a 	mov	r21,r2
 c00bf98:	c01a5540 	call	c01a554 <__floatsidf>
 c00bf9c:	800d883a 	mov	r6,r16
 c00bfa0:	880f883a 	mov	r7,r17
 c00bfa4:	1009883a 	mov	r4,r2
 c00bfa8:	180b883a 	mov	r5,r3
 c00bfac:	c01936c0 	call	c01936c <__muldf3>
 c00bfb0:	100d883a 	mov	r6,r2
 c00bfb4:	180f883a 	mov	r7,r3
 c00bfb8:	9009883a 	mov	r4,r18
 c00bfbc:	980b883a 	mov	r5,r19
 c00bfc0:	c019bd80 	call	c019bd8 <__subdf3>
 c00bfc4:	d9c00717 	ldw	r7,28(sp)
 c00bfc8:	1009883a 	mov	r4,r2
 c00bfcc:	a8800c04 	addi	r2,r21,48
 c00bfd0:	38800005 	stb	r2,0(r7)
 c00bfd4:	3dc00044 	addi	r23,r7,1
 c00bfd8:	d9c00617 	ldw	r7,24(sp)
 c00bfdc:	01800044 	movi	r6,1
 c00bfe0:	180b883a 	mov	r5,r3
 c00bfe4:	2005883a 	mov	r2,r4
 c00bfe8:	39803826 	beq	r7,r6,c00c0cc <_dtoa_r+0x8f4>
 c00bfec:	000d883a 	mov	r6,zero
 c00bff0:	01d00934 	movhi	r7,16420
 c00bff4:	c01936c0 	call	c01936c <__muldf3>
 c00bff8:	000d883a 	mov	r6,zero
 c00bffc:	000f883a 	mov	r7,zero
 c00c000:	1009883a 	mov	r4,r2
 c00c004:	180b883a 	mov	r5,r3
 c00c008:	1025883a 	mov	r18,r2
 c00c00c:	1827883a 	mov	r19,r3
 c00c010:	c0191140 	call	c019114 <__eqdf2>
 c00c014:	103f9a26 	beq	r2,zero,c00be80 <__alt_data_end+0xfc00be80>
 c00c018:	d9c00617 	ldw	r7,24(sp)
 c00c01c:	d8c00717 	ldw	r3,28(sp)
 c00c020:	b829883a 	mov	r20,r23
 c00c024:	38bfffc4 	addi	r2,r7,-1
 c00c028:	18ad883a 	add	r22,r3,r2
 c00c02c:	00000a06 	br	c00c058 <_dtoa_r+0x880>
 c00c030:	c01936c0 	call	c01936c <__muldf3>
 c00c034:	000d883a 	mov	r6,zero
 c00c038:	000f883a 	mov	r7,zero
 c00c03c:	1009883a 	mov	r4,r2
 c00c040:	180b883a 	mov	r5,r3
 c00c044:	1025883a 	mov	r18,r2
 c00c048:	1827883a 	mov	r19,r3
 c00c04c:	b829883a 	mov	r20,r23
 c00c050:	c0191140 	call	c019114 <__eqdf2>
 c00c054:	103f8a26 	beq	r2,zero,c00be80 <__alt_data_end+0xfc00be80>
 c00c058:	800d883a 	mov	r6,r16
 c00c05c:	880f883a 	mov	r7,r17
 c00c060:	9009883a 	mov	r4,r18
 c00c064:	980b883a 	mov	r5,r19
 c00c068:	c0187440 	call	c018744 <__divdf3>
 c00c06c:	180b883a 	mov	r5,r3
 c00c070:	1009883a 	mov	r4,r2
 c00c074:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c00c078:	1009883a 	mov	r4,r2
 c00c07c:	102b883a 	mov	r21,r2
 c00c080:	c01a5540 	call	c01a554 <__floatsidf>
 c00c084:	800d883a 	mov	r6,r16
 c00c088:	880f883a 	mov	r7,r17
 c00c08c:	1009883a 	mov	r4,r2
 c00c090:	180b883a 	mov	r5,r3
 c00c094:	c01936c0 	call	c01936c <__muldf3>
 c00c098:	100d883a 	mov	r6,r2
 c00c09c:	180f883a 	mov	r7,r3
 c00c0a0:	9009883a 	mov	r4,r18
 c00c0a4:	980b883a 	mov	r5,r19
 c00c0a8:	c019bd80 	call	c019bd8 <__subdf3>
 c00c0ac:	aa000c04 	addi	r8,r21,48
 c00c0b0:	a2000005 	stb	r8,0(r20)
 c00c0b4:	000d883a 	mov	r6,zero
 c00c0b8:	01d00934 	movhi	r7,16420
 c00c0bc:	1009883a 	mov	r4,r2
 c00c0c0:	180b883a 	mov	r5,r3
 c00c0c4:	a5c00044 	addi	r23,r20,1
 c00c0c8:	b53fd91e 	bne	r22,r20,c00c030 <__alt_data_end+0xfc00c030>
 c00c0cc:	100d883a 	mov	r6,r2
 c00c0d0:	180f883a 	mov	r7,r3
 c00c0d4:	1009883a 	mov	r4,r2
 c00c0d8:	180b883a 	mov	r5,r3
 c00c0dc:	c017e980 	call	c017e98 <__adddf3>
 c00c0e0:	100d883a 	mov	r6,r2
 c00c0e4:	180f883a 	mov	r7,r3
 c00c0e8:	8009883a 	mov	r4,r16
 c00c0ec:	880b883a 	mov	r5,r17
 c00c0f0:	1027883a 	mov	r19,r2
 c00c0f4:	1825883a 	mov	r18,r3
 c00c0f8:	c0192780 	call	c019278 <__ledf2>
 c00c0fc:	10000816 	blt	r2,zero,c00c120 <_dtoa_r+0x948>
 c00c100:	980d883a 	mov	r6,r19
 c00c104:	900f883a 	mov	r7,r18
 c00c108:	8009883a 	mov	r4,r16
 c00c10c:	880b883a 	mov	r5,r17
 c00c110:	c0191140 	call	c019114 <__eqdf2>
 c00c114:	103f5a1e 	bne	r2,zero,c00be80 <__alt_data_end+0xfc00be80>
 c00c118:	ad40004c 	andi	r21,r21,1
 c00c11c:	a83f5826 	beq	r21,zero,c00be80 <__alt_data_end+0xfc00be80>
 c00c120:	bd3fffc3 	ldbu	r20,-1(r23)
 c00c124:	b8bfffc4 	addi	r2,r23,-1
 c00c128:	1007883a 	mov	r3,r2
 c00c12c:	01400e44 	movi	r5,57
 c00c130:	d9800717 	ldw	r6,28(sp)
 c00c134:	00000506 	br	c00c14c <_dtoa_r+0x974>
 c00c138:	18ffffc4 	addi	r3,r3,-1
 c00c13c:	11824726 	beq	r2,r6,c00ca5c <_dtoa_r+0x1284>
 c00c140:	1d000003 	ldbu	r20,0(r3)
 c00c144:	102f883a 	mov	r23,r2
 c00c148:	10bfffc4 	addi	r2,r2,-1
 c00c14c:	a1003fcc 	andi	r4,r20,255
 c00c150:	2100201c 	xori	r4,r4,128
 c00c154:	213fe004 	addi	r4,r4,-128
 c00c158:	217ff726 	beq	r4,r5,c00c138 <__alt_data_end+0xfc00c138>
 c00c15c:	a2000044 	addi	r8,r20,1
 c00c160:	12000005 	stb	r8,0(r2)
 c00c164:	003f4606 	br	c00be80 <__alt_data_end+0xfc00be80>
 c00c168:	d9000b17 	ldw	r4,44(sp)
 c00c16c:	2000c826 	beq	r4,zero,c00c490 <_dtoa_r+0xcb8>
 c00c170:	d9800317 	ldw	r6,12(sp)
 c00c174:	00c00044 	movi	r3,1
 c00c178:	1980f90e 	bge	r3,r6,c00c560 <_dtoa_r+0xd88>
 c00c17c:	d8800617 	ldw	r2,24(sp)
 c00c180:	d8c00a17 	ldw	r3,40(sp)
 c00c184:	157fffc4 	addi	r21,r2,-1
 c00c188:	1d41f316 	blt	r3,r21,c00c958 <_dtoa_r+0x1180>
 c00c18c:	1d6bc83a 	sub	r21,r3,r21
 c00c190:	d9c00617 	ldw	r7,24(sp)
 c00c194:	3802aa16 	blt	r7,zero,c00cc40 <_dtoa_r+0x1468>
 c00c198:	dd000817 	ldw	r20,32(sp)
 c00c19c:	d8800617 	ldw	r2,24(sp)
 c00c1a0:	d8c00817 	ldw	r3,32(sp)
 c00c1a4:	01400044 	movi	r5,1
 c00c1a8:	e009883a 	mov	r4,fp
 c00c1ac:	1887883a 	add	r3,r3,r2
 c00c1b0:	d8c00815 	stw	r3,32(sp)
 c00c1b4:	b0ad883a 	add	r22,r22,r2
 c00c1b8:	c00ef7c0 	call	c00ef7c <__i2b>
 c00c1bc:	1023883a 	mov	r17,r2
 c00c1c0:	a0000826 	beq	r20,zero,c00c1e4 <_dtoa_r+0xa0c>
 c00c1c4:	0580070e 	bge	zero,r22,c00c1e4 <_dtoa_r+0xa0c>
 c00c1c8:	a005883a 	mov	r2,r20
 c00c1cc:	b500b916 	blt	r22,r20,c00c4b4 <_dtoa_r+0xcdc>
 c00c1d0:	d9000817 	ldw	r4,32(sp)
 c00c1d4:	a0a9c83a 	sub	r20,r20,r2
 c00c1d8:	b0adc83a 	sub	r22,r22,r2
 c00c1dc:	2089c83a 	sub	r4,r4,r2
 c00c1e0:	d9000815 	stw	r4,32(sp)
 c00c1e4:	d9800a17 	ldw	r6,40(sp)
 c00c1e8:	0181810e 	bge	zero,r6,c00c7f0 <_dtoa_r+0x1018>
 c00c1ec:	d9c00b17 	ldw	r7,44(sp)
 c00c1f0:	3800b326 	beq	r7,zero,c00c4c0 <_dtoa_r+0xce8>
 c00c1f4:	a800b226 	beq	r21,zero,c00c4c0 <_dtoa_r+0xce8>
 c00c1f8:	880b883a 	mov	r5,r17
 c00c1fc:	a80d883a 	mov	r6,r21
 c00c200:	e009883a 	mov	r4,fp
 c00c204:	c00f2440 	call	c00f244 <__pow5mult>
 c00c208:	d9800917 	ldw	r6,36(sp)
 c00c20c:	100b883a 	mov	r5,r2
 c00c210:	e009883a 	mov	r4,fp
 c00c214:	1023883a 	mov	r17,r2
 c00c218:	c00efb80 	call	c00efb8 <__multiply>
 c00c21c:	1021883a 	mov	r16,r2
 c00c220:	d8800a17 	ldw	r2,40(sp)
 c00c224:	d9400917 	ldw	r5,36(sp)
 c00c228:	e009883a 	mov	r4,fp
 c00c22c:	1545c83a 	sub	r2,r2,r21
 c00c230:	d8800a15 	stw	r2,40(sp)
 c00c234:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00c238:	d8c00a17 	ldw	r3,40(sp)
 c00c23c:	18009f1e 	bne	r3,zero,c00c4bc <_dtoa_r+0xce4>
 c00c240:	05c00044 	movi	r23,1
 c00c244:	e009883a 	mov	r4,fp
 c00c248:	b80b883a 	mov	r5,r23
 c00c24c:	c00ef7c0 	call	c00ef7c <__i2b>
 c00c250:	d9000d17 	ldw	r4,52(sp)
 c00c254:	102b883a 	mov	r21,r2
 c00c258:	2000ce26 	beq	r4,zero,c00c594 <_dtoa_r+0xdbc>
 c00c25c:	200d883a 	mov	r6,r4
 c00c260:	100b883a 	mov	r5,r2
 c00c264:	e009883a 	mov	r4,fp
 c00c268:	c00f2440 	call	c00f244 <__pow5mult>
 c00c26c:	d9800317 	ldw	r6,12(sp)
 c00c270:	102b883a 	mov	r21,r2
 c00c274:	b981810e 	bge	r23,r6,c00c87c <_dtoa_r+0x10a4>
 c00c278:	0027883a 	mov	r19,zero
 c00c27c:	a8800417 	ldw	r2,16(r21)
 c00c280:	05c00804 	movi	r23,32
 c00c284:	10800104 	addi	r2,r2,4
 c00c288:	1085883a 	add	r2,r2,r2
 c00c28c:	1085883a 	add	r2,r2,r2
 c00c290:	a885883a 	add	r2,r21,r2
 c00c294:	11000017 	ldw	r4,0(r2)
 c00c298:	c00ee640 	call	c00ee64 <__hi0bits>
 c00c29c:	b885c83a 	sub	r2,r23,r2
 c00c2a0:	1585883a 	add	r2,r2,r22
 c00c2a4:	108007cc 	andi	r2,r2,31
 c00c2a8:	1000b326 	beq	r2,zero,c00c578 <_dtoa_r+0xda0>
 c00c2ac:	00c00804 	movi	r3,32
 c00c2b0:	1887c83a 	sub	r3,r3,r2
 c00c2b4:	01000104 	movi	r4,4
 c00c2b8:	20c2cd0e 	bge	r4,r3,c00cdf0 <_dtoa_r+0x1618>
 c00c2bc:	00c00704 	movi	r3,28
 c00c2c0:	1885c83a 	sub	r2,r3,r2
 c00c2c4:	d8c00817 	ldw	r3,32(sp)
 c00c2c8:	a0a9883a 	add	r20,r20,r2
 c00c2cc:	b0ad883a 	add	r22,r22,r2
 c00c2d0:	1887883a 	add	r3,r3,r2
 c00c2d4:	d8c00815 	stw	r3,32(sp)
 c00c2d8:	d9800817 	ldw	r6,32(sp)
 c00c2dc:	0180040e 	bge	zero,r6,c00c2f0 <_dtoa_r+0xb18>
 c00c2e0:	800b883a 	mov	r5,r16
 c00c2e4:	e009883a 	mov	r4,fp
 c00c2e8:	c00f3840 	call	c00f384 <__lshift>
 c00c2ec:	1021883a 	mov	r16,r2
 c00c2f0:	0580050e 	bge	zero,r22,c00c308 <_dtoa_r+0xb30>
 c00c2f4:	a80b883a 	mov	r5,r21
 c00c2f8:	b00d883a 	mov	r6,r22
 c00c2fc:	e009883a 	mov	r4,fp
 c00c300:	c00f3840 	call	c00f384 <__lshift>
 c00c304:	102b883a 	mov	r21,r2
 c00c308:	d9c00e17 	ldw	r7,56(sp)
 c00c30c:	3801211e 	bne	r7,zero,c00c794 <_dtoa_r+0xfbc>
 c00c310:	d9800617 	ldw	r6,24(sp)
 c00c314:	0181380e 	bge	zero,r6,c00c7f8 <_dtoa_r+0x1020>
 c00c318:	d8c00b17 	ldw	r3,44(sp)
 c00c31c:	1800ab1e 	bne	r3,zero,c00c5cc <_dtoa_r+0xdf4>
 c00c320:	dc800717 	ldw	r18,28(sp)
 c00c324:	dcc00617 	ldw	r19,24(sp)
 c00c328:	9029883a 	mov	r20,r18
 c00c32c:	00000206 	br	c00c338 <_dtoa_r+0xb60>
 c00c330:	c00ec180 	call	c00ec18 <__multadd>
 c00c334:	1021883a 	mov	r16,r2
 c00c338:	a80b883a 	mov	r5,r21
 c00c33c:	8009883a 	mov	r4,r16
 c00c340:	c00b5b00 	call	c00b5b0 <quorem>
 c00c344:	10800c04 	addi	r2,r2,48
 c00c348:	90800005 	stb	r2,0(r18)
 c00c34c:	94800044 	addi	r18,r18,1
 c00c350:	9507c83a 	sub	r3,r18,r20
 c00c354:	000f883a 	mov	r7,zero
 c00c358:	01800284 	movi	r6,10
 c00c35c:	800b883a 	mov	r5,r16
 c00c360:	e009883a 	mov	r4,fp
 c00c364:	1cfff216 	blt	r3,r19,c00c330 <__alt_data_end+0xfc00c330>
 c00c368:	1011883a 	mov	r8,r2
 c00c36c:	d8800617 	ldw	r2,24(sp)
 c00c370:	0082370e 	bge	zero,r2,c00cc50 <_dtoa_r+0x1478>
 c00c374:	d9000717 	ldw	r4,28(sp)
 c00c378:	0025883a 	mov	r18,zero
 c00c37c:	20af883a 	add	r23,r4,r2
 c00c380:	01800044 	movi	r6,1
 c00c384:	800b883a 	mov	r5,r16
 c00c388:	e009883a 	mov	r4,fp
 c00c38c:	da001715 	stw	r8,92(sp)
 c00c390:	c00f3840 	call	c00f384 <__lshift>
 c00c394:	a80b883a 	mov	r5,r21
 c00c398:	1009883a 	mov	r4,r2
 c00c39c:	d8800915 	stw	r2,36(sp)
 c00c3a0:	c00f4cc0 	call	c00f4cc <__mcmp>
 c00c3a4:	da001717 	ldw	r8,92(sp)
 c00c3a8:	0081800e 	bge	zero,r2,c00c9ac <_dtoa_r+0x11d4>
 c00c3ac:	b93fffc3 	ldbu	r4,-1(r23)
 c00c3b0:	b8bfffc4 	addi	r2,r23,-1
 c00c3b4:	1007883a 	mov	r3,r2
 c00c3b8:	01800e44 	movi	r6,57
 c00c3bc:	d9c00717 	ldw	r7,28(sp)
 c00c3c0:	00000506 	br	c00c3d8 <_dtoa_r+0xc00>
 c00c3c4:	18ffffc4 	addi	r3,r3,-1
 c00c3c8:	11c12326 	beq	r2,r7,c00c858 <_dtoa_r+0x1080>
 c00c3cc:	19000003 	ldbu	r4,0(r3)
 c00c3d0:	102f883a 	mov	r23,r2
 c00c3d4:	10bfffc4 	addi	r2,r2,-1
 c00c3d8:	21403fcc 	andi	r5,r4,255
 c00c3dc:	2940201c 	xori	r5,r5,128
 c00c3e0:	297fe004 	addi	r5,r5,-128
 c00c3e4:	29bff726 	beq	r5,r6,c00c3c4 <__alt_data_end+0xfc00c3c4>
 c00c3e8:	21000044 	addi	r4,r4,1
 c00c3ec:	11000005 	stb	r4,0(r2)
 c00c3f0:	a80b883a 	mov	r5,r21
 c00c3f4:	e009883a 	mov	r4,fp
 c00c3f8:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00c3fc:	883ea026 	beq	r17,zero,c00be80 <__alt_data_end+0xfc00be80>
 c00c400:	90000426 	beq	r18,zero,c00c414 <_dtoa_r+0xc3c>
 c00c404:	94400326 	beq	r18,r17,c00c414 <_dtoa_r+0xc3c>
 c00c408:	900b883a 	mov	r5,r18
 c00c40c:	e009883a 	mov	r4,fp
 c00c410:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00c414:	880b883a 	mov	r5,r17
 c00c418:	e009883a 	mov	r4,fp
 c00c41c:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00c420:	003e9706 	br	c00be80 <__alt_data_end+0xfc00be80>
 c00c424:	01800044 	movi	r6,1
 c00c428:	d9800e15 	stw	r6,56(sp)
 c00c42c:	003d9606 	br	c00ba88 <__alt_data_end+0xfc00ba88>
 c00c430:	d8800817 	ldw	r2,32(sp)
 c00c434:	d8c00517 	ldw	r3,20(sp)
 c00c438:	d8000d15 	stw	zero,52(sp)
 c00c43c:	10c5c83a 	sub	r2,r2,r3
 c00c440:	00c9c83a 	sub	r4,zero,r3
 c00c444:	d8800815 	stw	r2,32(sp)
 c00c448:	d9000a15 	stw	r4,40(sp)
 c00c44c:	003d9706 	br	c00baac <__alt_data_end+0xfc00baac>
 c00c450:	05adc83a 	sub	r22,zero,r22
 c00c454:	dd800815 	stw	r22,32(sp)
 c00c458:	002d883a 	mov	r22,zero
 c00c45c:	003d8e06 	br	c00ba98 <__alt_data_end+0xfc00ba98>
 c00c460:	d9000517 	ldw	r4,20(sp)
 c00c464:	c01a5540 	call	c01a554 <__floatsidf>
 c00c468:	100d883a 	mov	r6,r2
 c00c46c:	180f883a 	mov	r7,r3
 c00c470:	a009883a 	mov	r4,r20
 c00c474:	880b883a 	mov	r5,r17
 c00c478:	c0191140 	call	c019114 <__eqdf2>
 c00c47c:	103d7126 	beq	r2,zero,c00ba44 <__alt_data_end+0xfc00ba44>
 c00c480:	d9c00517 	ldw	r7,20(sp)
 c00c484:	39ffffc4 	addi	r7,r7,-1
 c00c488:	d9c00515 	stw	r7,20(sp)
 c00c48c:	003d6d06 	br	c00ba44 <__alt_data_end+0xfc00ba44>
 c00c490:	dd400a17 	ldw	r21,40(sp)
 c00c494:	dd000817 	ldw	r20,32(sp)
 c00c498:	0023883a 	mov	r17,zero
 c00c49c:	003f4806 	br	c00c1c0 <__alt_data_end+0xfc00c1c0>
 c00c4a0:	10e3c83a 	sub	r17,r2,r3
 c00c4a4:	9448983a 	sll	r4,r18,r17
 c00c4a8:	003d3206 	br	c00b974 <__alt_data_end+0xfc00b974>
 c00c4ac:	d8000e15 	stw	zero,56(sp)
 c00c4b0:	003d7506 	br	c00ba88 <__alt_data_end+0xfc00ba88>
 c00c4b4:	b005883a 	mov	r2,r22
 c00c4b8:	003f4506 	br	c00c1d0 <__alt_data_end+0xfc00c1d0>
 c00c4bc:	dc000915 	stw	r16,36(sp)
 c00c4c0:	d9800a17 	ldw	r6,40(sp)
 c00c4c4:	d9400917 	ldw	r5,36(sp)
 c00c4c8:	e009883a 	mov	r4,fp
 c00c4cc:	c00f2440 	call	c00f244 <__pow5mult>
 c00c4d0:	1021883a 	mov	r16,r2
 c00c4d4:	003f5a06 	br	c00c240 <__alt_data_end+0xfc00c240>
 c00c4d8:	01c00044 	movi	r7,1
 c00c4dc:	d9c00b15 	stw	r7,44(sp)
 c00c4e0:	d8802217 	ldw	r2,136(sp)
 c00c4e4:	0081280e 	bge	zero,r2,c00c988 <_dtoa_r+0x11b0>
 c00c4e8:	100d883a 	mov	r6,r2
 c00c4ec:	1021883a 	mov	r16,r2
 c00c4f0:	d8800c15 	stw	r2,48(sp)
 c00c4f4:	d8800615 	stw	r2,24(sp)
 c00c4f8:	003d8806 	br	c00bb1c <__alt_data_end+0xfc00bb1c>
 c00c4fc:	d8800617 	ldw	r2,24(sp)
 c00c500:	00be9b16 	blt	zero,r2,c00bf70 <__alt_data_end+0xfc00bf70>
 c00c504:	10010f1e 	bne	r2,zero,c00c944 <_dtoa_r+0x116c>
 c00c508:	880b883a 	mov	r5,r17
 c00c50c:	000d883a 	mov	r6,zero
 c00c510:	01d00534 	movhi	r7,16404
 c00c514:	8009883a 	mov	r4,r16
 c00c518:	c01936c0 	call	c01936c <__muldf3>
 c00c51c:	900d883a 	mov	r6,r18
 c00c520:	980f883a 	mov	r7,r19
 c00c524:	1009883a 	mov	r4,r2
 c00c528:	180b883a 	mov	r5,r3
 c00c52c:	c01919c0 	call	c01919c <__gedf2>
 c00c530:	002b883a 	mov	r21,zero
 c00c534:	0023883a 	mov	r17,zero
 c00c538:	1000bf16 	blt	r2,zero,c00c838 <_dtoa_r+0x1060>
 c00c53c:	d9802217 	ldw	r6,136(sp)
 c00c540:	ddc00717 	ldw	r23,28(sp)
 c00c544:	018c303a 	nor	r6,zero,r6
 c00c548:	d9800515 	stw	r6,20(sp)
 c00c54c:	a80b883a 	mov	r5,r21
 c00c550:	e009883a 	mov	r4,fp
 c00c554:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00c558:	883e4926 	beq	r17,zero,c00be80 <__alt_data_end+0xfc00be80>
 c00c55c:	003fad06 	br	c00c414 <__alt_data_end+0xfc00c414>
 c00c560:	d9c01117 	ldw	r7,68(sp)
 c00c564:	3801bc26 	beq	r7,zero,c00cc58 <_dtoa_r+0x1480>
 c00c568:	10810cc4 	addi	r2,r2,1075
 c00c56c:	dd400a17 	ldw	r21,40(sp)
 c00c570:	dd000817 	ldw	r20,32(sp)
 c00c574:	003f0a06 	br	c00c1a0 <__alt_data_end+0xfc00c1a0>
 c00c578:	00800704 	movi	r2,28
 c00c57c:	d9000817 	ldw	r4,32(sp)
 c00c580:	a0a9883a 	add	r20,r20,r2
 c00c584:	b0ad883a 	add	r22,r22,r2
 c00c588:	2089883a 	add	r4,r4,r2
 c00c58c:	d9000815 	stw	r4,32(sp)
 c00c590:	003f5106 	br	c00c2d8 <__alt_data_end+0xfc00c2d8>
 c00c594:	d8c00317 	ldw	r3,12(sp)
 c00c598:	b8c1fc0e 	bge	r23,r3,c00cd8c <_dtoa_r+0x15b4>
 c00c59c:	0027883a 	mov	r19,zero
 c00c5a0:	b805883a 	mov	r2,r23
 c00c5a4:	003f3e06 	br	c00c2a0 <__alt_data_end+0xfc00c2a0>
 c00c5a8:	880b883a 	mov	r5,r17
 c00c5ac:	e009883a 	mov	r4,fp
 c00c5b0:	000f883a 	mov	r7,zero
 c00c5b4:	01800284 	movi	r6,10
 c00c5b8:	c00ec180 	call	c00ec18 <__multadd>
 c00c5bc:	d9000c17 	ldw	r4,48(sp)
 c00c5c0:	1023883a 	mov	r17,r2
 c00c5c4:	0102040e 	bge	zero,r4,c00cdd8 <_dtoa_r+0x1600>
 c00c5c8:	d9000615 	stw	r4,24(sp)
 c00c5cc:	0500050e 	bge	zero,r20,c00c5e4 <_dtoa_r+0xe0c>
 c00c5d0:	880b883a 	mov	r5,r17
 c00c5d4:	a00d883a 	mov	r6,r20
 c00c5d8:	e009883a 	mov	r4,fp
 c00c5dc:	c00f3840 	call	c00f384 <__lshift>
 c00c5e0:	1023883a 	mov	r17,r2
 c00c5e4:	9801241e 	bne	r19,zero,c00ca78 <_dtoa_r+0x12a0>
 c00c5e8:	8829883a 	mov	r20,r17
 c00c5ec:	d9000617 	ldw	r4,24(sp)
 c00c5f0:	dcc00717 	ldw	r19,28(sp)
 c00c5f4:	9480004c 	andi	r18,r18,1
 c00c5f8:	20bfffc4 	addi	r2,r4,-1
 c00c5fc:	9885883a 	add	r2,r19,r2
 c00c600:	d8800415 	stw	r2,16(sp)
 c00c604:	dc800615 	stw	r18,24(sp)
 c00c608:	a80b883a 	mov	r5,r21
 c00c60c:	8009883a 	mov	r4,r16
 c00c610:	c00b5b00 	call	c00b5b0 <quorem>
 c00c614:	880b883a 	mov	r5,r17
 c00c618:	8009883a 	mov	r4,r16
 c00c61c:	102f883a 	mov	r23,r2
 c00c620:	c00f4cc0 	call	c00f4cc <__mcmp>
 c00c624:	a80b883a 	mov	r5,r21
 c00c628:	a00d883a 	mov	r6,r20
 c00c62c:	e009883a 	mov	r4,fp
 c00c630:	102d883a 	mov	r22,r2
 c00c634:	c00f52c0 	call	c00f52c <__mdiff>
 c00c638:	1007883a 	mov	r3,r2
 c00c63c:	10800317 	ldw	r2,12(r2)
 c00c640:	bc800c04 	addi	r18,r23,48
 c00c644:	180b883a 	mov	r5,r3
 c00c648:	10004e1e 	bne	r2,zero,c00c784 <_dtoa_r+0xfac>
 c00c64c:	8009883a 	mov	r4,r16
 c00c650:	d8c01615 	stw	r3,88(sp)
 c00c654:	c00f4cc0 	call	c00f4cc <__mcmp>
 c00c658:	d8c01617 	ldw	r3,88(sp)
 c00c65c:	e009883a 	mov	r4,fp
 c00c660:	d8801615 	stw	r2,88(sp)
 c00c664:	180b883a 	mov	r5,r3
 c00c668:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00c66c:	d8801617 	ldw	r2,88(sp)
 c00c670:	1000041e 	bne	r2,zero,c00c684 <_dtoa_r+0xeac>
 c00c674:	d9800317 	ldw	r6,12(sp)
 c00c678:	3000021e 	bne	r6,zero,c00c684 <_dtoa_r+0xeac>
 c00c67c:	d8c00617 	ldw	r3,24(sp)
 c00c680:	18003726 	beq	r3,zero,c00c760 <_dtoa_r+0xf88>
 c00c684:	b0002016 	blt	r22,zero,c00c708 <_dtoa_r+0xf30>
 c00c688:	b000041e 	bne	r22,zero,c00c69c <_dtoa_r+0xec4>
 c00c68c:	d9000317 	ldw	r4,12(sp)
 c00c690:	2000021e 	bne	r4,zero,c00c69c <_dtoa_r+0xec4>
 c00c694:	d8c00617 	ldw	r3,24(sp)
 c00c698:	18001b26 	beq	r3,zero,c00c708 <_dtoa_r+0xf30>
 c00c69c:	00810716 	blt	zero,r2,c00cabc <_dtoa_r+0x12e4>
 c00c6a0:	d8c00417 	ldw	r3,16(sp)
 c00c6a4:	9d800044 	addi	r22,r19,1
 c00c6a8:	9c800005 	stb	r18,0(r19)
 c00c6ac:	b02f883a 	mov	r23,r22
 c00c6b0:	98c10626 	beq	r19,r3,c00cacc <_dtoa_r+0x12f4>
 c00c6b4:	800b883a 	mov	r5,r16
 c00c6b8:	000f883a 	mov	r7,zero
 c00c6bc:	01800284 	movi	r6,10
 c00c6c0:	e009883a 	mov	r4,fp
 c00c6c4:	c00ec180 	call	c00ec18 <__multadd>
 c00c6c8:	1021883a 	mov	r16,r2
 c00c6cc:	000f883a 	mov	r7,zero
 c00c6d0:	01800284 	movi	r6,10
 c00c6d4:	880b883a 	mov	r5,r17
 c00c6d8:	e009883a 	mov	r4,fp
 c00c6dc:	8d002526 	beq	r17,r20,c00c774 <_dtoa_r+0xf9c>
 c00c6e0:	c00ec180 	call	c00ec18 <__multadd>
 c00c6e4:	a00b883a 	mov	r5,r20
 c00c6e8:	000f883a 	mov	r7,zero
 c00c6ec:	01800284 	movi	r6,10
 c00c6f0:	e009883a 	mov	r4,fp
 c00c6f4:	1023883a 	mov	r17,r2
 c00c6f8:	c00ec180 	call	c00ec18 <__multadd>
 c00c6fc:	1029883a 	mov	r20,r2
 c00c700:	b027883a 	mov	r19,r22
 c00c704:	003fc006 	br	c00c608 <__alt_data_end+0xfc00c608>
 c00c708:	9011883a 	mov	r8,r18
 c00c70c:	00800e0e 	bge	zero,r2,c00c748 <_dtoa_r+0xf70>
 c00c710:	800b883a 	mov	r5,r16
 c00c714:	01800044 	movi	r6,1
 c00c718:	e009883a 	mov	r4,fp
 c00c71c:	da001715 	stw	r8,92(sp)
 c00c720:	c00f3840 	call	c00f384 <__lshift>
 c00c724:	a80b883a 	mov	r5,r21
 c00c728:	1009883a 	mov	r4,r2
 c00c72c:	1021883a 	mov	r16,r2
 c00c730:	c00f4cc0 	call	c00f4cc <__mcmp>
 c00c734:	da001717 	ldw	r8,92(sp)
 c00c738:	0081960e 	bge	zero,r2,c00cd94 <_dtoa_r+0x15bc>
 c00c73c:	00800e44 	movi	r2,57
 c00c740:	40817026 	beq	r8,r2,c00cd04 <_dtoa_r+0x152c>
 c00c744:	ba000c44 	addi	r8,r23,49
 c00c748:	8825883a 	mov	r18,r17
 c00c74c:	9dc00044 	addi	r23,r19,1
 c00c750:	9a000005 	stb	r8,0(r19)
 c00c754:	a023883a 	mov	r17,r20
 c00c758:	dc000915 	stw	r16,36(sp)
 c00c75c:	003f2406 	br	c00c3f0 <__alt_data_end+0xfc00c3f0>
 c00c760:	00800e44 	movi	r2,57
 c00c764:	9011883a 	mov	r8,r18
 c00c768:	90816626 	beq	r18,r2,c00cd04 <_dtoa_r+0x152c>
 c00c76c:	05bff516 	blt	zero,r22,c00c744 <__alt_data_end+0xfc00c744>
 c00c770:	003ff506 	br	c00c748 <__alt_data_end+0xfc00c748>
 c00c774:	c00ec180 	call	c00ec18 <__multadd>
 c00c778:	1023883a 	mov	r17,r2
 c00c77c:	1029883a 	mov	r20,r2
 c00c780:	003fdf06 	br	c00c700 <__alt_data_end+0xfc00c700>
 c00c784:	e009883a 	mov	r4,fp
 c00c788:	c00ebf00 	call	c00ebf0 <_Bfree>
 c00c78c:	00800044 	movi	r2,1
 c00c790:	003fbc06 	br	c00c684 <__alt_data_end+0xfc00c684>
 c00c794:	a80b883a 	mov	r5,r21
 c00c798:	8009883a 	mov	r4,r16
 c00c79c:	c00f4cc0 	call	c00f4cc <__mcmp>
 c00c7a0:	103edb0e 	bge	r2,zero,c00c310 <__alt_data_end+0xfc00c310>
 c00c7a4:	800b883a 	mov	r5,r16
 c00c7a8:	000f883a 	mov	r7,zero
 c00c7ac:	01800284 	movi	r6,10
 c00c7b0:	e009883a 	mov	r4,fp
 c00c7b4:	c00ec180 	call	c00ec18 <__multadd>
 c00c7b8:	1021883a 	mov	r16,r2
 c00c7bc:	d8800517 	ldw	r2,20(sp)
 c00c7c0:	d8c00b17 	ldw	r3,44(sp)
 c00c7c4:	10bfffc4 	addi	r2,r2,-1
 c00c7c8:	d8800515 	stw	r2,20(sp)
 c00c7cc:	183f761e 	bne	r3,zero,c00c5a8 <__alt_data_end+0xfc00c5a8>
 c00c7d0:	d9000c17 	ldw	r4,48(sp)
 c00c7d4:	0101730e 	bge	zero,r4,c00cda4 <_dtoa_r+0x15cc>
 c00c7d8:	d9000615 	stw	r4,24(sp)
 c00c7dc:	003ed006 	br	c00c320 <__alt_data_end+0xfc00c320>
 c00c7e0:	00800084 	movi	r2,2
 c00c7e4:	3081861e 	bne	r6,r2,c00ce00 <_dtoa_r+0x1628>
 c00c7e8:	d8000b15 	stw	zero,44(sp)
 c00c7ec:	003f3c06 	br	c00c4e0 <__alt_data_end+0xfc00c4e0>
 c00c7f0:	dc000917 	ldw	r16,36(sp)
 c00c7f4:	003e9206 	br	c00c240 <__alt_data_end+0xfc00c240>
 c00c7f8:	d9c00317 	ldw	r7,12(sp)
 c00c7fc:	00800084 	movi	r2,2
 c00c800:	11fec50e 	bge	r2,r7,c00c318 <__alt_data_end+0xfc00c318>
 c00c804:	d9000617 	ldw	r4,24(sp)
 c00c808:	20013c1e 	bne	r4,zero,c00ccfc <_dtoa_r+0x1524>
 c00c80c:	a80b883a 	mov	r5,r21
 c00c810:	000f883a 	mov	r7,zero
 c00c814:	01800144 	movi	r6,5
 c00c818:	e009883a 	mov	r4,fp
 c00c81c:	c00ec180 	call	c00ec18 <__multadd>
 c00c820:	100b883a 	mov	r5,r2
 c00c824:	8009883a 	mov	r4,r16
 c00c828:	102b883a 	mov	r21,r2
 c00c82c:	c00f4cc0 	call	c00f4cc <__mcmp>
 c00c830:	dc000915 	stw	r16,36(sp)
 c00c834:	00bf410e 	bge	zero,r2,c00c53c <__alt_data_end+0xfc00c53c>
 c00c838:	d9c00717 	ldw	r7,28(sp)
 c00c83c:	00800c44 	movi	r2,49
 c00c840:	38800005 	stb	r2,0(r7)
 c00c844:	d8800517 	ldw	r2,20(sp)
 c00c848:	3dc00044 	addi	r23,r7,1
 c00c84c:	10800044 	addi	r2,r2,1
 c00c850:	d8800515 	stw	r2,20(sp)
 c00c854:	003f3d06 	br	c00c54c <__alt_data_end+0xfc00c54c>
 c00c858:	d9800517 	ldw	r6,20(sp)
 c00c85c:	d9c00717 	ldw	r7,28(sp)
 c00c860:	00800c44 	movi	r2,49
 c00c864:	31800044 	addi	r6,r6,1
 c00c868:	d9800515 	stw	r6,20(sp)
 c00c86c:	38800005 	stb	r2,0(r7)
 c00c870:	003edf06 	br	c00c3f0 <__alt_data_end+0xfc00c3f0>
 c00c874:	d8000b15 	stw	zero,44(sp)
 c00c878:	003c9f06 	br	c00baf8 <__alt_data_end+0xfc00baf8>
 c00c87c:	903e7e1e 	bne	r18,zero,c00c278 <__alt_data_end+0xfc00c278>
 c00c880:	00800434 	movhi	r2,16
 c00c884:	10bfffc4 	addi	r2,r2,-1
 c00c888:	9884703a 	and	r2,r19,r2
 c00c88c:	1000ea1e 	bne	r2,zero,c00cc38 <_dtoa_r+0x1460>
 c00c890:	9cdffc2c 	andhi	r19,r19,32752
 c00c894:	9800e826 	beq	r19,zero,c00cc38 <_dtoa_r+0x1460>
 c00c898:	d9c00817 	ldw	r7,32(sp)
 c00c89c:	b5800044 	addi	r22,r22,1
 c00c8a0:	04c00044 	movi	r19,1
 c00c8a4:	39c00044 	addi	r7,r7,1
 c00c8a8:	d9c00815 	stw	r7,32(sp)
 c00c8ac:	d8800d17 	ldw	r2,52(sp)
 c00c8b0:	103e721e 	bne	r2,zero,c00c27c <__alt_data_end+0xfc00c27c>
 c00c8b4:	00800044 	movi	r2,1
 c00c8b8:	003e7906 	br	c00c2a0 <__alt_data_end+0xfc00c2a0>
 c00c8bc:	8009883a 	mov	r4,r16
 c00c8c0:	c01a5540 	call	c01a554 <__floatsidf>
 c00c8c4:	d9800f17 	ldw	r6,60(sp)
 c00c8c8:	d9c01017 	ldw	r7,64(sp)
 c00c8cc:	1009883a 	mov	r4,r2
 c00c8d0:	180b883a 	mov	r5,r3
 c00c8d4:	c01936c0 	call	c01936c <__muldf3>
 c00c8d8:	000d883a 	mov	r6,zero
 c00c8dc:	01d00734 	movhi	r7,16412
 c00c8e0:	1009883a 	mov	r4,r2
 c00c8e4:	180b883a 	mov	r5,r3
 c00c8e8:	c017e980 	call	c017e98 <__adddf3>
 c00c8ec:	047f3034 	movhi	r17,64704
 c00c8f0:	1021883a 	mov	r16,r2
 c00c8f4:	1c63883a 	add	r17,r3,r17
 c00c8f8:	d9000f17 	ldw	r4,60(sp)
 c00c8fc:	d9401017 	ldw	r5,64(sp)
 c00c900:	000d883a 	mov	r6,zero
 c00c904:	01d00534 	movhi	r7,16404
 c00c908:	c019bd80 	call	c019bd8 <__subdf3>
 c00c90c:	800d883a 	mov	r6,r16
 c00c910:	880f883a 	mov	r7,r17
 c00c914:	1009883a 	mov	r4,r2
 c00c918:	180b883a 	mov	r5,r3
 c00c91c:	102b883a 	mov	r21,r2
 c00c920:	1829883a 	mov	r20,r3
 c00c924:	c01919c0 	call	c01919c <__gedf2>
 c00c928:	00806c16 	blt	zero,r2,c00cadc <_dtoa_r+0x1304>
 c00c92c:	89e0003c 	xorhi	r7,r17,32768
 c00c930:	800d883a 	mov	r6,r16
 c00c934:	a809883a 	mov	r4,r21
 c00c938:	a00b883a 	mov	r5,r20
 c00c93c:	c0192780 	call	c019278 <__ledf2>
 c00c940:	103d7e0e 	bge	r2,zero,c00bf3c <__alt_data_end+0xfc00bf3c>
 c00c944:	002b883a 	mov	r21,zero
 c00c948:	0023883a 	mov	r17,zero
 c00c94c:	003efb06 	br	c00c53c <__alt_data_end+0xfc00c53c>
 c00c950:	d8800717 	ldw	r2,28(sp)
 c00c954:	003bd006 	br	c00b898 <__alt_data_end+0xfc00b898>
 c00c958:	d9000a17 	ldw	r4,40(sp)
 c00c95c:	d9800d17 	ldw	r6,52(sp)
 c00c960:	dd400a15 	stw	r21,40(sp)
 c00c964:	a905c83a 	sub	r2,r21,r4
 c00c968:	308d883a 	add	r6,r6,r2
 c00c96c:	d9800d15 	stw	r6,52(sp)
 c00c970:	002b883a 	mov	r21,zero
 c00c974:	003e0606 	br	c00c190 <__alt_data_end+0xfc00c190>
 c00c978:	9023883a 	mov	r17,r18
 c00c97c:	9829883a 	mov	r20,r19
 c00c980:	04000084 	movi	r16,2
 c00c984:	003c9206 	br	c00bbd0 <__alt_data_end+0xfc00bbd0>
 c00c988:	04000044 	movi	r16,1
 c00c98c:	dc000c15 	stw	r16,48(sp)
 c00c990:	dc000615 	stw	r16,24(sp)
 c00c994:	dc002215 	stw	r16,136(sp)
 c00c998:	e0001115 	stw	zero,68(fp)
 c00c99c:	000b883a 	mov	r5,zero
 c00c9a0:	003c6906 	br	c00bb48 <__alt_data_end+0xfc00bb48>
 c00c9a4:	3021883a 	mov	r16,r6
 c00c9a8:	003ffb06 	br	c00c998 <__alt_data_end+0xfc00c998>
 c00c9ac:	1000021e 	bne	r2,zero,c00c9b8 <_dtoa_r+0x11e0>
 c00c9b0:	4200004c 	andi	r8,r8,1
 c00c9b4:	403e7d1e 	bne	r8,zero,c00c3ac <__alt_data_end+0xfc00c3ac>
 c00c9b8:	01000c04 	movi	r4,48
 c00c9bc:	00000106 	br	c00c9c4 <_dtoa_r+0x11ec>
 c00c9c0:	102f883a 	mov	r23,r2
 c00c9c4:	b8bfffc4 	addi	r2,r23,-1
 c00c9c8:	10c00007 	ldb	r3,0(r2)
 c00c9cc:	193ffc26 	beq	r3,r4,c00c9c0 <__alt_data_end+0xfc00c9c0>
 c00c9d0:	003e8706 	br	c00c3f0 <__alt_data_end+0xfc00c3f0>
 c00c9d4:	d8800517 	ldw	r2,20(sp)
 c00c9d8:	00a3c83a 	sub	r17,zero,r2
 c00c9dc:	8800a426 	beq	r17,zero,c00cc70 <_dtoa_r+0x1498>
 c00c9e0:	888003cc 	andi	r2,r17,15
 c00c9e4:	100490fa 	slli	r2,r2,3
 c00c9e8:	00c300b4 	movhi	r3,3074
 c00c9ec:	18f76304 	addi	r3,r3,-8820
 c00c9f0:	1885883a 	add	r2,r3,r2
 c00c9f4:	11800017 	ldw	r6,0(r2)
 c00c9f8:	11c00117 	ldw	r7,4(r2)
 c00c9fc:	9009883a 	mov	r4,r18
 c00ca00:	980b883a 	mov	r5,r19
 c00ca04:	8823d13a 	srai	r17,r17,4
 c00ca08:	c01936c0 	call	c01936c <__muldf3>
 c00ca0c:	d8800f15 	stw	r2,60(sp)
 c00ca10:	d8c01015 	stw	r3,64(sp)
 c00ca14:	8800e826 	beq	r17,zero,c00cdb8 <_dtoa_r+0x15e0>
 c00ca18:	050300b4 	movhi	r20,3074
 c00ca1c:	a5375904 	addi	r20,r20,-8860
 c00ca20:	04000084 	movi	r16,2
 c00ca24:	8980004c 	andi	r6,r17,1
 c00ca28:	1009883a 	mov	r4,r2
 c00ca2c:	8823d07a 	srai	r17,r17,1
 c00ca30:	180b883a 	mov	r5,r3
 c00ca34:	30000426 	beq	r6,zero,c00ca48 <_dtoa_r+0x1270>
 c00ca38:	a1800017 	ldw	r6,0(r20)
 c00ca3c:	a1c00117 	ldw	r7,4(r20)
 c00ca40:	84000044 	addi	r16,r16,1
 c00ca44:	c01936c0 	call	c01936c <__muldf3>
 c00ca48:	a5000204 	addi	r20,r20,8
 c00ca4c:	883ff51e 	bne	r17,zero,c00ca24 <__alt_data_end+0xfc00ca24>
 c00ca50:	d8800f15 	stw	r2,60(sp)
 c00ca54:	d8c01015 	stw	r3,64(sp)
 c00ca58:	003c7606 	br	c00bc34 <__alt_data_end+0xfc00bc34>
 c00ca5c:	00c00c04 	movi	r3,48
 c00ca60:	10c00005 	stb	r3,0(r2)
 c00ca64:	d8c00517 	ldw	r3,20(sp)
 c00ca68:	bd3fffc3 	ldbu	r20,-1(r23)
 c00ca6c:	18c00044 	addi	r3,r3,1
 c00ca70:	d8c00515 	stw	r3,20(sp)
 c00ca74:	003db906 	br	c00c15c <__alt_data_end+0xfc00c15c>
 c00ca78:	89400117 	ldw	r5,4(r17)
 c00ca7c:	e009883a 	mov	r4,fp
 c00ca80:	c00eb480 	call	c00eb48 <_Balloc>
 c00ca84:	89800417 	ldw	r6,16(r17)
 c00ca88:	89400304 	addi	r5,r17,12
 c00ca8c:	11000304 	addi	r4,r2,12
 c00ca90:	31800084 	addi	r6,r6,2
 c00ca94:	318d883a 	add	r6,r6,r6
 c00ca98:	318d883a 	add	r6,r6,r6
 c00ca9c:	1027883a 	mov	r19,r2
 c00caa0:	c00e77c0 	call	c00e77c <memcpy>
 c00caa4:	01800044 	movi	r6,1
 c00caa8:	980b883a 	mov	r5,r19
 c00caac:	e009883a 	mov	r4,fp
 c00cab0:	c00f3840 	call	c00f384 <__lshift>
 c00cab4:	1029883a 	mov	r20,r2
 c00cab8:	003ecc06 	br	c00c5ec <__alt_data_end+0xfc00c5ec>
 c00cabc:	00800e44 	movi	r2,57
 c00cac0:	90809026 	beq	r18,r2,c00cd04 <_dtoa_r+0x152c>
 c00cac4:	92000044 	addi	r8,r18,1
 c00cac8:	003f1f06 	br	c00c748 <__alt_data_end+0xfc00c748>
 c00cacc:	9011883a 	mov	r8,r18
 c00cad0:	8825883a 	mov	r18,r17
 c00cad4:	a023883a 	mov	r17,r20
 c00cad8:	003e2906 	br	c00c380 <__alt_data_end+0xfc00c380>
 c00cadc:	002b883a 	mov	r21,zero
 c00cae0:	0023883a 	mov	r17,zero
 c00cae4:	003f5406 	br	c00c838 <__alt_data_end+0xfc00c838>
 c00cae8:	61bfffc4 	addi	r6,r12,-1
 c00caec:	300490fa 	slli	r2,r6,3
 c00caf0:	00c300b4 	movhi	r3,3074
 c00caf4:	18f76304 	addi	r3,r3,-8820
 c00caf8:	1885883a 	add	r2,r3,r2
 c00cafc:	11000017 	ldw	r4,0(r2)
 c00cb00:	11400117 	ldw	r5,4(r2)
 c00cb04:	d8800717 	ldw	r2,28(sp)
 c00cb08:	880f883a 	mov	r7,r17
 c00cb0c:	d9801215 	stw	r6,72(sp)
 c00cb10:	800d883a 	mov	r6,r16
 c00cb14:	db001615 	stw	r12,88(sp)
 c00cb18:	15c00044 	addi	r23,r2,1
 c00cb1c:	c01936c0 	call	c01936c <__muldf3>
 c00cb20:	d9401017 	ldw	r5,64(sp)
 c00cb24:	d9000f17 	ldw	r4,60(sp)
 c00cb28:	d8c01515 	stw	r3,84(sp)
 c00cb2c:	d8801415 	stw	r2,80(sp)
 c00cb30:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c00cb34:	1009883a 	mov	r4,r2
 c00cb38:	1021883a 	mov	r16,r2
 c00cb3c:	c01a5540 	call	c01a554 <__floatsidf>
 c00cb40:	d9000f17 	ldw	r4,60(sp)
 c00cb44:	d9401017 	ldw	r5,64(sp)
 c00cb48:	100d883a 	mov	r6,r2
 c00cb4c:	180f883a 	mov	r7,r3
 c00cb50:	c019bd80 	call	c019bd8 <__subdf3>
 c00cb54:	1829883a 	mov	r20,r3
 c00cb58:	d8c00717 	ldw	r3,28(sp)
 c00cb5c:	84000c04 	addi	r16,r16,48
 c00cb60:	1023883a 	mov	r17,r2
 c00cb64:	1c000005 	stb	r16,0(r3)
 c00cb68:	db001617 	ldw	r12,88(sp)
 c00cb6c:	00800044 	movi	r2,1
 c00cb70:	60802226 	beq	r12,r2,c00cbfc <_dtoa_r+0x1424>
 c00cb74:	d9c00717 	ldw	r7,28(sp)
 c00cb78:	8805883a 	mov	r2,r17
 c00cb7c:	b82b883a 	mov	r21,r23
 c00cb80:	3b19883a 	add	r12,r7,r12
 c00cb84:	6023883a 	mov	r17,r12
 c00cb88:	a007883a 	mov	r3,r20
 c00cb8c:	dc800f15 	stw	r18,60(sp)
 c00cb90:	000d883a 	mov	r6,zero
 c00cb94:	01d00934 	movhi	r7,16420
 c00cb98:	1009883a 	mov	r4,r2
 c00cb9c:	180b883a 	mov	r5,r3
 c00cba0:	c01936c0 	call	c01936c <__muldf3>
 c00cba4:	180b883a 	mov	r5,r3
 c00cba8:	1009883a 	mov	r4,r2
 c00cbac:	1829883a 	mov	r20,r3
 c00cbb0:	1025883a 	mov	r18,r2
 c00cbb4:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c00cbb8:	1009883a 	mov	r4,r2
 c00cbbc:	1021883a 	mov	r16,r2
 c00cbc0:	c01a5540 	call	c01a554 <__floatsidf>
 c00cbc4:	100d883a 	mov	r6,r2
 c00cbc8:	180f883a 	mov	r7,r3
 c00cbcc:	9009883a 	mov	r4,r18
 c00cbd0:	a00b883a 	mov	r5,r20
 c00cbd4:	84000c04 	addi	r16,r16,48
 c00cbd8:	c019bd80 	call	c019bd8 <__subdf3>
 c00cbdc:	ad400044 	addi	r21,r21,1
 c00cbe0:	ac3fffc5 	stb	r16,-1(r21)
 c00cbe4:	ac7fea1e 	bne	r21,r17,c00cb90 <__alt_data_end+0xfc00cb90>
 c00cbe8:	1023883a 	mov	r17,r2
 c00cbec:	d8801217 	ldw	r2,72(sp)
 c00cbf0:	dc800f17 	ldw	r18,60(sp)
 c00cbf4:	1829883a 	mov	r20,r3
 c00cbf8:	b8af883a 	add	r23,r23,r2
 c00cbfc:	d9001417 	ldw	r4,80(sp)
 c00cc00:	d9401517 	ldw	r5,84(sp)
 c00cc04:	000d883a 	mov	r6,zero
 c00cc08:	01cff834 	movhi	r7,16352
 c00cc0c:	c017e980 	call	c017e98 <__adddf3>
 c00cc10:	880d883a 	mov	r6,r17
 c00cc14:	a00f883a 	mov	r7,r20
 c00cc18:	1009883a 	mov	r4,r2
 c00cc1c:	180b883a 	mov	r5,r3
 c00cc20:	c0192780 	call	c019278 <__ledf2>
 c00cc24:	10003e0e 	bge	r2,zero,c00cd20 <_dtoa_r+0x1548>
 c00cc28:	d9001317 	ldw	r4,76(sp)
 c00cc2c:	bd3fffc3 	ldbu	r20,-1(r23)
 c00cc30:	d9000515 	stw	r4,20(sp)
 c00cc34:	003d3b06 	br	c00c124 <__alt_data_end+0xfc00c124>
 c00cc38:	0027883a 	mov	r19,zero
 c00cc3c:	003f1b06 	br	c00c8ac <__alt_data_end+0xfc00c8ac>
 c00cc40:	d8800817 	ldw	r2,32(sp)
 c00cc44:	11e9c83a 	sub	r20,r2,r7
 c00cc48:	0005883a 	mov	r2,zero
 c00cc4c:	003d5406 	br	c00c1a0 <__alt_data_end+0xfc00c1a0>
 c00cc50:	00800044 	movi	r2,1
 c00cc54:	003dc706 	br	c00c374 <__alt_data_end+0xfc00c374>
 c00cc58:	d8c00217 	ldw	r3,8(sp)
 c00cc5c:	00800d84 	movi	r2,54
 c00cc60:	dd400a17 	ldw	r21,40(sp)
 c00cc64:	10c5c83a 	sub	r2,r2,r3
 c00cc68:	dd000817 	ldw	r20,32(sp)
 c00cc6c:	003d4c06 	br	c00c1a0 <__alt_data_end+0xfc00c1a0>
 c00cc70:	dc800f15 	stw	r18,60(sp)
 c00cc74:	dcc01015 	stw	r19,64(sp)
 c00cc78:	04000084 	movi	r16,2
 c00cc7c:	003bed06 	br	c00bc34 <__alt_data_end+0xfc00bc34>
 c00cc80:	d9000617 	ldw	r4,24(sp)
 c00cc84:	203f0d26 	beq	r4,zero,c00c8bc <__alt_data_end+0xfc00c8bc>
 c00cc88:	d9800c17 	ldw	r6,48(sp)
 c00cc8c:	01bcab0e 	bge	zero,r6,c00bf3c <__alt_data_end+0xfc00bf3c>
 c00cc90:	d9401017 	ldw	r5,64(sp)
 c00cc94:	d9000f17 	ldw	r4,60(sp)
 c00cc98:	000d883a 	mov	r6,zero
 c00cc9c:	01d00934 	movhi	r7,16420
 c00cca0:	c01936c0 	call	c01936c <__muldf3>
 c00cca4:	81000044 	addi	r4,r16,1
 c00cca8:	d8800f15 	stw	r2,60(sp)
 c00ccac:	d8c01015 	stw	r3,64(sp)
 c00ccb0:	c01a5540 	call	c01a554 <__floatsidf>
 c00ccb4:	d9800f17 	ldw	r6,60(sp)
 c00ccb8:	d9c01017 	ldw	r7,64(sp)
 c00ccbc:	1009883a 	mov	r4,r2
 c00ccc0:	180b883a 	mov	r5,r3
 c00ccc4:	c01936c0 	call	c01936c <__muldf3>
 c00ccc8:	01d00734 	movhi	r7,16412
 c00cccc:	000d883a 	mov	r6,zero
 c00ccd0:	1009883a 	mov	r4,r2
 c00ccd4:	180b883a 	mov	r5,r3
 c00ccd8:	c017e980 	call	c017e98 <__adddf3>
 c00ccdc:	d9c00517 	ldw	r7,20(sp)
 c00cce0:	047f3034 	movhi	r17,64704
 c00cce4:	1021883a 	mov	r16,r2
 c00cce8:	39ffffc4 	addi	r7,r7,-1
 c00ccec:	d9c01315 	stw	r7,76(sp)
 c00ccf0:	1c63883a 	add	r17,r3,r17
 c00ccf4:	db000c17 	ldw	r12,48(sp)
 c00ccf8:	003bea06 	br	c00bca4 <__alt_data_end+0xfc00bca4>
 c00ccfc:	dc000915 	stw	r16,36(sp)
 c00cd00:	003e0e06 	br	c00c53c <__alt_data_end+0xfc00c53c>
 c00cd04:	01000e44 	movi	r4,57
 c00cd08:	8825883a 	mov	r18,r17
 c00cd0c:	9dc00044 	addi	r23,r19,1
 c00cd10:	99000005 	stb	r4,0(r19)
 c00cd14:	a023883a 	mov	r17,r20
 c00cd18:	dc000915 	stw	r16,36(sp)
 c00cd1c:	003da406 	br	c00c3b0 <__alt_data_end+0xfc00c3b0>
 c00cd20:	d9801417 	ldw	r6,80(sp)
 c00cd24:	d9c01517 	ldw	r7,84(sp)
 c00cd28:	0009883a 	mov	r4,zero
 c00cd2c:	014ff834 	movhi	r5,16352
 c00cd30:	c019bd80 	call	c019bd8 <__subdf3>
 c00cd34:	880d883a 	mov	r6,r17
 c00cd38:	a00f883a 	mov	r7,r20
 c00cd3c:	1009883a 	mov	r4,r2
 c00cd40:	180b883a 	mov	r5,r3
 c00cd44:	c01919c0 	call	c01919c <__gedf2>
 c00cd48:	00bc7c0e 	bge	zero,r2,c00bf3c <__alt_data_end+0xfc00bf3c>
 c00cd4c:	01000c04 	movi	r4,48
 c00cd50:	00000106 	br	c00cd58 <_dtoa_r+0x1580>
 c00cd54:	102f883a 	mov	r23,r2
 c00cd58:	b8bfffc4 	addi	r2,r23,-1
 c00cd5c:	10c00007 	ldb	r3,0(r2)
 c00cd60:	193ffc26 	beq	r3,r4,c00cd54 <__alt_data_end+0xfc00cd54>
 c00cd64:	d9801317 	ldw	r6,76(sp)
 c00cd68:	d9800515 	stw	r6,20(sp)
 c00cd6c:	003c4406 	br	c00be80 <__alt_data_end+0xfc00be80>
 c00cd70:	d9801317 	ldw	r6,76(sp)
 c00cd74:	d9800515 	stw	r6,20(sp)
 c00cd78:	003cea06 	br	c00c124 <__alt_data_end+0xfc00c124>
 c00cd7c:	dd800f17 	ldw	r22,60(sp)
 c00cd80:	dcc01017 	ldw	r19,64(sp)
 c00cd84:	dc801217 	ldw	r18,72(sp)
 c00cd88:	003c6c06 	br	c00bf3c <__alt_data_end+0xfc00bf3c>
 c00cd8c:	903e031e 	bne	r18,zero,c00c59c <__alt_data_end+0xfc00c59c>
 c00cd90:	003ebb06 	br	c00c880 <__alt_data_end+0xfc00c880>
 c00cd94:	103e6c1e 	bne	r2,zero,c00c748 <__alt_data_end+0xfc00c748>
 c00cd98:	4080004c 	andi	r2,r8,1
 c00cd9c:	103e6a26 	beq	r2,zero,c00c748 <__alt_data_end+0xfc00c748>
 c00cda0:	003e6606 	br	c00c73c <__alt_data_end+0xfc00c73c>
 c00cda4:	d8c00317 	ldw	r3,12(sp)
 c00cda8:	00800084 	movi	r2,2
 c00cdac:	10c02916 	blt	r2,r3,c00ce54 <_dtoa_r+0x167c>
 c00cdb0:	d9000c17 	ldw	r4,48(sp)
 c00cdb4:	003e8806 	br	c00c7d8 <__alt_data_end+0xfc00c7d8>
 c00cdb8:	04000084 	movi	r16,2
 c00cdbc:	003b9d06 	br	c00bc34 <__alt_data_end+0xfc00bc34>
 c00cdc0:	d9001317 	ldw	r4,76(sp)
 c00cdc4:	d9000515 	stw	r4,20(sp)
 c00cdc8:	003cd606 	br	c00c124 <__alt_data_end+0xfc00c124>
 c00cdcc:	d8801317 	ldw	r2,76(sp)
 c00cdd0:	d8800515 	stw	r2,20(sp)
 c00cdd4:	003c2a06 	br	c00be80 <__alt_data_end+0xfc00be80>
 c00cdd8:	d9800317 	ldw	r6,12(sp)
 c00cddc:	00800084 	movi	r2,2
 c00cde0:	11801516 	blt	r2,r6,c00ce38 <_dtoa_r+0x1660>
 c00cde4:	d9c00c17 	ldw	r7,48(sp)
 c00cde8:	d9c00615 	stw	r7,24(sp)
 c00cdec:	003df706 	br	c00c5cc <__alt_data_end+0xfc00c5cc>
 c00cdf0:	193d3926 	beq	r3,r4,c00c2d8 <__alt_data_end+0xfc00c2d8>
 c00cdf4:	00c00f04 	movi	r3,60
 c00cdf8:	1885c83a 	sub	r2,r3,r2
 c00cdfc:	003ddf06 	br	c00c57c <__alt_data_end+0xfc00c57c>
 c00ce00:	e009883a 	mov	r4,fp
 c00ce04:	e0001115 	stw	zero,68(fp)
 c00ce08:	000b883a 	mov	r5,zero
 c00ce0c:	c00eb480 	call	c00eb48 <_Balloc>
 c00ce10:	d8800715 	stw	r2,28(sp)
 c00ce14:	d8c00717 	ldw	r3,28(sp)
 c00ce18:	00bfffc4 	movi	r2,-1
 c00ce1c:	01000044 	movi	r4,1
 c00ce20:	d8800c15 	stw	r2,48(sp)
 c00ce24:	e0c01015 	stw	r3,64(fp)
 c00ce28:	d9000b15 	stw	r4,44(sp)
 c00ce2c:	d8800615 	stw	r2,24(sp)
 c00ce30:	d8002215 	stw	zero,136(sp)
 c00ce34:	003c4106 	br	c00bf3c <__alt_data_end+0xfc00bf3c>
 c00ce38:	d8c00c17 	ldw	r3,48(sp)
 c00ce3c:	d8c00615 	stw	r3,24(sp)
 c00ce40:	003e7006 	br	c00c804 <__alt_data_end+0xfc00c804>
 c00ce44:	04400044 	movi	r17,1
 c00ce48:	003b2006 	br	c00bacc <__alt_data_end+0xfc00bacc>
 c00ce4c:	000b883a 	mov	r5,zero
 c00ce50:	003b3d06 	br	c00bb48 <__alt_data_end+0xfc00bb48>
 c00ce54:	d8800c17 	ldw	r2,48(sp)
 c00ce58:	d8800615 	stw	r2,24(sp)
 c00ce5c:	003e6906 	br	c00c804 <__alt_data_end+0xfc00c804>

0c00ce60 <__sflush_r>:
 c00ce60:	2880030b 	ldhu	r2,12(r5)
 c00ce64:	defffb04 	addi	sp,sp,-20
 c00ce68:	dcc00315 	stw	r19,12(sp)
 c00ce6c:	dc400115 	stw	r17,4(sp)
 c00ce70:	dfc00415 	stw	ra,16(sp)
 c00ce74:	dc800215 	stw	r18,8(sp)
 c00ce78:	dc000015 	stw	r16,0(sp)
 c00ce7c:	10c0020c 	andi	r3,r2,8
 c00ce80:	2823883a 	mov	r17,r5
 c00ce84:	2027883a 	mov	r19,r4
 c00ce88:	1800311e 	bne	r3,zero,c00cf50 <__sflush_r+0xf0>
 c00ce8c:	28c00117 	ldw	r3,4(r5)
 c00ce90:	10820014 	ori	r2,r2,2048
 c00ce94:	2880030d 	sth	r2,12(r5)
 c00ce98:	00c04b0e 	bge	zero,r3,c00cfc8 <__sflush_r+0x168>
 c00ce9c:	8a000a17 	ldw	r8,40(r17)
 c00cea0:	40002326 	beq	r8,zero,c00cf30 <__sflush_r+0xd0>
 c00cea4:	9c000017 	ldw	r16,0(r19)
 c00cea8:	10c4000c 	andi	r3,r2,4096
 c00ceac:	98000015 	stw	zero,0(r19)
 c00ceb0:	18004826 	beq	r3,zero,c00cfd4 <__sflush_r+0x174>
 c00ceb4:	89801417 	ldw	r6,80(r17)
 c00ceb8:	10c0010c 	andi	r3,r2,4
 c00cebc:	18000626 	beq	r3,zero,c00ced8 <__sflush_r+0x78>
 c00cec0:	88c00117 	ldw	r3,4(r17)
 c00cec4:	88800c17 	ldw	r2,48(r17)
 c00cec8:	30cdc83a 	sub	r6,r6,r3
 c00cecc:	10000226 	beq	r2,zero,c00ced8 <__sflush_r+0x78>
 c00ced0:	88800f17 	ldw	r2,60(r17)
 c00ced4:	308dc83a 	sub	r6,r6,r2
 c00ced8:	89400717 	ldw	r5,28(r17)
 c00cedc:	000f883a 	mov	r7,zero
 c00cee0:	9809883a 	mov	r4,r19
 c00cee4:	403ee83a 	callr	r8
 c00cee8:	00ffffc4 	movi	r3,-1
 c00ceec:	10c04426 	beq	r2,r3,c00d000 <__sflush_r+0x1a0>
 c00cef0:	88c0030b 	ldhu	r3,12(r17)
 c00cef4:	89000417 	ldw	r4,16(r17)
 c00cef8:	88000115 	stw	zero,4(r17)
 c00cefc:	197dffcc 	andi	r5,r3,63487
 c00cf00:	8940030d 	sth	r5,12(r17)
 c00cf04:	89000015 	stw	r4,0(r17)
 c00cf08:	18c4000c 	andi	r3,r3,4096
 c00cf0c:	18002c1e 	bne	r3,zero,c00cfc0 <__sflush_r+0x160>
 c00cf10:	89400c17 	ldw	r5,48(r17)
 c00cf14:	9c000015 	stw	r16,0(r19)
 c00cf18:	28000526 	beq	r5,zero,c00cf30 <__sflush_r+0xd0>
 c00cf1c:	88801004 	addi	r2,r17,64
 c00cf20:	28800226 	beq	r5,r2,c00cf2c <__sflush_r+0xcc>
 c00cf24:	9809883a 	mov	r4,r19
 c00cf28:	c00d84c0 	call	c00d84c <_free_r>
 c00cf2c:	88000c15 	stw	zero,48(r17)
 c00cf30:	0005883a 	mov	r2,zero
 c00cf34:	dfc00417 	ldw	ra,16(sp)
 c00cf38:	dcc00317 	ldw	r19,12(sp)
 c00cf3c:	dc800217 	ldw	r18,8(sp)
 c00cf40:	dc400117 	ldw	r17,4(sp)
 c00cf44:	dc000017 	ldw	r16,0(sp)
 c00cf48:	dec00504 	addi	sp,sp,20
 c00cf4c:	f800283a 	ret
 c00cf50:	2c800417 	ldw	r18,16(r5)
 c00cf54:	903ff626 	beq	r18,zero,c00cf30 <__alt_data_end+0xfc00cf30>
 c00cf58:	2c000017 	ldw	r16,0(r5)
 c00cf5c:	108000cc 	andi	r2,r2,3
 c00cf60:	2c800015 	stw	r18,0(r5)
 c00cf64:	84a1c83a 	sub	r16,r16,r18
 c00cf68:	1000131e 	bne	r2,zero,c00cfb8 <__sflush_r+0x158>
 c00cf6c:	28800517 	ldw	r2,20(r5)
 c00cf70:	88800215 	stw	r2,8(r17)
 c00cf74:	04000316 	blt	zero,r16,c00cf84 <__sflush_r+0x124>
 c00cf78:	003fed06 	br	c00cf30 <__alt_data_end+0xfc00cf30>
 c00cf7c:	90a5883a 	add	r18,r18,r2
 c00cf80:	043feb0e 	bge	zero,r16,c00cf30 <__alt_data_end+0xfc00cf30>
 c00cf84:	88800917 	ldw	r2,36(r17)
 c00cf88:	89400717 	ldw	r5,28(r17)
 c00cf8c:	800f883a 	mov	r7,r16
 c00cf90:	900d883a 	mov	r6,r18
 c00cf94:	9809883a 	mov	r4,r19
 c00cf98:	103ee83a 	callr	r2
 c00cf9c:	80a1c83a 	sub	r16,r16,r2
 c00cfa0:	00bff616 	blt	zero,r2,c00cf7c <__alt_data_end+0xfc00cf7c>
 c00cfa4:	88c0030b 	ldhu	r3,12(r17)
 c00cfa8:	00bfffc4 	movi	r2,-1
 c00cfac:	18c01014 	ori	r3,r3,64
 c00cfb0:	88c0030d 	sth	r3,12(r17)
 c00cfb4:	003fdf06 	br	c00cf34 <__alt_data_end+0xfc00cf34>
 c00cfb8:	0005883a 	mov	r2,zero
 c00cfbc:	003fec06 	br	c00cf70 <__alt_data_end+0xfc00cf70>
 c00cfc0:	88801415 	stw	r2,80(r17)
 c00cfc4:	003fd206 	br	c00cf10 <__alt_data_end+0xfc00cf10>
 c00cfc8:	28c00f17 	ldw	r3,60(r5)
 c00cfcc:	00ffb316 	blt	zero,r3,c00ce9c <__alt_data_end+0xfc00ce9c>
 c00cfd0:	003fd706 	br	c00cf30 <__alt_data_end+0xfc00cf30>
 c00cfd4:	89400717 	ldw	r5,28(r17)
 c00cfd8:	000d883a 	mov	r6,zero
 c00cfdc:	01c00044 	movi	r7,1
 c00cfe0:	9809883a 	mov	r4,r19
 c00cfe4:	403ee83a 	callr	r8
 c00cfe8:	100d883a 	mov	r6,r2
 c00cfec:	00bfffc4 	movi	r2,-1
 c00cff0:	30801426 	beq	r6,r2,c00d044 <__sflush_r+0x1e4>
 c00cff4:	8880030b 	ldhu	r2,12(r17)
 c00cff8:	8a000a17 	ldw	r8,40(r17)
 c00cffc:	003fae06 	br	c00ceb8 <__alt_data_end+0xfc00ceb8>
 c00d000:	98c00017 	ldw	r3,0(r19)
 c00d004:	183fba26 	beq	r3,zero,c00cef0 <__alt_data_end+0xfc00cef0>
 c00d008:	01000744 	movi	r4,29
 c00d00c:	19000626 	beq	r3,r4,c00d028 <__sflush_r+0x1c8>
 c00d010:	01000584 	movi	r4,22
 c00d014:	19000426 	beq	r3,r4,c00d028 <__sflush_r+0x1c8>
 c00d018:	88c0030b 	ldhu	r3,12(r17)
 c00d01c:	18c01014 	ori	r3,r3,64
 c00d020:	88c0030d 	sth	r3,12(r17)
 c00d024:	003fc306 	br	c00cf34 <__alt_data_end+0xfc00cf34>
 c00d028:	8880030b 	ldhu	r2,12(r17)
 c00d02c:	88c00417 	ldw	r3,16(r17)
 c00d030:	88000115 	stw	zero,4(r17)
 c00d034:	10bdffcc 	andi	r2,r2,63487
 c00d038:	8880030d 	sth	r2,12(r17)
 c00d03c:	88c00015 	stw	r3,0(r17)
 c00d040:	003fb306 	br	c00cf10 <__alt_data_end+0xfc00cf10>
 c00d044:	98800017 	ldw	r2,0(r19)
 c00d048:	103fea26 	beq	r2,zero,c00cff4 <__alt_data_end+0xfc00cff4>
 c00d04c:	00c00744 	movi	r3,29
 c00d050:	10c00226 	beq	r2,r3,c00d05c <__sflush_r+0x1fc>
 c00d054:	00c00584 	movi	r3,22
 c00d058:	10c0031e 	bne	r2,r3,c00d068 <__sflush_r+0x208>
 c00d05c:	9c000015 	stw	r16,0(r19)
 c00d060:	0005883a 	mov	r2,zero
 c00d064:	003fb306 	br	c00cf34 <__alt_data_end+0xfc00cf34>
 c00d068:	88c0030b 	ldhu	r3,12(r17)
 c00d06c:	3005883a 	mov	r2,r6
 c00d070:	18c01014 	ori	r3,r3,64
 c00d074:	88c0030d 	sth	r3,12(r17)
 c00d078:	003fae06 	br	c00cf34 <__alt_data_end+0xfc00cf34>

0c00d07c <_fflush_r>:
 c00d07c:	defffd04 	addi	sp,sp,-12
 c00d080:	dc000115 	stw	r16,4(sp)
 c00d084:	dfc00215 	stw	ra,8(sp)
 c00d088:	2021883a 	mov	r16,r4
 c00d08c:	20000226 	beq	r4,zero,c00d098 <_fflush_r+0x1c>
 c00d090:	20800e17 	ldw	r2,56(r4)
 c00d094:	10000c26 	beq	r2,zero,c00d0c8 <_fflush_r+0x4c>
 c00d098:	2880030f 	ldh	r2,12(r5)
 c00d09c:	1000051e 	bne	r2,zero,c00d0b4 <_fflush_r+0x38>
 c00d0a0:	0005883a 	mov	r2,zero
 c00d0a4:	dfc00217 	ldw	ra,8(sp)
 c00d0a8:	dc000117 	ldw	r16,4(sp)
 c00d0ac:	dec00304 	addi	sp,sp,12
 c00d0b0:	f800283a 	ret
 c00d0b4:	8009883a 	mov	r4,r16
 c00d0b8:	dfc00217 	ldw	ra,8(sp)
 c00d0bc:	dc000117 	ldw	r16,4(sp)
 c00d0c0:	dec00304 	addi	sp,sp,12
 c00d0c4:	c00ce601 	jmpi	c00ce60 <__sflush_r>
 c00d0c8:	d9400015 	stw	r5,0(sp)
 c00d0cc:	c00d4680 	call	c00d468 <__sinit>
 c00d0d0:	d9400017 	ldw	r5,0(sp)
 c00d0d4:	003ff006 	br	c00d098 <__alt_data_end+0xfc00d098>

0c00d0d8 <fflush>:
 c00d0d8:	20000526 	beq	r4,zero,c00d0f0 <fflush+0x18>
 c00d0dc:	008300b4 	movhi	r2,3074
 c00d0e0:	10bfc304 	addi	r2,r2,-244
 c00d0e4:	200b883a 	mov	r5,r4
 c00d0e8:	11000017 	ldw	r4,0(r2)
 c00d0ec:	c00d07c1 	jmpi	c00d07c <_fflush_r>
 c00d0f0:	008300b4 	movhi	r2,3074
 c00d0f4:	10bfc204 	addi	r2,r2,-248
 c00d0f8:	11000017 	ldw	r4,0(r2)
 c00d0fc:	01430074 	movhi	r5,3073
 c00d100:	29741f04 	addi	r5,r5,-12164
 c00d104:	c00e0e81 	jmpi	c00e0e8 <_fwalk_reent>

0c00d108 <__fp_unlock>:
 c00d108:	0005883a 	mov	r2,zero
 c00d10c:	f800283a 	ret

0c00d110 <_cleanup_r>:
 c00d110:	01430074 	movhi	r5,3073
 c00d114:	29571f04 	addi	r5,r5,23676
 c00d118:	c00e0e81 	jmpi	c00e0e8 <_fwalk_reent>

0c00d11c <__sinit.part.1>:
 c00d11c:	defff704 	addi	sp,sp,-36
 c00d120:	00c30074 	movhi	r3,3073
 c00d124:	dfc00815 	stw	ra,32(sp)
 c00d128:	ddc00715 	stw	r23,28(sp)
 c00d12c:	dd800615 	stw	r22,24(sp)
 c00d130:	dd400515 	stw	r21,20(sp)
 c00d134:	dd000415 	stw	r20,16(sp)
 c00d138:	dcc00315 	stw	r19,12(sp)
 c00d13c:	dc800215 	stw	r18,8(sp)
 c00d140:	dc400115 	stw	r17,4(sp)
 c00d144:	dc000015 	stw	r16,0(sp)
 c00d148:	18f44404 	addi	r3,r3,-12016
 c00d14c:	24000117 	ldw	r16,4(r4)
 c00d150:	20c00f15 	stw	r3,60(r4)
 c00d154:	2080bb04 	addi	r2,r4,748
 c00d158:	00c000c4 	movi	r3,3
 c00d15c:	20c0b915 	stw	r3,740(r4)
 c00d160:	2080ba15 	stw	r2,744(r4)
 c00d164:	2000b815 	stw	zero,736(r4)
 c00d168:	05c00204 	movi	r23,8
 c00d16c:	00800104 	movi	r2,4
 c00d170:	2025883a 	mov	r18,r4
 c00d174:	b80d883a 	mov	r6,r23
 c00d178:	81001704 	addi	r4,r16,92
 c00d17c:	000b883a 	mov	r5,zero
 c00d180:	80000015 	stw	zero,0(r16)
 c00d184:	80000115 	stw	zero,4(r16)
 c00d188:	80000215 	stw	zero,8(r16)
 c00d18c:	8080030d 	sth	r2,12(r16)
 c00d190:	80001915 	stw	zero,100(r16)
 c00d194:	8000038d 	sth	zero,14(r16)
 c00d198:	80000415 	stw	zero,16(r16)
 c00d19c:	80000515 	stw	zero,20(r16)
 c00d1a0:	80000615 	stw	zero,24(r16)
 c00d1a4:	c00ea200 	call	c00ea20 <memset>
 c00d1a8:	05830074 	movhi	r22,3073
 c00d1ac:	94400217 	ldw	r17,8(r18)
 c00d1b0:	05430074 	movhi	r21,3073
 c00d1b4:	05030074 	movhi	r20,3073
 c00d1b8:	04c30074 	movhi	r19,3073
 c00d1bc:	b5818204 	addi	r22,r22,1544
 c00d1c0:	ad419904 	addi	r21,r21,1636
 c00d1c4:	a501b804 	addi	r20,r20,1760
 c00d1c8:	9cc1cf04 	addi	r19,r19,1852
 c00d1cc:	85800815 	stw	r22,32(r16)
 c00d1d0:	85400915 	stw	r21,36(r16)
 c00d1d4:	85000a15 	stw	r20,40(r16)
 c00d1d8:	84c00b15 	stw	r19,44(r16)
 c00d1dc:	84000715 	stw	r16,28(r16)
 c00d1e0:	00800284 	movi	r2,10
 c00d1e4:	8880030d 	sth	r2,12(r17)
 c00d1e8:	00800044 	movi	r2,1
 c00d1ec:	b80d883a 	mov	r6,r23
 c00d1f0:	89001704 	addi	r4,r17,92
 c00d1f4:	000b883a 	mov	r5,zero
 c00d1f8:	88000015 	stw	zero,0(r17)
 c00d1fc:	88000115 	stw	zero,4(r17)
 c00d200:	88000215 	stw	zero,8(r17)
 c00d204:	88001915 	stw	zero,100(r17)
 c00d208:	8880038d 	sth	r2,14(r17)
 c00d20c:	88000415 	stw	zero,16(r17)
 c00d210:	88000515 	stw	zero,20(r17)
 c00d214:	88000615 	stw	zero,24(r17)
 c00d218:	c00ea200 	call	c00ea20 <memset>
 c00d21c:	94000317 	ldw	r16,12(r18)
 c00d220:	00800484 	movi	r2,18
 c00d224:	8c400715 	stw	r17,28(r17)
 c00d228:	8d800815 	stw	r22,32(r17)
 c00d22c:	8d400915 	stw	r21,36(r17)
 c00d230:	8d000a15 	stw	r20,40(r17)
 c00d234:	8cc00b15 	stw	r19,44(r17)
 c00d238:	8080030d 	sth	r2,12(r16)
 c00d23c:	00800084 	movi	r2,2
 c00d240:	80000015 	stw	zero,0(r16)
 c00d244:	80000115 	stw	zero,4(r16)
 c00d248:	80000215 	stw	zero,8(r16)
 c00d24c:	80001915 	stw	zero,100(r16)
 c00d250:	8080038d 	sth	r2,14(r16)
 c00d254:	80000415 	stw	zero,16(r16)
 c00d258:	80000515 	stw	zero,20(r16)
 c00d25c:	80000615 	stw	zero,24(r16)
 c00d260:	b80d883a 	mov	r6,r23
 c00d264:	000b883a 	mov	r5,zero
 c00d268:	81001704 	addi	r4,r16,92
 c00d26c:	c00ea200 	call	c00ea20 <memset>
 c00d270:	00800044 	movi	r2,1
 c00d274:	84000715 	stw	r16,28(r16)
 c00d278:	85800815 	stw	r22,32(r16)
 c00d27c:	85400915 	stw	r21,36(r16)
 c00d280:	85000a15 	stw	r20,40(r16)
 c00d284:	84c00b15 	stw	r19,44(r16)
 c00d288:	90800e15 	stw	r2,56(r18)
 c00d28c:	dfc00817 	ldw	ra,32(sp)
 c00d290:	ddc00717 	ldw	r23,28(sp)
 c00d294:	dd800617 	ldw	r22,24(sp)
 c00d298:	dd400517 	ldw	r21,20(sp)
 c00d29c:	dd000417 	ldw	r20,16(sp)
 c00d2a0:	dcc00317 	ldw	r19,12(sp)
 c00d2a4:	dc800217 	ldw	r18,8(sp)
 c00d2a8:	dc400117 	ldw	r17,4(sp)
 c00d2ac:	dc000017 	ldw	r16,0(sp)
 c00d2b0:	dec00904 	addi	sp,sp,36
 c00d2b4:	f800283a 	ret

0c00d2b8 <__fp_lock>:
 c00d2b8:	0005883a 	mov	r2,zero
 c00d2bc:	f800283a 	ret

0c00d2c0 <__sfmoreglue>:
 c00d2c0:	defffc04 	addi	sp,sp,-16
 c00d2c4:	dc800215 	stw	r18,8(sp)
 c00d2c8:	2825883a 	mov	r18,r5
 c00d2cc:	dc000015 	stw	r16,0(sp)
 c00d2d0:	01401a04 	movi	r5,104
 c00d2d4:	2021883a 	mov	r16,r4
 c00d2d8:	913fffc4 	addi	r4,r18,-1
 c00d2dc:	dfc00315 	stw	ra,12(sp)
 c00d2e0:	dc400115 	stw	r17,4(sp)
 c00d2e4:	c00473c0 	call	c00473c <__mulsi3>
 c00d2e8:	8009883a 	mov	r4,r16
 c00d2ec:	11401d04 	addi	r5,r2,116
 c00d2f0:	1023883a 	mov	r17,r2
 c00d2f4:	c00478c0 	call	c00478c <_malloc_r>
 c00d2f8:	1021883a 	mov	r16,r2
 c00d2fc:	10000726 	beq	r2,zero,c00d31c <__sfmoreglue+0x5c>
 c00d300:	11000304 	addi	r4,r2,12
 c00d304:	10000015 	stw	zero,0(r2)
 c00d308:	14800115 	stw	r18,4(r2)
 c00d30c:	11000215 	stw	r4,8(r2)
 c00d310:	89801a04 	addi	r6,r17,104
 c00d314:	000b883a 	mov	r5,zero
 c00d318:	c00ea200 	call	c00ea20 <memset>
 c00d31c:	8005883a 	mov	r2,r16
 c00d320:	dfc00317 	ldw	ra,12(sp)
 c00d324:	dc800217 	ldw	r18,8(sp)
 c00d328:	dc400117 	ldw	r17,4(sp)
 c00d32c:	dc000017 	ldw	r16,0(sp)
 c00d330:	dec00404 	addi	sp,sp,16
 c00d334:	f800283a 	ret

0c00d338 <__sfp>:
 c00d338:	defffb04 	addi	sp,sp,-20
 c00d33c:	dc000015 	stw	r16,0(sp)
 c00d340:	040300b4 	movhi	r16,3074
 c00d344:	843fc204 	addi	r16,r16,-248
 c00d348:	dcc00315 	stw	r19,12(sp)
 c00d34c:	2027883a 	mov	r19,r4
 c00d350:	81000017 	ldw	r4,0(r16)
 c00d354:	dfc00415 	stw	ra,16(sp)
 c00d358:	dc800215 	stw	r18,8(sp)
 c00d35c:	20800e17 	ldw	r2,56(r4)
 c00d360:	dc400115 	stw	r17,4(sp)
 c00d364:	1000021e 	bne	r2,zero,c00d370 <__sfp+0x38>
 c00d368:	c00d11c0 	call	c00d11c <__sinit.part.1>
 c00d36c:	81000017 	ldw	r4,0(r16)
 c00d370:	2480b804 	addi	r18,r4,736
 c00d374:	047fffc4 	movi	r17,-1
 c00d378:	91000117 	ldw	r4,4(r18)
 c00d37c:	94000217 	ldw	r16,8(r18)
 c00d380:	213fffc4 	addi	r4,r4,-1
 c00d384:	20000a16 	blt	r4,zero,c00d3b0 <__sfp+0x78>
 c00d388:	8080030f 	ldh	r2,12(r16)
 c00d38c:	10000c26 	beq	r2,zero,c00d3c0 <__sfp+0x88>
 c00d390:	80c01d04 	addi	r3,r16,116
 c00d394:	00000206 	br	c00d3a0 <__sfp+0x68>
 c00d398:	18bfe60f 	ldh	r2,-104(r3)
 c00d39c:	10000826 	beq	r2,zero,c00d3c0 <__sfp+0x88>
 c00d3a0:	213fffc4 	addi	r4,r4,-1
 c00d3a4:	1c3ffd04 	addi	r16,r3,-12
 c00d3a8:	18c01a04 	addi	r3,r3,104
 c00d3ac:	247ffa1e 	bne	r4,r17,c00d398 <__alt_data_end+0xfc00d398>
 c00d3b0:	90800017 	ldw	r2,0(r18)
 c00d3b4:	10001d26 	beq	r2,zero,c00d42c <__sfp+0xf4>
 c00d3b8:	1025883a 	mov	r18,r2
 c00d3bc:	003fee06 	br	c00d378 <__alt_data_end+0xfc00d378>
 c00d3c0:	00bfffc4 	movi	r2,-1
 c00d3c4:	8080038d 	sth	r2,14(r16)
 c00d3c8:	00800044 	movi	r2,1
 c00d3cc:	8080030d 	sth	r2,12(r16)
 c00d3d0:	80001915 	stw	zero,100(r16)
 c00d3d4:	80000015 	stw	zero,0(r16)
 c00d3d8:	80000215 	stw	zero,8(r16)
 c00d3dc:	80000115 	stw	zero,4(r16)
 c00d3e0:	80000415 	stw	zero,16(r16)
 c00d3e4:	80000515 	stw	zero,20(r16)
 c00d3e8:	80000615 	stw	zero,24(r16)
 c00d3ec:	01800204 	movi	r6,8
 c00d3f0:	000b883a 	mov	r5,zero
 c00d3f4:	81001704 	addi	r4,r16,92
 c00d3f8:	c00ea200 	call	c00ea20 <memset>
 c00d3fc:	8005883a 	mov	r2,r16
 c00d400:	80000c15 	stw	zero,48(r16)
 c00d404:	80000d15 	stw	zero,52(r16)
 c00d408:	80001115 	stw	zero,68(r16)
 c00d40c:	80001215 	stw	zero,72(r16)
 c00d410:	dfc00417 	ldw	ra,16(sp)
 c00d414:	dcc00317 	ldw	r19,12(sp)
 c00d418:	dc800217 	ldw	r18,8(sp)
 c00d41c:	dc400117 	ldw	r17,4(sp)
 c00d420:	dc000017 	ldw	r16,0(sp)
 c00d424:	dec00504 	addi	sp,sp,20
 c00d428:	f800283a 	ret
 c00d42c:	01400104 	movi	r5,4
 c00d430:	9809883a 	mov	r4,r19
 c00d434:	c00d2c00 	call	c00d2c0 <__sfmoreglue>
 c00d438:	90800015 	stw	r2,0(r18)
 c00d43c:	103fde1e 	bne	r2,zero,c00d3b8 <__alt_data_end+0xfc00d3b8>
 c00d440:	00800304 	movi	r2,12
 c00d444:	98800015 	stw	r2,0(r19)
 c00d448:	0005883a 	mov	r2,zero
 c00d44c:	003ff006 	br	c00d410 <__alt_data_end+0xfc00d410>

0c00d450 <_cleanup>:
 c00d450:	008300b4 	movhi	r2,3074
 c00d454:	10bfc204 	addi	r2,r2,-248
 c00d458:	11000017 	ldw	r4,0(r2)
 c00d45c:	01430074 	movhi	r5,3073
 c00d460:	29571f04 	addi	r5,r5,23676
 c00d464:	c00e0e81 	jmpi	c00e0e8 <_fwalk_reent>

0c00d468 <__sinit>:
 c00d468:	20800e17 	ldw	r2,56(r4)
 c00d46c:	10000126 	beq	r2,zero,c00d474 <__sinit+0xc>
 c00d470:	f800283a 	ret
 c00d474:	c00d11c1 	jmpi	c00d11c <__sinit.part.1>

0c00d478 <__sfp_lock_acquire>:
 c00d478:	f800283a 	ret

0c00d47c <__sfp_lock_release>:
 c00d47c:	f800283a 	ret

0c00d480 <__sinit_lock_acquire>:
 c00d480:	f800283a 	ret

0c00d484 <__sinit_lock_release>:
 c00d484:	f800283a 	ret

0c00d488 <__fp_lock_all>:
 c00d488:	008300b4 	movhi	r2,3074
 c00d48c:	10bfc304 	addi	r2,r2,-244
 c00d490:	11000017 	ldw	r4,0(r2)
 c00d494:	01430074 	movhi	r5,3073
 c00d498:	2974ae04 	addi	r5,r5,-11592
 c00d49c:	c00e0241 	jmpi	c00e024 <_fwalk>

0c00d4a0 <__fp_unlock_all>:
 c00d4a0:	008300b4 	movhi	r2,3074
 c00d4a4:	10bfc304 	addi	r2,r2,-244
 c00d4a8:	11000017 	ldw	r4,0(r2)
 c00d4ac:	01430074 	movhi	r5,3073
 c00d4b0:	29744204 	addi	r5,r5,-12024
 c00d4b4:	c00e0241 	jmpi	c00e024 <_fwalk>

0c00d4b8 <_fread_r>:
 c00d4b8:	defff404 	addi	sp,sp,-48
 c00d4bc:	dd000615 	stw	r20,24(sp)
 c00d4c0:	dcc00515 	stw	r19,20(sp)
 c00d4c4:	2029883a 	mov	r20,r4
 c00d4c8:	2827883a 	mov	r19,r5
 c00d4cc:	3809883a 	mov	r4,r7
 c00d4d0:	300b883a 	mov	r5,r6
 c00d4d4:	ddc00915 	stw	r23,36(sp)
 c00d4d8:	dd400715 	stw	r21,28(sp)
 c00d4dc:	dc000215 	stw	r16,8(sp)
 c00d4e0:	dfc00b15 	stw	ra,44(sp)
 c00d4e4:	df000a15 	stw	fp,40(sp)
 c00d4e8:	dd800815 	stw	r22,32(sp)
 c00d4ec:	dc800415 	stw	r18,16(sp)
 c00d4f0:	dc400315 	stw	r17,12(sp)
 c00d4f4:	302f883a 	mov	r23,r6
 c00d4f8:	382b883a 	mov	r21,r7
 c00d4fc:	c00473c0 	call	c00473c <__mulsi3>
 c00d500:	dc000c17 	ldw	r16,48(sp)
 c00d504:	10003826 	beq	r2,zero,c00d5e8 <_fread_r+0x130>
 c00d508:	102d883a 	mov	r22,r2
 c00d50c:	a0000226 	beq	r20,zero,c00d518 <_fread_r+0x60>
 c00d510:	a0800e17 	ldw	r2,56(r20)
 c00d514:	10006e26 	beq	r2,zero,c00d6d0 <_fread_r+0x218>
 c00d518:	8080030b 	ldhu	r2,12(r16)
 c00d51c:	10c8000c 	andi	r3,r2,8192
 c00d520:	1800061e 	bne	r3,zero,c00d53c <_fread_r+0x84>
 c00d524:	81001917 	ldw	r4,100(r16)
 c00d528:	00f7ffc4 	movi	r3,-8193
 c00d52c:	10880014 	ori	r2,r2,8192
 c00d530:	20c6703a 	and	r3,r4,r3
 c00d534:	8080030d 	sth	r2,12(r16)
 c00d538:	80c01915 	stw	r3,100(r16)
 c00d53c:	84400117 	ldw	r17,4(r16)
 c00d540:	88005f16 	blt	r17,zero,c00d6c0 <_fread_r+0x208>
 c00d544:	8809883a 	mov	r4,r17
 c00d548:	1080008c 	andi	r2,r2,2
 c00d54c:	1000281e 	bne	r2,zero,c00d5f0 <_fread_r+0x138>
 c00d550:	b025883a 	mov	r18,r22
 c00d554:	00000b06 	br	c00d584 <_fread_r+0xcc>
 c00d558:	c00e77c0 	call	c00e77c <memcpy>
 c00d55c:	80800017 	ldw	r2,0(r16)
 c00d560:	9c67883a 	add	r19,r19,r17
 c00d564:	9465c83a 	sub	r18,r18,r17
 c00d568:	1463883a 	add	r17,r2,r17
 c00d56c:	800b883a 	mov	r5,r16
 c00d570:	a009883a 	mov	r4,r20
 c00d574:	84400015 	stw	r17,0(r16)
 c00d578:	c0102e80 	call	c0102e8 <__srefill_r>
 c00d57c:	10004c1e 	bne	r2,zero,c00d6b0 <_fread_r+0x1f8>
 c00d580:	84400117 	ldw	r17,4(r16)
 c00d584:	880d883a 	mov	r6,r17
 c00d588:	9809883a 	mov	r4,r19
 c00d58c:	81400017 	ldw	r5,0(r16)
 c00d590:	8cbff136 	bltu	r17,r18,c00d558 <__alt_data_end+0xfc00d558>
 c00d594:	900d883a 	mov	r6,r18
 c00d598:	c00e77c0 	call	c00e77c <memcpy>
 c00d59c:	80c00117 	ldw	r3,4(r16)
 c00d5a0:	81000017 	ldw	r4,0(r16)
 c00d5a4:	a805883a 	mov	r2,r21
 c00d5a8:	1c87c83a 	sub	r3,r3,r18
 c00d5ac:	24a5883a 	add	r18,r4,r18
 c00d5b0:	80c00115 	stw	r3,4(r16)
 c00d5b4:	84800015 	stw	r18,0(r16)
 c00d5b8:	dfc00b17 	ldw	ra,44(sp)
 c00d5bc:	df000a17 	ldw	fp,40(sp)
 c00d5c0:	ddc00917 	ldw	r23,36(sp)
 c00d5c4:	dd800817 	ldw	r22,32(sp)
 c00d5c8:	dd400717 	ldw	r21,28(sp)
 c00d5cc:	dd000617 	ldw	r20,24(sp)
 c00d5d0:	dcc00517 	ldw	r19,20(sp)
 c00d5d4:	dc800417 	ldw	r18,16(sp)
 c00d5d8:	dc400317 	ldw	r17,12(sp)
 c00d5dc:	dc000217 	ldw	r16,8(sp)
 c00d5e0:	dec00c04 	addi	sp,sp,48
 c00d5e4:	f800283a 	ret
 c00d5e8:	0005883a 	mov	r2,zero
 c00d5ec:	003ff206 	br	c00d5b8 <__alt_data_end+0xfc00d5b8>
 c00d5f0:	b007883a 	mov	r3,r22
 c00d5f4:	2580012e 	bgeu	r4,r22,c00d5fc <_fread_r+0x144>
 c00d5f8:	2007883a 	mov	r3,r4
 c00d5fc:	81400017 	ldw	r5,0(r16)
 c00d600:	180d883a 	mov	r6,r3
 c00d604:	9809883a 	mov	r4,r19
 c00d608:	d8c00115 	stw	r3,4(sp)
 c00d60c:	c00e77c0 	call	c00e77c <memcpy>
 c00d610:	d8c00117 	ldw	r3,4(sp)
 c00d614:	84400017 	ldw	r17,0(r16)
 c00d618:	80800117 	ldw	r2,4(r16)
 c00d61c:	81400c17 	ldw	r5,48(r16)
 c00d620:	88e3883a 	add	r17,r17,r3
 c00d624:	10c5c83a 	sub	r2,r2,r3
 c00d628:	84400015 	stw	r17,0(r16)
 c00d62c:	80800115 	stw	r2,4(r16)
 c00d630:	b0e5c83a 	sub	r18,r22,r3
 c00d634:	28002c26 	beq	r5,zero,c00d6e8 <_fread_r+0x230>
 c00d638:	90002c26 	beq	r18,zero,c00d6ec <_fread_r+0x234>
 c00d63c:	80801004 	addi	r2,r16,64
 c00d640:	28800526 	beq	r5,r2,c00d658 <_fread_r+0x1a0>
 c00d644:	a009883a 	mov	r4,r20
 c00d648:	d8c00115 	stw	r3,4(sp)
 c00d64c:	c00d84c0 	call	c00d84c <_free_r>
 c00d650:	d8c00117 	ldw	r3,4(sp)
 c00d654:	84400017 	ldw	r17,0(r16)
 c00d658:	80000c15 	stw	zero,48(r16)
 c00d65c:	80800517 	ldw	r2,20(r16)
 c00d660:	87000417 	ldw	fp,16(r16)
 c00d664:	98e7883a 	add	r19,r19,r3
 c00d668:	d8800015 	stw	r2,0(sp)
 c00d66c:	00000106 	br	c00d674 <_fread_r+0x1bc>
 c00d670:	90001e26 	beq	r18,zero,c00d6ec <_fread_r+0x234>
 c00d674:	84c00415 	stw	r19,16(r16)
 c00d678:	84800515 	stw	r18,20(r16)
 c00d67c:	84c00015 	stw	r19,0(r16)
 c00d680:	a009883a 	mov	r4,r20
 c00d684:	800b883a 	mov	r5,r16
 c00d688:	c0102e80 	call	c0102e8 <__srefill_r>
 c00d68c:	d9000017 	ldw	r4,0(sp)
 c00d690:	80c00117 	ldw	r3,4(r16)
 c00d694:	87000415 	stw	fp,16(r16)
 c00d698:	81000515 	stw	r4,20(r16)
 c00d69c:	84400015 	stw	r17,0(r16)
 c00d6a0:	80000115 	stw	zero,4(r16)
 c00d6a4:	90e5c83a 	sub	r18,r18,r3
 c00d6a8:	98e7883a 	add	r19,r19,r3
 c00d6ac:	103ff026 	beq	r2,zero,c00d670 <__alt_data_end+0xfc00d670>
 c00d6b0:	b80b883a 	mov	r5,r23
 c00d6b4:	b489c83a 	sub	r4,r22,r18
 c00d6b8:	c0046800 	call	c004680 <__udivsi3>
 c00d6bc:	003fbe06 	br	c00d5b8 <__alt_data_end+0xfc00d5b8>
 c00d6c0:	80000115 	stw	zero,4(r16)
 c00d6c4:	0009883a 	mov	r4,zero
 c00d6c8:	0023883a 	mov	r17,zero
 c00d6cc:	003f9e06 	br	c00d548 <__alt_data_end+0xfc00d548>
 c00d6d0:	a009883a 	mov	r4,r20
 c00d6d4:	c00d4680 	call	c00d468 <__sinit>
 c00d6d8:	8080030b 	ldhu	r2,12(r16)
 c00d6dc:	10c8000c 	andi	r3,r2,8192
 c00d6e0:	183f961e 	bne	r3,zero,c00d53c <__alt_data_end+0xfc00d53c>
 c00d6e4:	003f8f06 	br	c00d524 <__alt_data_end+0xfc00d524>
 c00d6e8:	903fdc1e 	bne	r18,zero,c00d65c <__alt_data_end+0xfc00d65c>
 c00d6ec:	a805883a 	mov	r2,r21
 c00d6f0:	003fb106 	br	c00d5b8 <__alt_data_end+0xfc00d5b8>

0c00d6f4 <fread>:
 c00d6f4:	defffe04 	addi	sp,sp,-8
 c00d6f8:	008300b4 	movhi	r2,3074
 c00d6fc:	d9c00015 	stw	r7,0(sp)
 c00d700:	10bfc304 	addi	r2,r2,-244
 c00d704:	300f883a 	mov	r7,r6
 c00d708:	280d883a 	mov	r6,r5
 c00d70c:	200b883a 	mov	r5,r4
 c00d710:	11000017 	ldw	r4,0(r2)
 c00d714:	dfc00115 	stw	ra,4(sp)
 c00d718:	c00d4b80 	call	c00d4b8 <_fread_r>
 c00d71c:	dfc00117 	ldw	ra,4(sp)
 c00d720:	dec00204 	addi	sp,sp,8
 c00d724:	f800283a 	ret

0c00d728 <_malloc_trim_r>:
 c00d728:	defffb04 	addi	sp,sp,-20
 c00d72c:	dcc00315 	stw	r19,12(sp)
 c00d730:	04c300b4 	movhi	r19,3074
 c00d734:	dc800215 	stw	r18,8(sp)
 c00d738:	dc400115 	stw	r17,4(sp)
 c00d73c:	dc000015 	stw	r16,0(sp)
 c00d740:	dfc00415 	stw	ra,16(sp)
 c00d744:	2821883a 	mov	r16,r5
 c00d748:	9cf90e04 	addi	r19,r19,-7112
 c00d74c:	2025883a 	mov	r18,r4
 c00d750:	c01ae800 	call	c01ae80 <__malloc_lock>
 c00d754:	98800217 	ldw	r2,8(r19)
 c00d758:	14400117 	ldw	r17,4(r2)
 c00d75c:	00bfff04 	movi	r2,-4
 c00d760:	88a2703a 	and	r17,r17,r2
 c00d764:	8c21c83a 	sub	r16,r17,r16
 c00d768:	8403fbc4 	addi	r16,r16,4079
 c00d76c:	8020d33a 	srli	r16,r16,12
 c00d770:	0083ffc4 	movi	r2,4095
 c00d774:	843fffc4 	addi	r16,r16,-1
 c00d778:	8020933a 	slli	r16,r16,12
 c00d77c:	1400060e 	bge	r2,r16,c00d798 <_malloc_trim_r+0x70>
 c00d780:	000b883a 	mov	r5,zero
 c00d784:	9009883a 	mov	r4,r18
 c00d788:	c0051740 	call	c005174 <_sbrk_r>
 c00d78c:	98c00217 	ldw	r3,8(r19)
 c00d790:	1c47883a 	add	r3,r3,r17
 c00d794:	10c00a26 	beq	r2,r3,c00d7c0 <_malloc_trim_r+0x98>
 c00d798:	9009883a 	mov	r4,r18
 c00d79c:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c00d7a0:	0005883a 	mov	r2,zero
 c00d7a4:	dfc00417 	ldw	ra,16(sp)
 c00d7a8:	dcc00317 	ldw	r19,12(sp)
 c00d7ac:	dc800217 	ldw	r18,8(sp)
 c00d7b0:	dc400117 	ldw	r17,4(sp)
 c00d7b4:	dc000017 	ldw	r16,0(sp)
 c00d7b8:	dec00504 	addi	sp,sp,20
 c00d7bc:	f800283a 	ret
 c00d7c0:	040bc83a 	sub	r5,zero,r16
 c00d7c4:	9009883a 	mov	r4,r18
 c00d7c8:	c0051740 	call	c005174 <_sbrk_r>
 c00d7cc:	00ffffc4 	movi	r3,-1
 c00d7d0:	10c00d26 	beq	r2,r3,c00d808 <_malloc_trim_r+0xe0>
 c00d7d4:	00c300b4 	movhi	r3,3074
 c00d7d8:	18c77604 	addi	r3,r3,7640
 c00d7dc:	18800017 	ldw	r2,0(r3)
 c00d7e0:	99000217 	ldw	r4,8(r19)
 c00d7e4:	8c23c83a 	sub	r17,r17,r16
 c00d7e8:	8c400054 	ori	r17,r17,1
 c00d7ec:	1421c83a 	sub	r16,r2,r16
 c00d7f0:	24400115 	stw	r17,4(r4)
 c00d7f4:	9009883a 	mov	r4,r18
 c00d7f8:	1c000015 	stw	r16,0(r3)
 c00d7fc:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c00d800:	00800044 	movi	r2,1
 c00d804:	003fe706 	br	c00d7a4 <__alt_data_end+0xfc00d7a4>
 c00d808:	000b883a 	mov	r5,zero
 c00d80c:	9009883a 	mov	r4,r18
 c00d810:	c0051740 	call	c005174 <_sbrk_r>
 c00d814:	99000217 	ldw	r4,8(r19)
 c00d818:	014003c4 	movi	r5,15
 c00d81c:	1107c83a 	sub	r3,r2,r4
 c00d820:	28ffdd0e 	bge	r5,r3,c00d798 <__alt_data_end+0xfc00d798>
 c00d824:	014300b4 	movhi	r5,3074
 c00d828:	297fbf04 	addi	r5,r5,-260
 c00d82c:	29400017 	ldw	r5,0(r5)
 c00d830:	18c00054 	ori	r3,r3,1
 c00d834:	20c00115 	stw	r3,4(r4)
 c00d838:	00c300b4 	movhi	r3,3074
 c00d83c:	1145c83a 	sub	r2,r2,r5
 c00d840:	18c77604 	addi	r3,r3,7640
 c00d844:	18800015 	stw	r2,0(r3)
 c00d848:	003fd306 	br	c00d798 <__alt_data_end+0xfc00d798>

0c00d84c <_free_r>:
 c00d84c:	28004126 	beq	r5,zero,c00d954 <_free_r+0x108>
 c00d850:	defffd04 	addi	sp,sp,-12
 c00d854:	dc400115 	stw	r17,4(sp)
 c00d858:	dc000015 	stw	r16,0(sp)
 c00d85c:	2023883a 	mov	r17,r4
 c00d860:	2821883a 	mov	r16,r5
 c00d864:	dfc00215 	stw	ra,8(sp)
 c00d868:	c01ae800 	call	c01ae80 <__malloc_lock>
 c00d86c:	81ffff17 	ldw	r7,-4(r16)
 c00d870:	00bfff84 	movi	r2,-2
 c00d874:	010300b4 	movhi	r4,3074
 c00d878:	81bffe04 	addi	r6,r16,-8
 c00d87c:	3884703a 	and	r2,r7,r2
 c00d880:	21390e04 	addi	r4,r4,-7112
 c00d884:	308b883a 	add	r5,r6,r2
 c00d888:	2a400117 	ldw	r9,4(r5)
 c00d88c:	22000217 	ldw	r8,8(r4)
 c00d890:	00ffff04 	movi	r3,-4
 c00d894:	48c6703a 	and	r3,r9,r3
 c00d898:	2a005726 	beq	r5,r8,c00d9f8 <_free_r+0x1ac>
 c00d89c:	28c00115 	stw	r3,4(r5)
 c00d8a0:	39c0004c 	andi	r7,r7,1
 c00d8a4:	3800091e 	bne	r7,zero,c00d8cc <_free_r+0x80>
 c00d8a8:	823ffe17 	ldw	r8,-8(r16)
 c00d8ac:	22400204 	addi	r9,r4,8
 c00d8b0:	320dc83a 	sub	r6,r6,r8
 c00d8b4:	31c00217 	ldw	r7,8(r6)
 c00d8b8:	1205883a 	add	r2,r2,r8
 c00d8bc:	3a406526 	beq	r7,r9,c00da54 <_free_r+0x208>
 c00d8c0:	32000317 	ldw	r8,12(r6)
 c00d8c4:	3a000315 	stw	r8,12(r7)
 c00d8c8:	41c00215 	stw	r7,8(r8)
 c00d8cc:	28cf883a 	add	r7,r5,r3
 c00d8d0:	39c00117 	ldw	r7,4(r7)
 c00d8d4:	39c0004c 	andi	r7,r7,1
 c00d8d8:	38003a26 	beq	r7,zero,c00d9c4 <_free_r+0x178>
 c00d8dc:	10c00054 	ori	r3,r2,1
 c00d8e0:	30c00115 	stw	r3,4(r6)
 c00d8e4:	3087883a 	add	r3,r6,r2
 c00d8e8:	18800015 	stw	r2,0(r3)
 c00d8ec:	00c07fc4 	movi	r3,511
 c00d8f0:	18801936 	bltu	r3,r2,c00d958 <_free_r+0x10c>
 c00d8f4:	1004d0fa 	srli	r2,r2,3
 c00d8f8:	01c00044 	movi	r7,1
 c00d8fc:	21400117 	ldw	r5,4(r4)
 c00d900:	10c00044 	addi	r3,r2,1
 c00d904:	18c7883a 	add	r3,r3,r3
 c00d908:	1005d0ba 	srai	r2,r2,2
 c00d90c:	18c7883a 	add	r3,r3,r3
 c00d910:	18c7883a 	add	r3,r3,r3
 c00d914:	1907883a 	add	r3,r3,r4
 c00d918:	3884983a 	sll	r2,r7,r2
 c00d91c:	19c00017 	ldw	r7,0(r3)
 c00d920:	1a3ffe04 	addi	r8,r3,-8
 c00d924:	1144b03a 	or	r2,r2,r5
 c00d928:	32000315 	stw	r8,12(r6)
 c00d92c:	31c00215 	stw	r7,8(r6)
 c00d930:	20800115 	stw	r2,4(r4)
 c00d934:	19800015 	stw	r6,0(r3)
 c00d938:	39800315 	stw	r6,12(r7)
 c00d93c:	8809883a 	mov	r4,r17
 c00d940:	dfc00217 	ldw	ra,8(sp)
 c00d944:	dc400117 	ldw	r17,4(sp)
 c00d948:	dc000017 	ldw	r16,0(sp)
 c00d94c:	dec00304 	addi	sp,sp,12
 c00d950:	c01aea41 	jmpi	c01aea4 <__malloc_unlock>
 c00d954:	f800283a 	ret
 c00d958:	100ad27a 	srli	r5,r2,9
 c00d95c:	00c00104 	movi	r3,4
 c00d960:	19404a36 	bltu	r3,r5,c00da8c <_free_r+0x240>
 c00d964:	100ad1ba 	srli	r5,r2,6
 c00d968:	28c00e44 	addi	r3,r5,57
 c00d96c:	18c7883a 	add	r3,r3,r3
 c00d970:	29400e04 	addi	r5,r5,56
 c00d974:	18c7883a 	add	r3,r3,r3
 c00d978:	18c7883a 	add	r3,r3,r3
 c00d97c:	1909883a 	add	r4,r3,r4
 c00d980:	20c00017 	ldw	r3,0(r4)
 c00d984:	01c300b4 	movhi	r7,3074
 c00d988:	213ffe04 	addi	r4,r4,-8
 c00d98c:	39f90e04 	addi	r7,r7,-7112
 c00d990:	20c04426 	beq	r4,r3,c00daa4 <_free_r+0x258>
 c00d994:	01ffff04 	movi	r7,-4
 c00d998:	19400117 	ldw	r5,4(r3)
 c00d99c:	29ca703a 	and	r5,r5,r7
 c00d9a0:	1140022e 	bgeu	r2,r5,c00d9ac <_free_r+0x160>
 c00d9a4:	18c00217 	ldw	r3,8(r3)
 c00d9a8:	20fffb1e 	bne	r4,r3,c00d998 <__alt_data_end+0xfc00d998>
 c00d9ac:	19000317 	ldw	r4,12(r3)
 c00d9b0:	31000315 	stw	r4,12(r6)
 c00d9b4:	30c00215 	stw	r3,8(r6)
 c00d9b8:	21800215 	stw	r6,8(r4)
 c00d9bc:	19800315 	stw	r6,12(r3)
 c00d9c0:	003fde06 	br	c00d93c <__alt_data_end+0xfc00d93c>
 c00d9c4:	29c00217 	ldw	r7,8(r5)
 c00d9c8:	10c5883a 	add	r2,r2,r3
 c00d9cc:	00c300b4 	movhi	r3,3074
 c00d9d0:	18f91004 	addi	r3,r3,-7104
 c00d9d4:	38c03b26 	beq	r7,r3,c00dac4 <_free_r+0x278>
 c00d9d8:	2a000317 	ldw	r8,12(r5)
 c00d9dc:	11400054 	ori	r5,r2,1
 c00d9e0:	3087883a 	add	r3,r6,r2
 c00d9e4:	3a000315 	stw	r8,12(r7)
 c00d9e8:	41c00215 	stw	r7,8(r8)
 c00d9ec:	31400115 	stw	r5,4(r6)
 c00d9f0:	18800015 	stw	r2,0(r3)
 c00d9f4:	003fbd06 	br	c00d8ec <__alt_data_end+0xfc00d8ec>
 c00d9f8:	39c0004c 	andi	r7,r7,1
 c00d9fc:	10c5883a 	add	r2,r2,r3
 c00da00:	3800071e 	bne	r7,zero,c00da20 <_free_r+0x1d4>
 c00da04:	81fffe17 	ldw	r7,-8(r16)
 c00da08:	31cdc83a 	sub	r6,r6,r7
 c00da0c:	30c00317 	ldw	r3,12(r6)
 c00da10:	31400217 	ldw	r5,8(r6)
 c00da14:	11c5883a 	add	r2,r2,r7
 c00da18:	28c00315 	stw	r3,12(r5)
 c00da1c:	19400215 	stw	r5,8(r3)
 c00da20:	10c00054 	ori	r3,r2,1
 c00da24:	30c00115 	stw	r3,4(r6)
 c00da28:	00c300b4 	movhi	r3,3074
 c00da2c:	18ffc004 	addi	r3,r3,-256
 c00da30:	18c00017 	ldw	r3,0(r3)
 c00da34:	21800215 	stw	r6,8(r4)
 c00da38:	10ffc036 	bltu	r2,r3,c00d93c <__alt_data_end+0xfc00d93c>
 c00da3c:	008300b4 	movhi	r2,3074
 c00da40:	10876004 	addi	r2,r2,7552
 c00da44:	11400017 	ldw	r5,0(r2)
 c00da48:	8809883a 	mov	r4,r17
 c00da4c:	c00d7280 	call	c00d728 <_malloc_trim_r>
 c00da50:	003fba06 	br	c00d93c <__alt_data_end+0xfc00d93c>
 c00da54:	28c9883a 	add	r4,r5,r3
 c00da58:	21000117 	ldw	r4,4(r4)
 c00da5c:	2100004c 	andi	r4,r4,1
 c00da60:	2000391e 	bne	r4,zero,c00db48 <_free_r+0x2fc>
 c00da64:	29c00217 	ldw	r7,8(r5)
 c00da68:	29000317 	ldw	r4,12(r5)
 c00da6c:	1885883a 	add	r2,r3,r2
 c00da70:	10c00054 	ori	r3,r2,1
 c00da74:	39000315 	stw	r4,12(r7)
 c00da78:	21c00215 	stw	r7,8(r4)
 c00da7c:	30c00115 	stw	r3,4(r6)
 c00da80:	308d883a 	add	r6,r6,r2
 c00da84:	30800015 	stw	r2,0(r6)
 c00da88:	003fac06 	br	c00d93c <__alt_data_end+0xfc00d93c>
 c00da8c:	00c00504 	movi	r3,20
 c00da90:	19401536 	bltu	r3,r5,c00dae8 <_free_r+0x29c>
 c00da94:	28c01704 	addi	r3,r5,92
 c00da98:	18c7883a 	add	r3,r3,r3
 c00da9c:	294016c4 	addi	r5,r5,91
 c00daa0:	003fb406 	br	c00d974 <__alt_data_end+0xfc00d974>
 c00daa4:	280bd0ba 	srai	r5,r5,2
 c00daa8:	00c00044 	movi	r3,1
 c00daac:	38800117 	ldw	r2,4(r7)
 c00dab0:	194a983a 	sll	r5,r3,r5
 c00dab4:	2007883a 	mov	r3,r4
 c00dab8:	2884b03a 	or	r2,r5,r2
 c00dabc:	38800115 	stw	r2,4(r7)
 c00dac0:	003fbb06 	br	c00d9b0 <__alt_data_end+0xfc00d9b0>
 c00dac4:	21800515 	stw	r6,20(r4)
 c00dac8:	21800415 	stw	r6,16(r4)
 c00dacc:	10c00054 	ori	r3,r2,1
 c00dad0:	31c00315 	stw	r7,12(r6)
 c00dad4:	31c00215 	stw	r7,8(r6)
 c00dad8:	30c00115 	stw	r3,4(r6)
 c00dadc:	308d883a 	add	r6,r6,r2
 c00dae0:	30800015 	stw	r2,0(r6)
 c00dae4:	003f9506 	br	c00d93c <__alt_data_end+0xfc00d93c>
 c00dae8:	00c01504 	movi	r3,84
 c00daec:	19400536 	bltu	r3,r5,c00db04 <_free_r+0x2b8>
 c00daf0:	100ad33a 	srli	r5,r2,12
 c00daf4:	28c01bc4 	addi	r3,r5,111
 c00daf8:	18c7883a 	add	r3,r3,r3
 c00dafc:	29401b84 	addi	r5,r5,110
 c00db00:	003f9c06 	br	c00d974 <__alt_data_end+0xfc00d974>
 c00db04:	00c05504 	movi	r3,340
 c00db08:	19400536 	bltu	r3,r5,c00db20 <_free_r+0x2d4>
 c00db0c:	100ad3fa 	srli	r5,r2,15
 c00db10:	28c01e04 	addi	r3,r5,120
 c00db14:	18c7883a 	add	r3,r3,r3
 c00db18:	29401dc4 	addi	r5,r5,119
 c00db1c:	003f9506 	br	c00d974 <__alt_data_end+0xfc00d974>
 c00db20:	00c15504 	movi	r3,1364
 c00db24:	19400536 	bltu	r3,r5,c00db3c <_free_r+0x2f0>
 c00db28:	100ad4ba 	srli	r5,r2,18
 c00db2c:	28c01f44 	addi	r3,r5,125
 c00db30:	18c7883a 	add	r3,r3,r3
 c00db34:	29401f04 	addi	r5,r5,124
 c00db38:	003f8e06 	br	c00d974 <__alt_data_end+0xfc00d974>
 c00db3c:	00c03f84 	movi	r3,254
 c00db40:	01401f84 	movi	r5,126
 c00db44:	003f8b06 	br	c00d974 <__alt_data_end+0xfc00d974>
 c00db48:	10c00054 	ori	r3,r2,1
 c00db4c:	30c00115 	stw	r3,4(r6)
 c00db50:	308d883a 	add	r6,r6,r2
 c00db54:	30800015 	stw	r2,0(r6)
 c00db58:	003f7806 	br	c00d93c <__alt_data_end+0xfc00d93c>

0c00db5c <__sfvwrite_r>:
 c00db5c:	30800217 	ldw	r2,8(r6)
 c00db60:	10006726 	beq	r2,zero,c00dd00 <__sfvwrite_r+0x1a4>
 c00db64:	28c0030b 	ldhu	r3,12(r5)
 c00db68:	defff404 	addi	sp,sp,-48
 c00db6c:	dd400715 	stw	r21,28(sp)
 c00db70:	dd000615 	stw	r20,24(sp)
 c00db74:	dc000215 	stw	r16,8(sp)
 c00db78:	dfc00b15 	stw	ra,44(sp)
 c00db7c:	df000a15 	stw	fp,40(sp)
 c00db80:	ddc00915 	stw	r23,36(sp)
 c00db84:	dd800815 	stw	r22,32(sp)
 c00db88:	dcc00515 	stw	r19,20(sp)
 c00db8c:	dc800415 	stw	r18,16(sp)
 c00db90:	dc400315 	stw	r17,12(sp)
 c00db94:	1880020c 	andi	r2,r3,8
 c00db98:	2821883a 	mov	r16,r5
 c00db9c:	202b883a 	mov	r21,r4
 c00dba0:	3029883a 	mov	r20,r6
 c00dba4:	10002726 	beq	r2,zero,c00dc44 <__sfvwrite_r+0xe8>
 c00dba8:	28800417 	ldw	r2,16(r5)
 c00dbac:	10002526 	beq	r2,zero,c00dc44 <__sfvwrite_r+0xe8>
 c00dbb0:	1880008c 	andi	r2,r3,2
 c00dbb4:	a4400017 	ldw	r17,0(r20)
 c00dbb8:	10002a26 	beq	r2,zero,c00dc64 <__sfvwrite_r+0x108>
 c00dbbc:	05a00034 	movhi	r22,32768
 c00dbc0:	0027883a 	mov	r19,zero
 c00dbc4:	0025883a 	mov	r18,zero
 c00dbc8:	b5bf0004 	addi	r22,r22,-1024
 c00dbcc:	980d883a 	mov	r6,r19
 c00dbd0:	a809883a 	mov	r4,r21
 c00dbd4:	90004626 	beq	r18,zero,c00dcf0 <__sfvwrite_r+0x194>
 c00dbd8:	900f883a 	mov	r7,r18
 c00dbdc:	b480022e 	bgeu	r22,r18,c00dbe8 <__sfvwrite_r+0x8c>
 c00dbe0:	01e00034 	movhi	r7,32768
 c00dbe4:	39ff0004 	addi	r7,r7,-1024
 c00dbe8:	80800917 	ldw	r2,36(r16)
 c00dbec:	81400717 	ldw	r5,28(r16)
 c00dbf0:	103ee83a 	callr	r2
 c00dbf4:	00805a0e 	bge	zero,r2,c00dd60 <__sfvwrite_r+0x204>
 c00dbf8:	a0c00217 	ldw	r3,8(r20)
 c00dbfc:	98a7883a 	add	r19,r19,r2
 c00dc00:	90a5c83a 	sub	r18,r18,r2
 c00dc04:	1885c83a 	sub	r2,r3,r2
 c00dc08:	a0800215 	stw	r2,8(r20)
 c00dc0c:	103fef1e 	bne	r2,zero,c00dbcc <__alt_data_end+0xfc00dbcc>
 c00dc10:	0005883a 	mov	r2,zero
 c00dc14:	dfc00b17 	ldw	ra,44(sp)
 c00dc18:	df000a17 	ldw	fp,40(sp)
 c00dc1c:	ddc00917 	ldw	r23,36(sp)
 c00dc20:	dd800817 	ldw	r22,32(sp)
 c00dc24:	dd400717 	ldw	r21,28(sp)
 c00dc28:	dd000617 	ldw	r20,24(sp)
 c00dc2c:	dcc00517 	ldw	r19,20(sp)
 c00dc30:	dc800417 	ldw	r18,16(sp)
 c00dc34:	dc400317 	ldw	r17,12(sp)
 c00dc38:	dc000217 	ldw	r16,8(sp)
 c00dc3c:	dec00c04 	addi	sp,sp,48
 c00dc40:	f800283a 	ret
 c00dc44:	800b883a 	mov	r5,r16
 c00dc48:	a809883a 	mov	r4,r21
 c00dc4c:	c00b45c0 	call	c00b45c <__swsetup_r>
 c00dc50:	1000ee1e 	bne	r2,zero,c00e00c <__sfvwrite_r+0x4b0>
 c00dc54:	80c0030b 	ldhu	r3,12(r16)
 c00dc58:	a4400017 	ldw	r17,0(r20)
 c00dc5c:	1880008c 	andi	r2,r3,2
 c00dc60:	103fd61e 	bne	r2,zero,c00dbbc <__alt_data_end+0xfc00dbbc>
 c00dc64:	1880004c 	andi	r2,r3,1
 c00dc68:	1000421e 	bne	r2,zero,c00dd74 <__sfvwrite_r+0x218>
 c00dc6c:	0039883a 	mov	fp,zero
 c00dc70:	0025883a 	mov	r18,zero
 c00dc74:	90001a26 	beq	r18,zero,c00dce0 <__sfvwrite_r+0x184>
 c00dc78:	1880800c 	andi	r2,r3,512
 c00dc7c:	84c00217 	ldw	r19,8(r16)
 c00dc80:	10002126 	beq	r2,zero,c00dd08 <__sfvwrite_r+0x1ac>
 c00dc84:	982f883a 	mov	r23,r19
 c00dc88:	94c09636 	bltu	r18,r19,c00dee4 <__sfvwrite_r+0x388>
 c00dc8c:	1881200c 	andi	r2,r3,1152
 c00dc90:	1000a11e 	bne	r2,zero,c00df18 <__sfvwrite_r+0x3bc>
 c00dc94:	81000017 	ldw	r4,0(r16)
 c00dc98:	b80d883a 	mov	r6,r23
 c00dc9c:	e00b883a 	mov	r5,fp
 c00dca0:	c00e8c40 	call	c00e8c4 <memmove>
 c00dca4:	80c00217 	ldw	r3,8(r16)
 c00dca8:	81000017 	ldw	r4,0(r16)
 c00dcac:	9005883a 	mov	r2,r18
 c00dcb0:	1ce7c83a 	sub	r19,r3,r19
 c00dcb4:	25cf883a 	add	r7,r4,r23
 c00dcb8:	84c00215 	stw	r19,8(r16)
 c00dcbc:	81c00015 	stw	r7,0(r16)
 c00dcc0:	a0c00217 	ldw	r3,8(r20)
 c00dcc4:	e0b9883a 	add	fp,fp,r2
 c00dcc8:	90a5c83a 	sub	r18,r18,r2
 c00dccc:	18a7c83a 	sub	r19,r3,r2
 c00dcd0:	a4c00215 	stw	r19,8(r20)
 c00dcd4:	983fce26 	beq	r19,zero,c00dc10 <__alt_data_end+0xfc00dc10>
 c00dcd8:	80c0030b 	ldhu	r3,12(r16)
 c00dcdc:	903fe61e 	bne	r18,zero,c00dc78 <__alt_data_end+0xfc00dc78>
 c00dce0:	8f000017 	ldw	fp,0(r17)
 c00dce4:	8c800117 	ldw	r18,4(r17)
 c00dce8:	8c400204 	addi	r17,r17,8
 c00dcec:	003fe106 	br	c00dc74 <__alt_data_end+0xfc00dc74>
 c00dcf0:	8cc00017 	ldw	r19,0(r17)
 c00dcf4:	8c800117 	ldw	r18,4(r17)
 c00dcf8:	8c400204 	addi	r17,r17,8
 c00dcfc:	003fb306 	br	c00dbcc <__alt_data_end+0xfc00dbcc>
 c00dd00:	0005883a 	mov	r2,zero
 c00dd04:	f800283a 	ret
 c00dd08:	81000017 	ldw	r4,0(r16)
 c00dd0c:	80800417 	ldw	r2,16(r16)
 c00dd10:	11005a36 	bltu	r2,r4,c00de7c <__sfvwrite_r+0x320>
 c00dd14:	85c00517 	ldw	r23,20(r16)
 c00dd18:	95c05836 	bltu	r18,r23,c00de7c <__sfvwrite_r+0x320>
 c00dd1c:	00a00034 	movhi	r2,32768
 c00dd20:	10bfffc4 	addi	r2,r2,-1
 c00dd24:	9009883a 	mov	r4,r18
 c00dd28:	1480012e 	bgeu	r2,r18,c00dd30 <__sfvwrite_r+0x1d4>
 c00dd2c:	1009883a 	mov	r4,r2
 c00dd30:	b80b883a 	mov	r5,r23
 c00dd34:	c0045880 	call	c004588 <__divsi3>
 c00dd38:	b80b883a 	mov	r5,r23
 c00dd3c:	1009883a 	mov	r4,r2
 c00dd40:	c00473c0 	call	c00473c <__mulsi3>
 c00dd44:	81400717 	ldw	r5,28(r16)
 c00dd48:	80c00917 	ldw	r3,36(r16)
 c00dd4c:	100f883a 	mov	r7,r2
 c00dd50:	e00d883a 	mov	r6,fp
 c00dd54:	a809883a 	mov	r4,r21
 c00dd58:	183ee83a 	callr	r3
 c00dd5c:	00bfd816 	blt	zero,r2,c00dcc0 <__alt_data_end+0xfc00dcc0>
 c00dd60:	8080030b 	ldhu	r2,12(r16)
 c00dd64:	10801014 	ori	r2,r2,64
 c00dd68:	8080030d 	sth	r2,12(r16)
 c00dd6c:	00bfffc4 	movi	r2,-1
 c00dd70:	003fa806 	br	c00dc14 <__alt_data_end+0xfc00dc14>
 c00dd74:	0027883a 	mov	r19,zero
 c00dd78:	0011883a 	mov	r8,zero
 c00dd7c:	0039883a 	mov	fp,zero
 c00dd80:	0025883a 	mov	r18,zero
 c00dd84:	90001f26 	beq	r18,zero,c00de04 <__sfvwrite_r+0x2a8>
 c00dd88:	40005a26 	beq	r8,zero,c00def4 <__sfvwrite_r+0x398>
 c00dd8c:	982d883a 	mov	r22,r19
 c00dd90:	94c0012e 	bgeu	r18,r19,c00dd98 <__sfvwrite_r+0x23c>
 c00dd94:	902d883a 	mov	r22,r18
 c00dd98:	81000017 	ldw	r4,0(r16)
 c00dd9c:	80800417 	ldw	r2,16(r16)
 c00dda0:	b02f883a 	mov	r23,r22
 c00dda4:	81c00517 	ldw	r7,20(r16)
 c00dda8:	1100032e 	bgeu	r2,r4,c00ddb8 <__sfvwrite_r+0x25c>
 c00ddac:	80c00217 	ldw	r3,8(r16)
 c00ddb0:	38c7883a 	add	r3,r7,r3
 c00ddb4:	1d801816 	blt	r3,r22,c00de18 <__sfvwrite_r+0x2bc>
 c00ddb8:	b1c03e16 	blt	r22,r7,c00deb4 <__sfvwrite_r+0x358>
 c00ddbc:	80800917 	ldw	r2,36(r16)
 c00ddc0:	81400717 	ldw	r5,28(r16)
 c00ddc4:	e00d883a 	mov	r6,fp
 c00ddc8:	da000115 	stw	r8,4(sp)
 c00ddcc:	a809883a 	mov	r4,r21
 c00ddd0:	103ee83a 	callr	r2
 c00ddd4:	102f883a 	mov	r23,r2
 c00ddd8:	da000117 	ldw	r8,4(sp)
 c00dddc:	00bfe00e 	bge	zero,r2,c00dd60 <__alt_data_end+0xfc00dd60>
 c00dde0:	9de7c83a 	sub	r19,r19,r23
 c00dde4:	98001f26 	beq	r19,zero,c00de64 <__sfvwrite_r+0x308>
 c00dde8:	a0800217 	ldw	r2,8(r20)
 c00ddec:	e5f9883a 	add	fp,fp,r23
 c00ddf0:	95e5c83a 	sub	r18,r18,r23
 c00ddf4:	15efc83a 	sub	r23,r2,r23
 c00ddf8:	a5c00215 	stw	r23,8(r20)
 c00ddfc:	b83f8426 	beq	r23,zero,c00dc10 <__alt_data_end+0xfc00dc10>
 c00de00:	903fe11e 	bne	r18,zero,c00dd88 <__alt_data_end+0xfc00dd88>
 c00de04:	8f000017 	ldw	fp,0(r17)
 c00de08:	8c800117 	ldw	r18,4(r17)
 c00de0c:	0011883a 	mov	r8,zero
 c00de10:	8c400204 	addi	r17,r17,8
 c00de14:	003fdb06 	br	c00dd84 <__alt_data_end+0xfc00dd84>
 c00de18:	180d883a 	mov	r6,r3
 c00de1c:	e00b883a 	mov	r5,fp
 c00de20:	da000115 	stw	r8,4(sp)
 c00de24:	d8c00015 	stw	r3,0(sp)
 c00de28:	c00e8c40 	call	c00e8c4 <memmove>
 c00de2c:	d8c00017 	ldw	r3,0(sp)
 c00de30:	80800017 	ldw	r2,0(r16)
 c00de34:	800b883a 	mov	r5,r16
 c00de38:	a809883a 	mov	r4,r21
 c00de3c:	10c5883a 	add	r2,r2,r3
 c00de40:	80800015 	stw	r2,0(r16)
 c00de44:	d8c00015 	stw	r3,0(sp)
 c00de48:	c00d07c0 	call	c00d07c <_fflush_r>
 c00de4c:	d8c00017 	ldw	r3,0(sp)
 c00de50:	da000117 	ldw	r8,4(sp)
 c00de54:	103fc21e 	bne	r2,zero,c00dd60 <__alt_data_end+0xfc00dd60>
 c00de58:	182f883a 	mov	r23,r3
 c00de5c:	9de7c83a 	sub	r19,r19,r23
 c00de60:	983fe11e 	bne	r19,zero,c00dde8 <__alt_data_end+0xfc00dde8>
 c00de64:	800b883a 	mov	r5,r16
 c00de68:	a809883a 	mov	r4,r21
 c00de6c:	c00d07c0 	call	c00d07c <_fflush_r>
 c00de70:	103fbb1e 	bne	r2,zero,c00dd60 <__alt_data_end+0xfc00dd60>
 c00de74:	0011883a 	mov	r8,zero
 c00de78:	003fdb06 	br	c00dde8 <__alt_data_end+0xfc00dde8>
 c00de7c:	94c0012e 	bgeu	r18,r19,c00de84 <__sfvwrite_r+0x328>
 c00de80:	9027883a 	mov	r19,r18
 c00de84:	980d883a 	mov	r6,r19
 c00de88:	e00b883a 	mov	r5,fp
 c00de8c:	c00e8c40 	call	c00e8c4 <memmove>
 c00de90:	80800217 	ldw	r2,8(r16)
 c00de94:	80c00017 	ldw	r3,0(r16)
 c00de98:	14c5c83a 	sub	r2,r2,r19
 c00de9c:	1cc7883a 	add	r3,r3,r19
 c00dea0:	80800215 	stw	r2,8(r16)
 c00dea4:	80c00015 	stw	r3,0(r16)
 c00dea8:	10004326 	beq	r2,zero,c00dfb8 <__sfvwrite_r+0x45c>
 c00deac:	9805883a 	mov	r2,r19
 c00deb0:	003f8306 	br	c00dcc0 <__alt_data_end+0xfc00dcc0>
 c00deb4:	b00d883a 	mov	r6,r22
 c00deb8:	e00b883a 	mov	r5,fp
 c00debc:	da000115 	stw	r8,4(sp)
 c00dec0:	c00e8c40 	call	c00e8c4 <memmove>
 c00dec4:	80800217 	ldw	r2,8(r16)
 c00dec8:	80c00017 	ldw	r3,0(r16)
 c00decc:	da000117 	ldw	r8,4(sp)
 c00ded0:	1585c83a 	sub	r2,r2,r22
 c00ded4:	1dad883a 	add	r22,r3,r22
 c00ded8:	80800215 	stw	r2,8(r16)
 c00dedc:	85800015 	stw	r22,0(r16)
 c00dee0:	003fbf06 	br	c00dde0 <__alt_data_end+0xfc00dde0>
 c00dee4:	81000017 	ldw	r4,0(r16)
 c00dee8:	9027883a 	mov	r19,r18
 c00deec:	902f883a 	mov	r23,r18
 c00def0:	003f6906 	br	c00dc98 <__alt_data_end+0xfc00dc98>
 c00def4:	900d883a 	mov	r6,r18
 c00def8:	01400284 	movi	r5,10
 c00defc:	e009883a 	mov	r4,fp
 c00df00:	c00e6980 	call	c00e698 <memchr>
 c00df04:	10003e26 	beq	r2,zero,c00e000 <__sfvwrite_r+0x4a4>
 c00df08:	10800044 	addi	r2,r2,1
 c00df0c:	1727c83a 	sub	r19,r2,fp
 c00df10:	02000044 	movi	r8,1
 c00df14:	003f9d06 	br	c00dd8c <__alt_data_end+0xfc00dd8c>
 c00df18:	80800517 	ldw	r2,20(r16)
 c00df1c:	81400417 	ldw	r5,16(r16)
 c00df20:	81c00017 	ldw	r7,0(r16)
 c00df24:	10a7883a 	add	r19,r2,r2
 c00df28:	9885883a 	add	r2,r19,r2
 c00df2c:	1026d7fa 	srli	r19,r2,31
 c00df30:	396dc83a 	sub	r22,r7,r5
 c00df34:	b1000044 	addi	r4,r22,1
 c00df38:	9885883a 	add	r2,r19,r2
 c00df3c:	1027d07a 	srai	r19,r2,1
 c00df40:	2485883a 	add	r2,r4,r18
 c00df44:	980d883a 	mov	r6,r19
 c00df48:	9880022e 	bgeu	r19,r2,c00df54 <__sfvwrite_r+0x3f8>
 c00df4c:	1027883a 	mov	r19,r2
 c00df50:	100d883a 	mov	r6,r2
 c00df54:	18c1000c 	andi	r3,r3,1024
 c00df58:	18001c26 	beq	r3,zero,c00dfcc <__sfvwrite_r+0x470>
 c00df5c:	300b883a 	mov	r5,r6
 c00df60:	a809883a 	mov	r4,r21
 c00df64:	c00478c0 	call	c00478c <_malloc_r>
 c00df68:	102f883a 	mov	r23,r2
 c00df6c:	10002926 	beq	r2,zero,c00e014 <__sfvwrite_r+0x4b8>
 c00df70:	81400417 	ldw	r5,16(r16)
 c00df74:	b00d883a 	mov	r6,r22
 c00df78:	1009883a 	mov	r4,r2
 c00df7c:	c00e77c0 	call	c00e77c <memcpy>
 c00df80:	8080030b 	ldhu	r2,12(r16)
 c00df84:	00fedfc4 	movi	r3,-1153
 c00df88:	10c4703a 	and	r2,r2,r3
 c00df8c:	10802014 	ori	r2,r2,128
 c00df90:	8080030d 	sth	r2,12(r16)
 c00df94:	bd89883a 	add	r4,r23,r22
 c00df98:	9d8fc83a 	sub	r7,r19,r22
 c00df9c:	85c00415 	stw	r23,16(r16)
 c00dfa0:	84c00515 	stw	r19,20(r16)
 c00dfa4:	81000015 	stw	r4,0(r16)
 c00dfa8:	9027883a 	mov	r19,r18
 c00dfac:	81c00215 	stw	r7,8(r16)
 c00dfb0:	902f883a 	mov	r23,r18
 c00dfb4:	003f3806 	br	c00dc98 <__alt_data_end+0xfc00dc98>
 c00dfb8:	800b883a 	mov	r5,r16
 c00dfbc:	a809883a 	mov	r4,r21
 c00dfc0:	c00d07c0 	call	c00d07c <_fflush_r>
 c00dfc4:	103fb926 	beq	r2,zero,c00deac <__alt_data_end+0xfc00deac>
 c00dfc8:	003f6506 	br	c00dd60 <__alt_data_end+0xfc00dd60>
 c00dfcc:	a809883a 	mov	r4,r21
 c00dfd0:	c00fd680 	call	c00fd68 <_realloc_r>
 c00dfd4:	102f883a 	mov	r23,r2
 c00dfd8:	103fee1e 	bne	r2,zero,c00df94 <__alt_data_end+0xfc00df94>
 c00dfdc:	81400417 	ldw	r5,16(r16)
 c00dfe0:	a809883a 	mov	r4,r21
 c00dfe4:	c00d84c0 	call	c00d84c <_free_r>
 c00dfe8:	8080030b 	ldhu	r2,12(r16)
 c00dfec:	00ffdfc4 	movi	r3,-129
 c00dff0:	1884703a 	and	r2,r3,r2
 c00dff4:	00c00304 	movi	r3,12
 c00dff8:	a8c00015 	stw	r3,0(r21)
 c00dffc:	003f5906 	br	c00dd64 <__alt_data_end+0xfc00dd64>
 c00e000:	94c00044 	addi	r19,r18,1
 c00e004:	02000044 	movi	r8,1
 c00e008:	003f6006 	br	c00dd8c <__alt_data_end+0xfc00dd8c>
 c00e00c:	00bfffc4 	movi	r2,-1
 c00e010:	003f0006 	br	c00dc14 <__alt_data_end+0xfc00dc14>
 c00e014:	00800304 	movi	r2,12
 c00e018:	a8800015 	stw	r2,0(r21)
 c00e01c:	8080030b 	ldhu	r2,12(r16)
 c00e020:	003f5006 	br	c00dd64 <__alt_data_end+0xfc00dd64>

0c00e024 <_fwalk>:
 c00e024:	defff704 	addi	sp,sp,-36
 c00e028:	dd000415 	stw	r20,16(sp)
 c00e02c:	dfc00815 	stw	ra,32(sp)
 c00e030:	ddc00715 	stw	r23,28(sp)
 c00e034:	dd800615 	stw	r22,24(sp)
 c00e038:	dd400515 	stw	r21,20(sp)
 c00e03c:	dcc00315 	stw	r19,12(sp)
 c00e040:	dc800215 	stw	r18,8(sp)
 c00e044:	dc400115 	stw	r17,4(sp)
 c00e048:	dc000015 	stw	r16,0(sp)
 c00e04c:	2500b804 	addi	r20,r4,736
 c00e050:	a0002326 	beq	r20,zero,c00e0e0 <_fwalk+0xbc>
 c00e054:	282b883a 	mov	r21,r5
 c00e058:	002f883a 	mov	r23,zero
 c00e05c:	05800044 	movi	r22,1
 c00e060:	04ffffc4 	movi	r19,-1
 c00e064:	a4400117 	ldw	r17,4(r20)
 c00e068:	a4800217 	ldw	r18,8(r20)
 c00e06c:	8c7fffc4 	addi	r17,r17,-1
 c00e070:	88000d16 	blt	r17,zero,c00e0a8 <_fwalk+0x84>
 c00e074:	94000304 	addi	r16,r18,12
 c00e078:	94800384 	addi	r18,r18,14
 c00e07c:	8080000b 	ldhu	r2,0(r16)
 c00e080:	8c7fffc4 	addi	r17,r17,-1
 c00e084:	813ffd04 	addi	r4,r16,-12
 c00e088:	b080042e 	bgeu	r22,r2,c00e09c <_fwalk+0x78>
 c00e08c:	9080000f 	ldh	r2,0(r18)
 c00e090:	14c00226 	beq	r2,r19,c00e09c <_fwalk+0x78>
 c00e094:	a83ee83a 	callr	r21
 c00e098:	b8aeb03a 	or	r23,r23,r2
 c00e09c:	84001a04 	addi	r16,r16,104
 c00e0a0:	94801a04 	addi	r18,r18,104
 c00e0a4:	8cfff51e 	bne	r17,r19,c00e07c <__alt_data_end+0xfc00e07c>
 c00e0a8:	a5000017 	ldw	r20,0(r20)
 c00e0ac:	a03fed1e 	bne	r20,zero,c00e064 <__alt_data_end+0xfc00e064>
 c00e0b0:	b805883a 	mov	r2,r23
 c00e0b4:	dfc00817 	ldw	ra,32(sp)
 c00e0b8:	ddc00717 	ldw	r23,28(sp)
 c00e0bc:	dd800617 	ldw	r22,24(sp)
 c00e0c0:	dd400517 	ldw	r21,20(sp)
 c00e0c4:	dd000417 	ldw	r20,16(sp)
 c00e0c8:	dcc00317 	ldw	r19,12(sp)
 c00e0cc:	dc800217 	ldw	r18,8(sp)
 c00e0d0:	dc400117 	ldw	r17,4(sp)
 c00e0d4:	dc000017 	ldw	r16,0(sp)
 c00e0d8:	dec00904 	addi	sp,sp,36
 c00e0dc:	f800283a 	ret
 c00e0e0:	002f883a 	mov	r23,zero
 c00e0e4:	003ff206 	br	c00e0b0 <__alt_data_end+0xfc00e0b0>

0c00e0e8 <_fwalk_reent>:
 c00e0e8:	defff704 	addi	sp,sp,-36
 c00e0ec:	dd000415 	stw	r20,16(sp)
 c00e0f0:	dfc00815 	stw	ra,32(sp)
 c00e0f4:	ddc00715 	stw	r23,28(sp)
 c00e0f8:	dd800615 	stw	r22,24(sp)
 c00e0fc:	dd400515 	stw	r21,20(sp)
 c00e100:	dcc00315 	stw	r19,12(sp)
 c00e104:	dc800215 	stw	r18,8(sp)
 c00e108:	dc400115 	stw	r17,4(sp)
 c00e10c:	dc000015 	stw	r16,0(sp)
 c00e110:	2500b804 	addi	r20,r4,736
 c00e114:	a0002326 	beq	r20,zero,c00e1a4 <_fwalk_reent+0xbc>
 c00e118:	282b883a 	mov	r21,r5
 c00e11c:	2027883a 	mov	r19,r4
 c00e120:	002f883a 	mov	r23,zero
 c00e124:	05800044 	movi	r22,1
 c00e128:	04bfffc4 	movi	r18,-1
 c00e12c:	a4400117 	ldw	r17,4(r20)
 c00e130:	a4000217 	ldw	r16,8(r20)
 c00e134:	8c7fffc4 	addi	r17,r17,-1
 c00e138:	88000c16 	blt	r17,zero,c00e16c <_fwalk_reent+0x84>
 c00e13c:	84000304 	addi	r16,r16,12
 c00e140:	8080000b 	ldhu	r2,0(r16)
 c00e144:	8c7fffc4 	addi	r17,r17,-1
 c00e148:	817ffd04 	addi	r5,r16,-12
 c00e14c:	b080052e 	bgeu	r22,r2,c00e164 <_fwalk_reent+0x7c>
 c00e150:	8080008f 	ldh	r2,2(r16)
 c00e154:	9809883a 	mov	r4,r19
 c00e158:	14800226 	beq	r2,r18,c00e164 <_fwalk_reent+0x7c>
 c00e15c:	a83ee83a 	callr	r21
 c00e160:	b8aeb03a 	or	r23,r23,r2
 c00e164:	84001a04 	addi	r16,r16,104
 c00e168:	8cbff51e 	bne	r17,r18,c00e140 <__alt_data_end+0xfc00e140>
 c00e16c:	a5000017 	ldw	r20,0(r20)
 c00e170:	a03fee1e 	bne	r20,zero,c00e12c <__alt_data_end+0xfc00e12c>
 c00e174:	b805883a 	mov	r2,r23
 c00e178:	dfc00817 	ldw	ra,32(sp)
 c00e17c:	ddc00717 	ldw	r23,28(sp)
 c00e180:	dd800617 	ldw	r22,24(sp)
 c00e184:	dd400517 	ldw	r21,20(sp)
 c00e188:	dd000417 	ldw	r20,16(sp)
 c00e18c:	dcc00317 	ldw	r19,12(sp)
 c00e190:	dc800217 	ldw	r18,8(sp)
 c00e194:	dc400117 	ldw	r17,4(sp)
 c00e198:	dc000017 	ldw	r16,0(sp)
 c00e19c:	dec00904 	addi	sp,sp,36
 c00e1a0:	f800283a 	ret
 c00e1a4:	002f883a 	mov	r23,zero
 c00e1a8:	003ff206 	br	c00e174 <__alt_data_end+0xfc00e174>

0c00e1ac <iswspace>:
 c00e1ac:	00803fc4 	movi	r2,255
 c00e1b0:	11000836 	bltu	r2,r4,c00e1d4 <iswspace+0x28>
 c00e1b4:	008300b4 	movhi	r2,3074
 c00e1b8:	10bfc104 	addi	r2,r2,-252
 c00e1bc:	10800017 	ldw	r2,0(r2)
 c00e1c0:	1109883a 	add	r4,r2,r4
 c00e1c4:	20800043 	ldbu	r2,1(r4)
 c00e1c8:	1080020c 	andi	r2,r2,8
 c00e1cc:	10803fcc 	andi	r2,r2,255
 c00e1d0:	f800283a 	ret
 c00e1d4:	0005883a 	mov	r2,zero
 c00e1d8:	f800283a 	ret

0c00e1dc <_setlocale_r>:
 c00e1dc:	30001b26 	beq	r6,zero,c00e24c <_setlocale_r+0x70>
 c00e1e0:	014300b4 	movhi	r5,3074
 c00e1e4:	defffe04 	addi	sp,sp,-8
 c00e1e8:	29774904 	addi	r5,r5,-8924
 c00e1ec:	3009883a 	mov	r4,r6
 c00e1f0:	dc000015 	stw	r16,0(sp)
 c00e1f4:	dfc00115 	stw	ra,4(sp)
 c00e1f8:	3021883a 	mov	r16,r6
 c00e1fc:	c0107440 	call	c010744 <strcmp>
 c00e200:	1000061e 	bne	r2,zero,c00e21c <_setlocale_r+0x40>
 c00e204:	008300b4 	movhi	r2,3074
 c00e208:	10b74804 	addi	r2,r2,-8928
 c00e20c:	dfc00117 	ldw	ra,4(sp)
 c00e210:	dc000017 	ldw	r16,0(sp)
 c00e214:	dec00204 	addi	sp,sp,8
 c00e218:	f800283a 	ret
 c00e21c:	014300b4 	movhi	r5,3074
 c00e220:	29774804 	addi	r5,r5,-8928
 c00e224:	8009883a 	mov	r4,r16
 c00e228:	c0107440 	call	c010744 <strcmp>
 c00e22c:	103ff526 	beq	r2,zero,c00e204 <__alt_data_end+0xfc00e204>
 c00e230:	014300b4 	movhi	r5,3074
 c00e234:	29768004 	addi	r5,r5,-9728
 c00e238:	8009883a 	mov	r4,r16
 c00e23c:	c0107440 	call	c010744 <strcmp>
 c00e240:	103ff026 	beq	r2,zero,c00e204 <__alt_data_end+0xfc00e204>
 c00e244:	0005883a 	mov	r2,zero
 c00e248:	003ff006 	br	c00e20c <__alt_data_end+0xfc00e20c>
 c00e24c:	008300b4 	movhi	r2,3074
 c00e250:	10b74804 	addi	r2,r2,-8928
 c00e254:	f800283a 	ret

0c00e258 <__locale_charset>:
 c00e258:	008300b4 	movhi	r2,3074
 c00e25c:	10bb2104 	addi	r2,r2,-4988
 c00e260:	f800283a 	ret

0c00e264 <__locale_mb_cur_max>:
 c00e264:	008300b4 	movhi	r2,3074
 c00e268:	10bfc404 	addi	r2,r2,-240
 c00e26c:	10800017 	ldw	r2,0(r2)
 c00e270:	f800283a 	ret

0c00e274 <__locale_msgcharset>:
 c00e274:	008300b4 	movhi	r2,3074
 c00e278:	10bb1904 	addi	r2,r2,-5020
 c00e27c:	f800283a 	ret

0c00e280 <__locale_cjk_lang>:
 c00e280:	0005883a 	mov	r2,zero
 c00e284:	f800283a 	ret

0c00e288 <_localeconv_r>:
 c00e288:	008300b4 	movhi	r2,3074
 c00e28c:	10bb2904 	addi	r2,r2,-4956
 c00e290:	f800283a 	ret

0c00e294 <setlocale>:
 c00e294:	008300b4 	movhi	r2,3074
 c00e298:	10bfc304 	addi	r2,r2,-244
 c00e29c:	280d883a 	mov	r6,r5
 c00e2a0:	200b883a 	mov	r5,r4
 c00e2a4:	11000017 	ldw	r4,0(r2)
 c00e2a8:	c00e1dc1 	jmpi	c00e1dc <_setlocale_r>

0c00e2ac <localeconv>:
 c00e2ac:	008300b4 	movhi	r2,3074
 c00e2b0:	10bb2904 	addi	r2,r2,-4956
 c00e2b4:	f800283a 	ret

0c00e2b8 <__smakebuf_r>:
 c00e2b8:	2880030b 	ldhu	r2,12(r5)
 c00e2bc:	10c0008c 	andi	r3,r2,2
 c00e2c0:	1800411e 	bne	r3,zero,c00e3c8 <__smakebuf_r+0x110>
 c00e2c4:	deffec04 	addi	sp,sp,-80
 c00e2c8:	dc000f15 	stw	r16,60(sp)
 c00e2cc:	2821883a 	mov	r16,r5
 c00e2d0:	2940038f 	ldh	r5,14(r5)
 c00e2d4:	dc401015 	stw	r17,64(sp)
 c00e2d8:	dfc01315 	stw	ra,76(sp)
 c00e2dc:	dcc01215 	stw	r19,72(sp)
 c00e2e0:	dc801115 	stw	r18,68(sp)
 c00e2e4:	2023883a 	mov	r17,r4
 c00e2e8:	28001c16 	blt	r5,zero,c00e35c <__smakebuf_r+0xa4>
 c00e2ec:	d80d883a 	mov	r6,sp
 c00e2f0:	c015f880 	call	c015f88 <_fstat_r>
 c00e2f4:	10001816 	blt	r2,zero,c00e358 <__smakebuf_r+0xa0>
 c00e2f8:	d8800117 	ldw	r2,4(sp)
 c00e2fc:	00e00014 	movui	r3,32768
 c00e300:	10bc000c 	andi	r2,r2,61440
 c00e304:	14c80020 	cmpeqi	r19,r2,8192
 c00e308:	10c03726 	beq	r2,r3,c00e3e8 <__smakebuf_r+0x130>
 c00e30c:	80c0030b 	ldhu	r3,12(r16)
 c00e310:	18c20014 	ori	r3,r3,2048
 c00e314:	80c0030d 	sth	r3,12(r16)
 c00e318:	00c80004 	movi	r3,8192
 c00e31c:	10c0521e 	bne	r2,r3,c00e468 <__smakebuf_r+0x1b0>
 c00e320:	8140038f 	ldh	r5,14(r16)
 c00e324:	8809883a 	mov	r4,r17
 c00e328:	c016b900 	call	c016b90 <_isatty_r>
 c00e32c:	10004c26 	beq	r2,zero,c00e460 <__smakebuf_r+0x1a8>
 c00e330:	8080030b 	ldhu	r2,12(r16)
 c00e334:	80c010c4 	addi	r3,r16,67
 c00e338:	80c00015 	stw	r3,0(r16)
 c00e33c:	10800054 	ori	r2,r2,1
 c00e340:	8080030d 	sth	r2,12(r16)
 c00e344:	00800044 	movi	r2,1
 c00e348:	80c00415 	stw	r3,16(r16)
 c00e34c:	80800515 	stw	r2,20(r16)
 c00e350:	04810004 	movi	r18,1024
 c00e354:	00000706 	br	c00e374 <__smakebuf_r+0xbc>
 c00e358:	8080030b 	ldhu	r2,12(r16)
 c00e35c:	10c0200c 	andi	r3,r2,128
 c00e360:	18001f1e 	bne	r3,zero,c00e3e0 <__smakebuf_r+0x128>
 c00e364:	04810004 	movi	r18,1024
 c00e368:	10820014 	ori	r2,r2,2048
 c00e36c:	8080030d 	sth	r2,12(r16)
 c00e370:	0027883a 	mov	r19,zero
 c00e374:	900b883a 	mov	r5,r18
 c00e378:	8809883a 	mov	r4,r17
 c00e37c:	c00478c0 	call	c00478c <_malloc_r>
 c00e380:	10002c26 	beq	r2,zero,c00e434 <__smakebuf_r+0x17c>
 c00e384:	80c0030b 	ldhu	r3,12(r16)
 c00e388:	01030074 	movhi	r4,3073
 c00e38c:	21344404 	addi	r4,r4,-12016
 c00e390:	89000f15 	stw	r4,60(r17)
 c00e394:	18c02014 	ori	r3,r3,128
 c00e398:	80c0030d 	sth	r3,12(r16)
 c00e39c:	80800015 	stw	r2,0(r16)
 c00e3a0:	80800415 	stw	r2,16(r16)
 c00e3a4:	84800515 	stw	r18,20(r16)
 c00e3a8:	98001a1e 	bne	r19,zero,c00e414 <__smakebuf_r+0x15c>
 c00e3ac:	dfc01317 	ldw	ra,76(sp)
 c00e3b0:	dcc01217 	ldw	r19,72(sp)
 c00e3b4:	dc801117 	ldw	r18,68(sp)
 c00e3b8:	dc401017 	ldw	r17,64(sp)
 c00e3bc:	dc000f17 	ldw	r16,60(sp)
 c00e3c0:	dec01404 	addi	sp,sp,80
 c00e3c4:	f800283a 	ret
 c00e3c8:	288010c4 	addi	r2,r5,67
 c00e3cc:	28800015 	stw	r2,0(r5)
 c00e3d0:	28800415 	stw	r2,16(r5)
 c00e3d4:	00800044 	movi	r2,1
 c00e3d8:	28800515 	stw	r2,20(r5)
 c00e3dc:	f800283a 	ret
 c00e3e0:	04801004 	movi	r18,64
 c00e3e4:	003fe006 	br	c00e368 <__alt_data_end+0xfc00e368>
 c00e3e8:	81000a17 	ldw	r4,40(r16)
 c00e3ec:	00c30074 	movhi	r3,3073
 c00e3f0:	18c1b804 	addi	r3,r3,1760
 c00e3f4:	20ffc51e 	bne	r4,r3,c00e30c <__alt_data_end+0xfc00e30c>
 c00e3f8:	8080030b 	ldhu	r2,12(r16)
 c00e3fc:	04810004 	movi	r18,1024
 c00e400:	84801315 	stw	r18,76(r16)
 c00e404:	1484b03a 	or	r2,r2,r18
 c00e408:	8080030d 	sth	r2,12(r16)
 c00e40c:	0027883a 	mov	r19,zero
 c00e410:	003fd806 	br	c00e374 <__alt_data_end+0xfc00e374>
 c00e414:	8140038f 	ldh	r5,14(r16)
 c00e418:	8809883a 	mov	r4,r17
 c00e41c:	c016b900 	call	c016b90 <_isatty_r>
 c00e420:	103fe226 	beq	r2,zero,c00e3ac <__alt_data_end+0xfc00e3ac>
 c00e424:	8080030b 	ldhu	r2,12(r16)
 c00e428:	10800054 	ori	r2,r2,1
 c00e42c:	8080030d 	sth	r2,12(r16)
 c00e430:	003fde06 	br	c00e3ac <__alt_data_end+0xfc00e3ac>
 c00e434:	8080030b 	ldhu	r2,12(r16)
 c00e438:	10c0800c 	andi	r3,r2,512
 c00e43c:	183fdb1e 	bne	r3,zero,c00e3ac <__alt_data_end+0xfc00e3ac>
 c00e440:	10800094 	ori	r2,r2,2
 c00e444:	80c010c4 	addi	r3,r16,67
 c00e448:	8080030d 	sth	r2,12(r16)
 c00e44c:	00800044 	movi	r2,1
 c00e450:	80c00015 	stw	r3,0(r16)
 c00e454:	80c00415 	stw	r3,16(r16)
 c00e458:	80800515 	stw	r2,20(r16)
 c00e45c:	003fd306 	br	c00e3ac <__alt_data_end+0xfc00e3ac>
 c00e460:	04810004 	movi	r18,1024
 c00e464:	003fc306 	br	c00e374 <__alt_data_end+0xfc00e374>
 c00e468:	0027883a 	mov	r19,zero
 c00e46c:	04810004 	movi	r18,1024
 c00e470:	003fc006 	br	c00e374 <__alt_data_end+0xfc00e374>

0c00e474 <_mbrtowc_r>:
 c00e474:	defff704 	addi	sp,sp,-36
 c00e478:	008300b4 	movhi	r2,3074
 c00e47c:	dc800715 	stw	r18,28(sp)
 c00e480:	dc400615 	stw	r17,24(sp)
 c00e484:	dc000515 	stw	r16,20(sp)
 c00e488:	10bfc504 	addi	r2,r2,-236
 c00e48c:	dfc00815 	stw	ra,32(sp)
 c00e490:	2021883a 	mov	r16,r4
 c00e494:	dc400917 	ldw	r17,36(sp)
 c00e498:	14800017 	ldw	r18,0(r2)
 c00e49c:	30001626 	beq	r6,zero,c00e4f8 <_mbrtowc_r+0x84>
 c00e4a0:	d9400215 	stw	r5,8(sp)
 c00e4a4:	d9800315 	stw	r6,12(sp)
 c00e4a8:	d9c00415 	stw	r7,16(sp)
 c00e4ac:	c00e2580 	call	c00e258 <__locale_charset>
 c00e4b0:	d9c00417 	ldw	r7,16(sp)
 c00e4b4:	d9800317 	ldw	r6,12(sp)
 c00e4b8:	d9400217 	ldw	r5,8(sp)
 c00e4bc:	d8800015 	stw	r2,0(sp)
 c00e4c0:	dc400115 	stw	r17,4(sp)
 c00e4c4:	8009883a 	mov	r4,r16
 c00e4c8:	903ee83a 	callr	r18
 c00e4cc:	00ffffc4 	movi	r3,-1
 c00e4d0:	10c0031e 	bne	r2,r3,c00e4e0 <_mbrtowc_r+0x6c>
 c00e4d4:	88000015 	stw	zero,0(r17)
 c00e4d8:	00c02284 	movi	r3,138
 c00e4dc:	80c00015 	stw	r3,0(r16)
 c00e4e0:	dfc00817 	ldw	ra,32(sp)
 c00e4e4:	dc800717 	ldw	r18,28(sp)
 c00e4e8:	dc400617 	ldw	r17,24(sp)
 c00e4ec:	dc000517 	ldw	r16,20(sp)
 c00e4f0:	dec00904 	addi	sp,sp,36
 c00e4f4:	f800283a 	ret
 c00e4f8:	c00e2580 	call	c00e258 <__locale_charset>
 c00e4fc:	018300b4 	movhi	r6,3074
 c00e500:	31b68004 	addi	r6,r6,-9728
 c00e504:	dc400115 	stw	r17,4(sp)
 c00e508:	d8800015 	stw	r2,0(sp)
 c00e50c:	01c00044 	movi	r7,1
 c00e510:	000b883a 	mov	r5,zero
 c00e514:	8009883a 	mov	r4,r16
 c00e518:	903ee83a 	callr	r18
 c00e51c:	003feb06 	br	c00e4cc <__alt_data_end+0xfc00e4cc>

0c00e520 <mbrtowc>:
 c00e520:	defff704 	addi	sp,sp,-36
 c00e524:	008300b4 	movhi	r2,3074
 c00e528:	dc800415 	stw	r18,16(sp)
 c00e52c:	dc400315 	stw	r17,12(sp)
 c00e530:	10bfc304 	addi	r2,r2,-244
 c00e534:	dfc00815 	stw	ra,32(sp)
 c00e538:	dd400715 	stw	r21,28(sp)
 c00e53c:	dd000615 	stw	r20,24(sp)
 c00e540:	dcc00515 	stw	r19,20(sp)
 c00e544:	dc000215 	stw	r16,8(sp)
 c00e548:	3825883a 	mov	r18,r7
 c00e54c:	14400017 	ldw	r17,0(r2)
 c00e550:	28001c26 	beq	r5,zero,c00e5c4 <mbrtowc+0xa4>
 c00e554:	008300b4 	movhi	r2,3074
 c00e558:	10bfc504 	addi	r2,r2,-236
 c00e55c:	15400017 	ldw	r21,0(r2)
 c00e560:	2821883a 	mov	r16,r5
 c00e564:	2027883a 	mov	r19,r4
 c00e568:	3029883a 	mov	r20,r6
 c00e56c:	c00e2580 	call	c00e258 <__locale_charset>
 c00e570:	d8800015 	stw	r2,0(sp)
 c00e574:	dc800115 	stw	r18,4(sp)
 c00e578:	a00f883a 	mov	r7,r20
 c00e57c:	800d883a 	mov	r6,r16
 c00e580:	980b883a 	mov	r5,r19
 c00e584:	8809883a 	mov	r4,r17
 c00e588:	a83ee83a 	callr	r21
 c00e58c:	00ffffc4 	movi	r3,-1
 c00e590:	10c0031e 	bne	r2,r3,c00e5a0 <mbrtowc+0x80>
 c00e594:	90000015 	stw	zero,0(r18)
 c00e598:	00c02284 	movi	r3,138
 c00e59c:	88c00015 	stw	r3,0(r17)
 c00e5a0:	dfc00817 	ldw	ra,32(sp)
 c00e5a4:	dd400717 	ldw	r21,28(sp)
 c00e5a8:	dd000617 	ldw	r20,24(sp)
 c00e5ac:	dcc00517 	ldw	r19,20(sp)
 c00e5b0:	dc800417 	ldw	r18,16(sp)
 c00e5b4:	dc400317 	ldw	r17,12(sp)
 c00e5b8:	dc000217 	ldw	r16,8(sp)
 c00e5bc:	dec00904 	addi	sp,sp,36
 c00e5c0:	f800283a 	ret
 c00e5c4:	008300b4 	movhi	r2,3074
 c00e5c8:	10bfc504 	addi	r2,r2,-236
 c00e5cc:	14000017 	ldw	r16,0(r2)
 c00e5d0:	c00e2580 	call	c00e258 <__locale_charset>
 c00e5d4:	018300b4 	movhi	r6,3074
 c00e5d8:	31b68004 	addi	r6,r6,-9728
 c00e5dc:	dc800115 	stw	r18,4(sp)
 c00e5e0:	d8800015 	stw	r2,0(sp)
 c00e5e4:	01c00044 	movi	r7,1
 c00e5e8:	000b883a 	mov	r5,zero
 c00e5ec:	8809883a 	mov	r4,r17
 c00e5f0:	803ee83a 	callr	r16
 c00e5f4:	003fe506 	br	c00e58c <__alt_data_end+0xfc00e58c>

0c00e5f8 <__ascii_mbtowc>:
 c00e5f8:	deffff04 	addi	sp,sp,-4
 c00e5fc:	28000826 	beq	r5,zero,c00e620 <__ascii_mbtowc+0x28>
 c00e600:	30000926 	beq	r6,zero,c00e628 <__ascii_mbtowc+0x30>
 c00e604:	38000b26 	beq	r7,zero,c00e634 <__ascii_mbtowc+0x3c>
 c00e608:	30800003 	ldbu	r2,0(r6)
 c00e60c:	28800015 	stw	r2,0(r5)
 c00e610:	30800003 	ldbu	r2,0(r6)
 c00e614:	1004c03a 	cmpne	r2,r2,zero
 c00e618:	dec00104 	addi	sp,sp,4
 c00e61c:	f800283a 	ret
 c00e620:	d80b883a 	mov	r5,sp
 c00e624:	303ff71e 	bne	r6,zero,c00e604 <__alt_data_end+0xfc00e604>
 c00e628:	0005883a 	mov	r2,zero
 c00e62c:	dec00104 	addi	sp,sp,4
 c00e630:	f800283a 	ret
 c00e634:	00bfff84 	movi	r2,-2
 c00e638:	003ff706 	br	c00e618 <__alt_data_end+0xfc00e618>

0c00e63c <_mbtowc_r>:
 c00e63c:	008300b4 	movhi	r2,3074
 c00e640:	defff804 	addi	sp,sp,-32
 c00e644:	10bfc504 	addi	r2,r2,-236
 c00e648:	dfc00715 	stw	ra,28(sp)
 c00e64c:	dc000615 	stw	r16,24(sp)
 c00e650:	14000017 	ldw	r16,0(r2)
 c00e654:	d9000215 	stw	r4,8(sp)
 c00e658:	d9400315 	stw	r5,12(sp)
 c00e65c:	d9800415 	stw	r6,16(sp)
 c00e660:	d9c00515 	stw	r7,20(sp)
 c00e664:	c00e2580 	call	c00e258 <__locale_charset>
 c00e668:	d8800015 	stw	r2,0(sp)
 c00e66c:	d8800817 	ldw	r2,32(sp)
 c00e670:	d9c00517 	ldw	r7,20(sp)
 c00e674:	d9800417 	ldw	r6,16(sp)
 c00e678:	d9400317 	ldw	r5,12(sp)
 c00e67c:	d9000217 	ldw	r4,8(sp)
 c00e680:	d8800115 	stw	r2,4(sp)
 c00e684:	803ee83a 	callr	r16
 c00e688:	dfc00717 	ldw	ra,28(sp)
 c00e68c:	dc000617 	ldw	r16,24(sp)
 c00e690:	dec00804 	addi	sp,sp,32
 c00e694:	f800283a 	ret

0c00e698 <memchr>:
 c00e698:	208000cc 	andi	r2,r4,3
 c00e69c:	280f883a 	mov	r7,r5
 c00e6a0:	10003426 	beq	r2,zero,c00e774 <memchr+0xdc>
 c00e6a4:	30bfffc4 	addi	r2,r6,-1
 c00e6a8:	30001a26 	beq	r6,zero,c00e714 <memchr+0x7c>
 c00e6ac:	20c00003 	ldbu	r3,0(r4)
 c00e6b0:	29803fcc 	andi	r6,r5,255
 c00e6b4:	30c0051e 	bne	r6,r3,c00e6cc <memchr+0x34>
 c00e6b8:	00001806 	br	c00e71c <memchr+0x84>
 c00e6bc:	10001526 	beq	r2,zero,c00e714 <memchr+0x7c>
 c00e6c0:	20c00003 	ldbu	r3,0(r4)
 c00e6c4:	10bfffc4 	addi	r2,r2,-1
 c00e6c8:	30c01426 	beq	r6,r3,c00e71c <memchr+0x84>
 c00e6cc:	21000044 	addi	r4,r4,1
 c00e6d0:	20c000cc 	andi	r3,r4,3
 c00e6d4:	183ff91e 	bne	r3,zero,c00e6bc <__alt_data_end+0xfc00e6bc>
 c00e6d8:	020000c4 	movi	r8,3
 c00e6dc:	40801136 	bltu	r8,r2,c00e724 <memchr+0x8c>
 c00e6e0:	10000c26 	beq	r2,zero,c00e714 <memchr+0x7c>
 c00e6e4:	20c00003 	ldbu	r3,0(r4)
 c00e6e8:	29403fcc 	andi	r5,r5,255
 c00e6ec:	28c00b26 	beq	r5,r3,c00e71c <memchr+0x84>
 c00e6f0:	20c00044 	addi	r3,r4,1
 c00e6f4:	39803fcc 	andi	r6,r7,255
 c00e6f8:	2089883a 	add	r4,r4,r2
 c00e6fc:	00000306 	br	c00e70c <memchr+0x74>
 c00e700:	18c00044 	addi	r3,r3,1
 c00e704:	197fffc3 	ldbu	r5,-1(r3)
 c00e708:	31400526 	beq	r6,r5,c00e720 <memchr+0x88>
 c00e70c:	1805883a 	mov	r2,r3
 c00e710:	20fffb1e 	bne	r4,r3,c00e700 <__alt_data_end+0xfc00e700>
 c00e714:	0005883a 	mov	r2,zero
 c00e718:	f800283a 	ret
 c00e71c:	2005883a 	mov	r2,r4
 c00e720:	f800283a 	ret
 c00e724:	28c03fcc 	andi	r3,r5,255
 c00e728:	1812923a 	slli	r9,r3,8
 c00e72c:	02ffbff4 	movhi	r11,65279
 c00e730:	02a02074 	movhi	r10,32897
 c00e734:	48d2b03a 	or	r9,r9,r3
 c00e738:	4806943a 	slli	r3,r9,16
 c00e73c:	5affbfc4 	addi	r11,r11,-257
 c00e740:	52a02004 	addi	r10,r10,-32640
 c00e744:	48d2b03a 	or	r9,r9,r3
 c00e748:	20c00017 	ldw	r3,0(r4)
 c00e74c:	48c6f03a 	xor	r3,r9,r3
 c00e750:	1acd883a 	add	r6,r3,r11
 c00e754:	00c6303a 	nor	r3,zero,r3
 c00e758:	30c6703a 	and	r3,r6,r3
 c00e75c:	1a86703a 	and	r3,r3,r10
 c00e760:	183fe01e 	bne	r3,zero,c00e6e4 <__alt_data_end+0xfc00e6e4>
 c00e764:	10bfff04 	addi	r2,r2,-4
 c00e768:	21000104 	addi	r4,r4,4
 c00e76c:	40bff636 	bltu	r8,r2,c00e748 <__alt_data_end+0xfc00e748>
 c00e770:	003fdb06 	br	c00e6e0 <__alt_data_end+0xfc00e6e0>
 c00e774:	3005883a 	mov	r2,r6
 c00e778:	003fd706 	br	c00e6d8 <__alt_data_end+0xfc00e6d8>

0c00e77c <memcpy>:
 c00e77c:	defffd04 	addi	sp,sp,-12
 c00e780:	dfc00215 	stw	ra,8(sp)
 c00e784:	dc400115 	stw	r17,4(sp)
 c00e788:	dc000015 	stw	r16,0(sp)
 c00e78c:	00c003c4 	movi	r3,15
 c00e790:	2005883a 	mov	r2,r4
 c00e794:	1980452e 	bgeu	r3,r6,c00e8ac <memcpy+0x130>
 c00e798:	2906b03a 	or	r3,r5,r4
 c00e79c:	18c000cc 	andi	r3,r3,3
 c00e7a0:	1800441e 	bne	r3,zero,c00e8b4 <memcpy+0x138>
 c00e7a4:	347ffc04 	addi	r17,r6,-16
 c00e7a8:	8822d13a 	srli	r17,r17,4
 c00e7ac:	28c00104 	addi	r3,r5,4
 c00e7b0:	23400104 	addi	r13,r4,4
 c00e7b4:	8820913a 	slli	r16,r17,4
 c00e7b8:	2b000204 	addi	r12,r5,8
 c00e7bc:	22c00204 	addi	r11,r4,8
 c00e7c0:	84000504 	addi	r16,r16,20
 c00e7c4:	2a800304 	addi	r10,r5,12
 c00e7c8:	22400304 	addi	r9,r4,12
 c00e7cc:	2c21883a 	add	r16,r5,r16
 c00e7d0:	2811883a 	mov	r8,r5
 c00e7d4:	200f883a 	mov	r7,r4
 c00e7d8:	41000017 	ldw	r4,0(r8)
 c00e7dc:	1fc00017 	ldw	ra,0(r3)
 c00e7e0:	63c00017 	ldw	r15,0(r12)
 c00e7e4:	39000015 	stw	r4,0(r7)
 c00e7e8:	53800017 	ldw	r14,0(r10)
 c00e7ec:	6fc00015 	stw	ra,0(r13)
 c00e7f0:	5bc00015 	stw	r15,0(r11)
 c00e7f4:	4b800015 	stw	r14,0(r9)
 c00e7f8:	18c00404 	addi	r3,r3,16
 c00e7fc:	39c00404 	addi	r7,r7,16
 c00e800:	42000404 	addi	r8,r8,16
 c00e804:	6b400404 	addi	r13,r13,16
 c00e808:	63000404 	addi	r12,r12,16
 c00e80c:	5ac00404 	addi	r11,r11,16
 c00e810:	52800404 	addi	r10,r10,16
 c00e814:	4a400404 	addi	r9,r9,16
 c00e818:	1c3fef1e 	bne	r3,r16,c00e7d8 <__alt_data_end+0xfc00e7d8>
 c00e81c:	89c00044 	addi	r7,r17,1
 c00e820:	380e913a 	slli	r7,r7,4
 c00e824:	310003cc 	andi	r4,r6,15
 c00e828:	02c000c4 	movi	r11,3
 c00e82c:	11c7883a 	add	r3,r2,r7
 c00e830:	29cb883a 	add	r5,r5,r7
 c00e834:	5900212e 	bgeu	r11,r4,c00e8bc <memcpy+0x140>
 c00e838:	1813883a 	mov	r9,r3
 c00e83c:	2811883a 	mov	r8,r5
 c00e840:	200f883a 	mov	r7,r4
 c00e844:	42800017 	ldw	r10,0(r8)
 c00e848:	4a400104 	addi	r9,r9,4
 c00e84c:	39ffff04 	addi	r7,r7,-4
 c00e850:	4abfff15 	stw	r10,-4(r9)
 c00e854:	42000104 	addi	r8,r8,4
 c00e858:	59fffa36 	bltu	r11,r7,c00e844 <__alt_data_end+0xfc00e844>
 c00e85c:	213fff04 	addi	r4,r4,-4
 c00e860:	2008d0ba 	srli	r4,r4,2
 c00e864:	318000cc 	andi	r6,r6,3
 c00e868:	21000044 	addi	r4,r4,1
 c00e86c:	2109883a 	add	r4,r4,r4
 c00e870:	2109883a 	add	r4,r4,r4
 c00e874:	1907883a 	add	r3,r3,r4
 c00e878:	290b883a 	add	r5,r5,r4
 c00e87c:	30000626 	beq	r6,zero,c00e898 <memcpy+0x11c>
 c00e880:	198d883a 	add	r6,r3,r6
 c00e884:	29c00003 	ldbu	r7,0(r5)
 c00e888:	18c00044 	addi	r3,r3,1
 c00e88c:	29400044 	addi	r5,r5,1
 c00e890:	19ffffc5 	stb	r7,-1(r3)
 c00e894:	19bffb1e 	bne	r3,r6,c00e884 <__alt_data_end+0xfc00e884>
 c00e898:	dfc00217 	ldw	ra,8(sp)
 c00e89c:	dc400117 	ldw	r17,4(sp)
 c00e8a0:	dc000017 	ldw	r16,0(sp)
 c00e8a4:	dec00304 	addi	sp,sp,12
 c00e8a8:	f800283a 	ret
 c00e8ac:	2007883a 	mov	r3,r4
 c00e8b0:	003ff206 	br	c00e87c <__alt_data_end+0xfc00e87c>
 c00e8b4:	2007883a 	mov	r3,r4
 c00e8b8:	003ff106 	br	c00e880 <__alt_data_end+0xfc00e880>
 c00e8bc:	200d883a 	mov	r6,r4
 c00e8c0:	003fee06 	br	c00e87c <__alt_data_end+0xfc00e87c>

0c00e8c4 <memmove>:
 c00e8c4:	2005883a 	mov	r2,r4
 c00e8c8:	29000b2e 	bgeu	r5,r4,c00e8f8 <memmove+0x34>
 c00e8cc:	298f883a 	add	r7,r5,r6
 c00e8d0:	21c0092e 	bgeu	r4,r7,c00e8f8 <memmove+0x34>
 c00e8d4:	2187883a 	add	r3,r4,r6
 c00e8d8:	198bc83a 	sub	r5,r3,r6
 c00e8dc:	30004826 	beq	r6,zero,c00ea00 <memmove+0x13c>
 c00e8e0:	39ffffc4 	addi	r7,r7,-1
 c00e8e4:	39000003 	ldbu	r4,0(r7)
 c00e8e8:	18ffffc4 	addi	r3,r3,-1
 c00e8ec:	19000005 	stb	r4,0(r3)
 c00e8f0:	28fffb1e 	bne	r5,r3,c00e8e0 <__alt_data_end+0xfc00e8e0>
 c00e8f4:	f800283a 	ret
 c00e8f8:	00c003c4 	movi	r3,15
 c00e8fc:	1980412e 	bgeu	r3,r6,c00ea04 <memmove+0x140>
 c00e900:	2886b03a 	or	r3,r5,r2
 c00e904:	18c000cc 	andi	r3,r3,3
 c00e908:	1800401e 	bne	r3,zero,c00ea0c <memmove+0x148>
 c00e90c:	33fffc04 	addi	r15,r6,-16
 c00e910:	781ed13a 	srli	r15,r15,4
 c00e914:	28c00104 	addi	r3,r5,4
 c00e918:	13400104 	addi	r13,r2,4
 c00e91c:	781c913a 	slli	r14,r15,4
 c00e920:	2b000204 	addi	r12,r5,8
 c00e924:	12c00204 	addi	r11,r2,8
 c00e928:	73800504 	addi	r14,r14,20
 c00e92c:	2a800304 	addi	r10,r5,12
 c00e930:	12400304 	addi	r9,r2,12
 c00e934:	2b9d883a 	add	r14,r5,r14
 c00e938:	2811883a 	mov	r8,r5
 c00e93c:	100f883a 	mov	r7,r2
 c00e940:	41000017 	ldw	r4,0(r8)
 c00e944:	39c00404 	addi	r7,r7,16
 c00e948:	18c00404 	addi	r3,r3,16
 c00e94c:	393ffc15 	stw	r4,-16(r7)
 c00e950:	193ffc17 	ldw	r4,-16(r3)
 c00e954:	6b400404 	addi	r13,r13,16
 c00e958:	5ac00404 	addi	r11,r11,16
 c00e95c:	693ffc15 	stw	r4,-16(r13)
 c00e960:	61000017 	ldw	r4,0(r12)
 c00e964:	4a400404 	addi	r9,r9,16
 c00e968:	42000404 	addi	r8,r8,16
 c00e96c:	593ffc15 	stw	r4,-16(r11)
 c00e970:	51000017 	ldw	r4,0(r10)
 c00e974:	63000404 	addi	r12,r12,16
 c00e978:	52800404 	addi	r10,r10,16
 c00e97c:	493ffc15 	stw	r4,-16(r9)
 c00e980:	1bbfef1e 	bne	r3,r14,c00e940 <__alt_data_end+0xfc00e940>
 c00e984:	79000044 	addi	r4,r15,1
 c00e988:	2008913a 	slli	r4,r4,4
 c00e98c:	328003cc 	andi	r10,r6,15
 c00e990:	02c000c4 	movi	r11,3
 c00e994:	1107883a 	add	r3,r2,r4
 c00e998:	290b883a 	add	r5,r5,r4
 c00e99c:	5a801e2e 	bgeu	r11,r10,c00ea18 <memmove+0x154>
 c00e9a0:	1813883a 	mov	r9,r3
 c00e9a4:	2811883a 	mov	r8,r5
 c00e9a8:	500f883a 	mov	r7,r10
 c00e9ac:	41000017 	ldw	r4,0(r8)
 c00e9b0:	4a400104 	addi	r9,r9,4
 c00e9b4:	39ffff04 	addi	r7,r7,-4
 c00e9b8:	493fff15 	stw	r4,-4(r9)
 c00e9bc:	42000104 	addi	r8,r8,4
 c00e9c0:	59fffa36 	bltu	r11,r7,c00e9ac <__alt_data_end+0xfc00e9ac>
 c00e9c4:	513fff04 	addi	r4,r10,-4
 c00e9c8:	2008d0ba 	srli	r4,r4,2
 c00e9cc:	318000cc 	andi	r6,r6,3
 c00e9d0:	21000044 	addi	r4,r4,1
 c00e9d4:	2109883a 	add	r4,r4,r4
 c00e9d8:	2109883a 	add	r4,r4,r4
 c00e9dc:	1907883a 	add	r3,r3,r4
 c00e9e0:	290b883a 	add	r5,r5,r4
 c00e9e4:	30000b26 	beq	r6,zero,c00ea14 <memmove+0x150>
 c00e9e8:	198d883a 	add	r6,r3,r6
 c00e9ec:	29c00003 	ldbu	r7,0(r5)
 c00e9f0:	18c00044 	addi	r3,r3,1
 c00e9f4:	29400044 	addi	r5,r5,1
 c00e9f8:	19ffffc5 	stb	r7,-1(r3)
 c00e9fc:	19bffb1e 	bne	r3,r6,c00e9ec <__alt_data_end+0xfc00e9ec>
 c00ea00:	f800283a 	ret
 c00ea04:	1007883a 	mov	r3,r2
 c00ea08:	003ff606 	br	c00e9e4 <__alt_data_end+0xfc00e9e4>
 c00ea0c:	1007883a 	mov	r3,r2
 c00ea10:	003ff506 	br	c00e9e8 <__alt_data_end+0xfc00e9e8>
 c00ea14:	f800283a 	ret
 c00ea18:	500d883a 	mov	r6,r10
 c00ea1c:	003ff106 	br	c00e9e4 <__alt_data_end+0xfc00e9e4>

0c00ea20 <memset>:
 c00ea20:	20c000cc 	andi	r3,r4,3
 c00ea24:	2005883a 	mov	r2,r4
 c00ea28:	18004426 	beq	r3,zero,c00eb3c <memset+0x11c>
 c00ea2c:	31ffffc4 	addi	r7,r6,-1
 c00ea30:	30004026 	beq	r6,zero,c00eb34 <memset+0x114>
 c00ea34:	2813883a 	mov	r9,r5
 c00ea38:	200d883a 	mov	r6,r4
 c00ea3c:	2007883a 	mov	r3,r4
 c00ea40:	00000406 	br	c00ea54 <memset+0x34>
 c00ea44:	3a3fffc4 	addi	r8,r7,-1
 c00ea48:	31800044 	addi	r6,r6,1
 c00ea4c:	38003926 	beq	r7,zero,c00eb34 <memset+0x114>
 c00ea50:	400f883a 	mov	r7,r8
 c00ea54:	18c00044 	addi	r3,r3,1
 c00ea58:	32400005 	stb	r9,0(r6)
 c00ea5c:	1a0000cc 	andi	r8,r3,3
 c00ea60:	403ff81e 	bne	r8,zero,c00ea44 <__alt_data_end+0xfc00ea44>
 c00ea64:	010000c4 	movi	r4,3
 c00ea68:	21c02d2e 	bgeu	r4,r7,c00eb20 <memset+0x100>
 c00ea6c:	29003fcc 	andi	r4,r5,255
 c00ea70:	200c923a 	slli	r6,r4,8
 c00ea74:	3108b03a 	or	r4,r6,r4
 c00ea78:	200c943a 	slli	r6,r4,16
 c00ea7c:	218cb03a 	or	r6,r4,r6
 c00ea80:	010003c4 	movi	r4,15
 c00ea84:	21c0182e 	bgeu	r4,r7,c00eae8 <memset+0xc8>
 c00ea88:	3b3ffc04 	addi	r12,r7,-16
 c00ea8c:	6018d13a 	srli	r12,r12,4
 c00ea90:	1a000104 	addi	r8,r3,4
 c00ea94:	1ac00204 	addi	r11,r3,8
 c00ea98:	6008913a 	slli	r4,r12,4
 c00ea9c:	1a800304 	addi	r10,r3,12
 c00eaa0:	1813883a 	mov	r9,r3
 c00eaa4:	21000504 	addi	r4,r4,20
 c00eaa8:	1909883a 	add	r4,r3,r4
 c00eaac:	49800015 	stw	r6,0(r9)
 c00eab0:	41800015 	stw	r6,0(r8)
 c00eab4:	59800015 	stw	r6,0(r11)
 c00eab8:	51800015 	stw	r6,0(r10)
 c00eabc:	42000404 	addi	r8,r8,16
 c00eac0:	4a400404 	addi	r9,r9,16
 c00eac4:	5ac00404 	addi	r11,r11,16
 c00eac8:	52800404 	addi	r10,r10,16
 c00eacc:	413ff71e 	bne	r8,r4,c00eaac <__alt_data_end+0xfc00eaac>
 c00ead0:	63000044 	addi	r12,r12,1
 c00ead4:	6018913a 	slli	r12,r12,4
 c00ead8:	39c003cc 	andi	r7,r7,15
 c00eadc:	010000c4 	movi	r4,3
 c00eae0:	1b07883a 	add	r3,r3,r12
 c00eae4:	21c00e2e 	bgeu	r4,r7,c00eb20 <memset+0x100>
 c00eae8:	1813883a 	mov	r9,r3
 c00eaec:	3811883a 	mov	r8,r7
 c00eaf0:	010000c4 	movi	r4,3
 c00eaf4:	49800015 	stw	r6,0(r9)
 c00eaf8:	423fff04 	addi	r8,r8,-4
 c00eafc:	4a400104 	addi	r9,r9,4
 c00eb00:	223ffc36 	bltu	r4,r8,c00eaf4 <__alt_data_end+0xfc00eaf4>
 c00eb04:	393fff04 	addi	r4,r7,-4
 c00eb08:	2008d0ba 	srli	r4,r4,2
 c00eb0c:	39c000cc 	andi	r7,r7,3
 c00eb10:	21000044 	addi	r4,r4,1
 c00eb14:	2109883a 	add	r4,r4,r4
 c00eb18:	2109883a 	add	r4,r4,r4
 c00eb1c:	1907883a 	add	r3,r3,r4
 c00eb20:	38000526 	beq	r7,zero,c00eb38 <memset+0x118>
 c00eb24:	19cf883a 	add	r7,r3,r7
 c00eb28:	19400005 	stb	r5,0(r3)
 c00eb2c:	18c00044 	addi	r3,r3,1
 c00eb30:	38fffd1e 	bne	r7,r3,c00eb28 <__alt_data_end+0xfc00eb28>
 c00eb34:	f800283a 	ret
 c00eb38:	f800283a 	ret
 c00eb3c:	2007883a 	mov	r3,r4
 c00eb40:	300f883a 	mov	r7,r6
 c00eb44:	003fc706 	br	c00ea64 <__alt_data_end+0xfc00ea64>

0c00eb48 <_Balloc>:
 c00eb48:	20801317 	ldw	r2,76(r4)
 c00eb4c:	defffc04 	addi	sp,sp,-16
 c00eb50:	dc400115 	stw	r17,4(sp)
 c00eb54:	dc000015 	stw	r16,0(sp)
 c00eb58:	dfc00315 	stw	ra,12(sp)
 c00eb5c:	dc800215 	stw	r18,8(sp)
 c00eb60:	2023883a 	mov	r17,r4
 c00eb64:	2821883a 	mov	r16,r5
 c00eb68:	10000f26 	beq	r2,zero,c00eba8 <_Balloc+0x60>
 c00eb6c:	8407883a 	add	r3,r16,r16
 c00eb70:	18c7883a 	add	r3,r3,r3
 c00eb74:	10c7883a 	add	r3,r2,r3
 c00eb78:	18800017 	ldw	r2,0(r3)
 c00eb7c:	10001126 	beq	r2,zero,c00ebc4 <_Balloc+0x7c>
 c00eb80:	11000017 	ldw	r4,0(r2)
 c00eb84:	19000015 	stw	r4,0(r3)
 c00eb88:	10000415 	stw	zero,16(r2)
 c00eb8c:	10000315 	stw	zero,12(r2)
 c00eb90:	dfc00317 	ldw	ra,12(sp)
 c00eb94:	dc800217 	ldw	r18,8(sp)
 c00eb98:	dc400117 	ldw	r17,4(sp)
 c00eb9c:	dc000017 	ldw	r16,0(sp)
 c00eba0:	dec00404 	addi	sp,sp,16
 c00eba4:	f800283a 	ret
 c00eba8:	01800844 	movi	r6,33
 c00ebac:	01400104 	movi	r5,4
 c00ebb0:	c015ba00 	call	c015ba0 <_calloc_r>
 c00ebb4:	88801315 	stw	r2,76(r17)
 c00ebb8:	103fec1e 	bne	r2,zero,c00eb6c <__alt_data_end+0xfc00eb6c>
 c00ebbc:	0005883a 	mov	r2,zero
 c00ebc0:	003ff306 	br	c00eb90 <__alt_data_end+0xfc00eb90>
 c00ebc4:	01400044 	movi	r5,1
 c00ebc8:	2c24983a 	sll	r18,r5,r16
 c00ebcc:	8809883a 	mov	r4,r17
 c00ebd0:	91800144 	addi	r6,r18,5
 c00ebd4:	318d883a 	add	r6,r6,r6
 c00ebd8:	318d883a 	add	r6,r6,r6
 c00ebdc:	c015ba00 	call	c015ba0 <_calloc_r>
 c00ebe0:	103ff626 	beq	r2,zero,c00ebbc <__alt_data_end+0xfc00ebbc>
 c00ebe4:	14000115 	stw	r16,4(r2)
 c00ebe8:	14800215 	stw	r18,8(r2)
 c00ebec:	003fe606 	br	c00eb88 <__alt_data_end+0xfc00eb88>

0c00ebf0 <_Bfree>:
 c00ebf0:	28000826 	beq	r5,zero,c00ec14 <_Bfree+0x24>
 c00ebf4:	28c00117 	ldw	r3,4(r5)
 c00ebf8:	20801317 	ldw	r2,76(r4)
 c00ebfc:	18c7883a 	add	r3,r3,r3
 c00ec00:	18c7883a 	add	r3,r3,r3
 c00ec04:	10c5883a 	add	r2,r2,r3
 c00ec08:	10c00017 	ldw	r3,0(r2)
 c00ec0c:	28c00015 	stw	r3,0(r5)
 c00ec10:	11400015 	stw	r5,0(r2)
 c00ec14:	f800283a 	ret

0c00ec18 <__multadd>:
 c00ec18:	defff704 	addi	sp,sp,-36
 c00ec1c:	dc800215 	stw	r18,8(sp)
 c00ec20:	2c800417 	ldw	r18,16(r5)
 c00ec24:	dd800615 	stw	r22,24(sp)
 c00ec28:	dd400515 	stw	r21,20(sp)
 c00ec2c:	dd000415 	stw	r20,16(sp)
 c00ec30:	dcc00315 	stw	r19,12(sp)
 c00ec34:	dc400115 	stw	r17,4(sp)
 c00ec38:	dc000015 	stw	r16,0(sp)
 c00ec3c:	dfc00815 	stw	ra,32(sp)
 c00ec40:	ddc00715 	stw	r23,28(sp)
 c00ec44:	2827883a 	mov	r19,r5
 c00ec48:	2029883a 	mov	r20,r4
 c00ec4c:	3023883a 	mov	r17,r6
 c00ec50:	3821883a 	mov	r16,r7
 c00ec54:	2d400504 	addi	r21,r5,20
 c00ec58:	002d883a 	mov	r22,zero
 c00ec5c:	adc00017 	ldw	r23,0(r21)
 c00ec60:	880b883a 	mov	r5,r17
 c00ec64:	ad400104 	addi	r21,r21,4
 c00ec68:	b93fffcc 	andi	r4,r23,65535
 c00ec6c:	c00473c0 	call	c00473c <__mulsi3>
 c00ec70:	b808d43a 	srli	r4,r23,16
 c00ec74:	880b883a 	mov	r5,r17
 c00ec78:	1421883a 	add	r16,r2,r16
 c00ec7c:	c00473c0 	call	c00473c <__mulsi3>
 c00ec80:	800ed43a 	srli	r7,r16,16
 c00ec84:	80ffffcc 	andi	r3,r16,65535
 c00ec88:	b5800044 	addi	r22,r22,1
 c00ec8c:	11c5883a 	add	r2,r2,r7
 c00ec90:	100e943a 	slli	r7,r2,16
 c00ec94:	1020d43a 	srli	r16,r2,16
 c00ec98:	38c7883a 	add	r3,r7,r3
 c00ec9c:	a8ffff15 	stw	r3,-4(r21)
 c00eca0:	b4bfee16 	blt	r22,r18,c00ec5c <__alt_data_end+0xfc00ec5c>
 c00eca4:	80000926 	beq	r16,zero,c00eccc <__multadd+0xb4>
 c00eca8:	98800217 	ldw	r2,8(r19)
 c00ecac:	9080130e 	bge	r18,r2,c00ecfc <__multadd+0xe4>
 c00ecb0:	90800144 	addi	r2,r18,5
 c00ecb4:	1085883a 	add	r2,r2,r2
 c00ecb8:	1085883a 	add	r2,r2,r2
 c00ecbc:	9885883a 	add	r2,r19,r2
 c00ecc0:	14000015 	stw	r16,0(r2)
 c00ecc4:	94800044 	addi	r18,r18,1
 c00ecc8:	9c800415 	stw	r18,16(r19)
 c00eccc:	9805883a 	mov	r2,r19
 c00ecd0:	dfc00817 	ldw	ra,32(sp)
 c00ecd4:	ddc00717 	ldw	r23,28(sp)
 c00ecd8:	dd800617 	ldw	r22,24(sp)
 c00ecdc:	dd400517 	ldw	r21,20(sp)
 c00ece0:	dd000417 	ldw	r20,16(sp)
 c00ece4:	dcc00317 	ldw	r19,12(sp)
 c00ece8:	dc800217 	ldw	r18,8(sp)
 c00ecec:	dc400117 	ldw	r17,4(sp)
 c00ecf0:	dc000017 	ldw	r16,0(sp)
 c00ecf4:	dec00904 	addi	sp,sp,36
 c00ecf8:	f800283a 	ret
 c00ecfc:	99400117 	ldw	r5,4(r19)
 c00ed00:	a009883a 	mov	r4,r20
 c00ed04:	29400044 	addi	r5,r5,1
 c00ed08:	c00eb480 	call	c00eb48 <_Balloc>
 c00ed0c:	99800417 	ldw	r6,16(r19)
 c00ed10:	99400304 	addi	r5,r19,12
 c00ed14:	11000304 	addi	r4,r2,12
 c00ed18:	31800084 	addi	r6,r6,2
 c00ed1c:	318d883a 	add	r6,r6,r6
 c00ed20:	318d883a 	add	r6,r6,r6
 c00ed24:	1023883a 	mov	r17,r2
 c00ed28:	c00e77c0 	call	c00e77c <memcpy>
 c00ed2c:	98000a26 	beq	r19,zero,c00ed58 <__multadd+0x140>
 c00ed30:	98c00117 	ldw	r3,4(r19)
 c00ed34:	a0801317 	ldw	r2,76(r20)
 c00ed38:	18c7883a 	add	r3,r3,r3
 c00ed3c:	18c7883a 	add	r3,r3,r3
 c00ed40:	10c5883a 	add	r2,r2,r3
 c00ed44:	10c00017 	ldw	r3,0(r2)
 c00ed48:	98c00015 	stw	r3,0(r19)
 c00ed4c:	14c00015 	stw	r19,0(r2)
 c00ed50:	8827883a 	mov	r19,r17
 c00ed54:	003fd606 	br	c00ecb0 <__alt_data_end+0xfc00ecb0>
 c00ed58:	8827883a 	mov	r19,r17
 c00ed5c:	003fd406 	br	c00ecb0 <__alt_data_end+0xfc00ecb0>

0c00ed60 <__s2b>:
 c00ed60:	defff904 	addi	sp,sp,-28
 c00ed64:	dc400115 	stw	r17,4(sp)
 c00ed68:	dc000015 	stw	r16,0(sp)
 c00ed6c:	2023883a 	mov	r17,r4
 c00ed70:	2821883a 	mov	r16,r5
 c00ed74:	39000204 	addi	r4,r7,8
 c00ed78:	01400244 	movi	r5,9
 c00ed7c:	dcc00315 	stw	r19,12(sp)
 c00ed80:	dc800215 	stw	r18,8(sp)
 c00ed84:	dfc00615 	stw	ra,24(sp)
 c00ed88:	dd400515 	stw	r21,20(sp)
 c00ed8c:	dd000415 	stw	r20,16(sp)
 c00ed90:	3825883a 	mov	r18,r7
 c00ed94:	3027883a 	mov	r19,r6
 c00ed98:	c0045880 	call	c004588 <__divsi3>
 c00ed9c:	00c00044 	movi	r3,1
 c00eda0:	000b883a 	mov	r5,zero
 c00eda4:	1880030e 	bge	r3,r2,c00edb4 <__s2b+0x54>
 c00eda8:	18c7883a 	add	r3,r3,r3
 c00edac:	29400044 	addi	r5,r5,1
 c00edb0:	18bffd16 	blt	r3,r2,c00eda8 <__alt_data_end+0xfc00eda8>
 c00edb4:	8809883a 	mov	r4,r17
 c00edb8:	c00eb480 	call	c00eb48 <_Balloc>
 c00edbc:	d8c00717 	ldw	r3,28(sp)
 c00edc0:	10c00515 	stw	r3,20(r2)
 c00edc4:	00c00044 	movi	r3,1
 c00edc8:	10c00415 	stw	r3,16(r2)
 c00edcc:	00c00244 	movi	r3,9
 c00edd0:	1cc0210e 	bge	r3,r19,c00ee58 <__s2b+0xf8>
 c00edd4:	80eb883a 	add	r21,r16,r3
 c00edd8:	a829883a 	mov	r20,r21
 c00eddc:	84e1883a 	add	r16,r16,r19
 c00ede0:	a1c00007 	ldb	r7,0(r20)
 c00ede4:	01800284 	movi	r6,10
 c00ede8:	a5000044 	addi	r20,r20,1
 c00edec:	100b883a 	mov	r5,r2
 c00edf0:	39fff404 	addi	r7,r7,-48
 c00edf4:	8809883a 	mov	r4,r17
 c00edf8:	c00ec180 	call	c00ec18 <__multadd>
 c00edfc:	a43ff81e 	bne	r20,r16,c00ede0 <__alt_data_end+0xfc00ede0>
 c00ee00:	ace1883a 	add	r16,r21,r19
 c00ee04:	843ffe04 	addi	r16,r16,-8
 c00ee08:	9c800a0e 	bge	r19,r18,c00ee34 <__s2b+0xd4>
 c00ee0c:	94e5c83a 	sub	r18,r18,r19
 c00ee10:	84a5883a 	add	r18,r16,r18
 c00ee14:	81c00007 	ldb	r7,0(r16)
 c00ee18:	01800284 	movi	r6,10
 c00ee1c:	84000044 	addi	r16,r16,1
 c00ee20:	100b883a 	mov	r5,r2
 c00ee24:	39fff404 	addi	r7,r7,-48
 c00ee28:	8809883a 	mov	r4,r17
 c00ee2c:	c00ec180 	call	c00ec18 <__multadd>
 c00ee30:	84bff81e 	bne	r16,r18,c00ee14 <__alt_data_end+0xfc00ee14>
 c00ee34:	dfc00617 	ldw	ra,24(sp)
 c00ee38:	dd400517 	ldw	r21,20(sp)
 c00ee3c:	dd000417 	ldw	r20,16(sp)
 c00ee40:	dcc00317 	ldw	r19,12(sp)
 c00ee44:	dc800217 	ldw	r18,8(sp)
 c00ee48:	dc400117 	ldw	r17,4(sp)
 c00ee4c:	dc000017 	ldw	r16,0(sp)
 c00ee50:	dec00704 	addi	sp,sp,28
 c00ee54:	f800283a 	ret
 c00ee58:	84000284 	addi	r16,r16,10
 c00ee5c:	1827883a 	mov	r19,r3
 c00ee60:	003fe906 	br	c00ee08 <__alt_data_end+0xfc00ee08>

0c00ee64 <__hi0bits>:
 c00ee64:	20bfffec 	andhi	r2,r4,65535
 c00ee68:	1000141e 	bne	r2,zero,c00eebc <__hi0bits+0x58>
 c00ee6c:	2008943a 	slli	r4,r4,16
 c00ee70:	00800404 	movi	r2,16
 c00ee74:	20ffc02c 	andhi	r3,r4,65280
 c00ee78:	1800021e 	bne	r3,zero,c00ee84 <__hi0bits+0x20>
 c00ee7c:	2008923a 	slli	r4,r4,8
 c00ee80:	10800204 	addi	r2,r2,8
 c00ee84:	20fc002c 	andhi	r3,r4,61440
 c00ee88:	1800021e 	bne	r3,zero,c00ee94 <__hi0bits+0x30>
 c00ee8c:	2008913a 	slli	r4,r4,4
 c00ee90:	10800104 	addi	r2,r2,4
 c00ee94:	20f0002c 	andhi	r3,r4,49152
 c00ee98:	1800031e 	bne	r3,zero,c00eea8 <__hi0bits+0x44>
 c00ee9c:	2109883a 	add	r4,r4,r4
 c00eea0:	10800084 	addi	r2,r2,2
 c00eea4:	2109883a 	add	r4,r4,r4
 c00eea8:	20000316 	blt	r4,zero,c00eeb8 <__hi0bits+0x54>
 c00eeac:	2110002c 	andhi	r4,r4,16384
 c00eeb0:	2000041e 	bne	r4,zero,c00eec4 <__hi0bits+0x60>
 c00eeb4:	00800804 	movi	r2,32
 c00eeb8:	f800283a 	ret
 c00eebc:	0005883a 	mov	r2,zero
 c00eec0:	003fec06 	br	c00ee74 <__alt_data_end+0xfc00ee74>
 c00eec4:	10800044 	addi	r2,r2,1
 c00eec8:	f800283a 	ret

0c00eecc <__lo0bits>:
 c00eecc:	20c00017 	ldw	r3,0(r4)
 c00eed0:	188001cc 	andi	r2,r3,7
 c00eed4:	10000826 	beq	r2,zero,c00eef8 <__lo0bits+0x2c>
 c00eed8:	1880004c 	andi	r2,r3,1
 c00eedc:	1000211e 	bne	r2,zero,c00ef64 <__lo0bits+0x98>
 c00eee0:	1880008c 	andi	r2,r3,2
 c00eee4:	1000211e 	bne	r2,zero,c00ef6c <__lo0bits+0xa0>
 c00eee8:	1806d0ba 	srli	r3,r3,2
 c00eeec:	00800084 	movi	r2,2
 c00eef0:	20c00015 	stw	r3,0(r4)
 c00eef4:	f800283a 	ret
 c00eef8:	18bfffcc 	andi	r2,r3,65535
 c00eefc:	10001326 	beq	r2,zero,c00ef4c <__lo0bits+0x80>
 c00ef00:	0005883a 	mov	r2,zero
 c00ef04:	19403fcc 	andi	r5,r3,255
 c00ef08:	2800021e 	bne	r5,zero,c00ef14 <__lo0bits+0x48>
 c00ef0c:	1806d23a 	srli	r3,r3,8
 c00ef10:	10800204 	addi	r2,r2,8
 c00ef14:	194003cc 	andi	r5,r3,15
 c00ef18:	2800021e 	bne	r5,zero,c00ef24 <__lo0bits+0x58>
 c00ef1c:	1806d13a 	srli	r3,r3,4
 c00ef20:	10800104 	addi	r2,r2,4
 c00ef24:	194000cc 	andi	r5,r3,3
 c00ef28:	2800021e 	bne	r5,zero,c00ef34 <__lo0bits+0x68>
 c00ef2c:	1806d0ba 	srli	r3,r3,2
 c00ef30:	10800084 	addi	r2,r2,2
 c00ef34:	1940004c 	andi	r5,r3,1
 c00ef38:	2800081e 	bne	r5,zero,c00ef5c <__lo0bits+0x90>
 c00ef3c:	1806d07a 	srli	r3,r3,1
 c00ef40:	1800051e 	bne	r3,zero,c00ef58 <__lo0bits+0x8c>
 c00ef44:	00800804 	movi	r2,32
 c00ef48:	f800283a 	ret
 c00ef4c:	1806d43a 	srli	r3,r3,16
 c00ef50:	00800404 	movi	r2,16
 c00ef54:	003feb06 	br	c00ef04 <__alt_data_end+0xfc00ef04>
 c00ef58:	10800044 	addi	r2,r2,1
 c00ef5c:	20c00015 	stw	r3,0(r4)
 c00ef60:	f800283a 	ret
 c00ef64:	0005883a 	mov	r2,zero
 c00ef68:	f800283a 	ret
 c00ef6c:	1806d07a 	srli	r3,r3,1
 c00ef70:	00800044 	movi	r2,1
 c00ef74:	20c00015 	stw	r3,0(r4)
 c00ef78:	f800283a 	ret

0c00ef7c <__i2b>:
 c00ef7c:	defffd04 	addi	sp,sp,-12
 c00ef80:	dc000015 	stw	r16,0(sp)
 c00ef84:	04000044 	movi	r16,1
 c00ef88:	dc400115 	stw	r17,4(sp)
 c00ef8c:	2823883a 	mov	r17,r5
 c00ef90:	800b883a 	mov	r5,r16
 c00ef94:	dfc00215 	stw	ra,8(sp)
 c00ef98:	c00eb480 	call	c00eb48 <_Balloc>
 c00ef9c:	14400515 	stw	r17,20(r2)
 c00efa0:	14000415 	stw	r16,16(r2)
 c00efa4:	dfc00217 	ldw	ra,8(sp)
 c00efa8:	dc400117 	ldw	r17,4(sp)
 c00efac:	dc000017 	ldw	r16,0(sp)
 c00efb0:	dec00304 	addi	sp,sp,12
 c00efb4:	f800283a 	ret

0c00efb8 <__multiply>:
 c00efb8:	deffef04 	addi	sp,sp,-68
 c00efbc:	dc400815 	stw	r17,32(sp)
 c00efc0:	dc000715 	stw	r16,28(sp)
 c00efc4:	34400417 	ldw	r17,16(r6)
 c00efc8:	2c000417 	ldw	r16,16(r5)
 c00efcc:	dd800d15 	stw	r22,52(sp)
 c00efd0:	dc800915 	stw	r18,36(sp)
 c00efd4:	dfc01015 	stw	ra,64(sp)
 c00efd8:	df000f15 	stw	fp,60(sp)
 c00efdc:	ddc00e15 	stw	r23,56(sp)
 c00efe0:	dd400c15 	stw	r21,48(sp)
 c00efe4:	dd000b15 	stw	r20,44(sp)
 c00efe8:	dcc00a15 	stw	r19,40(sp)
 c00efec:	2825883a 	mov	r18,r5
 c00eff0:	302d883a 	mov	r22,r6
 c00eff4:	8440050e 	bge	r16,r17,c00f00c <__multiply+0x54>
 c00eff8:	8007883a 	mov	r3,r16
 c00effc:	3025883a 	mov	r18,r6
 c00f000:	8821883a 	mov	r16,r17
 c00f004:	282d883a 	mov	r22,r5
 c00f008:	1823883a 	mov	r17,r3
 c00f00c:	90800217 	ldw	r2,8(r18)
 c00f010:	8447883a 	add	r3,r16,r17
 c00f014:	d8c00215 	stw	r3,8(sp)
 c00f018:	91400117 	ldw	r5,4(r18)
 c00f01c:	10c0010e 	bge	r2,r3,c00f024 <__multiply+0x6c>
 c00f020:	29400044 	addi	r5,r5,1
 c00f024:	c00eb480 	call	c00eb48 <_Balloc>
 c00f028:	d8c00217 	ldw	r3,8(sp)
 c00f02c:	d8800615 	stw	r2,24(sp)
 c00f030:	18eb883a 	add	r21,r3,r3
 c00f034:	ad6b883a 	add	r21,r21,r21
 c00f038:	10c00504 	addi	r3,r2,20
 c00f03c:	1d6b883a 	add	r21,r3,r21
 c00f040:	d8c00115 	stw	r3,4(sp)
 c00f044:	dd400315 	stw	r21,12(sp)
 c00f048:	1805883a 	mov	r2,r3
 c00f04c:	1d40042e 	bgeu	r3,r21,c00f060 <__multiply+0xa8>
 c00f050:	d8c00317 	ldw	r3,12(sp)
 c00f054:	10000015 	stw	zero,0(r2)
 c00f058:	10800104 	addi	r2,r2,4
 c00f05c:	10fffc36 	bltu	r2,r3,c00f050 <__alt_data_end+0xfc00f050>
 c00f060:	8c63883a 	add	r17,r17,r17
 c00f064:	b5800504 	addi	r22,r22,20
 c00f068:	8c63883a 	add	r17,r17,r17
 c00f06c:	94800504 	addi	r18,r18,20
 c00f070:	8421883a 	add	r16,r16,r16
 c00f074:	b463883a 	add	r17,r22,r17
 c00f078:	8421883a 	add	r16,r16,r16
 c00f07c:	dd800015 	stw	r22,0(sp)
 c00f080:	dc800415 	stw	r18,16(sp)
 c00f084:	dc400515 	stw	r17,20(sp)
 c00f088:	9429883a 	add	r20,r18,r16
 c00f08c:	b4404f2e 	bgeu	r22,r17,c00f1cc <__multiply+0x214>
 c00f090:	d8c00017 	ldw	r3,0(sp)
 c00f094:	1c800017 	ldw	r18,0(r3)
 c00f098:	947fffcc 	andi	r17,r18,65535
 c00f09c:	88001e26 	beq	r17,zero,c00f118 <__multiply+0x160>
 c00f0a0:	dd800117 	ldw	r22,4(sp)
 c00f0a4:	dd400417 	ldw	r21,16(sp)
 c00f0a8:	0027883a 	mov	r19,zero
 c00f0ac:	ac800017 	ldw	r18,0(r21)
 c00f0b0:	b4000017 	ldw	r16,0(r22)
 c00f0b4:	880b883a 	mov	r5,r17
 c00f0b8:	913fffcc 	andi	r4,r18,65535
 c00f0bc:	c00473c0 	call	c00473c <__mulsi3>
 c00f0c0:	9008d43a 	srli	r4,r18,16
 c00f0c4:	84bfffcc 	andi	r18,r16,65535
 c00f0c8:	1485883a 	add	r2,r2,r18
 c00f0cc:	14e5883a 	add	r18,r2,r19
 c00f0d0:	8020d43a 	srli	r16,r16,16
 c00f0d4:	9026d43a 	srli	r19,r18,16
 c00f0d8:	880b883a 	mov	r5,r17
 c00f0dc:	c00473c0 	call	c00473c <__mulsi3>
 c00f0e0:	1405883a 	add	r2,r2,r16
 c00f0e4:	14e1883a 	add	r16,r2,r19
 c00f0e8:	90ffffcc 	andi	r3,r18,65535
 c00f0ec:	8024943a 	slli	r18,r16,16
 c00f0f0:	ad400104 	addi	r21,r21,4
 c00f0f4:	b005883a 	mov	r2,r22
 c00f0f8:	90c6b03a 	or	r3,r18,r3
 c00f0fc:	b0c00015 	stw	r3,0(r22)
 c00f100:	8026d43a 	srli	r19,r16,16
 c00f104:	b5800104 	addi	r22,r22,4
 c00f108:	ad3fe836 	bltu	r21,r20,c00f0ac <__alt_data_end+0xfc00f0ac>
 c00f10c:	d8c00017 	ldw	r3,0(sp)
 c00f110:	14c00115 	stw	r19,4(r2)
 c00f114:	1c800017 	ldw	r18,0(r3)
 c00f118:	9024d43a 	srli	r18,r18,16
 c00f11c:	90002226 	beq	r18,zero,c00f1a8 <__multiply+0x1f0>
 c00f120:	d8c00117 	ldw	r3,4(sp)
 c00f124:	dd800417 	ldw	r22,16(sp)
 c00f128:	002f883a 	mov	r23,zero
 c00f12c:	1f000017 	ldw	fp,0(r3)
 c00f130:	1823883a 	mov	r17,r3
 c00f134:	182b883a 	mov	r21,r3
 c00f138:	e021883a 	mov	r16,fp
 c00f13c:	00000106 	br	c00f144 <__multiply+0x18c>
 c00f140:	982b883a 	mov	r21,r19
 c00f144:	b100000b 	ldhu	r4,0(r22)
 c00f148:	8020d43a 	srli	r16,r16,16
 c00f14c:	900b883a 	mov	r5,r18
 c00f150:	c00473c0 	call	c00473c <__mulsi3>
 c00f154:	1405883a 	add	r2,r2,r16
 c00f158:	15ef883a 	add	r23,r2,r23
 c00f15c:	b804943a 	slli	r2,r23,16
 c00f160:	e0ffffcc 	andi	r3,fp,65535
 c00f164:	8c400104 	addi	r17,r17,4
 c00f168:	10c6b03a 	or	r3,r2,r3
 c00f16c:	88ffff15 	stw	r3,-4(r17)
 c00f170:	b5800104 	addi	r22,r22,4
 c00f174:	b13fff17 	ldw	r4,-4(r22)
 c00f178:	acc00104 	addi	r19,r21,4
 c00f17c:	900b883a 	mov	r5,r18
 c00f180:	2008d43a 	srli	r4,r4,16
 c00f184:	9c000017 	ldw	r16,0(r19)
 c00f188:	c00473c0 	call	c00473c <__mulsi3>
 c00f18c:	b806d43a 	srli	r3,r23,16
 c00f190:	813fffcc 	andi	r4,r16,65535
 c00f194:	1105883a 	add	r2,r2,r4
 c00f198:	10f9883a 	add	fp,r2,r3
 c00f19c:	e02ed43a 	srli	r23,fp,16
 c00f1a0:	b53fe736 	bltu	r22,r20,c00f140 <__alt_data_end+0xfc00f140>
 c00f1a4:	af000115 	stw	fp,4(r21)
 c00f1a8:	d8c00017 	ldw	r3,0(sp)
 c00f1ac:	d9000517 	ldw	r4,20(sp)
 c00f1b0:	18c00104 	addi	r3,r3,4
 c00f1b4:	d8c00015 	stw	r3,0(sp)
 c00f1b8:	d8c00117 	ldw	r3,4(sp)
 c00f1bc:	18c00104 	addi	r3,r3,4
 c00f1c0:	d8c00115 	stw	r3,4(sp)
 c00f1c4:	d8c00017 	ldw	r3,0(sp)
 c00f1c8:	193fb136 	bltu	r3,r4,c00f090 <__alt_data_end+0xfc00f090>
 c00f1cc:	d8c00217 	ldw	r3,8(sp)
 c00f1d0:	00c00c0e 	bge	zero,r3,c00f204 <__multiply+0x24c>
 c00f1d4:	d8c00317 	ldw	r3,12(sp)
 c00f1d8:	18bfff17 	ldw	r2,-4(r3)
 c00f1dc:	1d7fff04 	addi	r21,r3,-4
 c00f1e0:	10000326 	beq	r2,zero,c00f1f0 <__multiply+0x238>
 c00f1e4:	00000706 	br	c00f204 <__multiply+0x24c>
 c00f1e8:	a8800017 	ldw	r2,0(r21)
 c00f1ec:	1000051e 	bne	r2,zero,c00f204 <__multiply+0x24c>
 c00f1f0:	d8c00217 	ldw	r3,8(sp)
 c00f1f4:	ad7fff04 	addi	r21,r21,-4
 c00f1f8:	18ffffc4 	addi	r3,r3,-1
 c00f1fc:	d8c00215 	stw	r3,8(sp)
 c00f200:	183ff91e 	bne	r3,zero,c00f1e8 <__alt_data_end+0xfc00f1e8>
 c00f204:	d8c00617 	ldw	r3,24(sp)
 c00f208:	d9000217 	ldw	r4,8(sp)
 c00f20c:	1805883a 	mov	r2,r3
 c00f210:	19000415 	stw	r4,16(r3)
 c00f214:	dfc01017 	ldw	ra,64(sp)
 c00f218:	df000f17 	ldw	fp,60(sp)
 c00f21c:	ddc00e17 	ldw	r23,56(sp)
 c00f220:	dd800d17 	ldw	r22,52(sp)
 c00f224:	dd400c17 	ldw	r21,48(sp)
 c00f228:	dd000b17 	ldw	r20,44(sp)
 c00f22c:	dcc00a17 	ldw	r19,40(sp)
 c00f230:	dc800917 	ldw	r18,36(sp)
 c00f234:	dc400817 	ldw	r17,32(sp)
 c00f238:	dc000717 	ldw	r16,28(sp)
 c00f23c:	dec01104 	addi	sp,sp,68
 c00f240:	f800283a 	ret

0c00f244 <__pow5mult>:
 c00f244:	defffa04 	addi	sp,sp,-24
 c00f248:	dcc00315 	stw	r19,12(sp)
 c00f24c:	dc000015 	stw	r16,0(sp)
 c00f250:	dfc00515 	stw	ra,20(sp)
 c00f254:	dd000415 	stw	r20,16(sp)
 c00f258:	dc800215 	stw	r18,8(sp)
 c00f25c:	dc400115 	stw	r17,4(sp)
 c00f260:	308000cc 	andi	r2,r6,3
 c00f264:	3021883a 	mov	r16,r6
 c00f268:	2027883a 	mov	r19,r4
 c00f26c:	10002f1e 	bne	r2,zero,c00f32c <__pow5mult+0xe8>
 c00f270:	2825883a 	mov	r18,r5
 c00f274:	8021d0ba 	srai	r16,r16,2
 c00f278:	80001a26 	beq	r16,zero,c00f2e4 <__pow5mult+0xa0>
 c00f27c:	9c401217 	ldw	r17,72(r19)
 c00f280:	8800061e 	bne	r17,zero,c00f29c <__pow5mult+0x58>
 c00f284:	00003406 	br	c00f358 <__pow5mult+0x114>
 c00f288:	8021d07a 	srai	r16,r16,1
 c00f28c:	80001526 	beq	r16,zero,c00f2e4 <__pow5mult+0xa0>
 c00f290:	88800017 	ldw	r2,0(r17)
 c00f294:	10001c26 	beq	r2,zero,c00f308 <__pow5mult+0xc4>
 c00f298:	1023883a 	mov	r17,r2
 c00f29c:	8080004c 	andi	r2,r16,1
 c00f2a0:	103ff926 	beq	r2,zero,c00f288 <__alt_data_end+0xfc00f288>
 c00f2a4:	880d883a 	mov	r6,r17
 c00f2a8:	900b883a 	mov	r5,r18
 c00f2ac:	9809883a 	mov	r4,r19
 c00f2b0:	c00efb80 	call	c00efb8 <__multiply>
 c00f2b4:	90001b26 	beq	r18,zero,c00f324 <__pow5mult+0xe0>
 c00f2b8:	91000117 	ldw	r4,4(r18)
 c00f2bc:	98c01317 	ldw	r3,76(r19)
 c00f2c0:	8021d07a 	srai	r16,r16,1
 c00f2c4:	2109883a 	add	r4,r4,r4
 c00f2c8:	2109883a 	add	r4,r4,r4
 c00f2cc:	1907883a 	add	r3,r3,r4
 c00f2d0:	19000017 	ldw	r4,0(r3)
 c00f2d4:	91000015 	stw	r4,0(r18)
 c00f2d8:	1c800015 	stw	r18,0(r3)
 c00f2dc:	1025883a 	mov	r18,r2
 c00f2e0:	803feb1e 	bne	r16,zero,c00f290 <__alt_data_end+0xfc00f290>
 c00f2e4:	9005883a 	mov	r2,r18
 c00f2e8:	dfc00517 	ldw	ra,20(sp)
 c00f2ec:	dd000417 	ldw	r20,16(sp)
 c00f2f0:	dcc00317 	ldw	r19,12(sp)
 c00f2f4:	dc800217 	ldw	r18,8(sp)
 c00f2f8:	dc400117 	ldw	r17,4(sp)
 c00f2fc:	dc000017 	ldw	r16,0(sp)
 c00f300:	dec00604 	addi	sp,sp,24
 c00f304:	f800283a 	ret
 c00f308:	880d883a 	mov	r6,r17
 c00f30c:	880b883a 	mov	r5,r17
 c00f310:	9809883a 	mov	r4,r19
 c00f314:	c00efb80 	call	c00efb8 <__multiply>
 c00f318:	88800015 	stw	r2,0(r17)
 c00f31c:	10000015 	stw	zero,0(r2)
 c00f320:	003fdd06 	br	c00f298 <__alt_data_end+0xfc00f298>
 c00f324:	1025883a 	mov	r18,r2
 c00f328:	003fd706 	br	c00f288 <__alt_data_end+0xfc00f288>
 c00f32c:	10bfffc4 	addi	r2,r2,-1
 c00f330:	1085883a 	add	r2,r2,r2
 c00f334:	00c300b4 	movhi	r3,3074
 c00f338:	18f74c04 	addi	r3,r3,-8912
 c00f33c:	1085883a 	add	r2,r2,r2
 c00f340:	1885883a 	add	r2,r3,r2
 c00f344:	11800017 	ldw	r6,0(r2)
 c00f348:	000f883a 	mov	r7,zero
 c00f34c:	c00ec180 	call	c00ec18 <__multadd>
 c00f350:	1025883a 	mov	r18,r2
 c00f354:	003fc706 	br	c00f274 <__alt_data_end+0xfc00f274>
 c00f358:	05000044 	movi	r20,1
 c00f35c:	a00b883a 	mov	r5,r20
 c00f360:	9809883a 	mov	r4,r19
 c00f364:	c00eb480 	call	c00eb48 <_Balloc>
 c00f368:	1023883a 	mov	r17,r2
 c00f36c:	00809c44 	movi	r2,625
 c00f370:	88800515 	stw	r2,20(r17)
 c00f374:	8d000415 	stw	r20,16(r17)
 c00f378:	9c401215 	stw	r17,72(r19)
 c00f37c:	88000015 	stw	zero,0(r17)
 c00f380:	003fc606 	br	c00f29c <__alt_data_end+0xfc00f29c>

0c00f384 <__lshift>:
 c00f384:	defff904 	addi	sp,sp,-28
 c00f388:	dd400515 	stw	r21,20(sp)
 c00f38c:	dcc00315 	stw	r19,12(sp)
 c00f390:	302bd17a 	srai	r21,r6,5
 c00f394:	2cc00417 	ldw	r19,16(r5)
 c00f398:	28800217 	ldw	r2,8(r5)
 c00f39c:	dd000415 	stw	r20,16(sp)
 c00f3a0:	ace7883a 	add	r19,r21,r19
 c00f3a4:	dc800215 	stw	r18,8(sp)
 c00f3a8:	dc400115 	stw	r17,4(sp)
 c00f3ac:	dc000015 	stw	r16,0(sp)
 c00f3b0:	dfc00615 	stw	ra,24(sp)
 c00f3b4:	9c000044 	addi	r16,r19,1
 c00f3b8:	2823883a 	mov	r17,r5
 c00f3bc:	3029883a 	mov	r20,r6
 c00f3c0:	2025883a 	mov	r18,r4
 c00f3c4:	29400117 	ldw	r5,4(r5)
 c00f3c8:	1400030e 	bge	r2,r16,c00f3d8 <__lshift+0x54>
 c00f3cc:	1085883a 	add	r2,r2,r2
 c00f3d0:	29400044 	addi	r5,r5,1
 c00f3d4:	143ffd16 	blt	r2,r16,c00f3cc <__alt_data_end+0xfc00f3cc>
 c00f3d8:	9009883a 	mov	r4,r18
 c00f3dc:	c00eb480 	call	c00eb48 <_Balloc>
 c00f3e0:	10c00504 	addi	r3,r2,20
 c00f3e4:	0540070e 	bge	zero,r21,c00f404 <__lshift+0x80>
 c00f3e8:	ad6b883a 	add	r21,r21,r21
 c00f3ec:	ad6b883a 	add	r21,r21,r21
 c00f3f0:	1809883a 	mov	r4,r3
 c00f3f4:	1d47883a 	add	r3,r3,r21
 c00f3f8:	20000015 	stw	zero,0(r4)
 c00f3fc:	21000104 	addi	r4,r4,4
 c00f400:	193ffd1e 	bne	r3,r4,c00f3f8 <__alt_data_end+0xfc00f3f8>
 c00f404:	8a000417 	ldw	r8,16(r17)
 c00f408:	89000504 	addi	r4,r17,20
 c00f40c:	a18007cc 	andi	r6,r20,31
 c00f410:	4211883a 	add	r8,r8,r8
 c00f414:	4211883a 	add	r8,r8,r8
 c00f418:	2211883a 	add	r8,r4,r8
 c00f41c:	30002326 	beq	r6,zero,c00f4ac <__lshift+0x128>
 c00f420:	02400804 	movi	r9,32
 c00f424:	4993c83a 	sub	r9,r9,r6
 c00f428:	000b883a 	mov	r5,zero
 c00f42c:	21c00017 	ldw	r7,0(r4)
 c00f430:	1815883a 	mov	r10,r3
 c00f434:	18c00104 	addi	r3,r3,4
 c00f438:	398e983a 	sll	r7,r7,r6
 c00f43c:	21000104 	addi	r4,r4,4
 c00f440:	394ab03a 	or	r5,r7,r5
 c00f444:	197fff15 	stw	r5,-4(r3)
 c00f448:	217fff17 	ldw	r5,-4(r4)
 c00f44c:	2a4ad83a 	srl	r5,r5,r9
 c00f450:	223ff636 	bltu	r4,r8,c00f42c <__alt_data_end+0xfc00f42c>
 c00f454:	51400115 	stw	r5,4(r10)
 c00f458:	28001a1e 	bne	r5,zero,c00f4c4 <__lshift+0x140>
 c00f45c:	843fffc4 	addi	r16,r16,-1
 c00f460:	14000415 	stw	r16,16(r2)
 c00f464:	88000826 	beq	r17,zero,c00f488 <__lshift+0x104>
 c00f468:	89000117 	ldw	r4,4(r17)
 c00f46c:	90c01317 	ldw	r3,76(r18)
 c00f470:	2109883a 	add	r4,r4,r4
 c00f474:	2109883a 	add	r4,r4,r4
 c00f478:	1907883a 	add	r3,r3,r4
 c00f47c:	19000017 	ldw	r4,0(r3)
 c00f480:	89000015 	stw	r4,0(r17)
 c00f484:	1c400015 	stw	r17,0(r3)
 c00f488:	dfc00617 	ldw	ra,24(sp)
 c00f48c:	dd400517 	ldw	r21,20(sp)
 c00f490:	dd000417 	ldw	r20,16(sp)
 c00f494:	dcc00317 	ldw	r19,12(sp)
 c00f498:	dc800217 	ldw	r18,8(sp)
 c00f49c:	dc400117 	ldw	r17,4(sp)
 c00f4a0:	dc000017 	ldw	r16,0(sp)
 c00f4a4:	dec00704 	addi	sp,sp,28
 c00f4a8:	f800283a 	ret
 c00f4ac:	21400017 	ldw	r5,0(r4)
 c00f4b0:	18c00104 	addi	r3,r3,4
 c00f4b4:	21000104 	addi	r4,r4,4
 c00f4b8:	197fff15 	stw	r5,-4(r3)
 c00f4bc:	223ffb36 	bltu	r4,r8,c00f4ac <__alt_data_end+0xfc00f4ac>
 c00f4c0:	003fe606 	br	c00f45c <__alt_data_end+0xfc00f45c>
 c00f4c4:	9c000084 	addi	r16,r19,2
 c00f4c8:	003fe406 	br	c00f45c <__alt_data_end+0xfc00f45c>

0c00f4cc <__mcmp>:
 c00f4cc:	20800417 	ldw	r2,16(r4)
 c00f4d0:	28c00417 	ldw	r3,16(r5)
 c00f4d4:	10c5c83a 	sub	r2,r2,r3
 c00f4d8:	1000111e 	bne	r2,zero,c00f520 <__mcmp+0x54>
 c00f4dc:	18c7883a 	add	r3,r3,r3
 c00f4e0:	18c7883a 	add	r3,r3,r3
 c00f4e4:	21000504 	addi	r4,r4,20
 c00f4e8:	29400504 	addi	r5,r5,20
 c00f4ec:	20c5883a 	add	r2,r4,r3
 c00f4f0:	28cb883a 	add	r5,r5,r3
 c00f4f4:	00000106 	br	c00f4fc <__mcmp+0x30>
 c00f4f8:	20800a2e 	bgeu	r4,r2,c00f524 <__mcmp+0x58>
 c00f4fc:	10bfff04 	addi	r2,r2,-4
 c00f500:	297fff04 	addi	r5,r5,-4
 c00f504:	11800017 	ldw	r6,0(r2)
 c00f508:	28c00017 	ldw	r3,0(r5)
 c00f50c:	30fffa26 	beq	r6,r3,c00f4f8 <__alt_data_end+0xfc00f4f8>
 c00f510:	30c00236 	bltu	r6,r3,c00f51c <__mcmp+0x50>
 c00f514:	00800044 	movi	r2,1
 c00f518:	f800283a 	ret
 c00f51c:	00bfffc4 	movi	r2,-1
 c00f520:	f800283a 	ret
 c00f524:	0005883a 	mov	r2,zero
 c00f528:	f800283a 	ret

0c00f52c <__mdiff>:
 c00f52c:	28c00417 	ldw	r3,16(r5)
 c00f530:	30800417 	ldw	r2,16(r6)
 c00f534:	defffa04 	addi	sp,sp,-24
 c00f538:	dcc00315 	stw	r19,12(sp)
 c00f53c:	dc800215 	stw	r18,8(sp)
 c00f540:	dfc00515 	stw	ra,20(sp)
 c00f544:	dd000415 	stw	r20,16(sp)
 c00f548:	dc400115 	stw	r17,4(sp)
 c00f54c:	dc000015 	stw	r16,0(sp)
 c00f550:	1887c83a 	sub	r3,r3,r2
 c00f554:	2825883a 	mov	r18,r5
 c00f558:	3027883a 	mov	r19,r6
 c00f55c:	1800141e 	bne	r3,zero,c00f5b0 <__mdiff+0x84>
 c00f560:	1085883a 	add	r2,r2,r2
 c00f564:	1085883a 	add	r2,r2,r2
 c00f568:	2a000504 	addi	r8,r5,20
 c00f56c:	34000504 	addi	r16,r6,20
 c00f570:	4087883a 	add	r3,r8,r2
 c00f574:	8085883a 	add	r2,r16,r2
 c00f578:	00000106 	br	c00f580 <__mdiff+0x54>
 c00f57c:	40c0592e 	bgeu	r8,r3,c00f6e4 <__mdiff+0x1b8>
 c00f580:	18ffff04 	addi	r3,r3,-4
 c00f584:	10bfff04 	addi	r2,r2,-4
 c00f588:	19c00017 	ldw	r7,0(r3)
 c00f58c:	11400017 	ldw	r5,0(r2)
 c00f590:	397ffa26 	beq	r7,r5,c00f57c <__alt_data_end+0xfc00f57c>
 c00f594:	3940592e 	bgeu	r7,r5,c00f6fc <__mdiff+0x1d0>
 c00f598:	9005883a 	mov	r2,r18
 c00f59c:	4023883a 	mov	r17,r8
 c00f5a0:	9825883a 	mov	r18,r19
 c00f5a4:	05000044 	movi	r20,1
 c00f5a8:	1027883a 	mov	r19,r2
 c00f5ac:	00000406 	br	c00f5c0 <__mdiff+0x94>
 c00f5b0:	18005616 	blt	r3,zero,c00f70c <__mdiff+0x1e0>
 c00f5b4:	34400504 	addi	r17,r6,20
 c00f5b8:	2c000504 	addi	r16,r5,20
 c00f5bc:	0029883a 	mov	r20,zero
 c00f5c0:	91400117 	ldw	r5,4(r18)
 c00f5c4:	c00eb480 	call	c00eb48 <_Balloc>
 c00f5c8:	92400417 	ldw	r9,16(r18)
 c00f5cc:	9b000417 	ldw	r12,16(r19)
 c00f5d0:	12c00504 	addi	r11,r2,20
 c00f5d4:	4a51883a 	add	r8,r9,r9
 c00f5d8:	6319883a 	add	r12,r12,r12
 c00f5dc:	4211883a 	add	r8,r8,r8
 c00f5e0:	6319883a 	add	r12,r12,r12
 c00f5e4:	15000315 	stw	r20,12(r2)
 c00f5e8:	8211883a 	add	r8,r16,r8
 c00f5ec:	8b19883a 	add	r12,r17,r12
 c00f5f0:	0007883a 	mov	r3,zero
 c00f5f4:	81400017 	ldw	r5,0(r16)
 c00f5f8:	89c00017 	ldw	r7,0(r17)
 c00f5fc:	59800104 	addi	r6,r11,4
 c00f600:	293fffcc 	andi	r4,r5,65535
 c00f604:	20c7883a 	add	r3,r4,r3
 c00f608:	393fffcc 	andi	r4,r7,65535
 c00f60c:	1909c83a 	sub	r4,r3,r4
 c00f610:	280ad43a 	srli	r5,r5,16
 c00f614:	380ed43a 	srli	r7,r7,16
 c00f618:	2007d43a 	srai	r3,r4,16
 c00f61c:	213fffcc 	andi	r4,r4,65535
 c00f620:	29cbc83a 	sub	r5,r5,r7
 c00f624:	28c7883a 	add	r3,r5,r3
 c00f628:	180a943a 	slli	r5,r3,16
 c00f62c:	8c400104 	addi	r17,r17,4
 c00f630:	84000104 	addi	r16,r16,4
 c00f634:	2908b03a 	or	r4,r5,r4
 c00f638:	59000015 	stw	r4,0(r11)
 c00f63c:	1807d43a 	srai	r3,r3,16
 c00f640:	3015883a 	mov	r10,r6
 c00f644:	3017883a 	mov	r11,r6
 c00f648:	8b3fea36 	bltu	r17,r12,c00f5f4 <__alt_data_end+0xfc00f5f4>
 c00f64c:	8200162e 	bgeu	r16,r8,c00f6a8 <__mdiff+0x17c>
 c00f650:	8017883a 	mov	r11,r16
 c00f654:	59400017 	ldw	r5,0(r11)
 c00f658:	31800104 	addi	r6,r6,4
 c00f65c:	5ac00104 	addi	r11,r11,4
 c00f660:	293fffcc 	andi	r4,r5,65535
 c00f664:	20c7883a 	add	r3,r4,r3
 c00f668:	280ed43a 	srli	r7,r5,16
 c00f66c:	180bd43a 	srai	r5,r3,16
 c00f670:	193fffcc 	andi	r4,r3,65535
 c00f674:	3947883a 	add	r3,r7,r5
 c00f678:	180a943a 	slli	r5,r3,16
 c00f67c:	1807d43a 	srai	r3,r3,16
 c00f680:	2908b03a 	or	r4,r5,r4
 c00f684:	313fff15 	stw	r4,-4(r6)
 c00f688:	5a3ff236 	bltu	r11,r8,c00f654 <__alt_data_end+0xfc00f654>
 c00f68c:	0406303a 	nor	r3,zero,r16
 c00f690:	1a07883a 	add	r3,r3,r8
 c00f694:	1806d0ba 	srli	r3,r3,2
 c00f698:	18c00044 	addi	r3,r3,1
 c00f69c:	18c7883a 	add	r3,r3,r3
 c00f6a0:	18c7883a 	add	r3,r3,r3
 c00f6a4:	50d5883a 	add	r10,r10,r3
 c00f6a8:	50ffff04 	addi	r3,r10,-4
 c00f6ac:	2000041e 	bne	r4,zero,c00f6c0 <__mdiff+0x194>
 c00f6b0:	18ffff04 	addi	r3,r3,-4
 c00f6b4:	19000017 	ldw	r4,0(r3)
 c00f6b8:	4a7fffc4 	addi	r9,r9,-1
 c00f6bc:	203ffc26 	beq	r4,zero,c00f6b0 <__alt_data_end+0xfc00f6b0>
 c00f6c0:	12400415 	stw	r9,16(r2)
 c00f6c4:	dfc00517 	ldw	ra,20(sp)
 c00f6c8:	dd000417 	ldw	r20,16(sp)
 c00f6cc:	dcc00317 	ldw	r19,12(sp)
 c00f6d0:	dc800217 	ldw	r18,8(sp)
 c00f6d4:	dc400117 	ldw	r17,4(sp)
 c00f6d8:	dc000017 	ldw	r16,0(sp)
 c00f6dc:	dec00604 	addi	sp,sp,24
 c00f6e0:	f800283a 	ret
 c00f6e4:	000b883a 	mov	r5,zero
 c00f6e8:	c00eb480 	call	c00eb48 <_Balloc>
 c00f6ec:	00c00044 	movi	r3,1
 c00f6f0:	10c00415 	stw	r3,16(r2)
 c00f6f4:	10000515 	stw	zero,20(r2)
 c00f6f8:	003ff206 	br	c00f6c4 <__alt_data_end+0xfc00f6c4>
 c00f6fc:	8023883a 	mov	r17,r16
 c00f700:	0029883a 	mov	r20,zero
 c00f704:	4021883a 	mov	r16,r8
 c00f708:	003fad06 	br	c00f5c0 <__alt_data_end+0xfc00f5c0>
 c00f70c:	9005883a 	mov	r2,r18
 c00f710:	94400504 	addi	r17,r18,20
 c00f714:	9c000504 	addi	r16,r19,20
 c00f718:	9825883a 	mov	r18,r19
 c00f71c:	05000044 	movi	r20,1
 c00f720:	1027883a 	mov	r19,r2
 c00f724:	003fa606 	br	c00f5c0 <__alt_data_end+0xfc00f5c0>

0c00f728 <__ulp>:
 c00f728:	295ffc2c 	andhi	r5,r5,32752
 c00f72c:	00bf3034 	movhi	r2,64704
 c00f730:	2887883a 	add	r3,r5,r2
 c00f734:	00c0020e 	bge	zero,r3,c00f740 <__ulp+0x18>
 c00f738:	0005883a 	mov	r2,zero
 c00f73c:	f800283a 	ret
 c00f740:	00c7c83a 	sub	r3,zero,r3
 c00f744:	1807d53a 	srai	r3,r3,20
 c00f748:	008004c4 	movi	r2,19
 c00f74c:	10c00b0e 	bge	r2,r3,c00f77c <__ulp+0x54>
 c00f750:	18bffb04 	addi	r2,r3,-20
 c00f754:	01000784 	movi	r4,30
 c00f758:	0007883a 	mov	r3,zero
 c00f75c:	20800516 	blt	r4,r2,c00f774 <__ulp+0x4c>
 c00f760:	010007c4 	movi	r4,31
 c00f764:	2089c83a 	sub	r4,r4,r2
 c00f768:	00800044 	movi	r2,1
 c00f76c:	1104983a 	sll	r2,r2,r4
 c00f770:	f800283a 	ret
 c00f774:	00800044 	movi	r2,1
 c00f778:	f800283a 	ret
 c00f77c:	01400234 	movhi	r5,8
 c00f780:	28c7d83a 	sra	r3,r5,r3
 c00f784:	0005883a 	mov	r2,zero
 c00f788:	f800283a 	ret

0c00f78c <__b2d>:
 c00f78c:	defffa04 	addi	sp,sp,-24
 c00f790:	dc000015 	stw	r16,0(sp)
 c00f794:	24000417 	ldw	r16,16(r4)
 c00f798:	dc400115 	stw	r17,4(sp)
 c00f79c:	24400504 	addi	r17,r4,20
 c00f7a0:	8421883a 	add	r16,r16,r16
 c00f7a4:	8421883a 	add	r16,r16,r16
 c00f7a8:	8c21883a 	add	r16,r17,r16
 c00f7ac:	dc800215 	stw	r18,8(sp)
 c00f7b0:	84bfff17 	ldw	r18,-4(r16)
 c00f7b4:	dd000415 	stw	r20,16(sp)
 c00f7b8:	dcc00315 	stw	r19,12(sp)
 c00f7bc:	9009883a 	mov	r4,r18
 c00f7c0:	2829883a 	mov	r20,r5
 c00f7c4:	dfc00515 	stw	ra,20(sp)
 c00f7c8:	c00ee640 	call	c00ee64 <__hi0bits>
 c00f7cc:	00c00804 	movi	r3,32
 c00f7d0:	1889c83a 	sub	r4,r3,r2
 c00f7d4:	a1000015 	stw	r4,0(r20)
 c00f7d8:	01000284 	movi	r4,10
 c00f7dc:	84ffff04 	addi	r19,r16,-4
 c00f7e0:	20801216 	blt	r4,r2,c00f82c <__b2d+0xa0>
 c00f7e4:	018002c4 	movi	r6,11
 c00f7e8:	308dc83a 	sub	r6,r6,r2
 c00f7ec:	9186d83a 	srl	r3,r18,r6
 c00f7f0:	18cffc34 	orhi	r3,r3,16368
 c00f7f4:	8cc0212e 	bgeu	r17,r19,c00f87c <__b2d+0xf0>
 c00f7f8:	813ffe17 	ldw	r4,-8(r16)
 c00f7fc:	218cd83a 	srl	r6,r4,r6
 c00f800:	10800544 	addi	r2,r2,21
 c00f804:	9084983a 	sll	r2,r18,r2
 c00f808:	1184b03a 	or	r2,r2,r6
 c00f80c:	dfc00517 	ldw	ra,20(sp)
 c00f810:	dd000417 	ldw	r20,16(sp)
 c00f814:	dcc00317 	ldw	r19,12(sp)
 c00f818:	dc800217 	ldw	r18,8(sp)
 c00f81c:	dc400117 	ldw	r17,4(sp)
 c00f820:	dc000017 	ldw	r16,0(sp)
 c00f824:	dec00604 	addi	sp,sp,24
 c00f828:	f800283a 	ret
 c00f82c:	8cc00f2e 	bgeu	r17,r19,c00f86c <__b2d+0xe0>
 c00f830:	117ffd44 	addi	r5,r2,-11
 c00f834:	80bffe17 	ldw	r2,-8(r16)
 c00f838:	28000e26 	beq	r5,zero,c00f874 <__b2d+0xe8>
 c00f83c:	1949c83a 	sub	r4,r3,r5
 c00f840:	9164983a 	sll	r18,r18,r5
 c00f844:	1106d83a 	srl	r3,r2,r4
 c00f848:	81bffe04 	addi	r6,r16,-8
 c00f84c:	948ffc34 	orhi	r18,r18,16368
 c00f850:	90c6b03a 	or	r3,r18,r3
 c00f854:	89800e2e 	bgeu	r17,r6,c00f890 <__b2d+0x104>
 c00f858:	81bffd17 	ldw	r6,-12(r16)
 c00f85c:	1144983a 	sll	r2,r2,r5
 c00f860:	310ad83a 	srl	r5,r6,r4
 c00f864:	2884b03a 	or	r2,r5,r2
 c00f868:	003fe806 	br	c00f80c <__alt_data_end+0xfc00f80c>
 c00f86c:	10bffd44 	addi	r2,r2,-11
 c00f870:	1000041e 	bne	r2,zero,c00f884 <__b2d+0xf8>
 c00f874:	90cffc34 	orhi	r3,r18,16368
 c00f878:	003fe406 	br	c00f80c <__alt_data_end+0xfc00f80c>
 c00f87c:	000d883a 	mov	r6,zero
 c00f880:	003fdf06 	br	c00f800 <__alt_data_end+0xfc00f800>
 c00f884:	90a4983a 	sll	r18,r18,r2
 c00f888:	0005883a 	mov	r2,zero
 c00f88c:	003ff906 	br	c00f874 <__alt_data_end+0xfc00f874>
 c00f890:	1144983a 	sll	r2,r2,r5
 c00f894:	003fdd06 	br	c00f80c <__alt_data_end+0xfc00f80c>

0c00f898 <__d2b>:
 c00f898:	defff804 	addi	sp,sp,-32
 c00f89c:	dc000215 	stw	r16,8(sp)
 c00f8a0:	3021883a 	mov	r16,r6
 c00f8a4:	dc400315 	stw	r17,12(sp)
 c00f8a8:	8022907a 	slli	r17,r16,1
 c00f8ac:	dd000615 	stw	r20,24(sp)
 c00f8b0:	2829883a 	mov	r20,r5
 c00f8b4:	01400044 	movi	r5,1
 c00f8b8:	dcc00515 	stw	r19,20(sp)
 c00f8bc:	dc800415 	stw	r18,16(sp)
 c00f8c0:	dfc00715 	stw	ra,28(sp)
 c00f8c4:	3825883a 	mov	r18,r7
 c00f8c8:	8822d57a 	srli	r17,r17,21
 c00f8cc:	c00eb480 	call	c00eb48 <_Balloc>
 c00f8d0:	1027883a 	mov	r19,r2
 c00f8d4:	00800434 	movhi	r2,16
 c00f8d8:	10bfffc4 	addi	r2,r2,-1
 c00f8dc:	808c703a 	and	r6,r16,r2
 c00f8e0:	88000126 	beq	r17,zero,c00f8e8 <__d2b+0x50>
 c00f8e4:	31800434 	orhi	r6,r6,16
 c00f8e8:	d9800015 	stw	r6,0(sp)
 c00f8ec:	a0002426 	beq	r20,zero,c00f980 <__d2b+0xe8>
 c00f8f0:	d9000104 	addi	r4,sp,4
 c00f8f4:	dd000115 	stw	r20,4(sp)
 c00f8f8:	c00eecc0 	call	c00eecc <__lo0bits>
 c00f8fc:	d8c00017 	ldw	r3,0(sp)
 c00f900:	10002f1e 	bne	r2,zero,c00f9c0 <__d2b+0x128>
 c00f904:	d9000117 	ldw	r4,4(sp)
 c00f908:	99000515 	stw	r4,20(r19)
 c00f90c:	1821003a 	cmpeq	r16,r3,zero
 c00f910:	01000084 	movi	r4,2
 c00f914:	2421c83a 	sub	r16,r4,r16
 c00f918:	98c00615 	stw	r3,24(r19)
 c00f91c:	9c000415 	stw	r16,16(r19)
 c00f920:	88001f1e 	bne	r17,zero,c00f9a0 <__d2b+0x108>
 c00f924:	10bef384 	addi	r2,r2,-1074
 c00f928:	90800015 	stw	r2,0(r18)
 c00f92c:	00900034 	movhi	r2,16384
 c00f930:	10bfffc4 	addi	r2,r2,-1
 c00f934:	8085883a 	add	r2,r16,r2
 c00f938:	1085883a 	add	r2,r2,r2
 c00f93c:	1085883a 	add	r2,r2,r2
 c00f940:	9885883a 	add	r2,r19,r2
 c00f944:	11000517 	ldw	r4,20(r2)
 c00f948:	8020917a 	slli	r16,r16,5
 c00f94c:	c00ee640 	call	c00ee64 <__hi0bits>
 c00f950:	d8c00817 	ldw	r3,32(sp)
 c00f954:	8085c83a 	sub	r2,r16,r2
 c00f958:	18800015 	stw	r2,0(r3)
 c00f95c:	9805883a 	mov	r2,r19
 c00f960:	dfc00717 	ldw	ra,28(sp)
 c00f964:	dd000617 	ldw	r20,24(sp)
 c00f968:	dcc00517 	ldw	r19,20(sp)
 c00f96c:	dc800417 	ldw	r18,16(sp)
 c00f970:	dc400317 	ldw	r17,12(sp)
 c00f974:	dc000217 	ldw	r16,8(sp)
 c00f978:	dec00804 	addi	sp,sp,32
 c00f97c:	f800283a 	ret
 c00f980:	d809883a 	mov	r4,sp
 c00f984:	c00eecc0 	call	c00eecc <__lo0bits>
 c00f988:	d8c00017 	ldw	r3,0(sp)
 c00f98c:	04000044 	movi	r16,1
 c00f990:	9c000415 	stw	r16,16(r19)
 c00f994:	98c00515 	stw	r3,20(r19)
 c00f998:	10800804 	addi	r2,r2,32
 c00f99c:	883fe126 	beq	r17,zero,c00f924 <__alt_data_end+0xfc00f924>
 c00f9a0:	00c00d44 	movi	r3,53
 c00f9a4:	8c7ef344 	addi	r17,r17,-1075
 c00f9a8:	88a3883a 	add	r17,r17,r2
 c00f9ac:	1885c83a 	sub	r2,r3,r2
 c00f9b0:	d8c00817 	ldw	r3,32(sp)
 c00f9b4:	94400015 	stw	r17,0(r18)
 c00f9b8:	18800015 	stw	r2,0(r3)
 c00f9bc:	003fe706 	br	c00f95c <__alt_data_end+0xfc00f95c>
 c00f9c0:	01000804 	movi	r4,32
 c00f9c4:	2089c83a 	sub	r4,r4,r2
 c00f9c8:	1908983a 	sll	r4,r3,r4
 c00f9cc:	d9400117 	ldw	r5,4(sp)
 c00f9d0:	1886d83a 	srl	r3,r3,r2
 c00f9d4:	2148b03a 	or	r4,r4,r5
 c00f9d8:	99000515 	stw	r4,20(r19)
 c00f9dc:	d8c00015 	stw	r3,0(sp)
 c00f9e0:	003fca06 	br	c00f90c <__alt_data_end+0xfc00f90c>

0c00f9e4 <__ratio>:
 c00f9e4:	defff904 	addi	sp,sp,-28
 c00f9e8:	dc400315 	stw	r17,12(sp)
 c00f9ec:	2823883a 	mov	r17,r5
 c00f9f0:	d9400104 	addi	r5,sp,4
 c00f9f4:	dfc00615 	stw	ra,24(sp)
 c00f9f8:	dcc00515 	stw	r19,20(sp)
 c00f9fc:	dc800415 	stw	r18,16(sp)
 c00fa00:	2027883a 	mov	r19,r4
 c00fa04:	dc000215 	stw	r16,8(sp)
 c00fa08:	c00f78c0 	call	c00f78c <__b2d>
 c00fa0c:	d80b883a 	mov	r5,sp
 c00fa10:	8809883a 	mov	r4,r17
 c00fa14:	1025883a 	mov	r18,r2
 c00fa18:	1821883a 	mov	r16,r3
 c00fa1c:	c00f78c0 	call	c00f78c <__b2d>
 c00fa20:	8a000417 	ldw	r8,16(r17)
 c00fa24:	99000417 	ldw	r4,16(r19)
 c00fa28:	d9400117 	ldw	r5,4(sp)
 c00fa2c:	2209c83a 	sub	r4,r4,r8
 c00fa30:	2010917a 	slli	r8,r4,5
 c00fa34:	d9000017 	ldw	r4,0(sp)
 c00fa38:	2909c83a 	sub	r4,r5,r4
 c00fa3c:	4109883a 	add	r4,r8,r4
 c00fa40:	01000e0e 	bge	zero,r4,c00fa7c <__ratio+0x98>
 c00fa44:	2008953a 	slli	r4,r4,20
 c00fa48:	2421883a 	add	r16,r4,r16
 c00fa4c:	100d883a 	mov	r6,r2
 c00fa50:	180f883a 	mov	r7,r3
 c00fa54:	9009883a 	mov	r4,r18
 c00fa58:	800b883a 	mov	r5,r16
 c00fa5c:	c0187440 	call	c018744 <__divdf3>
 c00fa60:	dfc00617 	ldw	ra,24(sp)
 c00fa64:	dcc00517 	ldw	r19,20(sp)
 c00fa68:	dc800417 	ldw	r18,16(sp)
 c00fa6c:	dc400317 	ldw	r17,12(sp)
 c00fa70:	dc000217 	ldw	r16,8(sp)
 c00fa74:	dec00704 	addi	sp,sp,28
 c00fa78:	f800283a 	ret
 c00fa7c:	2008953a 	slli	r4,r4,20
 c00fa80:	1907c83a 	sub	r3,r3,r4
 c00fa84:	003ff106 	br	c00fa4c <__alt_data_end+0xfc00fa4c>

0c00fa88 <_mprec_log10>:
 c00fa88:	defffe04 	addi	sp,sp,-8
 c00fa8c:	dc000015 	stw	r16,0(sp)
 c00fa90:	dfc00115 	stw	ra,4(sp)
 c00fa94:	008005c4 	movi	r2,23
 c00fa98:	2021883a 	mov	r16,r4
 c00fa9c:	11000d0e 	bge	r2,r4,c00fad4 <_mprec_log10+0x4c>
 c00faa0:	0005883a 	mov	r2,zero
 c00faa4:	00cffc34 	movhi	r3,16368
 c00faa8:	843fffc4 	addi	r16,r16,-1
 c00faac:	000d883a 	mov	r6,zero
 c00fab0:	01d00934 	movhi	r7,16420
 c00fab4:	1009883a 	mov	r4,r2
 c00fab8:	180b883a 	mov	r5,r3
 c00fabc:	c01936c0 	call	c01936c <__muldf3>
 c00fac0:	803ff91e 	bne	r16,zero,c00faa8 <__alt_data_end+0xfc00faa8>
 c00fac4:	dfc00117 	ldw	ra,4(sp)
 c00fac8:	dc000017 	ldw	r16,0(sp)
 c00facc:	dec00204 	addi	sp,sp,8
 c00fad0:	f800283a 	ret
 c00fad4:	202090fa 	slli	r16,r4,3
 c00fad8:	008300b4 	movhi	r2,3074
 c00fadc:	10b76304 	addi	r2,r2,-8820
 c00fae0:	1421883a 	add	r16,r2,r16
 c00fae4:	80800017 	ldw	r2,0(r16)
 c00fae8:	80c00117 	ldw	r3,4(r16)
 c00faec:	dfc00117 	ldw	ra,4(sp)
 c00faf0:	dc000017 	ldw	r16,0(sp)
 c00faf4:	dec00204 	addi	sp,sp,8
 c00faf8:	f800283a 	ret

0c00fafc <__copybits>:
 c00fafc:	297fffc4 	addi	r5,r5,-1
 c00fb00:	280fd17a 	srai	r7,r5,5
 c00fb04:	30c00417 	ldw	r3,16(r6)
 c00fb08:	30800504 	addi	r2,r6,20
 c00fb0c:	39c00044 	addi	r7,r7,1
 c00fb10:	18c7883a 	add	r3,r3,r3
 c00fb14:	39cf883a 	add	r7,r7,r7
 c00fb18:	18c7883a 	add	r3,r3,r3
 c00fb1c:	39cf883a 	add	r7,r7,r7
 c00fb20:	10c7883a 	add	r3,r2,r3
 c00fb24:	21cf883a 	add	r7,r4,r7
 c00fb28:	10c00d2e 	bgeu	r2,r3,c00fb60 <__copybits+0x64>
 c00fb2c:	200b883a 	mov	r5,r4
 c00fb30:	12000017 	ldw	r8,0(r2)
 c00fb34:	29400104 	addi	r5,r5,4
 c00fb38:	10800104 	addi	r2,r2,4
 c00fb3c:	2a3fff15 	stw	r8,-4(r5)
 c00fb40:	10fffb36 	bltu	r2,r3,c00fb30 <__alt_data_end+0xfc00fb30>
 c00fb44:	1985c83a 	sub	r2,r3,r6
 c00fb48:	10bffac4 	addi	r2,r2,-21
 c00fb4c:	1004d0ba 	srli	r2,r2,2
 c00fb50:	10800044 	addi	r2,r2,1
 c00fb54:	1085883a 	add	r2,r2,r2
 c00fb58:	1085883a 	add	r2,r2,r2
 c00fb5c:	2089883a 	add	r4,r4,r2
 c00fb60:	21c0032e 	bgeu	r4,r7,c00fb70 <__copybits+0x74>
 c00fb64:	20000015 	stw	zero,0(r4)
 c00fb68:	21000104 	addi	r4,r4,4
 c00fb6c:	21fffd36 	bltu	r4,r7,c00fb64 <__alt_data_end+0xfc00fb64>
 c00fb70:	f800283a 	ret

0c00fb74 <__any_on>:
 c00fb74:	20c00417 	ldw	r3,16(r4)
 c00fb78:	2805d17a 	srai	r2,r5,5
 c00fb7c:	21000504 	addi	r4,r4,20
 c00fb80:	18800d0e 	bge	r3,r2,c00fbb8 <__any_on+0x44>
 c00fb84:	18c7883a 	add	r3,r3,r3
 c00fb88:	18c7883a 	add	r3,r3,r3
 c00fb8c:	20c7883a 	add	r3,r4,r3
 c00fb90:	20c0192e 	bgeu	r4,r3,c00fbf8 <__any_on+0x84>
 c00fb94:	18bfff17 	ldw	r2,-4(r3)
 c00fb98:	18ffff04 	addi	r3,r3,-4
 c00fb9c:	1000041e 	bne	r2,zero,c00fbb0 <__any_on+0x3c>
 c00fba0:	20c0142e 	bgeu	r4,r3,c00fbf4 <__any_on+0x80>
 c00fba4:	18ffff04 	addi	r3,r3,-4
 c00fba8:	19400017 	ldw	r5,0(r3)
 c00fbac:	283ffc26 	beq	r5,zero,c00fba0 <__alt_data_end+0xfc00fba0>
 c00fbb0:	00800044 	movi	r2,1
 c00fbb4:	f800283a 	ret
 c00fbb8:	10c00a0e 	bge	r2,r3,c00fbe4 <__any_on+0x70>
 c00fbbc:	1085883a 	add	r2,r2,r2
 c00fbc0:	1085883a 	add	r2,r2,r2
 c00fbc4:	294007cc 	andi	r5,r5,31
 c00fbc8:	2087883a 	add	r3,r4,r2
 c00fbcc:	283ff026 	beq	r5,zero,c00fb90 <__alt_data_end+0xfc00fb90>
 c00fbd0:	19800017 	ldw	r6,0(r3)
 c00fbd4:	3144d83a 	srl	r2,r6,r5
 c00fbd8:	114a983a 	sll	r5,r2,r5
 c00fbdc:	317ff41e 	bne	r6,r5,c00fbb0 <__alt_data_end+0xfc00fbb0>
 c00fbe0:	003feb06 	br	c00fb90 <__alt_data_end+0xfc00fb90>
 c00fbe4:	1085883a 	add	r2,r2,r2
 c00fbe8:	1085883a 	add	r2,r2,r2
 c00fbec:	2087883a 	add	r3,r4,r2
 c00fbf0:	003fe706 	br	c00fb90 <__alt_data_end+0xfc00fb90>
 c00fbf4:	f800283a 	ret
 c00fbf8:	0005883a 	mov	r2,zero
 c00fbfc:	f800283a 	ret

0c00fc00 <_putc_r>:
 c00fc00:	defffc04 	addi	sp,sp,-16
 c00fc04:	dc000215 	stw	r16,8(sp)
 c00fc08:	dfc00315 	stw	ra,12(sp)
 c00fc0c:	2021883a 	mov	r16,r4
 c00fc10:	20000226 	beq	r4,zero,c00fc1c <_putc_r+0x1c>
 c00fc14:	20800e17 	ldw	r2,56(r4)
 c00fc18:	10001b26 	beq	r2,zero,c00fc88 <_putc_r+0x88>
 c00fc1c:	30800217 	ldw	r2,8(r6)
 c00fc20:	10bfffc4 	addi	r2,r2,-1
 c00fc24:	30800215 	stw	r2,8(r6)
 c00fc28:	10000a16 	blt	r2,zero,c00fc54 <_putc_r+0x54>
 c00fc2c:	30800017 	ldw	r2,0(r6)
 c00fc30:	11400005 	stb	r5,0(r2)
 c00fc34:	30800017 	ldw	r2,0(r6)
 c00fc38:	10c00044 	addi	r3,r2,1
 c00fc3c:	30c00015 	stw	r3,0(r6)
 c00fc40:	10800003 	ldbu	r2,0(r2)
 c00fc44:	dfc00317 	ldw	ra,12(sp)
 c00fc48:	dc000217 	ldw	r16,8(sp)
 c00fc4c:	dec00404 	addi	sp,sp,16
 c00fc50:	f800283a 	ret
 c00fc54:	30c00617 	ldw	r3,24(r6)
 c00fc58:	10c00616 	blt	r2,r3,c00fc74 <_putc_r+0x74>
 c00fc5c:	30800017 	ldw	r2,0(r6)
 c00fc60:	00c00284 	movi	r3,10
 c00fc64:	11400005 	stb	r5,0(r2)
 c00fc68:	30800017 	ldw	r2,0(r6)
 c00fc6c:	11400003 	ldbu	r5,0(r2)
 c00fc70:	28fff11e 	bne	r5,r3,c00fc38 <__alt_data_end+0xfc00fc38>
 c00fc74:	8009883a 	mov	r4,r16
 c00fc78:	dfc00317 	ldw	ra,12(sp)
 c00fc7c:	dc000217 	ldw	r16,8(sp)
 c00fc80:	dec00404 	addi	sp,sp,16
 c00fc84:	c0159941 	jmpi	c015994 <__swbuf_r>
 c00fc88:	d9400015 	stw	r5,0(sp)
 c00fc8c:	d9800115 	stw	r6,4(sp)
 c00fc90:	c00d4680 	call	c00d468 <__sinit>
 c00fc94:	d9800117 	ldw	r6,4(sp)
 c00fc98:	d9400017 	ldw	r5,0(sp)
 c00fc9c:	003fdf06 	br	c00fc1c <__alt_data_end+0xfc00fc1c>

0c00fca0 <putc>:
 c00fca0:	008300b4 	movhi	r2,3074
 c00fca4:	defffc04 	addi	sp,sp,-16
 c00fca8:	10bfc304 	addi	r2,r2,-244
 c00fcac:	dc000115 	stw	r16,4(sp)
 c00fcb0:	14000017 	ldw	r16,0(r2)
 c00fcb4:	dc400215 	stw	r17,8(sp)
 c00fcb8:	dfc00315 	stw	ra,12(sp)
 c00fcbc:	2023883a 	mov	r17,r4
 c00fcc0:	80000226 	beq	r16,zero,c00fccc <putc+0x2c>
 c00fcc4:	80800e17 	ldw	r2,56(r16)
 c00fcc8:	10001a26 	beq	r2,zero,c00fd34 <putc+0x94>
 c00fccc:	28800217 	ldw	r2,8(r5)
 c00fcd0:	10bfffc4 	addi	r2,r2,-1
 c00fcd4:	28800215 	stw	r2,8(r5)
 c00fcd8:	10000b16 	blt	r2,zero,c00fd08 <putc+0x68>
 c00fcdc:	28800017 	ldw	r2,0(r5)
 c00fce0:	14400005 	stb	r17,0(r2)
 c00fce4:	28800017 	ldw	r2,0(r5)
 c00fce8:	10c00044 	addi	r3,r2,1
 c00fcec:	28c00015 	stw	r3,0(r5)
 c00fcf0:	10800003 	ldbu	r2,0(r2)
 c00fcf4:	dfc00317 	ldw	ra,12(sp)
 c00fcf8:	dc400217 	ldw	r17,8(sp)
 c00fcfc:	dc000117 	ldw	r16,4(sp)
 c00fd00:	dec00404 	addi	sp,sp,16
 c00fd04:	f800283a 	ret
 c00fd08:	28c00617 	ldw	r3,24(r5)
 c00fd0c:	10c00e16 	blt	r2,r3,c00fd48 <putc+0xa8>
 c00fd10:	28800017 	ldw	r2,0(r5)
 c00fd14:	01000284 	movi	r4,10
 c00fd18:	14400005 	stb	r17,0(r2)
 c00fd1c:	28800017 	ldw	r2,0(r5)
 c00fd20:	10c00003 	ldbu	r3,0(r2)
 c00fd24:	193ff01e 	bne	r3,r4,c00fce8 <__alt_data_end+0xfc00fce8>
 c00fd28:	280d883a 	mov	r6,r5
 c00fd2c:	180b883a 	mov	r5,r3
 c00fd30:	00000706 	br	c00fd50 <putc+0xb0>
 c00fd34:	8009883a 	mov	r4,r16
 c00fd38:	d9400015 	stw	r5,0(sp)
 c00fd3c:	c00d4680 	call	c00d468 <__sinit>
 c00fd40:	d9400017 	ldw	r5,0(sp)
 c00fd44:	003fe106 	br	c00fccc <__alt_data_end+0xfc00fccc>
 c00fd48:	280d883a 	mov	r6,r5
 c00fd4c:	880b883a 	mov	r5,r17
 c00fd50:	8009883a 	mov	r4,r16
 c00fd54:	dfc00317 	ldw	ra,12(sp)
 c00fd58:	dc400217 	ldw	r17,8(sp)
 c00fd5c:	dc000117 	ldw	r16,4(sp)
 c00fd60:	dec00404 	addi	sp,sp,16
 c00fd64:	c0159941 	jmpi	c015994 <__swbuf_r>

0c00fd68 <_realloc_r>:
 c00fd68:	defff604 	addi	sp,sp,-40
 c00fd6c:	dc800215 	stw	r18,8(sp)
 c00fd70:	dfc00915 	stw	ra,36(sp)
 c00fd74:	df000815 	stw	fp,32(sp)
 c00fd78:	ddc00715 	stw	r23,28(sp)
 c00fd7c:	dd800615 	stw	r22,24(sp)
 c00fd80:	dd400515 	stw	r21,20(sp)
 c00fd84:	dd000415 	stw	r20,16(sp)
 c00fd88:	dcc00315 	stw	r19,12(sp)
 c00fd8c:	dc400115 	stw	r17,4(sp)
 c00fd90:	dc000015 	stw	r16,0(sp)
 c00fd94:	3025883a 	mov	r18,r6
 c00fd98:	2800b726 	beq	r5,zero,c010078 <_realloc_r+0x310>
 c00fd9c:	282b883a 	mov	r21,r5
 c00fda0:	2029883a 	mov	r20,r4
 c00fda4:	c01ae800 	call	c01ae80 <__malloc_lock>
 c00fda8:	a8bfff17 	ldw	r2,-4(r21)
 c00fdac:	043fff04 	movi	r16,-4
 c00fdb0:	90c002c4 	addi	r3,r18,11
 c00fdb4:	01000584 	movi	r4,22
 c00fdb8:	acfffe04 	addi	r19,r21,-8
 c00fdbc:	1420703a 	and	r16,r2,r16
 c00fdc0:	20c0332e 	bgeu	r4,r3,c00fe90 <_realloc_r+0x128>
 c00fdc4:	047ffe04 	movi	r17,-8
 c00fdc8:	1c62703a 	and	r17,r3,r17
 c00fdcc:	8807883a 	mov	r3,r17
 c00fdd0:	88005816 	blt	r17,zero,c00ff34 <_realloc_r+0x1cc>
 c00fdd4:	8c805736 	bltu	r17,r18,c00ff34 <_realloc_r+0x1cc>
 c00fdd8:	80c0300e 	bge	r16,r3,c00fe9c <_realloc_r+0x134>
 c00fddc:	070300b4 	movhi	fp,3074
 c00fde0:	e7390e04 	addi	fp,fp,-7112
 c00fde4:	e1c00217 	ldw	r7,8(fp)
 c00fde8:	9c09883a 	add	r4,r19,r16
 c00fdec:	22000117 	ldw	r8,4(r4)
 c00fdf0:	21c06326 	beq	r4,r7,c00ff80 <_realloc_r+0x218>
 c00fdf4:	017fff84 	movi	r5,-2
 c00fdf8:	414a703a 	and	r5,r8,r5
 c00fdfc:	214b883a 	add	r5,r4,r5
 c00fe00:	29800117 	ldw	r6,4(r5)
 c00fe04:	3180004c 	andi	r6,r6,1
 c00fe08:	30003f26 	beq	r6,zero,c00ff08 <_realloc_r+0x1a0>
 c00fe0c:	1080004c 	andi	r2,r2,1
 c00fe10:	10008326 	beq	r2,zero,c010020 <_realloc_r+0x2b8>
 c00fe14:	900b883a 	mov	r5,r18
 c00fe18:	a009883a 	mov	r4,r20
 c00fe1c:	c00478c0 	call	c00478c <_malloc_r>
 c00fe20:	1025883a 	mov	r18,r2
 c00fe24:	10011e26 	beq	r2,zero,c0102a0 <_realloc_r+0x538>
 c00fe28:	a93fff17 	ldw	r4,-4(r21)
 c00fe2c:	10fffe04 	addi	r3,r2,-8
 c00fe30:	00bfff84 	movi	r2,-2
 c00fe34:	2084703a 	and	r2,r4,r2
 c00fe38:	9885883a 	add	r2,r19,r2
 c00fe3c:	1880ee26 	beq	r3,r2,c0101f8 <_realloc_r+0x490>
 c00fe40:	81bfff04 	addi	r6,r16,-4
 c00fe44:	00800904 	movi	r2,36
 c00fe48:	1180b836 	bltu	r2,r6,c01012c <_realloc_r+0x3c4>
 c00fe4c:	00c004c4 	movi	r3,19
 c00fe50:	19809636 	bltu	r3,r6,c0100ac <_realloc_r+0x344>
 c00fe54:	9005883a 	mov	r2,r18
 c00fe58:	a807883a 	mov	r3,r21
 c00fe5c:	19000017 	ldw	r4,0(r3)
 c00fe60:	11000015 	stw	r4,0(r2)
 c00fe64:	19000117 	ldw	r4,4(r3)
 c00fe68:	11000115 	stw	r4,4(r2)
 c00fe6c:	18c00217 	ldw	r3,8(r3)
 c00fe70:	10c00215 	stw	r3,8(r2)
 c00fe74:	a80b883a 	mov	r5,r21
 c00fe78:	a009883a 	mov	r4,r20
 c00fe7c:	c00d84c0 	call	c00d84c <_free_r>
 c00fe80:	a009883a 	mov	r4,r20
 c00fe84:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c00fe88:	9005883a 	mov	r2,r18
 c00fe8c:	00001206 	br	c00fed8 <_realloc_r+0x170>
 c00fe90:	00c00404 	movi	r3,16
 c00fe94:	1823883a 	mov	r17,r3
 c00fe98:	003fce06 	br	c00fdd4 <__alt_data_end+0xfc00fdd4>
 c00fe9c:	a825883a 	mov	r18,r21
 c00fea0:	8445c83a 	sub	r2,r16,r17
 c00fea4:	00c003c4 	movi	r3,15
 c00fea8:	18802636 	bltu	r3,r2,c00ff44 <_realloc_r+0x1dc>
 c00feac:	99800117 	ldw	r6,4(r19)
 c00feb0:	9c07883a 	add	r3,r19,r16
 c00feb4:	3180004c 	andi	r6,r6,1
 c00feb8:	3420b03a 	or	r16,r6,r16
 c00febc:	9c000115 	stw	r16,4(r19)
 c00fec0:	18800117 	ldw	r2,4(r3)
 c00fec4:	10800054 	ori	r2,r2,1
 c00fec8:	18800115 	stw	r2,4(r3)
 c00fecc:	a009883a 	mov	r4,r20
 c00fed0:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c00fed4:	9005883a 	mov	r2,r18
 c00fed8:	dfc00917 	ldw	ra,36(sp)
 c00fedc:	df000817 	ldw	fp,32(sp)
 c00fee0:	ddc00717 	ldw	r23,28(sp)
 c00fee4:	dd800617 	ldw	r22,24(sp)
 c00fee8:	dd400517 	ldw	r21,20(sp)
 c00feec:	dd000417 	ldw	r20,16(sp)
 c00fef0:	dcc00317 	ldw	r19,12(sp)
 c00fef4:	dc800217 	ldw	r18,8(sp)
 c00fef8:	dc400117 	ldw	r17,4(sp)
 c00fefc:	dc000017 	ldw	r16,0(sp)
 c00ff00:	dec00a04 	addi	sp,sp,40
 c00ff04:	f800283a 	ret
 c00ff08:	017fff04 	movi	r5,-4
 c00ff0c:	414a703a 	and	r5,r8,r5
 c00ff10:	814d883a 	add	r6,r16,r5
 c00ff14:	30c01f16 	blt	r6,r3,c00ff94 <_realloc_r+0x22c>
 c00ff18:	20800317 	ldw	r2,12(r4)
 c00ff1c:	20c00217 	ldw	r3,8(r4)
 c00ff20:	a825883a 	mov	r18,r21
 c00ff24:	3021883a 	mov	r16,r6
 c00ff28:	18800315 	stw	r2,12(r3)
 c00ff2c:	10c00215 	stw	r3,8(r2)
 c00ff30:	003fdb06 	br	c00fea0 <__alt_data_end+0xfc00fea0>
 c00ff34:	00800304 	movi	r2,12
 c00ff38:	a0800015 	stw	r2,0(r20)
 c00ff3c:	0005883a 	mov	r2,zero
 c00ff40:	003fe506 	br	c00fed8 <__alt_data_end+0xfc00fed8>
 c00ff44:	98c00117 	ldw	r3,4(r19)
 c00ff48:	9c4b883a 	add	r5,r19,r17
 c00ff4c:	11000054 	ori	r4,r2,1
 c00ff50:	18c0004c 	andi	r3,r3,1
 c00ff54:	1c62b03a 	or	r17,r3,r17
 c00ff58:	9c400115 	stw	r17,4(r19)
 c00ff5c:	29000115 	stw	r4,4(r5)
 c00ff60:	2885883a 	add	r2,r5,r2
 c00ff64:	10c00117 	ldw	r3,4(r2)
 c00ff68:	29400204 	addi	r5,r5,8
 c00ff6c:	a009883a 	mov	r4,r20
 c00ff70:	18c00054 	ori	r3,r3,1
 c00ff74:	10c00115 	stw	r3,4(r2)
 c00ff78:	c00d84c0 	call	c00d84c <_free_r>
 c00ff7c:	003fd306 	br	c00fecc <__alt_data_end+0xfc00fecc>
 c00ff80:	017fff04 	movi	r5,-4
 c00ff84:	414a703a 	and	r5,r8,r5
 c00ff88:	89800404 	addi	r6,r17,16
 c00ff8c:	8151883a 	add	r8,r16,r5
 c00ff90:	4180590e 	bge	r8,r6,c0100f8 <_realloc_r+0x390>
 c00ff94:	1080004c 	andi	r2,r2,1
 c00ff98:	103f9e1e 	bne	r2,zero,c00fe14 <__alt_data_end+0xfc00fe14>
 c00ff9c:	adbffe17 	ldw	r22,-8(r21)
 c00ffa0:	00bfff04 	movi	r2,-4
 c00ffa4:	9dadc83a 	sub	r22,r19,r22
 c00ffa8:	b1800117 	ldw	r6,4(r22)
 c00ffac:	3084703a 	and	r2,r6,r2
 c00ffb0:	20002026 	beq	r4,zero,c010034 <_realloc_r+0x2cc>
 c00ffb4:	80af883a 	add	r23,r16,r2
 c00ffb8:	b96f883a 	add	r23,r23,r5
 c00ffbc:	21c05f26 	beq	r4,r7,c01013c <_realloc_r+0x3d4>
 c00ffc0:	b8c01c16 	blt	r23,r3,c010034 <_realloc_r+0x2cc>
 c00ffc4:	20800317 	ldw	r2,12(r4)
 c00ffc8:	20c00217 	ldw	r3,8(r4)
 c00ffcc:	81bfff04 	addi	r6,r16,-4
 c00ffd0:	01000904 	movi	r4,36
 c00ffd4:	18800315 	stw	r2,12(r3)
 c00ffd8:	10c00215 	stw	r3,8(r2)
 c00ffdc:	b0c00217 	ldw	r3,8(r22)
 c00ffe0:	b0800317 	ldw	r2,12(r22)
 c00ffe4:	b4800204 	addi	r18,r22,8
 c00ffe8:	18800315 	stw	r2,12(r3)
 c00ffec:	10c00215 	stw	r3,8(r2)
 c00fff0:	21801b36 	bltu	r4,r6,c010060 <_realloc_r+0x2f8>
 c00fff4:	008004c4 	movi	r2,19
 c00fff8:	1180352e 	bgeu	r2,r6,c0100d0 <_realloc_r+0x368>
 c00fffc:	a8800017 	ldw	r2,0(r21)
 c010000:	b0800215 	stw	r2,8(r22)
 c010004:	a8800117 	ldw	r2,4(r21)
 c010008:	b0800315 	stw	r2,12(r22)
 c01000c:	008006c4 	movi	r2,27
 c010010:	11807f36 	bltu	r2,r6,c010210 <_realloc_r+0x4a8>
 c010014:	b0800404 	addi	r2,r22,16
 c010018:	ad400204 	addi	r21,r21,8
 c01001c:	00002d06 	br	c0100d4 <_realloc_r+0x36c>
 c010020:	adbffe17 	ldw	r22,-8(r21)
 c010024:	00bfff04 	movi	r2,-4
 c010028:	9dadc83a 	sub	r22,r19,r22
 c01002c:	b1000117 	ldw	r4,4(r22)
 c010030:	2084703a 	and	r2,r4,r2
 c010034:	b03f7726 	beq	r22,zero,c00fe14 <__alt_data_end+0xfc00fe14>
 c010038:	80af883a 	add	r23,r16,r2
 c01003c:	b8ff7516 	blt	r23,r3,c00fe14 <__alt_data_end+0xfc00fe14>
 c010040:	b0800317 	ldw	r2,12(r22)
 c010044:	b0c00217 	ldw	r3,8(r22)
 c010048:	81bfff04 	addi	r6,r16,-4
 c01004c:	01000904 	movi	r4,36
 c010050:	18800315 	stw	r2,12(r3)
 c010054:	10c00215 	stw	r3,8(r2)
 c010058:	b4800204 	addi	r18,r22,8
 c01005c:	21bfe52e 	bgeu	r4,r6,c00fff4 <__alt_data_end+0xfc00fff4>
 c010060:	a80b883a 	mov	r5,r21
 c010064:	9009883a 	mov	r4,r18
 c010068:	c00e8c40 	call	c00e8c4 <memmove>
 c01006c:	b821883a 	mov	r16,r23
 c010070:	b027883a 	mov	r19,r22
 c010074:	003f8a06 	br	c00fea0 <__alt_data_end+0xfc00fea0>
 c010078:	300b883a 	mov	r5,r6
 c01007c:	dfc00917 	ldw	ra,36(sp)
 c010080:	df000817 	ldw	fp,32(sp)
 c010084:	ddc00717 	ldw	r23,28(sp)
 c010088:	dd800617 	ldw	r22,24(sp)
 c01008c:	dd400517 	ldw	r21,20(sp)
 c010090:	dd000417 	ldw	r20,16(sp)
 c010094:	dcc00317 	ldw	r19,12(sp)
 c010098:	dc800217 	ldw	r18,8(sp)
 c01009c:	dc400117 	ldw	r17,4(sp)
 c0100a0:	dc000017 	ldw	r16,0(sp)
 c0100a4:	dec00a04 	addi	sp,sp,40
 c0100a8:	c00478c1 	jmpi	c00478c <_malloc_r>
 c0100ac:	a8c00017 	ldw	r3,0(r21)
 c0100b0:	90c00015 	stw	r3,0(r18)
 c0100b4:	a8c00117 	ldw	r3,4(r21)
 c0100b8:	90c00115 	stw	r3,4(r18)
 c0100bc:	00c006c4 	movi	r3,27
 c0100c0:	19804536 	bltu	r3,r6,c0101d8 <_realloc_r+0x470>
 c0100c4:	90800204 	addi	r2,r18,8
 c0100c8:	a8c00204 	addi	r3,r21,8
 c0100cc:	003f6306 	br	c00fe5c <__alt_data_end+0xfc00fe5c>
 c0100d0:	9005883a 	mov	r2,r18
 c0100d4:	a8c00017 	ldw	r3,0(r21)
 c0100d8:	b821883a 	mov	r16,r23
 c0100dc:	b027883a 	mov	r19,r22
 c0100e0:	10c00015 	stw	r3,0(r2)
 c0100e4:	a8c00117 	ldw	r3,4(r21)
 c0100e8:	10c00115 	stw	r3,4(r2)
 c0100ec:	a8c00217 	ldw	r3,8(r21)
 c0100f0:	10c00215 	stw	r3,8(r2)
 c0100f4:	003f6a06 	br	c00fea0 <__alt_data_end+0xfc00fea0>
 c0100f8:	9c67883a 	add	r19,r19,r17
 c0100fc:	4445c83a 	sub	r2,r8,r17
 c010100:	e4c00215 	stw	r19,8(fp)
 c010104:	10800054 	ori	r2,r2,1
 c010108:	98800115 	stw	r2,4(r19)
 c01010c:	a8bfff17 	ldw	r2,-4(r21)
 c010110:	a009883a 	mov	r4,r20
 c010114:	1080004c 	andi	r2,r2,1
 c010118:	1462b03a 	or	r17,r2,r17
 c01011c:	ac7fff15 	stw	r17,-4(r21)
 c010120:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c010124:	a805883a 	mov	r2,r21
 c010128:	003f6b06 	br	c00fed8 <__alt_data_end+0xfc00fed8>
 c01012c:	a80b883a 	mov	r5,r21
 c010130:	9009883a 	mov	r4,r18
 c010134:	c00e8c40 	call	c00e8c4 <memmove>
 c010138:	003f4e06 	br	c00fe74 <__alt_data_end+0xfc00fe74>
 c01013c:	89000404 	addi	r4,r17,16
 c010140:	b93fbc16 	blt	r23,r4,c010034 <__alt_data_end+0xfc010034>
 c010144:	b0800317 	ldw	r2,12(r22)
 c010148:	b0c00217 	ldw	r3,8(r22)
 c01014c:	81bfff04 	addi	r6,r16,-4
 c010150:	01000904 	movi	r4,36
 c010154:	18800315 	stw	r2,12(r3)
 c010158:	10c00215 	stw	r3,8(r2)
 c01015c:	b4800204 	addi	r18,r22,8
 c010160:	21804336 	bltu	r4,r6,c010270 <_realloc_r+0x508>
 c010164:	008004c4 	movi	r2,19
 c010168:	11803f2e 	bgeu	r2,r6,c010268 <_realloc_r+0x500>
 c01016c:	a8800017 	ldw	r2,0(r21)
 c010170:	b0800215 	stw	r2,8(r22)
 c010174:	a8800117 	ldw	r2,4(r21)
 c010178:	b0800315 	stw	r2,12(r22)
 c01017c:	008006c4 	movi	r2,27
 c010180:	11803f36 	bltu	r2,r6,c010280 <_realloc_r+0x518>
 c010184:	b0800404 	addi	r2,r22,16
 c010188:	ad400204 	addi	r21,r21,8
 c01018c:	a8c00017 	ldw	r3,0(r21)
 c010190:	10c00015 	stw	r3,0(r2)
 c010194:	a8c00117 	ldw	r3,4(r21)
 c010198:	10c00115 	stw	r3,4(r2)
 c01019c:	a8c00217 	ldw	r3,8(r21)
 c0101a0:	10c00215 	stw	r3,8(r2)
 c0101a4:	b447883a 	add	r3,r22,r17
 c0101a8:	bc45c83a 	sub	r2,r23,r17
 c0101ac:	e0c00215 	stw	r3,8(fp)
 c0101b0:	10800054 	ori	r2,r2,1
 c0101b4:	18800115 	stw	r2,4(r3)
 c0101b8:	b0800117 	ldw	r2,4(r22)
 c0101bc:	a009883a 	mov	r4,r20
 c0101c0:	1080004c 	andi	r2,r2,1
 c0101c4:	1462b03a 	or	r17,r2,r17
 c0101c8:	b4400115 	stw	r17,4(r22)
 c0101cc:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c0101d0:	9005883a 	mov	r2,r18
 c0101d4:	003f4006 	br	c00fed8 <__alt_data_end+0xfc00fed8>
 c0101d8:	a8c00217 	ldw	r3,8(r21)
 c0101dc:	90c00215 	stw	r3,8(r18)
 c0101e0:	a8c00317 	ldw	r3,12(r21)
 c0101e4:	90c00315 	stw	r3,12(r18)
 c0101e8:	30801126 	beq	r6,r2,c010230 <_realloc_r+0x4c8>
 c0101ec:	90800404 	addi	r2,r18,16
 c0101f0:	a8c00404 	addi	r3,r21,16
 c0101f4:	003f1906 	br	c00fe5c <__alt_data_end+0xfc00fe5c>
 c0101f8:	90ffff17 	ldw	r3,-4(r18)
 c0101fc:	00bfff04 	movi	r2,-4
 c010200:	a825883a 	mov	r18,r21
 c010204:	1884703a 	and	r2,r3,r2
 c010208:	80a1883a 	add	r16,r16,r2
 c01020c:	003f2406 	br	c00fea0 <__alt_data_end+0xfc00fea0>
 c010210:	a8800217 	ldw	r2,8(r21)
 c010214:	b0800415 	stw	r2,16(r22)
 c010218:	a8800317 	ldw	r2,12(r21)
 c01021c:	b0800515 	stw	r2,20(r22)
 c010220:	31000a26 	beq	r6,r4,c01024c <_realloc_r+0x4e4>
 c010224:	b0800604 	addi	r2,r22,24
 c010228:	ad400404 	addi	r21,r21,16
 c01022c:	003fa906 	br	c0100d4 <__alt_data_end+0xfc0100d4>
 c010230:	a9000417 	ldw	r4,16(r21)
 c010234:	90800604 	addi	r2,r18,24
 c010238:	a8c00604 	addi	r3,r21,24
 c01023c:	91000415 	stw	r4,16(r18)
 c010240:	a9000517 	ldw	r4,20(r21)
 c010244:	91000515 	stw	r4,20(r18)
 c010248:	003f0406 	br	c00fe5c <__alt_data_end+0xfc00fe5c>
 c01024c:	a8c00417 	ldw	r3,16(r21)
 c010250:	ad400604 	addi	r21,r21,24
 c010254:	b0800804 	addi	r2,r22,32
 c010258:	b0c00615 	stw	r3,24(r22)
 c01025c:	a8ffff17 	ldw	r3,-4(r21)
 c010260:	b0c00715 	stw	r3,28(r22)
 c010264:	003f9b06 	br	c0100d4 <__alt_data_end+0xfc0100d4>
 c010268:	9005883a 	mov	r2,r18
 c01026c:	003fc706 	br	c01018c <__alt_data_end+0xfc01018c>
 c010270:	a80b883a 	mov	r5,r21
 c010274:	9009883a 	mov	r4,r18
 c010278:	c00e8c40 	call	c00e8c4 <memmove>
 c01027c:	003fc906 	br	c0101a4 <__alt_data_end+0xfc0101a4>
 c010280:	a8800217 	ldw	r2,8(r21)
 c010284:	b0800415 	stw	r2,16(r22)
 c010288:	a8800317 	ldw	r2,12(r21)
 c01028c:	b0800515 	stw	r2,20(r22)
 c010290:	31000726 	beq	r6,r4,c0102b0 <_realloc_r+0x548>
 c010294:	b0800604 	addi	r2,r22,24
 c010298:	ad400404 	addi	r21,r21,16
 c01029c:	003fbb06 	br	c01018c <__alt_data_end+0xfc01018c>
 c0102a0:	a009883a 	mov	r4,r20
 c0102a4:	c01aea40 	call	c01aea4 <__malloc_unlock>
 c0102a8:	0005883a 	mov	r2,zero
 c0102ac:	003f0a06 	br	c00fed8 <__alt_data_end+0xfc00fed8>
 c0102b0:	a8c00417 	ldw	r3,16(r21)
 c0102b4:	ad400604 	addi	r21,r21,24
 c0102b8:	b0800804 	addi	r2,r22,32
 c0102bc:	b0c00615 	stw	r3,24(r22)
 c0102c0:	a8ffff17 	ldw	r3,-4(r21)
 c0102c4:	b0c00715 	stw	r3,28(r22)
 c0102c8:	003fb006 	br	c01018c <__alt_data_end+0xfc01018c>

0c0102cc <lflush>:
 c0102cc:	2080030b 	ldhu	r2,12(r4)
 c0102d0:	00c00244 	movi	r3,9
 c0102d4:	1080024c 	andi	r2,r2,9
 c0102d8:	10c00226 	beq	r2,r3,c0102e4 <lflush+0x18>
 c0102dc:	0005883a 	mov	r2,zero
 c0102e0:	f800283a 	ret
 c0102e4:	c00d0d81 	jmpi	c00d0d8 <fflush>

0c0102e8 <__srefill_r>:
 c0102e8:	defffc04 	addi	sp,sp,-16
 c0102ec:	dc400115 	stw	r17,4(sp)
 c0102f0:	dc000015 	stw	r16,0(sp)
 c0102f4:	dfc00315 	stw	ra,12(sp)
 c0102f8:	dc800215 	stw	r18,8(sp)
 c0102fc:	2023883a 	mov	r17,r4
 c010300:	2821883a 	mov	r16,r5
 c010304:	20000226 	beq	r4,zero,c010310 <__srefill_r+0x28>
 c010308:	20800e17 	ldw	r2,56(r4)
 c01030c:	10003c26 	beq	r2,zero,c010400 <__srefill_r+0x118>
 c010310:	80c0030b 	ldhu	r3,12(r16)
 c010314:	1908000c 	andi	r4,r3,8192
 c010318:	1805883a 	mov	r2,r3
 c01031c:	2000071e 	bne	r4,zero,c01033c <__srefill_r+0x54>
 c010320:	81001917 	ldw	r4,100(r16)
 c010324:	18880014 	ori	r2,r3,8192
 c010328:	00f7ffc4 	movi	r3,-8193
 c01032c:	20c8703a 	and	r4,r4,r3
 c010330:	8080030d 	sth	r2,12(r16)
 c010334:	1007883a 	mov	r3,r2
 c010338:	81001915 	stw	r4,100(r16)
 c01033c:	80000115 	stw	zero,4(r16)
 c010340:	1100080c 	andi	r4,r2,32
 c010344:	2000571e 	bne	r4,zero,c0104a4 <__srefill_r+0x1bc>
 c010348:	1100010c 	andi	r4,r2,4
 c01034c:	20001f26 	beq	r4,zero,c0103cc <__srefill_r+0xe4>
 c010350:	81400c17 	ldw	r5,48(r16)
 c010354:	28000826 	beq	r5,zero,c010378 <__srefill_r+0x90>
 c010358:	80801004 	addi	r2,r16,64
 c01035c:	28800226 	beq	r5,r2,c010368 <__srefill_r+0x80>
 c010360:	8809883a 	mov	r4,r17
 c010364:	c00d84c0 	call	c00d84c <_free_r>
 c010368:	80800f17 	ldw	r2,60(r16)
 c01036c:	80000c15 	stw	zero,48(r16)
 c010370:	80800115 	stw	r2,4(r16)
 c010374:	1000391e 	bne	r2,zero,c01045c <__srefill_r+0x174>
 c010378:	80800417 	ldw	r2,16(r16)
 c01037c:	10004b26 	beq	r2,zero,c0104ac <__srefill_r+0x1c4>
 c010380:	8480030b 	ldhu	r18,12(r16)
 c010384:	908000cc 	andi	r2,r18,3
 c010388:	10001f1e 	bne	r2,zero,c010408 <__srefill_r+0x120>
 c01038c:	81800417 	ldw	r6,16(r16)
 c010390:	80800817 	ldw	r2,32(r16)
 c010394:	81c00517 	ldw	r7,20(r16)
 c010398:	81400717 	ldw	r5,28(r16)
 c01039c:	81800015 	stw	r6,0(r16)
 c0103a0:	8809883a 	mov	r4,r17
 c0103a4:	103ee83a 	callr	r2
 c0103a8:	80800115 	stw	r2,4(r16)
 c0103ac:	00800e0e 	bge	zero,r2,c0103e8 <__srefill_r+0x100>
 c0103b0:	0005883a 	mov	r2,zero
 c0103b4:	dfc00317 	ldw	ra,12(sp)
 c0103b8:	dc800217 	ldw	r18,8(sp)
 c0103bc:	dc400117 	ldw	r17,4(sp)
 c0103c0:	dc000017 	ldw	r16,0(sp)
 c0103c4:	dec00404 	addi	sp,sp,16
 c0103c8:	f800283a 	ret
 c0103cc:	1100040c 	andi	r4,r2,16
 c0103d0:	20003026 	beq	r4,zero,c010494 <__srefill_r+0x1ac>
 c0103d4:	1080020c 	andi	r2,r2,8
 c0103d8:	1000241e 	bne	r2,zero,c01046c <__srefill_r+0x184>
 c0103dc:	18c00114 	ori	r3,r3,4
 c0103e0:	80c0030d 	sth	r3,12(r16)
 c0103e4:	003fe406 	br	c010378 <__alt_data_end+0xfc010378>
 c0103e8:	80c0030b 	ldhu	r3,12(r16)
 c0103ec:	1000161e 	bne	r2,zero,c010448 <__srefill_r+0x160>
 c0103f0:	18c00814 	ori	r3,r3,32
 c0103f4:	00bfffc4 	movi	r2,-1
 c0103f8:	80c0030d 	sth	r3,12(r16)
 c0103fc:	003fed06 	br	c0103b4 <__alt_data_end+0xfc0103b4>
 c010400:	c00d4680 	call	c00d468 <__sinit>
 c010404:	003fc206 	br	c010310 <__alt_data_end+0xfc010310>
 c010408:	008300b4 	movhi	r2,3074
 c01040c:	10bfc204 	addi	r2,r2,-248
 c010410:	11000017 	ldw	r4,0(r2)
 c010414:	01430074 	movhi	r5,3073
 c010418:	00800044 	movi	r2,1
 c01041c:	2940b304 	addi	r5,r5,716
 c010420:	8080030d 	sth	r2,12(r16)
 c010424:	c00e0240 	call	c00e024 <_fwalk>
 c010428:	00800244 	movi	r2,9
 c01042c:	8480030d 	sth	r18,12(r16)
 c010430:	9480024c 	andi	r18,r18,9
 c010434:	90bfd51e 	bne	r18,r2,c01038c <__alt_data_end+0xfc01038c>
 c010438:	800b883a 	mov	r5,r16
 c01043c:	8809883a 	mov	r4,r17
 c010440:	c00ce600 	call	c00ce60 <__sflush_r>
 c010444:	003fd106 	br	c01038c <__alt_data_end+0xfc01038c>
 c010448:	18c01014 	ori	r3,r3,64
 c01044c:	80000115 	stw	zero,4(r16)
 c010450:	00bfffc4 	movi	r2,-1
 c010454:	80c0030d 	sth	r3,12(r16)
 c010458:	003fd606 	br	c0103b4 <__alt_data_end+0xfc0103b4>
 c01045c:	80c00e17 	ldw	r3,56(r16)
 c010460:	0005883a 	mov	r2,zero
 c010464:	80c00015 	stw	r3,0(r16)
 c010468:	003fd206 	br	c0103b4 <__alt_data_end+0xfc0103b4>
 c01046c:	800b883a 	mov	r5,r16
 c010470:	8809883a 	mov	r4,r17
 c010474:	c00d07c0 	call	c00d07c <_fflush_r>
 c010478:	10000a1e 	bne	r2,zero,c0104a4 <__srefill_r+0x1bc>
 c01047c:	8080030b 	ldhu	r2,12(r16)
 c010480:	00fffdc4 	movi	r3,-9
 c010484:	80000215 	stw	zero,8(r16)
 c010488:	1886703a 	and	r3,r3,r2
 c01048c:	80000615 	stw	zero,24(r16)
 c010490:	003fd206 	br	c0103dc <__alt_data_end+0xfc0103dc>
 c010494:	00800244 	movi	r2,9
 c010498:	88800015 	stw	r2,0(r17)
 c01049c:	18c01014 	ori	r3,r3,64
 c0104a0:	80c0030d 	sth	r3,12(r16)
 c0104a4:	00bfffc4 	movi	r2,-1
 c0104a8:	003fc206 	br	c0103b4 <__alt_data_end+0xfc0103b4>
 c0104ac:	800b883a 	mov	r5,r16
 c0104b0:	8809883a 	mov	r4,r17
 c0104b4:	c00e2b80 	call	c00e2b8 <__smakebuf_r>
 c0104b8:	003fb106 	br	c010380 <__alt_data_end+0xfc010380>

0c0104bc <__fpclassifyd>:
 c0104bc:	00a00034 	movhi	r2,32768
 c0104c0:	10bfffc4 	addi	r2,r2,-1
 c0104c4:	2884703a 	and	r2,r5,r2
 c0104c8:	10000726 	beq	r2,zero,c0104e8 <__fpclassifyd+0x2c>
 c0104cc:	00fffc34 	movhi	r3,65520
 c0104d0:	019ff834 	movhi	r6,32736
 c0104d4:	28c7883a 	add	r3,r5,r3
 c0104d8:	31bfffc4 	addi	r6,r6,-1
 c0104dc:	30c00536 	bltu	r6,r3,c0104f4 <__fpclassifyd+0x38>
 c0104e0:	00800104 	movi	r2,4
 c0104e4:	f800283a 	ret
 c0104e8:	2000021e 	bne	r4,zero,c0104f4 <__fpclassifyd+0x38>
 c0104ec:	00800084 	movi	r2,2
 c0104f0:	f800283a 	ret
 c0104f4:	00dffc34 	movhi	r3,32752
 c0104f8:	019ff834 	movhi	r6,32736
 c0104fc:	28cb883a 	add	r5,r5,r3
 c010500:	31bfffc4 	addi	r6,r6,-1
 c010504:	317ff62e 	bgeu	r6,r5,c0104e0 <__alt_data_end+0xfc0104e0>
 c010508:	01400434 	movhi	r5,16
 c01050c:	297fffc4 	addi	r5,r5,-1
 c010510:	28800236 	bltu	r5,r2,c01051c <__fpclassifyd+0x60>
 c010514:	008000c4 	movi	r2,3
 c010518:	f800283a 	ret
 c01051c:	10c00226 	beq	r2,r3,c010528 <__fpclassifyd+0x6c>
 c010520:	0005883a 	mov	r2,zero
 c010524:	f800283a 	ret
 c010528:	2005003a 	cmpeq	r2,r4,zero
 c01052c:	f800283a 	ret

0c010530 <__sccl>:
 c010530:	2a000003 	ldbu	r8,0(r5)
 c010534:	00801784 	movi	r2,94
 c010538:	40802a26 	beq	r8,r2,c0105e4 <__sccl+0xb4>
 c01053c:	29400044 	addi	r5,r5,1
 c010540:	000f883a 	mov	r7,zero
 c010544:	0013883a 	mov	r9,zero
 c010548:	2007883a 	mov	r3,r4
 c01054c:	21804004 	addi	r6,r4,256
 c010550:	19c00005 	stb	r7,0(r3)
 c010554:	18c00044 	addi	r3,r3,1
 c010558:	19bffd1e 	bne	r3,r6,c010550 <__alt_data_end+0xfc010550>
 c01055c:	40001126 	beq	r8,zero,c0105a4 <__sccl+0x74>
 c010560:	00800044 	movi	r2,1
 c010564:	124fc83a 	sub	r7,r2,r9
 c010568:	02800b44 	movi	r10,45
 c01056c:	02c01744 	movi	r11,93
 c010570:	2205883a 	add	r2,r4,r8
 c010574:	11c00005 	stb	r7,0(r2)
 c010578:	28800044 	addi	r2,r5,1
 c01057c:	28c00003 	ldbu	r3,0(r5)
 c010580:	1a800a26 	beq	r3,r10,c0105ac <__sccl+0x7c>
 c010584:	1ac00426 	beq	r3,r11,c010598 <__sccl+0x68>
 c010588:	18000426 	beq	r3,zero,c01059c <__sccl+0x6c>
 c01058c:	1811883a 	mov	r8,r3
 c010590:	100b883a 	mov	r5,r2
 c010594:	003ff606 	br	c010570 <__alt_data_end+0xfc010570>
 c010598:	f800283a 	ret
 c01059c:	2805883a 	mov	r2,r5
 c0105a0:	f800283a 	ret
 c0105a4:	28bfffc4 	addi	r2,r5,-1
 c0105a8:	f800283a 	ret
 c0105ac:	12400003 	ldbu	r9,0(r2)
 c0105b0:	4ac01126 	beq	r9,r11,c0105f8 <__sccl+0xc8>
 c0105b4:	4a001016 	blt	r9,r8,c0105f8 <__sccl+0xc8>
 c0105b8:	41800044 	addi	r6,r8,1
 c0105bc:	29400084 	addi	r5,r5,2
 c0105c0:	2187883a 	add	r3,r4,r6
 c0105c4:	00000106 	br	c0105cc <__sccl+0x9c>
 c0105c8:	31800044 	addi	r6,r6,1
 c0105cc:	19c00005 	stb	r7,0(r3)
 c0105d0:	3011883a 	mov	r8,r6
 c0105d4:	18c00044 	addi	r3,r3,1
 c0105d8:	327ffb16 	blt	r6,r9,c0105c8 <__alt_data_end+0xfc0105c8>
 c0105dc:	10800084 	addi	r2,r2,2
 c0105e0:	003fe606 	br	c01057c <__alt_data_end+0xfc01057c>
 c0105e4:	2a000043 	ldbu	r8,1(r5)
 c0105e8:	01c00044 	movi	r7,1
 c0105ec:	29400084 	addi	r5,r5,2
 c0105f0:	02400044 	movi	r9,1
 c0105f4:	003fd406 	br	c010548 <__alt_data_end+0xfc010548>
 c0105f8:	5011883a 	mov	r8,r10
 c0105fc:	003fe406 	br	c010590 <__alt_data_end+0xfc010590>

0c010600 <nanf>:
 c010600:	009ff034 	movhi	r2,32704
 c010604:	f800283a 	ret

0c010608 <__sread>:
 c010608:	defffe04 	addi	sp,sp,-8
 c01060c:	dc000015 	stw	r16,0(sp)
 c010610:	2821883a 	mov	r16,r5
 c010614:	2940038f 	ldh	r5,14(r5)
 c010618:	dfc00115 	stw	ra,4(sp)
 c01061c:	c016c440 	call	c016c44 <_read_r>
 c010620:	10000716 	blt	r2,zero,c010640 <__sread+0x38>
 c010624:	80c01417 	ldw	r3,80(r16)
 c010628:	1887883a 	add	r3,r3,r2
 c01062c:	80c01415 	stw	r3,80(r16)
 c010630:	dfc00117 	ldw	ra,4(sp)
 c010634:	dc000017 	ldw	r16,0(sp)
 c010638:	dec00204 	addi	sp,sp,8
 c01063c:	f800283a 	ret
 c010640:	80c0030b 	ldhu	r3,12(r16)
 c010644:	18fbffcc 	andi	r3,r3,61439
 c010648:	80c0030d 	sth	r3,12(r16)
 c01064c:	dfc00117 	ldw	ra,4(sp)
 c010650:	dc000017 	ldw	r16,0(sp)
 c010654:	dec00204 	addi	sp,sp,8
 c010658:	f800283a 	ret

0c01065c <__seofread>:
 c01065c:	0005883a 	mov	r2,zero
 c010660:	f800283a 	ret

0c010664 <__swrite>:
 c010664:	2880030b 	ldhu	r2,12(r5)
 c010668:	defffb04 	addi	sp,sp,-20
 c01066c:	dcc00315 	stw	r19,12(sp)
 c010670:	dc800215 	stw	r18,8(sp)
 c010674:	dc400115 	stw	r17,4(sp)
 c010678:	dc000015 	stw	r16,0(sp)
 c01067c:	dfc00415 	stw	ra,16(sp)
 c010680:	10c0400c 	andi	r3,r2,256
 c010684:	2821883a 	mov	r16,r5
 c010688:	2023883a 	mov	r17,r4
 c01068c:	3025883a 	mov	r18,r6
 c010690:	3827883a 	mov	r19,r7
 c010694:	18000526 	beq	r3,zero,c0106ac <__swrite+0x48>
 c010698:	2940038f 	ldh	r5,14(r5)
 c01069c:	01c00084 	movi	r7,2
 c0106a0:	000d883a 	mov	r6,zero
 c0106a4:	c016be40 	call	c016be4 <_lseek_r>
 c0106a8:	8080030b 	ldhu	r2,12(r16)
 c0106ac:	8140038f 	ldh	r5,14(r16)
 c0106b0:	10bbffcc 	andi	r2,r2,61439
 c0106b4:	980f883a 	mov	r7,r19
 c0106b8:	900d883a 	mov	r6,r18
 c0106bc:	8809883a 	mov	r4,r17
 c0106c0:	8080030d 	sth	r2,12(r16)
 c0106c4:	dfc00417 	ldw	ra,16(sp)
 c0106c8:	dcc00317 	ldw	r19,12(sp)
 c0106cc:	dc800217 	ldw	r18,8(sp)
 c0106d0:	dc400117 	ldw	r17,4(sp)
 c0106d4:	dc000017 	ldw	r16,0(sp)
 c0106d8:	dec00504 	addi	sp,sp,20
 c0106dc:	c015aec1 	jmpi	c015aec <_write_r>

0c0106e0 <__sseek>:
 c0106e0:	defffe04 	addi	sp,sp,-8
 c0106e4:	dc000015 	stw	r16,0(sp)
 c0106e8:	2821883a 	mov	r16,r5
 c0106ec:	2940038f 	ldh	r5,14(r5)
 c0106f0:	dfc00115 	stw	ra,4(sp)
 c0106f4:	c016be40 	call	c016be4 <_lseek_r>
 c0106f8:	00ffffc4 	movi	r3,-1
 c0106fc:	10c00826 	beq	r2,r3,c010720 <__sseek+0x40>
 c010700:	80c0030b 	ldhu	r3,12(r16)
 c010704:	80801415 	stw	r2,80(r16)
 c010708:	18c40014 	ori	r3,r3,4096
 c01070c:	80c0030d 	sth	r3,12(r16)
 c010710:	dfc00117 	ldw	ra,4(sp)
 c010714:	dc000017 	ldw	r16,0(sp)
 c010718:	dec00204 	addi	sp,sp,8
 c01071c:	f800283a 	ret
 c010720:	80c0030b 	ldhu	r3,12(r16)
 c010724:	18fbffcc 	andi	r3,r3,61439
 c010728:	80c0030d 	sth	r3,12(r16)
 c01072c:	dfc00117 	ldw	ra,4(sp)
 c010730:	dc000017 	ldw	r16,0(sp)
 c010734:	dec00204 	addi	sp,sp,8
 c010738:	f800283a 	ret

0c01073c <__sclose>:
 c01073c:	2940038f 	ldh	r5,14(r5)
 c010740:	c015b4c1 	jmpi	c015b4c <_close_r>

0c010744 <strcmp>:
 c010744:	2144b03a 	or	r2,r4,r5
 c010748:	108000cc 	andi	r2,r2,3
 c01074c:	1000171e 	bne	r2,zero,c0107ac <strcmp+0x68>
 c010750:	20800017 	ldw	r2,0(r4)
 c010754:	28c00017 	ldw	r3,0(r5)
 c010758:	10c0141e 	bne	r2,r3,c0107ac <strcmp+0x68>
 c01075c:	027fbff4 	movhi	r9,65279
 c010760:	4a7fbfc4 	addi	r9,r9,-257
 c010764:	0086303a 	nor	r3,zero,r2
 c010768:	02202074 	movhi	r8,32897
 c01076c:	1245883a 	add	r2,r2,r9
 c010770:	42202004 	addi	r8,r8,-32640
 c010774:	10c4703a 	and	r2,r2,r3
 c010778:	1204703a 	and	r2,r2,r8
 c01077c:	10000226 	beq	r2,zero,c010788 <strcmp+0x44>
 c010780:	00002306 	br	c010810 <strcmp+0xcc>
 c010784:	1000221e 	bne	r2,zero,c010810 <strcmp+0xcc>
 c010788:	21000104 	addi	r4,r4,4
 c01078c:	20c00017 	ldw	r3,0(r4)
 c010790:	29400104 	addi	r5,r5,4
 c010794:	29800017 	ldw	r6,0(r5)
 c010798:	1a4f883a 	add	r7,r3,r9
 c01079c:	00c4303a 	nor	r2,zero,r3
 c0107a0:	3884703a 	and	r2,r7,r2
 c0107a4:	1204703a 	and	r2,r2,r8
 c0107a8:	19bff626 	beq	r3,r6,c010784 <__alt_data_end+0xfc010784>
 c0107ac:	20800003 	ldbu	r2,0(r4)
 c0107b0:	10c03fcc 	andi	r3,r2,255
 c0107b4:	18c0201c 	xori	r3,r3,128
 c0107b8:	18ffe004 	addi	r3,r3,-128
 c0107bc:	18000c26 	beq	r3,zero,c0107f0 <strcmp+0xac>
 c0107c0:	29800007 	ldb	r6,0(r5)
 c0107c4:	19800326 	beq	r3,r6,c0107d4 <strcmp+0x90>
 c0107c8:	00001306 	br	c010818 <strcmp+0xd4>
 c0107cc:	29800007 	ldb	r6,0(r5)
 c0107d0:	11800b1e 	bne	r2,r6,c010800 <strcmp+0xbc>
 c0107d4:	21000044 	addi	r4,r4,1
 c0107d8:	20c00003 	ldbu	r3,0(r4)
 c0107dc:	29400044 	addi	r5,r5,1
 c0107e0:	18803fcc 	andi	r2,r3,255
 c0107e4:	1080201c 	xori	r2,r2,128
 c0107e8:	10bfe004 	addi	r2,r2,-128
 c0107ec:	103ff71e 	bne	r2,zero,c0107cc <__alt_data_end+0xfc0107cc>
 c0107f0:	0007883a 	mov	r3,zero
 c0107f4:	28800003 	ldbu	r2,0(r5)
 c0107f8:	1885c83a 	sub	r2,r3,r2
 c0107fc:	f800283a 	ret
 c010800:	28800003 	ldbu	r2,0(r5)
 c010804:	18c03fcc 	andi	r3,r3,255
 c010808:	1885c83a 	sub	r2,r3,r2
 c01080c:	f800283a 	ret
 c010810:	0005883a 	mov	r2,zero
 c010814:	f800283a 	ret
 c010818:	10c03fcc 	andi	r3,r2,255
 c01081c:	003ff506 	br	c0107f4 <__alt_data_end+0xfc0107f4>

0c010820 <sulp>:
 c010820:	defffd04 	addi	sp,sp,-12
 c010824:	dc400115 	stw	r17,4(sp)
 c010828:	3023883a 	mov	r17,r6
 c01082c:	dc000015 	stw	r16,0(sp)
 c010830:	dfc00215 	stw	ra,8(sp)
 c010834:	2821883a 	mov	r16,r5
 c010838:	c00f7280 	call	c00f728 <__ulp>
 c01083c:	88000c26 	beq	r17,zero,c010870 <sulp+0x50>
 c010840:	841ffc2c 	andhi	r16,r16,32752
 c010844:	8020d53a 	srli	r16,r16,20
 c010848:	01c01ac4 	movi	r7,107
 c01084c:	3c21c83a 	sub	r16,r7,r16
 c010850:	0400070e 	bge	zero,r16,c010870 <sulp+0x50>
 c010854:	8020953a 	slli	r16,r16,20
 c010858:	01cffc34 	movhi	r7,16368
 c01085c:	000d883a 	mov	r6,zero
 c010860:	81cf883a 	add	r7,r16,r7
 c010864:	1009883a 	mov	r4,r2
 c010868:	180b883a 	mov	r5,r3
 c01086c:	c01936c0 	call	c01936c <__muldf3>
 c010870:	dfc00217 	ldw	ra,8(sp)
 c010874:	dc400117 	ldw	r17,4(sp)
 c010878:	dc000017 	ldw	r16,0(sp)
 c01087c:	dec00304 	addi	sp,sp,12
 c010880:	f800283a 	ret

0c010884 <_strtod_r>:
 c010884:	deffe204 	addi	sp,sp,-120
 c010888:	ddc01b15 	stw	r23,108(sp)
 c01088c:	dd801a15 	stw	r22,104(sp)
 c010890:	dc401515 	stw	r17,84(sp)
 c010894:	dfc01d15 	stw	ra,116(sp)
 c010898:	df001c15 	stw	fp,112(sp)
 c01089c:	dd401915 	stw	r21,100(sp)
 c0108a0:	dd001815 	stw	r20,96(sp)
 c0108a4:	dcc01715 	stw	r19,92(sp)
 c0108a8:	dc801615 	stw	r18,88(sp)
 c0108ac:	dc001415 	stw	r16,80(sp)
 c0108b0:	d8000515 	stw	zero,20(sp)
 c0108b4:	d9400615 	stw	r5,24(sp)
 c0108b8:	2807883a 	mov	r3,r5
 c0108bc:	1f000003 	ldbu	fp,0(r3)
 c0108c0:	01c30074 	movhi	r7,3073
 c0108c4:	2023883a 	mov	r17,r4
 c0108c8:	d9400715 	stw	r5,28(sp)
 c0108cc:	d9800915 	stw	r6,36(sp)
 c0108d0:	01000b44 	movi	r4,45
 c0108d4:	e0803fcc 	andi	r2,fp,255
 c0108d8:	39c23e04 	addi	r7,r7,2296
 c0108dc:	002f883a 	mov	r23,zero
 c0108e0:	002d883a 	mov	r22,zero
 c0108e4:	20809c36 	bltu	r4,r2,c010b58 <_strtod_r+0x2d4>
 c0108e8:	100490ba 	slli	r2,r2,2
 c0108ec:	11c5883a 	add	r2,r2,r7
 c0108f0:	10800017 	ldw	r2,0(r2)
 c0108f4:	1000683a 	jmp	r2
 c0108f8:	0c0109b8 	rdprs	r16,at,1062
 c0108fc:	0c010b58 	cmpnei	r16,at,1069
 c010900:	0c010b58 	cmpnei	r16,at,1069
 c010904:	0c010b58 	cmpnei	r16,at,1069
 c010908:	0c010b58 	cmpnei	r16,at,1069
 c01090c:	0c010b58 	cmpnei	r16,at,1069
 c010910:	0c010b58 	cmpnei	r16,at,1069
 c010914:	0c010b58 	cmpnei	r16,at,1069
 c010918:	0c010b58 	cmpnei	r16,at,1069
 c01091c:	0c010b44 	addi	r16,at,1069
 c010920:	0c010b44 	addi	r16,at,1069
 c010924:	0c010b44 	addi	r16,at,1069
 c010928:	0c010b44 	addi	r16,at,1069
 c01092c:	0c010b44 	addi	r16,at,1069
 c010930:	0c010b58 	cmpnei	r16,at,1069
 c010934:	0c010b58 	cmpnei	r16,at,1069
 c010938:	0c010b58 	cmpnei	r16,at,1069
 c01093c:	0c010b58 	cmpnei	r16,at,1069
 c010940:	0c010b58 	cmpnei	r16,at,1069
 c010944:	0c010b58 	cmpnei	r16,at,1069
 c010948:	0c010b58 	cmpnei	r16,at,1069
 c01094c:	0c010b58 	cmpnei	r16,at,1069
 c010950:	0c010b58 	cmpnei	r16,at,1069
 c010954:	0c010b58 	cmpnei	r16,at,1069
 c010958:	0c010b58 	cmpnei	r16,at,1069
 c01095c:	0c010b58 	cmpnei	r16,at,1069
 c010960:	0c010b58 	cmpnei	r16,at,1069
 c010964:	0c010b58 	cmpnei	r16,at,1069
 c010968:	0c010b58 	cmpnei	r16,at,1069
 c01096c:	0c010b58 	cmpnei	r16,at,1069
 c010970:	0c010b58 	cmpnei	r16,at,1069
 c010974:	0c010b58 	cmpnei	r16,at,1069
 c010978:	0c010b44 	addi	r16,at,1069
 c01097c:	0c010b58 	cmpnei	r16,at,1069
 c010980:	0c010b58 	cmpnei	r16,at,1069
 c010984:	0c010b58 	cmpnei	r16,at,1069
 c010988:	0c010b58 	cmpnei	r16,at,1069
 c01098c:	0c010b58 	cmpnei	r16,at,1069
 c010990:	0c010b58 	cmpnei	r16,at,1069
 c010994:	0c010b58 	cmpnei	r16,at,1069
 c010998:	0c010b58 	cmpnei	r16,at,1069
 c01099c:	0c010b58 	cmpnei	r16,at,1069
 c0109a0:	0c010b58 	cmpnei	r16,at,1069
 c0109a4:	0c010a1c 	xori	r16,at,1064
 c0109a8:	0c010b58 	cmpnei	r16,at,1069
 c0109ac:	0c010b38 	rdprs	r16,at,1068
 c0109b0:	00801244 	movi	r2,73
 c0109b4:	b8844726 	beq	r23,r2,c011ad4 <_strtod_r+0x1250>
 c0109b8:	d9000917 	ldw	r4,36(sp)
 c0109bc:	d8000815 	stw	zero,32(sp)
 c0109c0:	0039883a 	mov	fp,zero
 c0109c4:	20000726 	beq	r4,zero,c0109e4 <_strtod_r+0x160>
 c0109c8:	dc800717 	ldw	r18,28(sp)
 c0109cc:	d8000a15 	stw	zero,40(sp)
 c0109d0:	d9400917 	ldw	r5,36(sp)
 c0109d4:	2c800015 	stw	r18,0(r5)
 c0109d8:	d8800a17 	ldw	r2,40(sp)
 c0109dc:	10000126 	beq	r2,zero,c0109e4 <_strtod_r+0x160>
 c0109e0:	e720003c 	xorhi	fp,fp,32768
 c0109e4:	d8800817 	ldw	r2,32(sp)
 c0109e8:	e007883a 	mov	r3,fp
 c0109ec:	dfc01d17 	ldw	ra,116(sp)
 c0109f0:	df001c17 	ldw	fp,112(sp)
 c0109f4:	ddc01b17 	ldw	r23,108(sp)
 c0109f8:	dd801a17 	ldw	r22,104(sp)
 c0109fc:	dd401917 	ldw	r21,100(sp)
 c010a00:	dd001817 	ldw	r20,96(sp)
 c010a04:	dcc01717 	ldw	r19,92(sp)
 c010a08:	dc801617 	ldw	r18,88(sp)
 c010a0c:	dc401517 	ldw	r17,84(sp)
 c010a10:	dc001417 	ldw	r16,80(sp)
 c010a14:	dec01e04 	addi	sp,sp,120
 c010a18:	f800283a 	ret
 c010a1c:	d8000a15 	stw	zero,40(sp)
 c010a20:	1c000044 	addi	r16,r3,1
 c010a24:	dc000615 	stw	r16,24(sp)
 c010a28:	1f000043 	ldbu	fp,1(r3)
 c010a2c:	e0803fcc 	andi	r2,fp,255
 c010a30:	1080201c 	xori	r2,r2,128
 c010a34:	10bfe004 	addi	r2,r2,-128
 c010a38:	103fdf26 	beq	r2,zero,c0109b8 <__alt_data_end+0xfc0109b8>
 c010a3c:	e1003fcc 	andi	r4,fp,255
 c010a40:	2100201c 	xori	r4,r4,128
 c010a44:	213fe004 	addi	r4,r4,-128
 c010a48:	00800c04 	movi	r2,48
 c010a4c:	2080d426 	beq	r4,r2,c010da0 <_strtod_r+0x51c>
 c010a50:	dc000815 	stw	r16,32(sp)
 c010a54:	d8000c15 	stw	zero,48(sp)
 c010a58:	e0bff404 	addi	r2,fp,-48
 c010a5c:	10803fcc 	andi	r2,r2,255
 c010a60:	05400244 	movi	r21,9
 c010a64:	a8837836 	bltu	r21,r2,c011848 <_strtod_r+0xfc4>
 c010a68:	dc800817 	ldw	r18,32(sp)
 c010a6c:	0029883a 	mov	r20,zero
 c010a70:	0027883a 	mov	r19,zero
 c010a74:	0021883a 	mov	r16,zero
 c010a78:	05800204 	movi	r22,8
 c010a7c:	b4003916 	blt	r22,r16,c010b64 <_strtod_r+0x2e0>
 c010a80:	e7003fcc 	andi	fp,fp,255
 c010a84:	9809883a 	mov	r4,r19
 c010a88:	01400284 	movi	r5,10
 c010a8c:	e700201c 	xori	fp,fp,128
 c010a90:	c00473c0 	call	c00473c <__mulsi3>
 c010a94:	e73fe004 	addi	fp,fp,-128
 c010a98:	1705883a 	add	r2,r2,fp
 c010a9c:	14fff404 	addi	r19,r2,-48
 c010aa0:	94800044 	addi	r18,r18,1
 c010aa4:	dc800615 	stw	r18,24(sp)
 c010aa8:	97000003 	ldbu	fp,0(r18)
 c010aac:	84000044 	addi	r16,r16,1
 c010ab0:	e0bff404 	addi	r2,fp,-48
 c010ab4:	10803fcc 	andi	r2,r2,255
 c010ab8:	a8bff02e 	bgeu	r21,r2,c010a7c <__alt_data_end+0xfc010a7c>
 c010abc:	e5c03fcc 	andi	r23,fp,255
 c010ac0:	bdc0201c 	xori	r23,r23,128
 c010ac4:	bdffe004 	addi	r23,r23,-128
 c010ac8:	8809883a 	mov	r4,r17
 c010acc:	c00e2880 	call	c00e288 <_localeconv_r>
 c010ad0:	8809883a 	mov	r4,r17
 c010ad4:	15400017 	ldw	r21,0(r2)
 c010ad8:	c00e2880 	call	c00e288 <_localeconv_r>
 c010adc:	11000017 	ldw	r4,0(r2)
 c010ae0:	c0052f80 	call	c0052f8 <strlen>
 c010ae4:	100d883a 	mov	r6,r2
 c010ae8:	a80b883a 	mov	r5,r21
 c010aec:	9009883a 	mov	r4,r18
 c010af0:	c016ca40 	call	c016ca4 <strncmp>
 c010af4:	1000bd26 	beq	r2,zero,c010dec <_strtod_r+0x568>
 c010af8:	8039883a 	mov	fp,r16
 c010afc:	002d883a 	mov	r22,zero
 c010b00:	d8000b15 	stw	zero,44(sp)
 c010b04:	0025883a 	mov	r18,zero
 c010b08:	00801944 	movi	r2,101
 c010b0c:	b8806026 	beq	r23,r2,c010c90 <_strtod_r+0x40c>
 c010b10:	00801144 	movi	r2,69
 c010b14:	b8805e26 	beq	r23,r2,c010c90 <_strtod_r+0x40c>
 c010b18:	0009883a 	mov	r4,zero
 c010b1c:	e0001a1e 	bne	fp,zero,c010b88 <_strtod_r+0x304>
 c010b20:	b000cd26 	beq	r22,zero,c010e58 <_strtod_r+0x5d4>
 c010b24:	d8000815 	stw	zero,32(sp)
 c010b28:	d9000917 	ldw	r4,36(sp)
 c010b2c:	203faa26 	beq	r4,zero,c0109d8 <__alt_data_end+0xfc0109d8>
 c010b30:	dc800617 	ldw	r18,24(sp)
 c010b34:	003fa606 	br	c0109d0 <__alt_data_end+0xfc0109d0>
 c010b38:	00800044 	movi	r2,1
 c010b3c:	d8800a15 	stw	r2,40(sp)
 c010b40:	003fb706 	br	c010a20 <__alt_data_end+0xfc010a20>
 c010b44:	18c00044 	addi	r3,r3,1
 c010b48:	d8c00615 	stw	r3,24(sp)
 c010b4c:	1f000003 	ldbu	fp,0(r3)
 c010b50:	e0803fcc 	andi	r2,fp,255
 c010b54:	20bf642e 	bgeu	r4,r2,c0108e8 <__alt_data_end+0xfc0108e8>
 c010b58:	1821883a 	mov	r16,r3
 c010b5c:	d8000a15 	stw	zero,40(sp)
 c010b60:	003fb606 	br	c010a3c <__alt_data_end+0xfc010a3c>
 c010b64:	e7003fcc 	andi	fp,fp,255
 c010b68:	a009883a 	mov	r4,r20
 c010b6c:	01400284 	movi	r5,10
 c010b70:	e700201c 	xori	fp,fp,128
 c010b74:	c00473c0 	call	c00473c <__mulsi3>
 c010b78:	e73fe004 	addi	fp,fp,-128
 c010b7c:	1705883a 	add	r2,r2,fp
 c010b80:	153ff404 	addi	r20,r2,-48
 c010b84:	003fc606 	br	c010aa0 <__alt_data_end+0xfc010aa0>
 c010b88:	d8c00b17 	ldw	r3,44(sp)
 c010b8c:	20ebc83a 	sub	r21,r4,r3
 c010b90:	8000011e 	bne	r16,zero,c010b98 <_strtod_r+0x314>
 c010b94:	e021883a 	mov	r16,fp
 c010b98:	00800404 	movi	r2,16
 c010b9c:	e025883a 	mov	r18,fp
 c010ba0:	1700010e 	bge	r2,fp,c010ba8 <_strtod_r+0x324>
 c010ba4:	1025883a 	mov	r18,r2
 c010ba8:	9809883a 	mov	r4,r19
 c010bac:	c01a6300 	call	c01a630 <__floatunsidf>
 c010bb0:	102f883a 	mov	r23,r2
 c010bb4:	00800244 	movi	r2,9
 c010bb8:	182d883a 	mov	r22,r3
 c010bbc:	1480150e 	bge	r2,r18,c010c14 <_strtod_r+0x390>
 c010bc0:	90bffdc4 	addi	r2,r18,-9
 c010bc4:	100490fa 	slli	r2,r2,3
 c010bc8:	180b883a 	mov	r5,r3
 c010bcc:	00c300b4 	movhi	r3,3074
 c010bd0:	18f76304 	addi	r3,r3,-8820
 c010bd4:	1885883a 	add	r2,r3,r2
 c010bd8:	11800017 	ldw	r6,0(r2)
 c010bdc:	11c00117 	ldw	r7,4(r2)
 c010be0:	b809883a 	mov	r4,r23
 c010be4:	c01936c0 	call	c01936c <__muldf3>
 c010be8:	a009883a 	mov	r4,r20
 c010bec:	102f883a 	mov	r23,r2
 c010bf0:	182d883a 	mov	r22,r3
 c010bf4:	c01a6300 	call	c01a630 <__floatunsidf>
 c010bf8:	b809883a 	mov	r4,r23
 c010bfc:	b00b883a 	mov	r5,r22
 c010c00:	100d883a 	mov	r6,r2
 c010c04:	180f883a 	mov	r7,r3
 c010c08:	c017e980 	call	c017e98 <__adddf3>
 c010c0c:	102f883a 	mov	r23,r2
 c010c10:	182d883a 	mov	r22,r3
 c010c14:	008003c4 	movi	r2,15
 c010c18:	17009416 	blt	r2,fp,c010e6c <_strtod_r+0x5e8>
 c010c1c:	a8001926 	beq	r21,zero,c010c84 <_strtod_r+0x400>
 c010c20:	05439c0e 	bge	zero,r21,c011a94 <_strtod_r+0x1210>
 c010c24:	00c00584 	movi	r3,22
 c010c28:	1d430f16 	blt	r3,r21,c011868 <_strtod_r+0xfe4>
 c010c2c:	a82a90fa 	slli	r21,r21,3
 c010c30:	008300b4 	movhi	r2,3074
 c010c34:	10b76304 	addi	r2,r2,-8820
 c010c38:	1545883a 	add	r2,r2,r21
 c010c3c:	11000017 	ldw	r4,0(r2)
 c010c40:	11400117 	ldw	r5,4(r2)
 c010c44:	b80d883a 	mov	r6,r23
 c010c48:	b00f883a 	mov	r7,r22
 c010c4c:	c01936c0 	call	c01936c <__muldf3>
 c010c50:	d8800815 	stw	r2,32(sp)
 c010c54:	1839883a 	mov	fp,r3
 c010c58:	003fb306 	br	c010b28 <__alt_data_end+0xfc010b28>
 c010c5c:	014300b4 	movhi	r5,3074
 c010c60:	29779904 	addi	r5,r5,-8604
 c010c64:	d9800204 	addi	r6,sp,8
 c010c68:	d9000604 	addi	r4,sp,24
 c010c6c:	c0169340 	call	c016934 <__hexnan>
 c010c70:	00c00144 	movi	r3,5
 c010c74:	10c2161e 	bne	r2,r3,c0114d0 <_strtod_r+0xc4c>
 c010c78:	dd800317 	ldw	r22,12(sp)
 c010c7c:	ddc00217 	ldw	r23,8(sp)
 c010c80:	b59ffc34 	orhi	r22,r22,32752
 c010c84:	ddc00815 	stw	r23,32(sp)
 c010c88:	b039883a 	mov	fp,r22
 c010c8c:	003fa606 	br	c010b28 <__alt_data_end+0xfc010b28>
 c010c90:	e001a926 	beq	fp,zero,c011338 <_strtod_r+0xab4>
 c010c94:	d8c00617 	ldw	r3,24(sp)
 c010c98:	18800044 	addi	r2,r3,1
 c010c9c:	d8800615 	stw	r2,24(sp)
 c010ca0:	d8c00715 	stw	r3,28(sp)
 c010ca4:	18c00047 	ldb	r3,1(r3)
 c010ca8:	00800ac4 	movi	r2,43
 c010cac:	1881e526 	beq	r3,r2,c011444 <_strtod_r+0xbc0>
 c010cb0:	00800b44 	movi	r2,45
 c010cb4:	1881dc26 	beq	r3,r2,c011428 <_strtod_r+0xba4>
 c010cb8:	182f883a 	mov	r23,r3
 c010cbc:	d8000e15 	stw	zero,56(sp)
 c010cc0:	b8bff404 	addi	r2,r23,-48
 c010cc4:	01000244 	movi	r4,9
 c010cc8:	2081ab36 	bltu	r4,r2,c011378 <_strtod_r+0xaf4>
 c010ccc:	00800c04 	movi	r2,48
 c010cd0:	b880071e 	bne	r23,r2,c010cf0 <_strtod_r+0x46c>
 c010cd4:	d8800617 	ldw	r2,24(sp)
 c010cd8:	b809883a 	mov	r4,r23
 c010cdc:	10800044 	addi	r2,r2,1
 c010ce0:	d8800615 	stw	r2,24(sp)
 c010ce4:	15c00007 	ldb	r23,0(r2)
 c010ce8:	10800044 	addi	r2,r2,1
 c010cec:	b93ffc26 	beq	r23,r4,c010ce0 <__alt_data_end+0xfc010ce0>
 c010cf0:	b8bff3c4 	addi	r2,r23,-49
 c010cf4:	01000204 	movi	r4,8
 c010cf8:	20bf8736 	bltu	r4,r2,c010b18 <__alt_data_end+0xfc010b18>
 c010cfc:	d8c00617 	ldw	r3,24(sp)
 c010d00:	b93ff404 	addi	r4,r23,-48
 c010d04:	01400244 	movi	r5,9
 c010d08:	1ac00044 	addi	r11,r3,1
 c010d0c:	dac00615 	stw	r11,24(sp)
 c010d10:	d8c00d15 	stw	r3,52(sp)
 c010d14:	18c00043 	ldbu	r3,1(r3)
 c010d18:	18bff404 	addi	r2,r3,-48
 c010d1c:	1dc03fcc 	andi	r23,r3,255
 c010d20:	bdc0201c 	xori	r23,r23,128
 c010d24:	10803fcc 	andi	r2,r2,255
 c010d28:	bdffe004 	addi	r23,r23,-128
 c010d2c:	28801136 	bltu	r5,r2,c010d74 <_strtod_r+0x4f0>
 c010d30:	d8c00d17 	ldw	r3,52(sp)
 c010d34:	1d400084 	addi	r21,r3,2
 c010d38:	01400284 	movi	r5,10
 c010d3c:	c00473c0 	call	c00473c <__mulsi3>
 c010d40:	dd400615 	stw	r21,24(sp)
 c010d44:	a9400003 	ldbu	r5,0(r21)
 c010d48:	15c5883a 	add	r2,r2,r23
 c010d4c:	a817883a 	mov	r11,r21
 c010d50:	28fff404 	addi	r3,r5,-48
 c010d54:	2dc03fcc 	andi	r23,r5,255
 c010d58:	bdc0201c 	xori	r23,r23,128
 c010d5c:	18c03fcc 	andi	r3,r3,255
 c010d60:	01400244 	movi	r5,9
 c010d64:	113ff404 	addi	r4,r2,-48
 c010d68:	bdffe004 	addi	r23,r23,-128
 c010d6c:	ad400044 	addi	r21,r21,1
 c010d70:	28fff12e 	bgeu	r5,r3,c010d38 <__alt_data_end+0xfc010d38>
 c010d74:	d8c00d17 	ldw	r3,52(sp)
 c010d78:	00800204 	movi	r2,8
 c010d7c:	58d7c83a 	sub	r11,r11,r3
 c010d80:	12c2ab16 	blt	r2,r11,c011830 <_strtod_r+0xfac>
 c010d84:	009387c4 	movi	r2,19999
 c010d88:	1100010e 	bge	r2,r4,c010d90 <_strtod_r+0x50c>
 c010d8c:	1009883a 	mov	r4,r2
 c010d90:	d8c00e17 	ldw	r3,56(sp)
 c010d94:	183f6126 	beq	r3,zero,c010b1c <__alt_data_end+0xfc010b1c>
 c010d98:	0109c83a 	sub	r4,zero,r4
 c010d9c:	003f5f06 	br	c010b1c <__alt_data_end+0xfc010b1c>
 c010da0:	80800047 	ldb	r2,1(r16)
 c010da4:	00c01604 	movi	r3,88
 c010da8:	10c20026 	beq	r2,r3,c0115ac <_strtod_r+0xd28>
 c010dac:	00c01e04 	movi	r3,120
 c010db0:	10c1fe26 	beq	r2,r3,c0115ac <_strtod_r+0xd28>
 c010db4:	80800044 	addi	r2,r16,1
 c010db8:	1021883a 	mov	r16,r2
 c010dbc:	d8800615 	stw	r2,24(sp)
 c010dc0:	10800044 	addi	r2,r2,1
 c010dc4:	173fffc3 	ldbu	fp,-1(r2)
 c010dc8:	e0c03fcc 	andi	r3,fp,255
 c010dcc:	18c0201c 	xori	r3,r3,128
 c010dd0:	18ffe004 	addi	r3,r3,-128
 c010dd4:	193ff826 	beq	r3,r4,c010db8 <__alt_data_end+0xfc010db8>
 c010dd8:	18002126 	beq	r3,zero,c010e60 <_strtod_r+0x5dc>
 c010ddc:	00c00044 	movi	r3,1
 c010de0:	dc000815 	stw	r16,32(sp)
 c010de4:	d8c00c15 	stw	r3,48(sp)
 c010de8:	003f1b06 	br	c010a58 <__alt_data_end+0xfc010a58>
 c010dec:	8809883a 	mov	r4,r17
 c010df0:	c00e2880 	call	c00e288 <_localeconv_r>
 c010df4:	11000017 	ldw	r4,0(r2)
 c010df8:	c0052f80 	call	c0052f8 <strlen>
 c010dfc:	d8c00617 	ldw	r3,24(sp)
 c010e00:	1885883a 	add	r2,r3,r2
 c010e04:	d8800615 	stw	r2,24(sp)
 c010e08:	15c00007 	ldb	r23,0(r2)
 c010e0c:	8001771e 	bne	r16,zero,c0113ec <_strtod_r+0xb68>
 c010e10:	01000c04 	movi	r4,48
 c010e14:	b903581e 	bne	r23,r4,c011b78 <_strtod_r+0x12f4>
 c010e18:	11000044 	addi	r4,r2,1
 c010e1c:	b80b883a 	mov	r5,r23
 c010e20:	d9000615 	stw	r4,24(sp)
 c010e24:	25c00007 	ldb	r23,0(r4)
 c010e28:	20adc83a 	sub	r22,r4,r2
 c010e2c:	21000044 	addi	r4,r4,1
 c010e30:	b97ffb26 	beq	r23,r5,c010e20 <__alt_data_end+0xfc010e20>
 c010e34:	b8bff3c4 	addi	r2,r23,-49
 c010e38:	01000204 	movi	r4,8
 c010e3c:	2083002e 	bgeu	r4,r2,c011a40 <_strtod_r+0x11bc>
 c010e40:	00801944 	movi	r2,101
 c010e44:	b8813a26 	beq	r23,r2,c011330 <_strtod_r+0xaac>
 c010e48:	0039883a 	mov	fp,zero
 c010e4c:	d8000b15 	stw	zero,44(sp)
 c010e50:	04800044 	movi	r18,1
 c010e54:	003f2e06 	br	c010b10 <__alt_data_end+0xfc010b10>
 c010e58:	d8c00c17 	ldw	r3,48(sp)
 c010e5c:	18017d26 	beq	r3,zero,c011454 <_strtod_r+0xbd0>
 c010e60:	d8000815 	stw	zero,32(sp)
 c010e64:	0039883a 	mov	fp,zero
 c010e68:	003f2f06 	br	c010b28 <__alt_data_end+0xfc010b28>
 c010e6c:	e4a5c83a 	sub	r18,fp,r18
 c010e70:	9565883a 	add	r18,r18,r21
 c010e74:	0482370e 	bge	zero,r18,c011754 <_strtod_r+0xed0>
 c010e78:	908003cc 	andi	r2,r18,15
 c010e7c:	10000b26 	beq	r2,zero,c010eac <_strtod_r+0x628>
 c010e80:	100490fa 	slli	r2,r2,3
 c010e84:	00c300b4 	movhi	r3,3074
 c010e88:	18f76304 	addi	r3,r3,-8820
 c010e8c:	1885883a 	add	r2,r3,r2
 c010e90:	11000017 	ldw	r4,0(r2)
 c010e94:	11400117 	ldw	r5,4(r2)
 c010e98:	b80d883a 	mov	r6,r23
 c010e9c:	b00f883a 	mov	r7,r22
 c010ea0:	c01936c0 	call	c01936c <__muldf3>
 c010ea4:	102f883a 	mov	r23,r2
 c010ea8:	182d883a 	mov	r22,r3
 c010eac:	053ffc04 	movi	r20,-16
 c010eb0:	9524703a 	and	r18,r18,r20
 c010eb4:	90003826 	beq	r18,zero,c010f98 <_strtod_r+0x714>
 c010eb8:	00804d04 	movi	r2,308
 c010ebc:	1481eb16 	blt	r2,r18,c01166c <_strtod_r+0xde8>
 c010ec0:	9029d13a 	srai	r20,r18,4
 c010ec4:	02c00044 	movi	r11,1
 c010ec8:	5d03900e 	bge	r11,r20,c011d0c <_strtod_r+0x1488>
 c010ecc:	010300b4 	movhi	r4,3074
 c010ed0:	21375904 	addi	r4,r4,-8860
 c010ed4:	2011883a 	mov	r8,r4
 c010ed8:	0025883a 	mov	r18,zero
 c010edc:	880b883a 	mov	r5,r17
 c010ee0:	d9000715 	stw	r4,28(sp)
 c010ee4:	dc000b15 	stw	r16,44(sp)
 c010ee8:	9023883a 	mov	r17,r18
 c010eec:	b805883a 	mov	r2,r23
 c010ef0:	b007883a 	mov	r3,r22
 c010ef4:	0009883a 	mov	r4,zero
 c010ef8:	4021883a 	mov	r16,r8
 c010efc:	2825883a 	mov	r18,r5
 c010f00:	a180004c 	andi	r6,r20,1
 c010f04:	30000826 	beq	r6,zero,c010f28 <_strtod_r+0x6a4>
 c010f08:	81800017 	ldw	r6,0(r16)
 c010f0c:	81c00117 	ldw	r7,4(r16)
 c010f10:	1009883a 	mov	r4,r2
 c010f14:	180b883a 	mov	r5,r3
 c010f18:	dac01315 	stw	r11,76(sp)
 c010f1c:	c01936c0 	call	c01936c <__muldf3>
 c010f20:	dac01317 	ldw	r11,76(sp)
 c010f24:	01000044 	movi	r4,1
 c010f28:	a029d07a 	srai	r20,r20,1
 c010f2c:	8c400044 	addi	r17,r17,1
 c010f30:	84000204 	addi	r16,r16,8
 c010f34:	a2fff21e 	bne	r20,r11,c010f00 <__alt_data_end+0xfc010f00>
 c010f38:	900b883a 	mov	r5,r18
 c010f3c:	21003fcc 	andi	r4,r4,255
 c010f40:	8825883a 	mov	r18,r17
 c010f44:	dc000b17 	ldw	r16,44(sp)
 c010f48:	2823883a 	mov	r17,r5
 c010f4c:	2003c01e 	bne	r4,zero,c011e50 <_strtod_r+0x15cc>
 c010f50:	901490fa 	slli	r10,r18,3
 c010f54:	d8800717 	ldw	r2,28(sp)
 c010f58:	01ff2c34 	movhi	r7,64688
 c010f5c:	b80d883a 	mov	r6,r23
 c010f60:	12a5883a 	add	r18,r2,r10
 c010f64:	91000017 	ldw	r4,0(r18)
 c010f68:	91400117 	ldw	r5,4(r18)
 c010f6c:	b1cf883a 	add	r7,r22,r7
 c010f70:	c01936c0 	call	c01936c <__muldf3>
 c010f74:	102f883a 	mov	r23,r2
 c010f78:	011f2834 	movhi	r4,31904
 c010f7c:	189ffc2c 	andhi	r2,r3,32752
 c010f80:	2081ba36 	bltu	r4,r2,c01166c <_strtod_r+0xde8>
 c010f84:	011f2434 	movhi	r4,31888
 c010f88:	20834a2e 	bgeu	r4,r2,c011cb4 <_strtod_r+0x1430>
 c010f8c:	059ffc34 	movhi	r22,32752
 c010f90:	b5bfffc4 	addi	r22,r22,-1
 c010f94:	05ffffc4 	movi	r23,-1
 c010f98:	d8000715 	stw	zero,28(sp)
 c010f9c:	d9400817 	ldw	r5,32(sp)
 c010fa0:	dcc00015 	stw	r19,0(sp)
 c010fa4:	e00f883a 	mov	r7,fp
 c010fa8:	800d883a 	mov	r6,r16
 c010fac:	8809883a 	mov	r4,r17
 c010fb0:	c00ed600 	call	c00ed60 <__s2b>
 c010fb4:	d8800b15 	stw	r2,44(sp)
 c010fb8:	1001ac26 	beq	r2,zero,c01166c <_strtod_r+0xde8>
 c010fbc:	a807d7fa 	srai	r3,r21,31
 c010fc0:	0545c83a 	sub	r2,zero,r21
 c010fc4:	dd400c15 	stw	r21,48(sp)
 c010fc8:	1886703a 	and	r3,r3,r2
 c010fcc:	d8c00e15 	stw	r3,56(sp)
 c010fd0:	a8015916 	blt	r21,zero,c011538 <_strtod_r+0xcb4>
 c010fd4:	d9400b17 	ldw	r5,44(sp)
 c010fd8:	0011883a 	mov	r8,zero
 c010fdc:	0021883a 	mov	r16,zero
 c010fe0:	29400304 	addi	r5,r5,12
 c010fe4:	d9401115 	stw	r5,68(sp)
 c010fe8:	4025883a 	mov	r18,r8
 c010fec:	d8800b17 	ldw	r2,44(sp)
 c010ff0:	8809883a 	mov	r4,r17
 c010ff4:	11400117 	ldw	r5,4(r2)
 c010ff8:	c00eb480 	call	c00eb48 <_Balloc>
 c010ffc:	1027883a 	mov	r19,r2
 c011000:	10015226 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c011004:	d8c00b17 	ldw	r3,44(sp)
 c011008:	d9401117 	ldw	r5,68(sp)
 c01100c:	11000304 	addi	r4,r2,12
 c011010:	19800417 	ldw	r6,16(r3)
 c011014:	31800084 	addi	r6,r6,2
 c011018:	318d883a 	add	r6,r6,r6
 c01101c:	318d883a 	add	r6,r6,r6
 c011020:	c00e77c0 	call	c00e77c <memcpy>
 c011024:	d9000204 	addi	r4,sp,8
 c011028:	d9000015 	stw	r4,0(sp)
 c01102c:	d9c00404 	addi	r7,sp,16
 c011030:	b80b883a 	mov	r5,r23
 c011034:	b00d883a 	mov	r6,r22
 c011038:	8809883a 	mov	r4,r17
 c01103c:	c00f8980 	call	c00f898 <__d2b>
 c011040:	d8800515 	stw	r2,20(sp)
 c011044:	ddc00815 	stw	r23,32(sp)
 c011048:	dd801215 	stw	r22,72(sp)
 c01104c:	10029f26 	beq	r2,zero,c011acc <_strtod_r+0x1248>
 c011050:	01400044 	movi	r5,1
 c011054:	8809883a 	mov	r4,r17
 c011058:	c00ef7c0 	call	c00ef7c <__i2b>
 c01105c:	1021883a 	mov	r16,r2
 c011060:	10013a26 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c011064:	d8800417 	ldw	r2,16(sp)
 c011068:	1000b816 	blt	r2,zero,c01134c <_strtod_r+0xac8>
 c01106c:	d9400e17 	ldw	r5,56(sp)
 c011070:	d9000c17 	ldw	r4,48(sp)
 c011074:	28a9883a 	add	r20,r5,r2
 c011078:	d9400717 	ldw	r5,28(sp)
 c01107c:	dd400217 	ldw	r21,8(sp)
 c011080:	073f0084 	movi	fp,-1022
 c011084:	1147c83a 	sub	r3,r2,r5
 c011088:	1d47883a 	add	r3,r3,r21
 c01108c:	00800d84 	movi	r2,54
 c011090:	18ffffc4 	addi	r3,r3,-1
 c011094:	156bc83a 	sub	r21,r2,r21
 c011098:	1f00950e 	bge	r3,fp,c0112f0 <_strtod_r+0xa6c>
 c01109c:	e0f9c83a 	sub	fp,fp,r3
 c0110a0:	008007c4 	movi	r2,31
 c0110a4:	af2bc83a 	sub	r21,r21,fp
 c0110a8:	1700ac16 	blt	r2,fp,c01135c <_strtod_r+0xad8>
 c0110ac:	00800044 	movi	r2,1
 c0110b0:	1704983a 	sll	r2,r2,fp
 c0110b4:	d8000d15 	stw	zero,52(sp)
 c0110b8:	d8800f15 	stw	r2,60(sp)
 c0110bc:	2547883a 	add	r3,r4,r21
 c0110c0:	d9000717 	ldw	r4,28(sp)
 c0110c4:	a56b883a 	add	r21,r20,r21
 c0110c8:	20f9883a 	add	fp,r4,r3
 c0110cc:	a009883a 	mov	r4,r20
 c0110d0:	ad00010e 	bge	r21,r20,c0110d8 <_strtod_r+0x854>
 c0110d4:	a809883a 	mov	r4,r21
 c0110d8:	e005883a 	mov	r2,fp
 c0110dc:	2700010e 	bge	r4,fp,c0110e4 <_strtod_r+0x860>
 c0110e0:	2005883a 	mov	r2,r4
 c0110e4:	0080030e 	bge	zero,r2,c0110f4 <_strtod_r+0x870>
 c0110e8:	a8abc83a 	sub	r21,r21,r2
 c0110ec:	e0b9c83a 	sub	fp,fp,r2
 c0110f0:	a0a9c83a 	sub	r20,r20,r2
 c0110f4:	d9400e17 	ldw	r5,56(sp)
 c0110f8:	28001126 	beq	r5,zero,c011140 <_strtod_r+0x8bc>
 c0110fc:	280d883a 	mov	r6,r5
 c011100:	8809883a 	mov	r4,r17
 c011104:	800b883a 	mov	r5,r16
 c011108:	c00f2440 	call	c00f244 <__pow5mult>
 c01110c:	1021883a 	mov	r16,r2
 c011110:	10010e26 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c011114:	d9800517 	ldw	r6,20(sp)
 c011118:	100b883a 	mov	r5,r2
 c01111c:	8809883a 	mov	r4,r17
 c011120:	c00efb80 	call	c00efb8 <__multiply>
 c011124:	10010926 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c011128:	d9400517 	ldw	r5,20(sp)
 c01112c:	8809883a 	mov	r4,r17
 c011130:	d8801315 	stw	r2,76(sp)
 c011134:	c00ebf00 	call	c00ebf0 <_Bfree>
 c011138:	d8801317 	ldw	r2,76(sp)
 c01113c:	d8800515 	stw	r2,20(sp)
 c011140:	0540060e 	bge	zero,r21,c01115c <_strtod_r+0x8d8>
 c011144:	d9400517 	ldw	r5,20(sp)
 c011148:	a80d883a 	mov	r6,r21
 c01114c:	8809883a 	mov	r4,r17
 c011150:	c00f3840 	call	c00f384 <__lshift>
 c011154:	d8800515 	stw	r2,20(sp)
 c011158:	10025c26 	beq	r2,zero,c011acc <_strtod_r+0x1248>
 c01115c:	d8800c17 	ldw	r2,48(sp)
 c011160:	10000626 	beq	r2,zero,c01117c <_strtod_r+0x8f8>
 c011164:	d9800c17 	ldw	r6,48(sp)
 c011168:	980b883a 	mov	r5,r19
 c01116c:	8809883a 	mov	r4,r17
 c011170:	c00f2440 	call	c00f244 <__pow5mult>
 c011174:	1027883a 	mov	r19,r2
 c011178:	1000f426 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c01117c:	0700060e 	bge	zero,fp,c011198 <_strtod_r+0x914>
 c011180:	980b883a 	mov	r5,r19
 c011184:	e00d883a 	mov	r6,fp
 c011188:	8809883a 	mov	r4,r17
 c01118c:	c00f3840 	call	c00f384 <__lshift>
 c011190:	1027883a 	mov	r19,r2
 c011194:	1000ed26 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c011198:	0500060e 	bge	zero,r20,c0111b4 <_strtod_r+0x930>
 c01119c:	800b883a 	mov	r5,r16
 c0111a0:	a00d883a 	mov	r6,r20
 c0111a4:	8809883a 	mov	r4,r17
 c0111a8:	c00f3840 	call	c00f384 <__lshift>
 c0111ac:	1021883a 	mov	r16,r2
 c0111b0:	1000e626 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c0111b4:	d9400517 	ldw	r5,20(sp)
 c0111b8:	980d883a 	mov	r6,r19
 c0111bc:	8809883a 	mov	r4,r17
 c0111c0:	c00f52c0 	call	c00f52c <__mdiff>
 c0111c4:	1025883a 	mov	r18,r2
 c0111c8:	1000e026 	beq	r2,zero,c01154c <_strtod_r+0xcc8>
 c0111cc:	15400317 	ldw	r21,12(r2)
 c0111d0:	800b883a 	mov	r5,r16
 c0111d4:	10000315 	stw	zero,12(r2)
 c0111d8:	1009883a 	mov	r4,r2
 c0111dc:	c00f4cc0 	call	c00f4cc <__mcmp>
 c0111e0:	10026716 	blt	r2,zero,c011b80 <_strtod_r+0x12fc>
 c0111e4:	10029626 	beq	r2,zero,c011c40 <_strtod_r+0x13bc>
 c0111e8:	800b883a 	mov	r5,r16
 c0111ec:	9009883a 	mov	r4,r18
 c0111f0:	c00f9e40 	call	c00f9e4 <__ratio>
 c0111f4:	000d883a 	mov	r6,zero
 c0111f8:	01d00034 	movhi	r7,16384
 c0111fc:	1009883a 	mov	r4,r2
 c011200:	180b883a 	mov	r5,r3
 c011204:	1039883a 	mov	fp,r2
 c011208:	1829883a 	mov	r20,r3
 c01120c:	c0192780 	call	c019278 <__ledf2>
 c011210:	00803b16 	blt	zero,r2,c011300 <_strtod_r+0xa7c>
 c011214:	a8005e26 	beq	r21,zero,c011390 <_strtod_r+0xb0c>
 c011218:	050ffc34 	movhi	r20,16368
 c01121c:	d8000f15 	stw	zero,60(sp)
 c011220:	d8001015 	stw	zero,64(sp)
 c011224:	dd000d15 	stw	r20,52(sp)
 c011228:	b71ffc2c 	andhi	fp,r22,32752
 c01122c:	009ff834 	movhi	r2,32736
 c011230:	e080f226 	beq	fp,r2,c0115fc <_strtod_r+0xd78>
 c011234:	d9000717 	ldw	r4,28(sp)
 c011238:	20000c26 	beq	r4,zero,c01126c <_strtod_r+0x9e8>
 c01123c:	0081a834 	movhi	r2,1696
 c011240:	17000a36 	bltu	r2,fp,c01126c <_strtod_r+0x9e8>
 c011244:	d9001017 	ldw	r4,64(sp)
 c011248:	d9400d17 	ldw	r5,52(sp)
 c01124c:	01d07834 	movhi	r7,16864
 c011250:	39ffffc4 	addi	r7,r7,-1
 c011254:	01bff034 	movhi	r6,65472
 c011258:	c0192780 	call	c019278 <__ledf2>
 c01125c:	0080a70e 	bge	zero,r2,c0114fc <_strtod_r+0xc78>
 c011260:	0081ac34 	movhi	r2,1712
 c011264:	a091883a 	add	r8,r20,r2
 c011268:	4729c83a 	sub	r20,r8,fp
 c01126c:	b809883a 	mov	r4,r23
 c011270:	b00b883a 	mov	r5,r22
 c011274:	c00f7280 	call	c00f728 <__ulp>
 c011278:	d9000f17 	ldw	r4,60(sp)
 c01127c:	a00b883a 	mov	r5,r20
 c011280:	100d883a 	mov	r6,r2
 c011284:	180f883a 	mov	r7,r3
 c011288:	c01936c0 	call	c01936c <__muldf3>
 c01128c:	b80d883a 	mov	r6,r23
 c011290:	b00f883a 	mov	r7,r22
 c011294:	1009883a 	mov	r4,r2
 c011298:	180b883a 	mov	r5,r3
 c01129c:	c017e980 	call	c017e98 <__adddf3>
 c0112a0:	102f883a 	mov	r23,r2
 c0112a4:	182d883a 	mov	r22,r3
 c0112a8:	1829883a 	mov	r20,r3
 c0112ac:	d9000717 	ldw	r4,28(sp)
 c0112b0:	2000021e 	bne	r4,zero,c0112bc <_strtod_r+0xa38>
 c0112b4:	a09ffc2c 	andhi	r2,r20,32752
 c0112b8:	e080f126 	beq	fp,r2,c011680 <_strtod_r+0xdfc>
 c0112bc:	d9400517 	ldw	r5,20(sp)
 c0112c0:	8809883a 	mov	r4,r17
 c0112c4:	c00ebf00 	call	c00ebf0 <_Bfree>
 c0112c8:	980b883a 	mov	r5,r19
 c0112cc:	8809883a 	mov	r4,r17
 c0112d0:	c00ebf00 	call	c00ebf0 <_Bfree>
 c0112d4:	800b883a 	mov	r5,r16
 c0112d8:	8809883a 	mov	r4,r17
 c0112dc:	c00ebf00 	call	c00ebf0 <_Bfree>
 c0112e0:	900b883a 	mov	r5,r18
 c0112e4:	8809883a 	mov	r4,r17
 c0112e8:	c00ebf00 	call	c00ebf0 <_Bfree>
 c0112ec:	003f3f06 	br	c010fec <__alt_data_end+0xfc010fec>
 c0112f0:	00c00044 	movi	r3,1
 c0112f4:	d8000d15 	stw	zero,52(sp)
 c0112f8:	d8c00f15 	stw	r3,60(sp)
 c0112fc:	003f6f06 	br	c0110bc <__alt_data_end+0xfc0110bc>
 c011300:	000d883a 	mov	r6,zero
 c011304:	01cff834 	movhi	r7,16352
 c011308:	e009883a 	mov	r4,fp
 c01130c:	a00b883a 	mov	r5,r20
 c011310:	c01936c0 	call	c01936c <__muldf3>
 c011314:	d8801015 	stw	r2,64(sp)
 c011318:	d8c00d15 	stw	r3,52(sp)
 c01131c:	a8001a1e 	bne	r21,zero,c011388 <_strtod_r+0xb04>
 c011320:	1a20003c 	xorhi	r8,r3,32768
 c011324:	d8800f15 	stw	r2,60(sp)
 c011328:	4029883a 	mov	r20,r8
 c01132c:	003fbe06 	br	c011228 <__alt_data_end+0xfc011228>
 c011330:	d8000b15 	stw	zero,44(sp)
 c011334:	04800044 	movi	r18,1
 c011338:	b000021e 	bne	r22,zero,c011344 <_strtod_r+0xac0>
 c01133c:	d8c00c17 	ldw	r3,48(sp)
 c011340:	183d9d26 	beq	r3,zero,c0109b8 <__alt_data_end+0xfc0109b8>
 c011344:	0039883a 	mov	fp,zero
 c011348:	003e5206 	br	c010c94 <__alt_data_end+0xfc010c94>
 c01134c:	d8c00c17 	ldw	r3,48(sp)
 c011350:	dd000e17 	ldw	r20,56(sp)
 c011354:	1889c83a 	sub	r4,r3,r2
 c011358:	003f4706 	br	c011078 <__alt_data_end+0xfc011078>
 c01135c:	00bef884 	movi	r2,-1054
 c011360:	07000044 	movi	fp,1
 c011364:	10c5c83a 	sub	r2,r2,r3
 c011368:	e084983a 	sll	r2,fp,r2
 c01136c:	df000f15 	stw	fp,60(sp)
 c011370:	d8800d15 	stw	r2,52(sp)
 c011374:	003f5106 	br	c0110bc <__alt_data_end+0xfc0110bc>
 c011378:	d8c00717 	ldw	r3,28(sp)
 c01137c:	0009883a 	mov	r4,zero
 c011380:	d8c00615 	stw	r3,24(sp)
 c011384:	003de506 	br	c010b1c <__alt_data_end+0xfc010b1c>
 c011388:	da000d17 	ldw	r8,52(sp)
 c01138c:	003fe506 	br	c011324 <__alt_data_end+0xfc011324>
 c011390:	b800521e 	bne	r23,zero,c0114dc <_strtod_r+0xc58>
 c011394:	01000434 	movhi	r4,16
 c011398:	213fffc4 	addi	r4,r4,-1
 c01139c:	b104703a 	and	r2,r22,r4
 c0113a0:	1000501e 	bne	r2,zero,c0114e4 <_strtod_r+0xc60>
 c0113a4:	000d883a 	mov	r6,zero
 c0113a8:	01cffc34 	movhi	r7,16368
 c0113ac:	e009883a 	mov	r4,fp
 c0113b0:	a00b883a 	mov	r5,r20
 c0113b4:	c0192780 	call	c019278 <__ledf2>
 c0113b8:	10024216 	blt	r2,zero,c011cc4 <_strtod_r+0x1440>
 c0113bc:	a00b883a 	mov	r5,r20
 c0113c0:	000d883a 	mov	r6,zero
 c0113c4:	01cff834 	movhi	r7,16352
 c0113c8:	e009883a 	mov	r4,fp
 c0113cc:	c01936c0 	call	c01936c <__muldf3>
 c0113d0:	d8801015 	stw	r2,64(sp)
 c0113d4:	d8c00d15 	stw	r3,52(sp)
 c0113d8:	1029883a 	mov	r20,r2
 c0113dc:	1a20003c 	xorhi	r8,r3,32768
 c0113e0:	dd000f15 	stw	r20,60(sp)
 c0113e4:	4029883a 	mov	r20,r8
 c0113e8:	003f8f06 	br	c011228 <__alt_data_end+0xfc011228>
 c0113ec:	8039883a 	mov	fp,r16
 c0113f0:	002d883a 	mov	r22,zero
 c0113f4:	d8000b15 	stw	zero,44(sp)
 c0113f8:	bd7ff404 	addi	r21,r23,-48
 c0113fc:	00800244 	movi	r2,9
 c011400:	15401236 	bltu	r2,r21,c01144c <_strtod_r+0xbc8>
 c011404:	dd400e15 	stw	r21,56(sp)
 c011408:	b0800044 	addi	r2,r22,1
 c01140c:	a801701e 	bne	r21,zero,c0119d0 <_strtod_r+0x114c>
 c011410:	ddc00617 	ldw	r23,24(sp)
 c011414:	102d883a 	mov	r22,r2
 c011418:	b8800044 	addi	r2,r23,1
 c01141c:	d8800615 	stw	r2,24(sp)
 c011420:	bdc00047 	ldb	r23,1(r23)
 c011424:	003ff406 	br	c0113f8 <__alt_data_end+0xfc0113f8>
 c011428:	00c00044 	movi	r3,1
 c01142c:	d8c00e15 	stw	r3,56(sp)
 c011430:	d8c00717 	ldw	r3,28(sp)
 c011434:	18800084 	addi	r2,r3,2
 c011438:	d8800615 	stw	r2,24(sp)
 c01143c:	1dc00087 	ldb	r23,2(r3)
 c011440:	003e1f06 	br	c010cc0 <__alt_data_end+0xfc010cc0>
 c011444:	d8000e15 	stw	zero,56(sp)
 c011448:	003ff906 	br	c011430 <__alt_data_end+0xfc011430>
 c01144c:	04800044 	movi	r18,1
 c011450:	003dad06 	br	c010b08 <__alt_data_end+0xfc010b08>
 c011454:	903d581e 	bne	r18,zero,c0109b8 <__alt_data_end+0xfc0109b8>
 c011458:	00801384 	movi	r2,78
 c01145c:	b8800526 	beq	r23,r2,c011474 <_strtod_r+0xbf0>
 c011460:	15fd530e 	bge	r2,r23,c0109b0 <__alt_data_end+0xfc0109b0>
 c011464:	00801a44 	movi	r2,105
 c011468:	b8819a26 	beq	r23,r2,c011ad4 <_strtod_r+0x1250>
 c01146c:	00801b84 	movi	r2,110
 c011470:	b8bd511e 	bne	r23,r2,c0109b8 <__alt_data_end+0xfc0109b8>
 c011474:	014300b4 	movhi	r5,3074
 c011478:	d9000617 	ldw	r4,24(sp)
 c01147c:	29779804 	addi	r5,r5,-8608
 c011480:	01c00644 	movi	r7,25
 c011484:	00000b06 	br	c0114b4 <_strtod_r+0xc30>
 c011488:	21000044 	addi	r4,r4,1
 c01148c:	20800003 	ldbu	r2,0(r4)
 c011490:	10ffefc4 	addi	r3,r2,-65
 c011494:	10803fcc 	andi	r2,r2,255
 c011498:	1080201c 	xori	r2,r2,128
 c01149c:	18c03fcc 	andi	r3,r3,255
 c0114a0:	10bfe004 	addi	r2,r2,-128
 c0114a4:	38c00136 	bltu	r7,r3,c0114ac <_strtod_r+0xc28>
 c0114a8:	10800804 	addi	r2,r2,32
 c0114ac:	29400044 	addi	r5,r5,1
 c0114b0:	11bd411e 	bne	r2,r6,c0109b8 <__alt_data_end+0xfc0109b8>
 c0114b4:	29800007 	ldb	r6,0(r5)
 c0114b8:	303ff31e 	bne	r6,zero,c011488 <__alt_data_end+0xfc011488>
 c0114bc:	20800044 	addi	r2,r4,1
 c0114c0:	d8800615 	stw	r2,24(sp)
 c0114c4:	20c00047 	ldb	r3,1(r4)
 c0114c8:	00800a04 	movi	r2,40
 c0114cc:	18bde326 	beq	r3,r2,c010c5c <__alt_data_end+0xfc010c5c>
 c0114d0:	05bffe34 	movhi	r22,65528
 c0114d4:	002f883a 	mov	r23,zero
 c0114d8:	003dea06 	br	c010c84 <__alt_data_end+0xfc010c84>
 c0114dc:	00800044 	movi	r2,1
 c0114e0:	b880ff26 	beq	r23,r2,c0118e0 <_strtod_r+0x105c>
 c0114e4:	014ffc34 	movhi	r5,16368
 c0114e8:	d8000f15 	stw	zero,60(sp)
 c0114ec:	052ffc34 	movhi	r20,49136
 c0114f0:	d8001015 	stw	zero,64(sp)
 c0114f4:	d9400d15 	stw	r5,52(sp)
 c0114f8:	003f4b06 	br	c011228 <__alt_data_end+0xfc011228>
 c0114fc:	d9001017 	ldw	r4,64(sp)
 c011500:	d9400d17 	ldw	r5,52(sp)
 c011504:	c0170680 	call	c017068 <__fixunsdfsi>
 c011508:	1000f126 	beq	r2,zero,c0118d0 <_strtod_r+0x104c>
 c01150c:	1009883a 	mov	r4,r2
 c011510:	c01a6300 	call	c01a630 <__floatunsidf>
 c011514:	d8801015 	stw	r2,64(sp)
 c011518:	d8c00d15 	stw	r3,52(sp)
 c01151c:	a800ea1e 	bne	r21,zero,c0118c8 <_strtod_r+0x1044>
 c011520:	d8800d17 	ldw	r2,52(sp)
 c011524:	1220003c 	xorhi	r8,r2,32768
 c011528:	d8c01017 	ldw	r3,64(sp)
 c01152c:	4029883a 	mov	r20,r8
 c011530:	d8c00f15 	stw	r3,60(sp)
 c011534:	003f4a06 	br	c011260 <__alt_data_end+0xfc011260>
 c011538:	d8000c15 	stw	zero,48(sp)
 c01153c:	003ea506 	br	c010fd4 <__alt_data_end+0xfc010fd4>
 c011540:	d8c00817 	ldw	r3,32(sp)
 c011544:	00bfffc4 	movi	r2,-1
 c011548:	1880441e 	bne	r3,r2,c01165c <_strtod_r+0xdd8>
 c01154c:	9011883a 	mov	r8,r18
 c011550:	d8800517 	ldw	r2,20(sp)
 c011554:	00c00884 	movi	r3,34
 c011558:	88c00015 	stw	r3,0(r17)
 c01155c:	d8000815 	stw	zero,32(sp)
 c011560:	071ffc34 	movhi	fp,32752
 c011564:	100b883a 	mov	r5,r2
 c011568:	8809883a 	mov	r4,r17
 c01156c:	da001315 	stw	r8,76(sp)
 c011570:	c00ebf00 	call	c00ebf0 <_Bfree>
 c011574:	980b883a 	mov	r5,r19
 c011578:	8809883a 	mov	r4,r17
 c01157c:	c00ebf00 	call	c00ebf0 <_Bfree>
 c011580:	800b883a 	mov	r5,r16
 c011584:	8809883a 	mov	r4,r17
 c011588:	c00ebf00 	call	c00ebf0 <_Bfree>
 c01158c:	d9400b17 	ldw	r5,44(sp)
 c011590:	8809883a 	mov	r4,r17
 c011594:	c00ebf00 	call	c00ebf0 <_Bfree>
 c011598:	da001317 	ldw	r8,76(sp)
 c01159c:	8809883a 	mov	r4,r17
 c0115a0:	400b883a 	mov	r5,r8
 c0115a4:	c00ebf00 	call	c00ebf0 <_Bfree>
 c0115a8:	003d5f06 	br	c010b28 <__alt_data_end+0xfc010b28>
 c0115ac:	d8c00a17 	ldw	r3,40(sp)
 c0115b0:	d8800504 	addi	r2,sp,20
 c0115b4:	018300b4 	movhi	r6,3074
 c0115b8:	31b79e04 	addi	r6,r6,-8584
 c0115bc:	d8c00115 	stw	r3,4(sp)
 c0115c0:	d8800015 	stw	r2,0(sp)
 c0115c4:	d9c00404 	addi	r7,sp,16
 c0115c8:	d9400604 	addi	r5,sp,24
 c0115cc:	8809883a 	mov	r4,r17
 c0115d0:	c0160e40 	call	c0160e4 <__gethex>
 c0115d4:	148001cc 	andi	r18,r2,7
 c0115d8:	903e2126 	beq	r18,zero,c010e60 <__alt_data_end+0xfc010e60>
 c0115dc:	00c00184 	movi	r3,6
 c0115e0:	90c0c71e 	bne	r18,r3,c011900 <_strtod_r+0x107c>
 c0115e4:	84000044 	addi	r16,r16,1
 c0115e8:	dc000615 	stw	r16,24(sp)
 c0115ec:	d8000815 	stw	zero,32(sp)
 c0115f0:	0039883a 	mov	fp,zero
 c0115f4:	d8000a15 	stw	zero,40(sp)
 c0115f8:	003d4b06 	br	c010b28 <__alt_data_end+0xfc010b28>
 c0115fc:	00bf2c34 	movhi	r2,64688
 c011600:	b0ad883a 	add	r22,r22,r2
 c011604:	b809883a 	mov	r4,r23
 c011608:	b00b883a 	mov	r5,r22
 c01160c:	c00f7280 	call	c00f728 <__ulp>
 c011610:	d9000f17 	ldw	r4,60(sp)
 c011614:	100d883a 	mov	r6,r2
 c011618:	180f883a 	mov	r7,r3
 c01161c:	a00b883a 	mov	r5,r20
 c011620:	c01936c0 	call	c01936c <__muldf3>
 c011624:	b80d883a 	mov	r6,r23
 c011628:	1009883a 	mov	r4,r2
 c01162c:	b00f883a 	mov	r7,r22
 c011630:	180b883a 	mov	r5,r3
 c011634:	c017e980 	call	c017e98 <__adddf3>
 c011638:	011f2834 	movhi	r4,31904
 c01163c:	102f883a 	mov	r23,r2
 c011640:	213fffc4 	addi	r4,r4,-1
 c011644:	189ffc2c 	andhi	r2,r3,32752
 c011648:	20807b2e 	bgeu	r4,r2,c011838 <_strtod_r+0xfb4>
 c01164c:	d9401217 	ldw	r5,72(sp)
 c011650:	009ffc34 	movhi	r2,32752
 c011654:	10bfffc4 	addi	r2,r2,-1
 c011658:	28bfb926 	beq	r5,r2,c011540 <__alt_data_end+0xfc011540>
 c01165c:	059ffc34 	movhi	r22,32752
 c011660:	b5bfffc4 	addi	r22,r22,-1
 c011664:	05ffffc4 	movi	r23,-1
 c011668:	003f1406 	br	c0112bc <__alt_data_end+0xfc0112bc>
 c01166c:	00800884 	movi	r2,34
 c011670:	88800015 	stw	r2,0(r17)
 c011674:	d8000815 	stw	zero,32(sp)
 c011678:	071ffc34 	movhi	fp,32752
 c01167c:	003d2a06 	br	c010b28 <__alt_data_end+0xfc010b28>
 c011680:	d9400d17 	ldw	r5,52(sp)
 c011684:	d9001017 	ldw	r4,64(sp)
 c011688:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c01168c:	1009883a 	mov	r4,r2
 c011690:	c01a5540 	call	c01a554 <__floatsidf>
 c011694:	d9001017 	ldw	r4,64(sp)
 c011698:	d9400d17 	ldw	r5,52(sp)
 c01169c:	100d883a 	mov	r6,r2
 c0116a0:	180f883a 	mov	r7,r3
 c0116a4:	c019bd80 	call	c019bd8 <__subdf3>
 c0116a8:	1011883a 	mov	r8,r2
 c0116ac:	1839883a 	mov	fp,r3
 c0116b0:	a800121e 	bne	r21,zero,c0116fc <_strtod_r+0xe78>
 c0116b4:	b800111e 	bne	r23,zero,c0116fc <_strtod_r+0xe78>
 c0116b8:	01400434 	movhi	r5,16
 c0116bc:	297fffc4 	addi	r5,r5,-1
 c0116c0:	a168703a 	and	r20,r20,r5
 c0116c4:	a0000d1e 	bne	r20,zero,c0116fc <_strtod_r+0xe78>
 c0116c8:	01a52834 	movhi	r6,38048
 c0116cc:	01cff434 	movhi	r7,16336
 c0116d0:	318d6544 	addi	r6,r6,13717
 c0116d4:	39ffffc4 	addi	r7,r7,-1
 c0116d8:	1009883a 	mov	r4,r2
 c0116dc:	180b883a 	mov	r5,r3
 c0116e0:	c0192780 	call	c019278 <__ledf2>
 c0116e4:	103ef50e 	bge	r2,zero,c0112bc <__alt_data_end+0xfc0112bc>
 c0116e8:	9011883a 	mov	r8,r18
 c0116ec:	d8800517 	ldw	r2,20(sp)
 c0116f0:	d8000815 	stw	zero,32(sp)
 c0116f4:	b039883a 	mov	fp,r22
 c0116f8:	003f9a06 	br	c011564 <__alt_data_end+0xfc011564>
 c0116fc:	01a52834 	movhi	r6,38048
 c011700:	01cff834 	movhi	r7,16352
 c011704:	4009883a 	mov	r4,r8
 c011708:	318d6544 	addi	r6,r6,13717
 c01170c:	39ffffc4 	addi	r7,r7,-1
 c011710:	e00b883a 	mov	r5,fp
 c011714:	da001315 	stw	r8,76(sp)
 c011718:	c0192780 	call	c019278 <__ledf2>
 c01171c:	da001317 	ldw	r8,76(sp)
 c011720:	10000716 	blt	r2,zero,c011740 <_strtod_r+0xebc>
 c011724:	018d6c34 	movhi	r6,13744
 c011728:	31b94d44 	addi	r6,r6,-6859
 c01172c:	01cff834 	movhi	r7,16352
 c011730:	4009883a 	mov	r4,r8
 c011734:	e00b883a 	mov	r5,fp
 c011738:	c01919c0 	call	c01919c <__gedf2>
 c01173c:	00bedf0e 	bge	zero,r2,c0112bc <__alt_data_end+0xfc0112bc>
 c011740:	9011883a 	mov	r8,r18
 c011744:	d8800517 	ldw	r2,20(sp)
 c011748:	ddc00815 	stw	r23,32(sp)
 c01174c:	b039883a 	mov	fp,r22
 c011750:	003f8406 	br	c011564 <__alt_data_end+0xfc011564>
 c011754:	903e1026 	beq	r18,zero,c010f98 <__alt_data_end+0xfc010f98>
 c011758:	04a5c83a 	sub	r18,zero,r18
 c01175c:	908003cc 	andi	r2,r18,15
 c011760:	10000b26 	beq	r2,zero,c011790 <_strtod_r+0xf0c>
 c011764:	100490fa 	slli	r2,r2,3
 c011768:	00c300b4 	movhi	r3,3074
 c01176c:	18f76304 	addi	r3,r3,-8820
 c011770:	1885883a 	add	r2,r3,r2
 c011774:	11800017 	ldw	r6,0(r2)
 c011778:	11c00117 	ldw	r7,4(r2)
 c01177c:	b809883a 	mov	r4,r23
 c011780:	b00b883a 	mov	r5,r22
 c011784:	c0187440 	call	c018744 <__divdf3>
 c011788:	102f883a 	mov	r23,r2
 c01178c:	182d883a 	mov	r22,r3
 c011790:	9025d13a 	srai	r18,r18,4
 c011794:	903e0026 	beq	r18,zero,c010f98 <__alt_data_end+0xfc010f98>
 c011798:	008007c4 	movi	r2,31
 c01179c:	14801f16 	blt	r2,r18,c01181c <_strtod_r+0xf98>
 c0117a0:	9080040c 	andi	r2,r18,16
 c0117a4:	10018d26 	beq	r2,zero,c011ddc <_strtod_r+0x1558>
 c0117a8:	00c01a84 	movi	r3,106
 c0117ac:	d8c00715 	stw	r3,28(sp)
 c0117b0:	04817e0e 	bge	zero,r18,c011dac <_strtod_r+0x1528>
 c0117b4:	050300b4 	movhi	r20,3074
 c0117b8:	a537a304 	addi	r20,r20,-8564
 c0117bc:	b805883a 	mov	r2,r23
 c0117c0:	b007883a 	mov	r3,r22
 c0117c4:	0009883a 	mov	r4,zero
 c0117c8:	9180004c 	andi	r6,r18,1
 c0117cc:	30000626 	beq	r6,zero,c0117e8 <_strtod_r+0xf64>
 c0117d0:	a1800017 	ldw	r6,0(r20)
 c0117d4:	a1c00117 	ldw	r7,4(r20)
 c0117d8:	1009883a 	mov	r4,r2
 c0117dc:	180b883a 	mov	r5,r3
 c0117e0:	c01936c0 	call	c01936c <__muldf3>
 c0117e4:	01000044 	movi	r4,1
 c0117e8:	9025d07a 	srai	r18,r18,1
 c0117ec:	a5000204 	addi	r20,r20,8
 c0117f0:	903ff51e 	bne	r18,zero,c0117c8 <__alt_data_end+0xfc0117c8>
 c0117f4:	21003fcc 	andi	r4,r4,255
 c0117f8:	2001891e 	bne	r4,zero,c011e20 <_strtod_r+0x159c>
 c0117fc:	d9000717 	ldw	r4,28(sp)
 c011800:	20016a1e 	bne	r4,zero,c011dac <_strtod_r+0x1528>
 c011804:	000d883a 	mov	r6,zero
 c011808:	000f883a 	mov	r7,zero
 c01180c:	b809883a 	mov	r4,r23
 c011810:	b00b883a 	mov	r5,r22
 c011814:	c0191140 	call	c019114 <__eqdf2>
 c011818:	103de01e 	bne	r2,zero,c010f9c <__alt_data_end+0xfc010f9c>
 c01181c:	00800884 	movi	r2,34
 c011820:	88800015 	stw	r2,0(r17)
 c011824:	d8000815 	stw	zero,32(sp)
 c011828:	0039883a 	mov	fp,zero
 c01182c:	003cbe06 	br	c010b28 <__alt_data_end+0xfc010b28>
 c011830:	011387c4 	movi	r4,19999
 c011834:	003d5606 	br	c010d90 <__alt_data_end+0xfc010d90>
 c011838:	0580d434 	movhi	r22,848
 c01183c:	1dad883a 	add	r22,r3,r22
 c011840:	b029883a 	mov	r20,r22
 c011844:	003e9906 	br	c0112ac <__alt_data_end+0xfc0112ac>
 c011848:	e5c03fcc 	andi	r23,fp,255
 c01184c:	bdc0201c 	xori	r23,r23,128
 c011850:	bdffe004 	addi	r23,r23,-128
 c011854:	dc800817 	ldw	r18,32(sp)
 c011858:	0029883a 	mov	r20,zero
 c01185c:	0027883a 	mov	r19,zero
 c011860:	0021883a 	mov	r16,zero
 c011864:	003c9806 	br	c010ac8 <__alt_data_end+0xfc010ac8>
 c011868:	00c00944 	movi	r3,37
 c01186c:	1f07c83a 	sub	r3,r3,fp
 c011870:	1d7d7e16 	blt	r3,r21,c010e6c <__alt_data_end+0xfc010e6c>
 c011874:	1721c83a 	sub	r16,r2,fp
 c011878:	800490fa 	slli	r2,r16,3
 c01187c:	044300b4 	movhi	r17,3074
 c011880:	8c776304 	addi	r17,r17,-8820
 c011884:	8885883a 	add	r2,r17,r2
 c011888:	11000017 	ldw	r4,0(r2)
 c01188c:	11400117 	ldw	r5,4(r2)
 c011890:	b80d883a 	mov	r6,r23
 c011894:	b00f883a 	mov	r7,r22
 c011898:	c01936c0 	call	c01936c <__muldf3>
 c01189c:	ac2bc83a 	sub	r21,r21,r16
 c0118a0:	a80c90fa 	slli	r6,r21,3
 c0118a4:	1009883a 	mov	r4,r2
 c0118a8:	180b883a 	mov	r5,r3
 c0118ac:	8985883a 	add	r2,r17,r6
 c0118b0:	11800017 	ldw	r6,0(r2)
 c0118b4:	11c00117 	ldw	r7,4(r2)
 c0118b8:	c01936c0 	call	c01936c <__muldf3>
 c0118bc:	d8800815 	stw	r2,32(sp)
 c0118c0:	1839883a 	mov	fp,r3
 c0118c4:	003c9806 	br	c010b28 <__alt_data_end+0xfc010b28>
 c0118c8:	da000d17 	ldw	r8,52(sp)
 c0118cc:	003f1606 	br	c011528 <__alt_data_end+0xfc011528>
 c0118d0:	014ffc34 	movhi	r5,16368
 c0118d4:	d8001015 	stw	zero,64(sp)
 c0118d8:	d9400d15 	stw	r5,52(sp)
 c0118dc:	003f0f06 	br	c01151c <__alt_data_end+0xfc01151c>
 c0118e0:	b03f001e 	bne	r22,zero,c0114e4 <__alt_data_end+0xfc0114e4>
 c0118e4:	9011883a 	mov	r8,r18
 c0118e8:	00800884 	movi	r2,34
 c0118ec:	88800015 	stw	r2,0(r17)
 c0118f0:	d8000815 	stw	zero,32(sp)
 c0118f4:	d8800517 	ldw	r2,20(sp)
 c0118f8:	0039883a 	mov	fp,zero
 c0118fc:	003f1906 	br	c011564 <__alt_data_end+0xfc011564>
 c011900:	d9800517 	ldw	r6,20(sp)
 c011904:	30000826 	beq	r6,zero,c011928 <_strtod_r+0x10a4>
 c011908:	01400d44 	movi	r5,53
 c01190c:	d9000204 	addi	r4,sp,8
 c011910:	d8801315 	stw	r2,76(sp)
 c011914:	c00fafc0 	call	c00fafc <__copybits>
 c011918:	d9400517 	ldw	r5,20(sp)
 c01191c:	8809883a 	mov	r4,r17
 c011920:	c00ebf00 	call	c00ebf0 <_Bfree>
 c011924:	d8801317 	ldw	r2,76(sp)
 c011928:	00c00184 	movi	r3,6
 c01192c:	1c800f36 	bltu	r3,r18,c01196c <_strtod_r+0x10e8>
 c011930:	902490ba 	slli	r18,r18,2
 c011934:	00c30074 	movhi	r3,3073
 c011938:	18c65204 	addi	r3,r3,6472
 c01193c:	90e5883a 	add	r18,r18,r3
 c011940:	90c00017 	ldw	r3,0(r18)
 c011944:	1800683a 	jmp	r3
 c011948:	0c0119c4 	addi	r16,at,1127
 c01194c:	0c01199c 	xori	r16,at,1126
 c011950:	0c011980 	call	c01198 <__alt_mem_onchip_memory2_0+0xc01198>
 c011954:	0c011964 	muli	r16,at,1125
 c011958:	0c01198c 	andi	r16,at,1126
 c01195c:	0c01199c 	xori	r16,at,1126
 c011960:	0c0119c4 	addi	r16,at,1127
 c011964:	059ffc34 	movhi	r22,32752
 c011968:	002f883a 	mov	r23,zero
 c01196c:	1080020c 	andi	r2,r2,8
 c011970:	ddc00815 	stw	r23,32(sp)
 c011974:	103cc426 	beq	r2,zero,c010c88 <__alt_data_end+0xfc010c88>
 c011978:	b7200034 	orhi	fp,r22,32768
 c01197c:	003c6a06 	br	c010b28 <__alt_data_end+0xfc010b28>
 c011980:	ddc00217 	ldw	r23,8(sp)
 c011984:	dd800317 	ldw	r22,12(sp)
 c011988:	003ff806 	br	c01196c <__alt_data_end+0xfc01196c>
 c01198c:	05a00034 	movhi	r22,32768
 c011990:	b5bfffc4 	addi	r22,r22,-1
 c011994:	05ffffc4 	movi	r23,-1
 c011998:	003ff406 	br	c01196c <__alt_data_end+0xfc01196c>
 c01199c:	d8c00417 	ldw	r3,16(sp)
 c0119a0:	dd800317 	ldw	r22,12(sp)
 c0119a4:	013ffc34 	movhi	r4,65520
 c0119a8:	18c10cc4 	addi	r3,r3,1075
 c0119ac:	1806953a 	slli	r3,r3,20
 c0119b0:	213fffc4 	addi	r4,r4,-1
 c0119b4:	b12c703a 	and	r22,r22,r4
 c0119b8:	ddc00217 	ldw	r23,8(sp)
 c0119bc:	b0ecb03a 	or	r22,r22,r3
 c0119c0:	003fea06 	br	c01196c <__alt_data_end+0xfc01196c>
 c0119c4:	002d883a 	mov	r22,zero
 c0119c8:	002f883a 	mov	r23,zero
 c0119cc:	003fe706 	br	c01196c <__alt_data_end+0xfc01196c>
 c0119d0:	d8c00b17 	ldw	r3,44(sp)
 c0119d4:	b72d883a 	add	r22,r22,fp
 c0119d8:	1887883a 	add	r3,r3,r2
 c0119dc:	d8c00b15 	stw	r3,44(sp)
 c0119e0:	00c00044 	movi	r3,1
 c0119e4:	10c11126 	beq	r2,r3,c011e2c <_strtod_r+0x15a8>
 c0119e8:	05c00204 	movi	r23,8
 c0119ec:	04800404 	movi	r18,16
 c0119f0:	e7000044 	addi	fp,fp,1
 c0119f4:	e0bfffc4 	addi	r2,fp,-1
 c0119f8:	b8802016 	blt	r23,r2,c011a7c <_strtod_r+0x11f8>
 c0119fc:	9809883a 	mov	r4,r19
 c011a00:	01400284 	movi	r5,10
 c011a04:	c00473c0 	call	c00473c <__mulsi3>
 c011a08:	1027883a 	mov	r19,r2
 c011a0c:	e5bff81e 	bne	fp,r22,c0119f0 <__alt_data_end+0xfc0119f0>
 c011a10:	ddc00617 	ldw	r23,24(sp)
 c011a14:	e7000044 	addi	fp,fp,1
 c011a18:	00800204 	movi	r2,8
 c011a1c:	1580100e 	bge	r2,r22,c011a60 <_strtod_r+0x11dc>
 c011a20:	00800404 	movi	r2,16
 c011a24:	002d883a 	mov	r22,zero
 c011a28:	173e7b16 	blt	r2,fp,c011418 <__alt_data_end+0xfc011418>
 c011a2c:	a009883a 	mov	r4,r20
 c011a30:	01400284 	movi	r5,10
 c011a34:	c00473c0 	call	c00473c <__mulsi3>
 c011a38:	a8a9883a 	add	r20,r21,r2
 c011a3c:	003e7606 	br	c011418 <__alt_data_end+0xfc011418>
 c011a40:	d9000617 	ldw	r4,24(sp)
 c011a44:	bdfff404 	addi	r23,r23,-48
 c011a48:	b5800044 	addi	r22,r22,1
 c011a4c:	ddc00e15 	stw	r23,56(sp)
 c011a50:	d9000815 	stw	r4,32(sp)
 c011a54:	dd800b15 	stw	r22,44(sp)
 c011a58:	202f883a 	mov	r23,r4
 c011a5c:	07000044 	movi	fp,1
 c011a60:	9809883a 	mov	r4,r19
 c011a64:	01400284 	movi	r5,10
 c011a68:	c00473c0 	call	c00473c <__mulsi3>
 c011a6c:	d8c00e17 	ldw	r3,56(sp)
 c011a70:	002d883a 	mov	r22,zero
 c011a74:	18a7883a 	add	r19,r3,r2
 c011a78:	003e6706 	br	c011418 <__alt_data_end+0xfc011418>
 c011a7c:	973fe316 	blt	r18,fp,c011a0c <__alt_data_end+0xfc011a0c>
 c011a80:	a009883a 	mov	r4,r20
 c011a84:	01400284 	movi	r5,10
 c011a88:	c00473c0 	call	c00473c <__mulsi3>
 c011a8c:	1029883a 	mov	r20,r2
 c011a90:	003fde06 	br	c011a0c <__alt_data_end+0xfc011a0c>
 c011a94:	00bffa84 	movi	r2,-22
 c011a98:	a8bcf416 	blt	r21,r2,c010e6c <__alt_data_end+0xfc010e6c>
 c011a9c:	a82a90fa 	slli	r21,r21,3
 c011aa0:	008300b4 	movhi	r2,3074
 c011aa4:	10b76304 	addi	r2,r2,-8820
 c011aa8:	1545c83a 	sub	r2,r2,r21
 c011aac:	11800017 	ldw	r6,0(r2)
 c011ab0:	11c00117 	ldw	r7,4(r2)
 c011ab4:	b809883a 	mov	r4,r23
 c011ab8:	b00b883a 	mov	r5,r22
 c011abc:	c0187440 	call	c018744 <__divdf3>
 c011ac0:	d8800815 	stw	r2,32(sp)
 c011ac4:	1839883a 	mov	fp,r3
 c011ac8:	003c1706 	br	c010b28 <__alt_data_end+0xfc010b28>
 c011acc:	9011883a 	mov	r8,r18
 c011ad0:	003ea006 	br	c011554 <__alt_data_end+0xfc011554>
 c011ad4:	014300b4 	movhi	r5,3074
 c011ad8:	d9000617 	ldw	r4,24(sp)
 c011adc:	29779504 	addi	r5,r5,-8620
 c011ae0:	01c00644 	movi	r7,25
 c011ae4:	00000b06 	br	c011b14 <_strtod_r+0x1290>
 c011ae8:	21000044 	addi	r4,r4,1
 c011aec:	20800003 	ldbu	r2,0(r4)
 c011af0:	10ffefc4 	addi	r3,r2,-65
 c011af4:	10803fcc 	andi	r2,r2,255
 c011af8:	1080201c 	xori	r2,r2,128
 c011afc:	18c03fcc 	andi	r3,r3,255
 c011b00:	10bfe004 	addi	r2,r2,-128
 c011b04:	38c00136 	bltu	r7,r3,c011b0c <_strtod_r+0x1288>
 c011b08:	10800804 	addi	r2,r2,32
 c011b0c:	29400044 	addi	r5,r5,1
 c011b10:	11bba91e 	bne	r2,r6,c0109b8 <__alt_data_end+0xfc0109b8>
 c011b14:	29800007 	ldb	r6,0(r5)
 c011b18:	303ff31e 	bne	r6,zero,c011ae8 <__alt_data_end+0xfc011ae8>
 c011b1c:	018300b4 	movhi	r6,3074
 c011b20:	d9000615 	stw	r4,24(sp)
 c011b24:	31b79604 	addi	r6,r6,-8616
 c011b28:	200b883a 	mov	r5,r4
 c011b2c:	02000644 	movi	r8,25
 c011b30:	00000a06 	br	c011b5c <_strtod_r+0x12d8>
 c011b34:	28800003 	ldbu	r2,0(r5)
 c011b38:	10ffefc4 	addi	r3,r2,-65
 c011b3c:	10803fcc 	andi	r2,r2,255
 c011b40:	1080201c 	xori	r2,r2,128
 c011b44:	18c03fcc 	andi	r3,r3,255
 c011b48:	10bfe004 	addi	r2,r2,-128
 c011b4c:	40c00136 	bltu	r8,r3,c011b54 <_strtod_r+0x12d0>
 c011b50:	10800804 	addi	r2,r2,32
 c011b54:	31800044 	addi	r6,r6,1
 c011b58:	11c0691e 	bne	r2,r7,c011d00 <_strtod_r+0x147c>
 c011b5c:	31c00007 	ldb	r7,0(r6)
 c011b60:	29400044 	addi	r5,r5,1
 c011b64:	383ff31e 	bne	r7,zero,c011b34 <__alt_data_end+0xfc011b34>
 c011b68:	d9400615 	stw	r5,24(sp)
 c011b6c:	059ffc34 	movhi	r22,32752
 c011b70:	002f883a 	mov	r23,zero
 c011b74:	003c4306 	br	c010c84 <__alt_data_end+0xfc010c84>
 c011b78:	002d883a 	mov	r22,zero
 c011b7c:	003cad06 	br	c010e34 <__alt_data_end+0xfc010e34>
 c011b80:	9011883a 	mov	r8,r18
 c011b84:	df001217 	ldw	fp,72(sp)
 c011b88:	a800461e 	bne	r21,zero,c011ca4 <_strtod_r+0x1420>
 c011b8c:	b800451e 	bne	r23,zero,c011ca4 <_strtod_r+0x1420>
 c011b90:	00800434 	movhi	r2,16
 c011b94:	10bfffc4 	addi	r2,r2,-1
 c011b98:	b084703a 	and	r2,r22,r2
 c011b9c:	1000411e 	bne	r2,zero,c011ca4 <_strtod_r+0x1420>
 c011ba0:	b49ffc2c 	andhi	r18,r22,32752
 c011ba4:	0081ac34 	movhi	r2,1712
 c011ba8:	14803e2e 	bgeu	r2,r18,c011ca4 <_strtod_r+0x1420>
 c011bac:	40800517 	ldw	r2,20(r8)
 c011bb0:	1000031e 	bne	r2,zero,c011bc0 <_strtod_r+0x133c>
 c011bb4:	40800417 	ldw	r2,16(r8)
 c011bb8:	00c00044 	movi	r3,1
 c011bbc:	1880390e 	bge	r3,r2,c011ca4 <_strtod_r+0x1420>
 c011bc0:	400b883a 	mov	r5,r8
 c011bc4:	01800044 	movi	r6,1
 c011bc8:	8809883a 	mov	r4,r17
 c011bcc:	c00f3840 	call	c00f384 <__lshift>
 c011bd0:	800b883a 	mov	r5,r16
 c011bd4:	1009883a 	mov	r4,r2
 c011bd8:	d8801315 	stw	r2,76(sp)
 c011bdc:	c00f4cc0 	call	c00f4cc <__mcmp>
 c011be0:	da001317 	ldw	r8,76(sp)
 c011be4:	00802f0e 	bge	zero,r2,c011ca4 <_strtod_r+0x1420>
 c011be8:	d9000717 	ldw	r4,28(sp)
 c011bec:	20008026 	beq	r4,zero,c011df0 <_strtod_r+0x156c>
 c011bf0:	0081ac34 	movhi	r2,1712
 c011bf4:	14807e16 	blt	r2,r18,c011df0 <_strtod_r+0x156c>
 c011bf8:	0080dc34 	movhi	r2,880
 c011bfc:	14bf3a0e 	bge	r2,r18,c0118e8 <__alt_data_end+0xfc0118e8>
 c011c00:	d9000817 	ldw	r4,32(sp)
 c011c04:	e00b883a 	mov	r5,fp
 c011c08:	000d883a 	mov	r6,zero
 c011c0c:	01ce5434 	movhi	r7,14672
 c011c10:	da001315 	stw	r8,76(sp)
 c011c14:	c01936c0 	call	c01936c <__muldf3>
 c011c18:	d8800815 	stw	r2,32(sp)
 c011c1c:	1839883a 	mov	fp,r3
 c011c20:	da001317 	ldw	r8,76(sp)
 c011c24:	1800211e 	bne	r3,zero,c011cac <_strtod_r+0x1428>
 c011c28:	d8c00817 	ldw	r3,32(sp)
 c011c2c:	d8800517 	ldw	r2,20(sp)
 c011c30:	183e4c1e 	bne	r3,zero,c011564 <__alt_data_end+0xfc011564>
 c011c34:	00c00884 	movi	r3,34
 c011c38:	88c00015 	stw	r3,0(r17)
 c011c3c:	003e4906 	br	c011564 <__alt_data_end+0xfc011564>
 c011c40:	00800434 	movhi	r2,16
 c011c44:	9011883a 	mov	r8,r18
 c011c48:	df001217 	ldw	fp,72(sp)
 c011c4c:	10bfffc4 	addi	r2,r2,-1
 c011c50:	a8002226 	beq	r21,zero,c011cdc <_strtod_r+0x1458>
 c011c54:	b086703a 	and	r3,r22,r2
 c011c58:	18804126 	beq	r3,r2,c011d60 <_strtod_r+0x14dc>
 c011c5c:	d8c00d17 	ldw	r3,52(sp)
 c011c60:	18002326 	beq	r3,zero,c011cf0 <_strtod_r+0x146c>
 c011c64:	1da4703a 	and	r18,r3,r22
 c011c68:	90000e26 	beq	r18,zero,c011ca4 <_strtod_r+0x1420>
 c011c6c:	da001315 	stw	r8,76(sp)
 c011c70:	d9800717 	ldw	r6,28(sp)
 c011c74:	b809883a 	mov	r4,r23
 c011c78:	b00b883a 	mov	r5,r22
 c011c7c:	a8002826 	beq	r21,zero,c011d20 <_strtod_r+0x149c>
 c011c80:	c0108200 	call	c010820 <sulp>
 c011c84:	100d883a 	mov	r6,r2
 c011c88:	180f883a 	mov	r7,r3
 c011c8c:	b809883a 	mov	r4,r23
 c011c90:	b00b883a 	mov	r5,r22
 c011c94:	c017e980 	call	c017e98 <__adddf3>
 c011c98:	da001317 	ldw	r8,76(sp)
 c011c9c:	d8800815 	stw	r2,32(sp)
 c011ca0:	1839883a 	mov	fp,r3
 c011ca4:	d8800717 	ldw	r2,28(sp)
 c011ca8:	103fd51e 	bne	r2,zero,c011c00 <__alt_data_end+0xfc011c00>
 c011cac:	d8800517 	ldw	r2,20(sp)
 c011cb0:	003e2c06 	br	c011564 <__alt_data_end+0xfc011564>
 c011cb4:	0580d434 	movhi	r22,848
 c011cb8:	1dad883a 	add	r22,r3,r22
 c011cbc:	d8000715 	stw	zero,28(sp)
 c011cc0:	003cb606 	br	c010f9c <__alt_data_end+0xfc010f9c>
 c011cc4:	008ff834 	movhi	r2,16352
 c011cc8:	0029883a 	mov	r20,zero
 c011ccc:	022ff834 	movhi	r8,49120
 c011cd0:	d8001015 	stw	zero,64(sp)
 c011cd4:	d8800d15 	stw	r2,52(sp)
 c011cd8:	003dc106 	br	c0113e0 <__alt_data_end+0xfc0113e0>
 c011cdc:	b084703a 	and	r2,r22,r2
 c011ce0:	103fde1e 	bne	r2,zero,c011c5c <__alt_data_end+0xfc011c5c>
 c011ce4:	b83fdd1e 	bne	r23,zero,c011c5c <__alt_data_end+0xfc011c5c>
 c011ce8:	b49ffc2c 	andhi	r18,r22,32752
 c011cec:	003fbe06 	br	c011be8 <__alt_data_end+0xfc011be8>
 c011cf0:	d8c00f17 	ldw	r3,60(sp)
 c011cf4:	1de8703a 	and	r20,r3,r23
 c011cf8:	a03fea26 	beq	r20,zero,c011ca4 <__alt_data_end+0xfc011ca4>
 c011cfc:	003fdb06 	br	c011c6c <__alt_data_end+0xfc011c6c>
 c011d00:	21000044 	addi	r4,r4,1
 c011d04:	d9000615 	stw	r4,24(sp)
 c011d08:	003f9806 	br	c011b6c <__alt_data_end+0xfc011b6c>
 c011d0c:	014300b4 	movhi	r5,3074
 c011d10:	29775904 	addi	r5,r5,-8860
 c011d14:	d9400715 	stw	r5,28(sp)
 c011d18:	0025883a 	mov	r18,zero
 c011d1c:	003c8c06 	br	c010f50 <__alt_data_end+0xfc010f50>
 c011d20:	c0108200 	call	c010820 <sulp>
 c011d24:	100d883a 	mov	r6,r2
 c011d28:	180f883a 	mov	r7,r3
 c011d2c:	b809883a 	mov	r4,r23
 c011d30:	b00b883a 	mov	r5,r22
 c011d34:	c019bd80 	call	c019bd8 <__subdf3>
 c011d38:	000d883a 	mov	r6,zero
 c011d3c:	000f883a 	mov	r7,zero
 c011d40:	1009883a 	mov	r4,r2
 c011d44:	180b883a 	mov	r5,r3
 c011d48:	d8800815 	stw	r2,32(sp)
 c011d4c:	1839883a 	mov	fp,r3
 c011d50:	c0191140 	call	c019114 <__eqdf2>
 c011d54:	da001317 	ldw	r8,76(sp)
 c011d58:	103ee326 	beq	r2,zero,c0118e8 <__alt_data_end+0xfc0118e8>
 c011d5c:	003fd106 	br	c011ca4 <__alt_data_end+0xfc011ca4>
 c011d60:	d8c00717 	ldw	r3,28(sp)
 c011d64:	18002026 	beq	r3,zero,c011de8 <_strtod_r+0x1564>
 c011d68:	b09ffc2c 	andhi	r2,r22,32752
 c011d6c:	00c1a834 	movhi	r3,1696
 c011d70:	18801d36 	bltu	r3,r2,c011de8 <_strtod_r+0x1564>
 c011d74:	1004d53a 	srli	r2,r2,20
 c011d78:	00c01ac4 	movi	r3,107
 c011d7c:	1887c83a 	sub	r3,r3,r2
 c011d80:	00bfffc4 	movi	r2,-1
 c011d84:	10c4983a 	sll	r2,r2,r3
 c011d88:	15ffb41e 	bne	r2,r23,c011c5c <__alt_data_end+0xfc011c5c>
 c011d8c:	00dffc34 	movhi	r3,32752
 c011d90:	18ffffc4 	addi	r3,r3,-1
 c011d94:	b0c03126 	beq	r22,r3,c011e5c <_strtod_r+0x15d8>
 c011d98:	b59ffc2c 	andhi	r22,r22,32752
 c011d9c:	00800434 	movhi	r2,16
 c011da0:	d8000815 	stw	zero,32(sp)
 c011da4:	b0b9883a 	add	fp,r22,r2
 c011da8:	003fbe06 	br	c011ca4 <__alt_data_end+0xfc011ca4>
 c011dac:	b49ffc2c 	andhi	r18,r22,32752
 c011db0:	9024d53a 	srli	r18,r18,20
 c011db4:	00801ac4 	movi	r2,107
 c011db8:	14a5c83a 	sub	r18,r2,r18
 c011dbc:	04be910e 	bge	zero,r18,c011804 <__alt_data_end+0xfc011804>
 c011dc0:	008007c4 	movi	r2,31
 c011dc4:	1480120e 	bge	r2,r18,c011e10 <_strtod_r+0x158c>
 c011dc8:	00800d04 	movi	r2,52
 c011dcc:	002f883a 	mov	r23,zero
 c011dd0:	14801a0e 	bge	r2,r18,c011e3c <_strtod_r+0x15b8>
 c011dd4:	0580dc34 	movhi	r22,880
 c011dd8:	003e8a06 	br	c011804 <__alt_data_end+0xfc011804>
 c011ddc:	d8000715 	stw	zero,28(sp)
 c011de0:	04be7416 	blt	zero,r18,c0117b4 <__alt_data_end+0xfc0117b4>
 c011de4:	003e8706 	br	c011804 <__alt_data_end+0xfc011804>
 c011de8:	00bfffc4 	movi	r2,-1
 c011dec:	003fe606 	br	c011d88 <__alt_data_end+0xfc011d88>
 c011df0:	073ffc34 	movhi	fp,65520
 c011df4:	9725883a 	add	r18,r18,fp
 c011df8:	017fffc4 	movi	r5,-1
 c011dfc:	07000434 	movhi	fp,16
 c011e00:	e179883a 	add	fp,fp,r5
 c011e04:	d9400815 	stw	r5,32(sp)
 c011e08:	9738b03a 	or	fp,r18,fp
 c011e0c:	003fa506 	br	c011ca4 <__alt_data_end+0xfc011ca4>
 c011e10:	00bfffc4 	movi	r2,-1
 c011e14:	14a4983a 	sll	r18,r2,r18
 c011e18:	95ee703a 	and	r23,r18,r23
 c011e1c:	003e7906 	br	c011804 <__alt_data_end+0xfc011804>
 c011e20:	102f883a 	mov	r23,r2
 c011e24:	182d883a 	mov	r22,r3
 c011e28:	003e7406 	br	c0117fc <__alt_data_end+0xfc0117fc>
 c011e2c:	e02d883a 	mov	r22,fp
 c011e30:	ddc00617 	ldw	r23,24(sp)
 c011e34:	e0f9883a 	add	fp,fp,r3
 c011e38:	003ef706 	br	c011a18 <__alt_data_end+0xfc011a18>
 c011e3c:	94bff804 	addi	r18,r18,-32
 c011e40:	00bfffc4 	movi	r2,-1
 c011e44:	14a4983a 	sll	r18,r2,r18
 c011e48:	95ac703a 	and	r22,r18,r22
 c011e4c:	003e6d06 	br	c011804 <__alt_data_end+0xfc011804>
 c011e50:	102f883a 	mov	r23,r2
 c011e54:	182d883a 	mov	r22,r3
 c011e58:	003c3d06 	br	c010f50 <__alt_data_end+0xfc010f50>
 c011e5c:	00ffffc4 	movi	r3,-1
 c011e60:	10ffcd1e 	bne	r2,r3,c011d98 <__alt_data_end+0xfc011d98>
 c011e64:	003dba06 	br	c011550 <__alt_data_end+0xfc011550>

0c011e68 <strtod>:
 c011e68:	008300b4 	movhi	r2,3074
 c011e6c:	10bfc304 	addi	r2,r2,-244
 c011e70:	280d883a 	mov	r6,r5
 c011e74:	200b883a 	mov	r5,r4
 c011e78:	11000017 	ldw	r4,0(r2)
 c011e7c:	c0108841 	jmpi	c010884 <_strtod_r>

0c011e80 <strtof>:
 c011e80:	defffb04 	addi	sp,sp,-20
 c011e84:	dcc00315 	stw	r19,12(sp)
 c011e88:	04c300b4 	movhi	r19,3074
 c011e8c:	9cffc304 	addi	r19,r19,-244
 c011e90:	280d883a 	mov	r6,r5
 c011e94:	200b883a 	mov	r5,r4
 c011e98:	99000017 	ldw	r4,0(r19)
 c011e9c:	dfc00415 	stw	ra,16(sp)
 c011ea0:	dc800215 	stw	r18,8(sp)
 c011ea4:	dc400115 	stw	r17,4(sp)
 c011ea8:	dc000015 	stw	r16,0(sp)
 c011eac:	c0108840 	call	c010884 <_strtod_r>
 c011eb0:	1009883a 	mov	r4,r2
 c011eb4:	180b883a 	mov	r5,r3
 c011eb8:	1025883a 	mov	r18,r2
 c011ebc:	1823883a 	mov	r17,r3
 c011ec0:	c01a6d80 	call	c01a6d8 <__truncdfsf2>
 c011ec4:	000b883a 	mov	r5,zero
 c011ec8:	1009883a 	mov	r4,r2
 c011ecc:	1021883a 	mov	r16,r2
 c011ed0:	c017c9c0 	call	c017c9c <__eqsf2>
 c011ed4:	1000111e 	bne	r2,zero,c011f1c <strtof+0x9c>
 c011ed8:	000d883a 	mov	r6,zero
 c011edc:	000f883a 	mov	r7,zero
 c011ee0:	9009883a 	mov	r4,r18
 c011ee4:	880b883a 	mov	r5,r17
 c011ee8:	c0191140 	call	c019114 <__eqdf2>
 c011eec:	10000b26 	beq	r2,zero,c011f1c <strtof+0x9c>
 c011ef0:	98800017 	ldw	r2,0(r19)
 c011ef4:	00c00884 	movi	r3,34
 c011ef8:	10c00015 	stw	r3,0(r2)
 c011efc:	8005883a 	mov	r2,r16
 c011f00:	dfc00417 	ldw	ra,16(sp)
 c011f04:	dcc00317 	ldw	r19,12(sp)
 c011f08:	dc800217 	ldw	r18,8(sp)
 c011f0c:	dc400117 	ldw	r17,4(sp)
 c011f10:	dc000017 	ldw	r16,0(sp)
 c011f14:	dec00504 	addi	sp,sp,20
 c011f18:	f800283a 	ret
 c011f1c:	015fe034 	movhi	r5,32640
 c011f20:	297fffc4 	addi	r5,r5,-1
 c011f24:	8009883a 	mov	r4,r16
 c011f28:	c017d140 	call	c017d14 <__gesf2>
 c011f2c:	0080070e 	bge	zero,r2,c011f4c <strtof+0xcc>
 c011f30:	01dffc34 	movhi	r7,32752
 c011f34:	39ffffc4 	addi	r7,r7,-1
 c011f38:	01bfffc4 	movi	r6,-1
 c011f3c:	9009883a 	mov	r4,r18
 c011f40:	880b883a 	mov	r5,r17
 c011f44:	c01919c0 	call	c01919c <__gedf2>
 c011f48:	00bfe90e 	bge	zero,r2,c011ef0 <__alt_data_end+0xfc011ef0>
 c011f4c:	017fe034 	movhi	r5,65408
 c011f50:	297fffc4 	addi	r5,r5,-1
 c011f54:	8009883a 	mov	r4,r16
 c011f58:	c017dd00 	call	c017dd0 <__lesf2>
 c011f5c:	103fe70e 	bge	r2,zero,c011efc <__alt_data_end+0xfc011efc>
 c011f60:	01fffc34 	movhi	r7,65520
 c011f64:	39ffffc4 	addi	r7,r7,-1
 c011f68:	01bfffc4 	movi	r6,-1
 c011f6c:	9009883a 	mov	r4,r18
 c011f70:	880b883a 	mov	r5,r17
 c011f74:	c0192780 	call	c019278 <__ledf2>
 c011f78:	103fdd0e 	bge	r2,zero,c011ef0 <__alt_data_end+0xfc011ef0>
 c011f7c:	003fdf06 	br	c011efc <__alt_data_end+0xfc011efc>

0c011f80 <_strtol_r>:
 c011f80:	008300b4 	movhi	r2,3074
 c011f84:	defff204 	addi	sp,sp,-56
 c011f88:	10bfc104 	addi	r2,r2,-252
 c011f8c:	dd800a15 	stw	r22,40(sp)
 c011f90:	15800017 	ldw	r22,0(r2)
 c011f94:	df000c15 	stw	fp,48(sp)
 c011f98:	d9000315 	stw	r4,12(sp)
 c011f9c:	dfc00d15 	stw	ra,52(sp)
 c011fa0:	ddc00b15 	stw	r23,44(sp)
 c011fa4:	dd400915 	stw	r21,36(sp)
 c011fa8:	dd000815 	stw	r20,32(sp)
 c011fac:	dcc00715 	stw	r19,28(sp)
 c011fb0:	dc800615 	stw	r18,24(sp)
 c011fb4:	dc400515 	stw	r17,20(sp)
 c011fb8:	dc000415 	stw	r16,16(sp)
 c011fbc:	d9400215 	stw	r5,8(sp)
 c011fc0:	d9800015 	stw	r6,0(sp)
 c011fc4:	3839883a 	mov	fp,r7
 c011fc8:	2809883a 	mov	r4,r5
 c011fcc:	24000003 	ldbu	r16,0(r4)
 c011fd0:	24400044 	addi	r17,r4,1
 c011fd4:	2007883a 	mov	r3,r4
 c011fd8:	b405883a 	add	r2,r22,r16
 c011fdc:	10800043 	ldbu	r2,1(r2)
 c011fe0:	8809883a 	mov	r4,r17
 c011fe4:	1080020c 	andi	r2,r2,8
 c011fe8:	103ff81e 	bne	r2,zero,c011fcc <__alt_data_end+0xfc011fcc>
 c011fec:	00800b44 	movi	r2,45
 c011ff0:	80805526 	beq	r16,r2,c012148 <_strtol_r+0x1c8>
 c011ff4:	00800ac4 	movi	r2,43
 c011ff8:	80806026 	beq	r16,r2,c01217c <_strtol_r+0x1fc>
 c011ffc:	0029883a 	mov	r20,zero
 c012000:	e0004726 	beq	fp,zero,c012120 <_strtol_r+0x1a0>
 c012004:	00800404 	movi	r2,16
 c012008:	e0806626 	beq	fp,r2,c0121a4 <_strtol_r+0x224>
 c01200c:	e027883a 	mov	r19,fp
 c012010:	00a00034 	movhi	r2,32768
 c012014:	a025003a 	cmpeq	r18,r20,zero
 c012018:	14a5c83a 	sub	r18,r2,r18
 c01201c:	9009883a 	mov	r4,r18
 c012020:	980b883a 	mov	r5,r19
 c012024:	c0046e40 	call	c0046e4 <__umodsi3>
 c012028:	9009883a 	mov	r4,r18
 c01202c:	980b883a 	mov	r5,r19
 c012030:	d8800115 	stw	r2,4(sp)
 c012034:	c0046800 	call	c004680 <__udivsi3>
 c012038:	b407883a 	add	r3,r22,r16
 c01203c:	18c00043 	ldbu	r3,1(r3)
 c012040:	102b883a 	mov	r21,r2
 c012044:	0009883a 	mov	r4,zero
 c012048:	1940010c 	andi	r5,r3,4
 c01204c:	0005883a 	mov	r2,zero
 c012050:	04800044 	movi	r18,1
 c012054:	05ffffc4 	movi	r23,-1
 c012058:	28000f26 	beq	r5,zero,c012098 <_strtol_r+0x118>
 c01205c:	843ff404 	addi	r16,r16,-48
 c012060:	8700130e 	bge	r16,fp,c0120b0 <_strtol_r+0x130>
 c012064:	15c00626 	beq	r2,r23,c012080 <_strtol_r+0x100>
 c012068:	a9002936 	bltu	r21,r4,c012110 <_strtol_r+0x190>
 c01206c:	25402626 	beq	r4,r21,c012108 <_strtol_r+0x188>
 c012070:	980b883a 	mov	r5,r19
 c012074:	c00473c0 	call	c00473c <__mulsi3>
 c012078:	8089883a 	add	r4,r16,r2
 c01207c:	00800044 	movi	r2,1
 c012080:	8c000003 	ldbu	r16,0(r17)
 c012084:	8c400044 	addi	r17,r17,1
 c012088:	b407883a 	add	r3,r22,r16
 c01208c:	18c00043 	ldbu	r3,1(r3)
 c012090:	1940010c 	andi	r5,r3,4
 c012094:	283ff11e 	bne	r5,zero,c01205c <__alt_data_end+0xfc01205c>
 c012098:	18c000cc 	andi	r3,r3,3
 c01209c:	18000426 	beq	r3,zero,c0120b0 <_strtol_r+0x130>
 c0120a0:	1c801d26 	beq	r3,r18,c012118 <_strtol_r+0x198>
 c0120a4:	00c015c4 	movi	r3,87
 c0120a8:	80e1c83a 	sub	r16,r16,r3
 c0120ac:	873fed16 	blt	r16,fp,c012064 <__alt_data_end+0xfc012064>
 c0120b0:	00ffffc4 	movi	r3,-1
 c0120b4:	10c02826 	beq	r2,r3,c012158 <_strtol_r+0x1d8>
 c0120b8:	a0001e1e 	bne	r20,zero,c012134 <_strtol_r+0x1b4>
 c0120bc:	d8c00017 	ldw	r3,0(sp)
 c0120c0:	18004326 	beq	r3,zero,c0121d0 <_strtol_r+0x250>
 c0120c4:	10001d1e 	bne	r2,zero,c01213c <_strtol_r+0x1bc>
 c0120c8:	dd800217 	ldw	r22,8(sp)
 c0120cc:	2005883a 	mov	r2,r4
 c0120d0:	d8c00017 	ldw	r3,0(sp)
 c0120d4:	1d800015 	stw	r22,0(r3)
 c0120d8:	dfc00d17 	ldw	ra,52(sp)
 c0120dc:	df000c17 	ldw	fp,48(sp)
 c0120e0:	ddc00b17 	ldw	r23,44(sp)
 c0120e4:	dd800a17 	ldw	r22,40(sp)
 c0120e8:	dd400917 	ldw	r21,36(sp)
 c0120ec:	dd000817 	ldw	r20,32(sp)
 c0120f0:	dcc00717 	ldw	r19,28(sp)
 c0120f4:	dc800617 	ldw	r18,24(sp)
 c0120f8:	dc400517 	ldw	r17,20(sp)
 c0120fc:	dc000417 	ldw	r16,16(sp)
 c012100:	dec00e04 	addi	sp,sp,56
 c012104:	f800283a 	ret
 c012108:	d8c00117 	ldw	r3,4(sp)
 c01210c:	1c3fd80e 	bge	r3,r16,c012070 <__alt_data_end+0xfc012070>
 c012110:	00bfffc4 	movi	r2,-1
 c012114:	003fda06 	br	c012080 <__alt_data_end+0xfc012080>
 c012118:	00c00dc4 	movi	r3,55
 c01211c:	003fe206 	br	c0120a8 <__alt_data_end+0xfc0120a8>
 c012120:	00800c04 	movi	r2,48
 c012124:	80801926 	beq	r16,r2,c01218c <_strtol_r+0x20c>
 c012128:	07000284 	movi	fp,10
 c01212c:	e027883a 	mov	r19,fp
 c012130:	003fb706 	br	c012010 <__alt_data_end+0xfc012010>
 c012134:	0109c83a 	sub	r4,zero,r4
 c012138:	003fe006 	br	c0120bc <__alt_data_end+0xfc0120bc>
 c01213c:	2005883a 	mov	r2,r4
 c012140:	8dbfffc4 	addi	r22,r17,-1
 c012144:	003fe206 	br	c0120d0 <__alt_data_end+0xfc0120d0>
 c012148:	1c400084 	addi	r17,r3,2
 c01214c:	1c000043 	ldbu	r16,1(r3)
 c012150:	05000044 	movi	r20,1
 c012154:	003faa06 	br	c012000 <__alt_data_end+0xfc012000>
 c012158:	d9000317 	ldw	r4,12(sp)
 c01215c:	00c00884 	movi	r3,34
 c012160:	a005003a 	cmpeq	r2,r20,zero
 c012164:	20c00015 	stw	r3,0(r4)
 c012168:	00e00034 	movhi	r3,32768
 c01216c:	1885c83a 	sub	r2,r3,r2
 c012170:	d8c00017 	ldw	r3,0(sp)
 c012174:	183ff21e 	bne	r3,zero,c012140 <__alt_data_end+0xfc012140>
 c012178:	003fd706 	br	c0120d8 <__alt_data_end+0xfc0120d8>
 c01217c:	1c400084 	addi	r17,r3,2
 c012180:	1c000043 	ldbu	r16,1(r3)
 c012184:	0029883a 	mov	r20,zero
 c012188:	003f9d06 	br	c012000 <__alt_data_end+0xfc012000>
 c01218c:	88800003 	ldbu	r2,0(r17)
 c012190:	00c01604 	movi	r3,88
 c012194:	108037cc 	andi	r2,r2,223
 c012198:	10c00826 	beq	r2,r3,c0121bc <_strtol_r+0x23c>
 c01219c:	07000204 	movi	fp,8
 c0121a0:	003f9a06 	br	c01200c <__alt_data_end+0xfc01200c>
 c0121a4:	00800c04 	movi	r2,48
 c0121a8:	80bf981e 	bne	r16,r2,c01200c <__alt_data_end+0xfc01200c>
 c0121ac:	88800003 	ldbu	r2,0(r17)
 c0121b0:	00c01604 	movi	r3,88
 c0121b4:	108037cc 	andi	r2,r2,223
 c0121b8:	10ff941e 	bne	r2,r3,c01200c <__alt_data_end+0xfc01200c>
 c0121bc:	04c00404 	movi	r19,16
 c0121c0:	8c000043 	ldbu	r16,1(r17)
 c0121c4:	9839883a 	mov	fp,r19
 c0121c8:	8c400084 	addi	r17,r17,2
 c0121cc:	003f9006 	br	c012010 <__alt_data_end+0xfc012010>
 c0121d0:	2005883a 	mov	r2,r4
 c0121d4:	003fc006 	br	c0120d8 <__alt_data_end+0xfc0120d8>

0c0121d8 <strtol>:
 c0121d8:	008300b4 	movhi	r2,3074
 c0121dc:	10bfc304 	addi	r2,r2,-244
 c0121e0:	300f883a 	mov	r7,r6
 c0121e4:	280d883a 	mov	r6,r5
 c0121e8:	200b883a 	mov	r5,r4
 c0121ec:	11000017 	ldw	r4,0(r2)
 c0121f0:	c011f801 	jmpi	c011f80 <_strtol_r>

0c0121f4 <_strtoll_r>:
 c0121f4:	008300b4 	movhi	r2,3074
 c0121f8:	deffef04 	addi	sp,sp,-68
 c0121fc:	10bfc104 	addi	r2,r2,-252
 c012200:	dd800d15 	stw	r22,52(sp)
 c012204:	15800017 	ldw	r22,0(r2)
 c012208:	df000f15 	stw	fp,60(sp)
 c01220c:	d9000515 	stw	r4,20(sp)
 c012210:	dfc01015 	stw	ra,64(sp)
 c012214:	ddc00e15 	stw	r23,56(sp)
 c012218:	dd400c15 	stw	r21,48(sp)
 c01221c:	dd000b15 	stw	r20,44(sp)
 c012220:	dcc00a15 	stw	r19,40(sp)
 c012224:	dc800915 	stw	r18,36(sp)
 c012228:	dc400815 	stw	r17,32(sp)
 c01222c:	dc000715 	stw	r16,28(sp)
 c012230:	d9400415 	stw	r5,16(sp)
 c012234:	d9800215 	stw	r6,8(sp)
 c012238:	3839883a 	mov	fp,r7
 c01223c:	2809883a 	mov	r4,r5
 c012240:	22000003 	ldbu	r8,0(r4)
 c012244:	24400044 	addi	r17,r4,1
 c012248:	2007883a 	mov	r3,r4
 c01224c:	b205883a 	add	r2,r22,r8
 c012250:	10800043 	ldbu	r2,1(r2)
 c012254:	8809883a 	mov	r4,r17
 c012258:	1080020c 	andi	r2,r2,8
 c01225c:	103ff81e 	bne	r2,zero,c012240 <__alt_data_end+0xfc012240>
 c012260:	00800b44 	movi	r2,45
 c012264:	40807e26 	beq	r8,r2,c012460 <_strtoll_r+0x26c>
 c012268:	00800ac4 	movi	r2,43
 c01226c:	40808126 	beq	r8,r2,c012474 <_strtoll_r+0x280>
 c012270:	d8000115 	stw	zero,4(sp)
 c012274:	e0000b26 	beq	fp,zero,c0122a4 <_strtoll_r+0xb0>
 c012278:	00800404 	movi	r2,16
 c01227c:	e0808926 	beq	fp,r2,c0124a4 <_strtoll_r+0x2b0>
 c012280:	e00bd7fa 	srai	r5,fp,31
 c012284:	d9000117 	ldw	r4,4(sp)
 c012288:	e025883a 	mov	r18,fp
 c01228c:	d9400015 	stw	r5,0(sp)
 c012290:	20000b1e 	bne	r4,zero,c0122c0 <_strtoll_r+0xcc>
 c012294:	04200034 	movhi	r16,32768
 c012298:	843fffc4 	addi	r16,r16,-1
 c01229c:	053fffc4 	movi	r20,-1
 c0122a0:	00000906 	br	c0122c8 <_strtoll_r+0xd4>
 c0122a4:	00800c04 	movi	r2,48
 c0122a8:	40807626 	beq	r8,r2,c012484 <_strtoll_r+0x290>
 c0122ac:	04800284 	movi	r18,10
 c0122b0:	d8000015 	stw	zero,0(sp)
 c0122b4:	9039883a 	mov	fp,r18
 c0122b8:	d9000117 	ldw	r4,4(sp)
 c0122bc:	203ff526 	beq	r4,zero,c012294 <__alt_data_end+0xfc012294>
 c0122c0:	0029883a 	mov	r20,zero
 c0122c4:	04200034 	movhi	r16,32768
 c0122c8:	d9c00017 	ldw	r7,0(sp)
 c0122cc:	a009883a 	mov	r4,r20
 c0122d0:	800b883a 	mov	r5,r16
 c0122d4:	900d883a 	mov	r6,r18
 c0122d8:	da000615 	stw	r8,24(sp)
 c0122dc:	c0176d80 	call	c0176d8 <__umoddi3>
 c0122e0:	d9c00017 	ldw	r7,0(sp)
 c0122e4:	a009883a 	mov	r4,r20
 c0122e8:	800b883a 	mov	r5,r16
 c0122ec:	900d883a 	mov	r6,r18
 c0122f0:	d8800315 	stw	r2,12(sp)
 c0122f4:	c0170dc0 	call	c0170dc <__udivdi3>
 c0122f8:	da000617 	ldw	r8,24(sp)
 c0122fc:	1829883a 	mov	r20,r3
 c012300:	882f883a 	mov	r23,r17
 c012304:	b207883a 	add	r3,r22,r8
 c012308:	19800043 	ldbu	r6,1(r3)
 c01230c:	1021883a 	mov	r16,r2
 c012310:	000f883a 	mov	r7,zero
 c012314:	30c0010c 	andi	r3,r6,4
 c012318:	0009883a 	mov	r4,zero
 c01231c:	000b883a 	mov	r5,zero
 c012320:	04400044 	movi	r17,1
 c012324:	057fffc4 	movi	r21,-1
 c012328:	18000d26 	beq	r3,zero,c012360 <_strtoll_r+0x16c>
 c01232c:	44fff404 	addi	r19,r8,-48
 c012330:	9f00110e 	bge	r19,fp,c012378 <_strtoll_r+0x184>
 c012334:	3d400426 	beq	r7,r21,c012348 <_strtoll_r+0x154>
 c012338:	a1400236 	bltu	r20,r5,c012344 <_strtoll_r+0x150>
 c01233c:	2d002a1e 	bne	r5,r20,c0123e8 <_strtoll_r+0x1f4>
 c012340:	8100292e 	bgeu	r16,r4,c0123e8 <_strtoll_r+0x1f4>
 c012344:	01ffffc4 	movi	r7,-1
 c012348:	ba000003 	ldbu	r8,0(r23)
 c01234c:	bdc00044 	addi	r23,r23,1
 c012350:	b207883a 	add	r3,r22,r8
 c012354:	19800043 	ldbu	r6,1(r3)
 c012358:	30c0010c 	andi	r3,r6,4
 c01235c:	183ff31e 	bne	r3,zero,c01232c <__alt_data_end+0xfc01232c>
 c012360:	318000cc 	andi	r6,r6,3
 c012364:	30000426 	beq	r6,zero,c012378 <_strtoll_r+0x184>
 c012368:	34402b26 	beq	r6,r17,c012418 <_strtoll_r+0x224>
 c01236c:	00c015c4 	movi	r3,87
 c012370:	40e7c83a 	sub	r19,r8,r3
 c012374:	9f3fef16 	blt	r19,fp,c012334 <__alt_data_end+0xfc012334>
 c012378:	00bfffc4 	movi	r2,-1
 c01237c:	38802c26 	beq	r7,r2,c012430 <_strtoll_r+0x23c>
 c012380:	d8800117 	ldw	r2,4(sp)
 c012384:	10000426 	beq	r2,zero,c012398 <_strtoll_r+0x1a4>
 c012388:	0109c83a 	sub	r4,zero,r4
 c01238c:	2004c03a 	cmpne	r2,r4,zero
 c012390:	0151c83a 	sub	r8,zero,r5
 c012394:	408bc83a 	sub	r5,r8,r2
 c012398:	d8800217 	ldw	r2,8(sp)
 c01239c:	10005026 	beq	r2,zero,c0124e0 <_strtoll_r+0x2ec>
 c0123a0:	2005883a 	mov	r2,r4
 c0123a4:	2807883a 	mov	r3,r5
 c0123a8:	38002b1e 	bne	r7,zero,c012458 <_strtoll_r+0x264>
 c0123ac:	dd800417 	ldw	r22,16(sp)
 c0123b0:	d9000217 	ldw	r4,8(sp)
 c0123b4:	25800015 	stw	r22,0(r4)
 c0123b8:	dfc01017 	ldw	ra,64(sp)
 c0123bc:	df000f17 	ldw	fp,60(sp)
 c0123c0:	ddc00e17 	ldw	r23,56(sp)
 c0123c4:	dd800d17 	ldw	r22,52(sp)
 c0123c8:	dd400c17 	ldw	r21,48(sp)
 c0123cc:	dd000b17 	ldw	r20,44(sp)
 c0123d0:	dcc00a17 	ldw	r19,40(sp)
 c0123d4:	dc800917 	ldw	r18,36(sp)
 c0123d8:	dc400817 	ldw	r17,32(sp)
 c0123dc:	dc000717 	ldw	r16,28(sp)
 c0123e0:	dec01104 	addi	sp,sp,68
 c0123e4:	f800283a 	ret
 c0123e8:	24000d26 	beq	r4,r16,c012420 <_strtoll_r+0x22c>
 c0123ec:	d9c00017 	ldw	r7,0(sp)
 c0123f0:	900d883a 	mov	r6,r18
 c0123f4:	c016f5c0 	call	c016f5c <__muldi3>
 c0123f8:	980bd7fa 	srai	r5,r19,31
 c0123fc:	9885883a 	add	r2,r19,r2
 c012400:	14d1803a 	cmpltu	r8,r2,r19
 c012404:	28c7883a 	add	r3,r5,r3
 c012408:	1009883a 	mov	r4,r2
 c01240c:	40cb883a 	add	r5,r8,r3
 c012410:	01c00044 	movi	r7,1
 c012414:	003fcc06 	br	c012348 <__alt_data_end+0xfc012348>
 c012418:	00c00dc4 	movi	r3,55
 c01241c:	003fd406 	br	c012370 <__alt_data_end+0xfc012370>
 c012420:	2d3ff21e 	bne	r5,r20,c0123ec <__alt_data_end+0xfc0123ec>
 c012424:	d8800317 	ldw	r2,12(sp)
 c012428:	14ffc616 	blt	r2,r19,c012344 <__alt_data_end+0xfc012344>
 c01242c:	003fef06 	br	c0123ec <__alt_data_end+0xfc0123ec>
 c012430:	d9000117 	ldw	r4,4(sp)
 c012434:	2000271e 	bne	r4,zero,c0124d4 <_strtoll_r+0x2e0>
 c012438:	00e00034 	movhi	r3,32768
 c01243c:	18ffffc4 	addi	r3,r3,-1
 c012440:	3805883a 	mov	r2,r7
 c012444:	d9400517 	ldw	r5,20(sp)
 c012448:	01000884 	movi	r4,34
 c01244c:	29000015 	stw	r4,0(r5)
 c012450:	d9000217 	ldw	r4,8(sp)
 c012454:	203fd826 	beq	r4,zero,c0123b8 <__alt_data_end+0xfc0123b8>
 c012458:	bdbfffc4 	addi	r22,r23,-1
 c01245c:	003fd406 	br	c0123b0 <__alt_data_end+0xfc0123b0>
 c012460:	00800044 	movi	r2,1
 c012464:	1c400084 	addi	r17,r3,2
 c012468:	1a000043 	ldbu	r8,1(r3)
 c01246c:	d8800115 	stw	r2,4(sp)
 c012470:	003f8006 	br	c012274 <__alt_data_end+0xfc012274>
 c012474:	1c400084 	addi	r17,r3,2
 c012478:	1a000043 	ldbu	r8,1(r3)
 c01247c:	d8000115 	stw	zero,4(sp)
 c012480:	003f7c06 	br	c012274 <__alt_data_end+0xfc012274>
 c012484:	88800003 	ldbu	r2,0(r17)
 c012488:	00c01604 	movi	r3,88
 c01248c:	108037cc 	andi	r2,r2,223
 c012490:	10c00a26 	beq	r2,r3,c0124bc <_strtoll_r+0x2c8>
 c012494:	04800204 	movi	r18,8
 c012498:	d8000015 	stw	zero,0(sp)
 c01249c:	9039883a 	mov	fp,r18
 c0124a0:	003f8506 	br	c0122b8 <__alt_data_end+0xfc0122b8>
 c0124a4:	00800c04 	movi	r2,48
 c0124a8:	4080101e 	bne	r8,r2,c0124ec <_strtoll_r+0x2f8>
 c0124ac:	88800003 	ldbu	r2,0(r17)
 c0124b0:	00c01604 	movi	r3,88
 c0124b4:	108037cc 	andi	r2,r2,223
 c0124b8:	10c00c1e 	bne	r2,r3,c0124ec <_strtoll_r+0x2f8>
 c0124bc:	04800404 	movi	r18,16
 c0124c0:	8a000043 	ldbu	r8,1(r17)
 c0124c4:	d8000015 	stw	zero,0(sp)
 c0124c8:	8c400084 	addi	r17,r17,2
 c0124cc:	9039883a 	mov	fp,r18
 c0124d0:	003f7906 	br	c0122b8 <__alt_data_end+0xfc0122b8>
 c0124d4:	0005883a 	mov	r2,zero
 c0124d8:	00e00034 	movhi	r3,32768
 c0124dc:	003fd906 	br	c012444 <__alt_data_end+0xfc012444>
 c0124e0:	2005883a 	mov	r2,r4
 c0124e4:	2807883a 	mov	r3,r5
 c0124e8:	003fb306 	br	c0123b8 <__alt_data_end+0xfc0123b8>
 c0124ec:	e025883a 	mov	r18,fp
 c0124f0:	d8000015 	stw	zero,0(sp)
 c0124f4:	003f7006 	br	c0122b8 <__alt_data_end+0xfc0122b8>

0c0124f8 <_strtoul_r>:
 c0124f8:	008300b4 	movhi	r2,3074
 c0124fc:	defff204 	addi	sp,sp,-56
 c012500:	10bfc104 	addi	r2,r2,-252
 c012504:	dd800a15 	stw	r22,40(sp)
 c012508:	15800017 	ldw	r22,0(r2)
 c01250c:	df000c15 	stw	fp,48(sp)
 c012510:	dd400915 	stw	r21,36(sp)
 c012514:	d9000315 	stw	r4,12(sp)
 c012518:	dfc00d15 	stw	ra,52(sp)
 c01251c:	ddc00b15 	stw	r23,44(sp)
 c012520:	dd000815 	stw	r20,32(sp)
 c012524:	dcc00715 	stw	r19,28(sp)
 c012528:	dc800615 	stw	r18,24(sp)
 c01252c:	dc400515 	stw	r17,20(sp)
 c012530:	dc000415 	stw	r16,16(sp)
 c012534:	d9400015 	stw	r5,0(sp)
 c012538:	302b883a 	mov	r21,r6
 c01253c:	3839883a 	mov	fp,r7
 c012540:	2809883a 	mov	r4,r5
 c012544:	24000003 	ldbu	r16,0(r4)
 c012548:	24400044 	addi	r17,r4,1
 c01254c:	2007883a 	mov	r3,r4
 c012550:	b405883a 	add	r2,r22,r16
 c012554:	10800043 	ldbu	r2,1(r2)
 c012558:	8809883a 	mov	r4,r17
 c01255c:	1080020c 	andi	r2,r2,8
 c012560:	103ff81e 	bne	r2,zero,c012544 <__alt_data_end+0xfc012544>
 c012564:	00800b44 	movi	r2,45
 c012568:	80805826 	beq	r16,r2,c0126cc <_strtoul_r+0x1d4>
 c01256c:	00800ac4 	movi	r2,43
 c012570:	80805b26 	beq	r16,r2,c0126e0 <_strtoul_r+0x1e8>
 c012574:	d8000215 	stw	zero,8(sp)
 c012578:	e0000d26 	beq	fp,zero,c0125b0 <_strtoul_r+0xb8>
 c01257c:	00800404 	movi	r2,16
 c012580:	e0806626 	beq	fp,r2,c01271c <_strtoul_r+0x224>
 c012584:	013fffc4 	movi	r4,-1
 c012588:	e00b883a 	mov	r5,fp
 c01258c:	c0046800 	call	c004680 <__udivsi3>
 c012590:	e00b883a 	mov	r5,fp
 c012594:	013fffc4 	movi	r4,-1
 c012598:	1025883a 	mov	r18,r2
 c01259c:	c0046e40 	call	c0046e4 <__umodsi3>
 c0125a0:	d8800115 	stw	r2,4(sp)
 c0125a4:	e027883a 	mov	r19,fp
 c0125a8:	902f883a 	mov	r23,r18
 c0125ac:	00000806 	br	c0125d0 <_strtoul_r+0xd8>
 c0125b0:	00800c04 	movi	r2,48
 c0125b4:	80804e26 	beq	r16,r2,c0126f0 <_strtoul_r+0x1f8>
 c0125b8:	07000284 	movi	fp,10
 c0125bc:	00c00144 	movi	r3,5
 c0125c0:	05c666b4 	movhi	r23,6554
 c0125c4:	d8c00115 	stw	r3,4(sp)
 c0125c8:	bde66644 	addi	r23,r23,-26215
 c0125cc:	e027883a 	mov	r19,fp
 c0125d0:	b407883a 	add	r3,r22,r16
 c0125d4:	18c00043 	ldbu	r3,1(r3)
 c0125d8:	0005883a 	mov	r2,zero
 c0125dc:	0009883a 	mov	r4,zero
 c0125e0:	1940010c 	andi	r5,r3,4
 c0125e4:	04800044 	movi	r18,1
 c0125e8:	053fffc4 	movi	r20,-1
 c0125ec:	28000f26 	beq	r5,zero,c01262c <_strtoul_r+0x134>
 c0125f0:	843ff404 	addi	r16,r16,-48
 c0125f4:	8700130e 	bge	r16,fp,c012644 <_strtoul_r+0x14c>
 c0125f8:	15000626 	beq	r2,r20,c012614 <_strtoul_r+0x11c>
 c0125fc:	b9002836 	bltu	r23,r4,c0126a0 <_strtoul_r+0x1a8>
 c012600:	25c02526 	beq	r4,r23,c012698 <_strtoul_r+0x1a0>
 c012604:	980b883a 	mov	r5,r19
 c012608:	c00473c0 	call	c00473c <__mulsi3>
 c01260c:	8089883a 	add	r4,r16,r2
 c012610:	00800044 	movi	r2,1
 c012614:	8c000003 	ldbu	r16,0(r17)
 c012618:	8c400044 	addi	r17,r17,1
 c01261c:	b407883a 	add	r3,r22,r16
 c012620:	18c00043 	ldbu	r3,1(r3)
 c012624:	1940010c 	andi	r5,r3,4
 c012628:	283ff11e 	bne	r5,zero,c0125f0 <__alt_data_end+0xfc0125f0>
 c01262c:	18c000cc 	andi	r3,r3,3
 c012630:	18000426 	beq	r3,zero,c012644 <_strtoul_r+0x14c>
 c012634:	1c801c26 	beq	r3,r18,c0126a8 <_strtoul_r+0x1b0>
 c012638:	00c015c4 	movi	r3,87
 c01263c:	80e1c83a 	sub	r16,r16,r3
 c012640:	873fed16 	blt	r16,fp,c0125f8 <__alt_data_end+0xfc0125f8>
 c012644:	10001a16 	blt	r2,zero,c0126b0 <_strtoul_r+0x1b8>
 c012648:	d8c00217 	ldw	r3,8(sp)
 c01264c:	18000126 	beq	r3,zero,c012654 <_strtoul_r+0x15c>
 c012650:	0109c83a 	sub	r4,zero,r4
 c012654:	a8000326 	beq	r21,zero,c012664 <_strtoul_r+0x16c>
 c012658:	dd000017 	ldw	r20,0(sp)
 c01265c:	1000191e 	bne	r2,zero,c0126c4 <_strtoul_r+0x1cc>
 c012660:	ad000015 	stw	r20,0(r21)
 c012664:	2005883a 	mov	r2,r4
 c012668:	dfc00d17 	ldw	ra,52(sp)
 c01266c:	df000c17 	ldw	fp,48(sp)
 c012670:	ddc00b17 	ldw	r23,44(sp)
 c012674:	dd800a17 	ldw	r22,40(sp)
 c012678:	dd400917 	ldw	r21,36(sp)
 c01267c:	dd000817 	ldw	r20,32(sp)
 c012680:	dcc00717 	ldw	r19,28(sp)
 c012684:	dc800617 	ldw	r18,24(sp)
 c012688:	dc400517 	ldw	r17,20(sp)
 c01268c:	dc000417 	ldw	r16,16(sp)
 c012690:	dec00e04 	addi	sp,sp,56
 c012694:	f800283a 	ret
 c012698:	d8c00117 	ldw	r3,4(sp)
 c01269c:	1c3fd90e 	bge	r3,r16,c012604 <__alt_data_end+0xfc012604>
 c0126a0:	00bfffc4 	movi	r2,-1
 c0126a4:	003fdb06 	br	c012614 <__alt_data_end+0xfc012614>
 c0126a8:	00c00dc4 	movi	r3,55
 c0126ac:	003fe306 	br	c01263c <__alt_data_end+0xfc01263c>
 c0126b0:	d8c00317 	ldw	r3,12(sp)
 c0126b4:	00800884 	movi	r2,34
 c0126b8:	013fffc4 	movi	r4,-1
 c0126bc:	18800015 	stw	r2,0(r3)
 c0126c0:	a83fe826 	beq	r21,zero,c012664 <__alt_data_end+0xfc012664>
 c0126c4:	8d3fffc4 	addi	r20,r17,-1
 c0126c8:	003fe506 	br	c012660 <__alt_data_end+0xfc012660>
 c0126cc:	1c400084 	addi	r17,r3,2
 c0126d0:	1c000043 	ldbu	r16,1(r3)
 c0126d4:	00c00044 	movi	r3,1
 c0126d8:	d8c00215 	stw	r3,8(sp)
 c0126dc:	003fa606 	br	c012578 <__alt_data_end+0xfc012578>
 c0126e0:	1c400084 	addi	r17,r3,2
 c0126e4:	1c000043 	ldbu	r16,1(r3)
 c0126e8:	d8000215 	stw	zero,8(sp)
 c0126ec:	003fa206 	br	c012578 <__alt_data_end+0xfc012578>
 c0126f0:	88800003 	ldbu	r2,0(r17)
 c0126f4:	00c01604 	movi	r3,88
 c0126f8:	108037cc 	andi	r2,r2,223
 c0126fc:	10c00d26 	beq	r2,r3,c012734 <_strtoul_r+0x23c>
 c012700:	07000204 	movi	fp,8
 c012704:	00c001c4 	movi	r3,7
 c012708:	05c80034 	movhi	r23,8192
 c01270c:	d8c00115 	stw	r3,4(sp)
 c012710:	bdffffc4 	addi	r23,r23,-1
 c012714:	e027883a 	mov	r19,fp
 c012718:	003fad06 	br	c0125d0 <__alt_data_end+0xfc0125d0>
 c01271c:	00800c04 	movi	r2,48
 c012720:	80800d1e 	bne	r16,r2,c012758 <_strtoul_r+0x260>
 c012724:	88800003 	ldbu	r2,0(r17)
 c012728:	00c01604 	movi	r3,88
 c01272c:	108037cc 	andi	r2,r2,223
 c012730:	10c0091e 	bne	r2,r3,c012758 <_strtoul_r+0x260>
 c012734:	04c00404 	movi	r19,16
 c012738:	00c003c4 	movi	r3,15
 c01273c:	04840034 	movhi	r18,4096
 c012740:	8c000043 	ldbu	r16,1(r17)
 c012744:	d8c00115 	stw	r3,4(sp)
 c012748:	8c400084 	addi	r17,r17,2
 c01274c:	94bfffc4 	addi	r18,r18,-1
 c012750:	9839883a 	mov	fp,r19
 c012754:	003f9406 	br	c0125a8 <__alt_data_end+0xfc0125a8>
 c012758:	00c003c4 	movi	r3,15
 c01275c:	05c40034 	movhi	r23,4096
 c012760:	d8c00115 	stw	r3,4(sp)
 c012764:	bdffffc4 	addi	r23,r23,-1
 c012768:	e027883a 	mov	r19,fp
 c01276c:	003f9806 	br	c0125d0 <__alt_data_end+0xfc0125d0>

0c012770 <strtoul>:
 c012770:	008300b4 	movhi	r2,3074
 c012774:	10bfc304 	addi	r2,r2,-244
 c012778:	300f883a 	mov	r7,r6
 c01277c:	280d883a 	mov	r6,r5
 c012780:	200b883a 	mov	r5,r4
 c012784:	11000017 	ldw	r4,0(r2)
 c012788:	c0124f81 	jmpi	c0124f8 <_strtoul_r>

0c01278c <_strtoull_r>:
 c01278c:	008300b4 	movhi	r2,3074
 c012790:	deffef04 	addi	sp,sp,-68
 c012794:	10bfc104 	addi	r2,r2,-252
 c012798:	dd800d15 	stw	r22,52(sp)
 c01279c:	15800017 	ldw	r22,0(r2)
 c0127a0:	df000f15 	stw	fp,60(sp)
 c0127a4:	d9000515 	stw	r4,20(sp)
 c0127a8:	dfc01015 	stw	ra,64(sp)
 c0127ac:	ddc00e15 	stw	r23,56(sp)
 c0127b0:	dd400c15 	stw	r21,48(sp)
 c0127b4:	dd000b15 	stw	r20,44(sp)
 c0127b8:	dcc00a15 	stw	r19,40(sp)
 c0127bc:	dc800915 	stw	r18,36(sp)
 c0127c0:	dc400815 	stw	r17,32(sp)
 c0127c4:	dc000715 	stw	r16,28(sp)
 c0127c8:	d9400215 	stw	r5,8(sp)
 c0127cc:	d9800115 	stw	r6,4(sp)
 c0127d0:	3839883a 	mov	fp,r7
 c0127d4:	2809883a 	mov	r4,r5
 c0127d8:	22000003 	ldbu	r8,0(r4)
 c0127dc:	24400044 	addi	r17,r4,1
 c0127e0:	2007883a 	mov	r3,r4
 c0127e4:	b205883a 	add	r2,r22,r8
 c0127e8:	10800043 	ldbu	r2,1(r2)
 c0127ec:	8809883a 	mov	r4,r17
 c0127f0:	1080020c 	andi	r2,r2,8
 c0127f4:	103ff81e 	bne	r2,zero,c0127d8 <__alt_data_end+0xfc0127d8>
 c0127f8:	00800b44 	movi	r2,45
 c0127fc:	40807726 	beq	r8,r2,c0129dc <_strtoull_r+0x250>
 c012800:	00800ac4 	movi	r2,43
 c012804:	40807a26 	beq	r8,r2,c0129f0 <_strtoull_r+0x264>
 c012808:	d8000415 	stw	zero,16(sp)
 c01280c:	e0001426 	beq	fp,zero,c012860 <_strtoull_r+0xd4>
 c012810:	00800404 	movi	r2,16
 c012814:	e0808826 	beq	fp,r2,c012a38 <_strtoull_r+0x2ac>
 c012818:	e025d7fa 	srai	r18,fp,31
 c01281c:	013fffc4 	movi	r4,-1
 c012820:	200b883a 	mov	r5,r4
 c012824:	e00d883a 	mov	r6,fp
 c012828:	900f883a 	mov	r7,r18
 c01282c:	da000615 	stw	r8,24(sp)
 c012830:	c0170dc0 	call	c0170dc <__udivdi3>
 c012834:	013fffc4 	movi	r4,-1
 c012838:	e00d883a 	mov	r6,fp
 c01283c:	900f883a 	mov	r7,r18
 c012840:	200b883a 	mov	r5,r4
 c012844:	1021883a 	mov	r16,r2
 c012848:	182f883a 	mov	r23,r3
 c01284c:	c0176d80 	call	c0176d8 <__umoddi3>
 c012850:	d8800315 	stw	r2,12(sp)
 c012854:	df000015 	stw	fp,0(sp)
 c012858:	da000617 	ldw	r8,24(sp)
 c01285c:	00000c06 	br	c012890 <_strtoull_r+0x104>
 c012860:	00800c04 	movi	r2,48
 c012864:	40806626 	beq	r8,r2,c012a00 <_strtoull_r+0x274>
 c012868:	00800284 	movi	r2,10
 c01286c:	00c00144 	movi	r3,5
 c012870:	042666b4 	movhi	r16,39322
 c012874:	05c666b4 	movhi	r23,6554
 c012878:	d8800015 	stw	r2,0(sp)
 c01287c:	d8c00315 	stw	r3,12(sp)
 c012880:	84266644 	addi	r16,r16,-26215
 c012884:	bde66644 	addi	r23,r23,-26215
 c012888:	0025883a 	mov	r18,zero
 c01288c:	1039883a 	mov	fp,r2
 c012890:	b205883a 	add	r2,r22,r8
 c012894:	11800043 	ldbu	r6,1(r2)
 c012898:	882b883a 	mov	r21,r17
 c01289c:	000f883a 	mov	r7,zero
 c0128a0:	3080010c 	andi	r2,r6,4
 c0128a4:	0009883a 	mov	r4,zero
 c0128a8:	000b883a 	mov	r5,zero
 c0128ac:	04400044 	movi	r17,1
 c0128b0:	053fffc4 	movi	r20,-1
 c0128b4:	10000d26 	beq	r2,zero,c0128ec <_strtoull_r+0x160>
 c0128b8:	44fff404 	addi	r19,r8,-48
 c0128bc:	9f00110e 	bge	r19,fp,c012904 <_strtoull_r+0x178>
 c0128c0:	3d000426 	beq	r7,r20,c0128d4 <_strtoull_r+0x148>
 c0128c4:	b9400236 	bltu	r23,r5,c0128d0 <_strtoull_r+0x144>
 c0128c8:	2dc0291e 	bne	r5,r23,c012970 <_strtoull_r+0x1e4>
 c0128cc:	8100282e 	bgeu	r16,r4,c012970 <_strtoull_r+0x1e4>
 c0128d0:	01ffffc4 	movi	r7,-1
 c0128d4:	aa000003 	ldbu	r8,0(r21)
 c0128d8:	ad400044 	addi	r21,r21,1
 c0128dc:	b205883a 	add	r2,r22,r8
 c0128e0:	11800043 	ldbu	r6,1(r2)
 c0128e4:	3080010c 	andi	r2,r6,4
 c0128e8:	103ff31e 	bne	r2,zero,c0128b8 <__alt_data_end+0xfc0128b8>
 c0128ec:	318000cc 	andi	r6,r6,3
 c0128f0:	30000426 	beq	r6,zero,c012904 <_strtoull_r+0x178>
 c0128f4:	34402a26 	beq	r6,r17,c0129a0 <_strtoull_r+0x214>
 c0128f8:	00c015c4 	movi	r3,87
 c0128fc:	40e7c83a 	sub	r19,r8,r3
 c012900:	9f3fef16 	blt	r19,fp,c0128c0 <__alt_data_end+0xfc0128c0>
 c012904:	38002c16 	blt	r7,zero,c0129b8 <_strtoull_r+0x22c>
 c012908:	d8c00417 	ldw	r3,16(sp)
 c01290c:	18000426 	beq	r3,zero,c012920 <_strtoull_r+0x194>
 c012910:	0109c83a 	sub	r4,zero,r4
 c012914:	2004c03a 	cmpne	r2,r4,zero
 c012918:	0151c83a 	sub	r8,zero,r5
 c01291c:	408bc83a 	sub	r5,r8,r2
 c012920:	d8800117 	ldw	r2,4(sp)
 c012924:	10000426 	beq	r2,zero,c012938 <_strtoull_r+0x1ac>
 c012928:	dd000217 	ldw	r20,8(sp)
 c01292c:	3800291e 	bne	r7,zero,c0129d4 <_strtoull_r+0x248>
 c012930:	d8c00117 	ldw	r3,4(sp)
 c012934:	1d000015 	stw	r20,0(r3)
 c012938:	2005883a 	mov	r2,r4
 c01293c:	2807883a 	mov	r3,r5
 c012940:	dfc01017 	ldw	ra,64(sp)
 c012944:	df000f17 	ldw	fp,60(sp)
 c012948:	ddc00e17 	ldw	r23,56(sp)
 c01294c:	dd800d17 	ldw	r22,52(sp)
 c012950:	dd400c17 	ldw	r21,48(sp)
 c012954:	dd000b17 	ldw	r20,44(sp)
 c012958:	dcc00a17 	ldw	r19,40(sp)
 c01295c:	dc800917 	ldw	r18,36(sp)
 c012960:	dc400817 	ldw	r17,32(sp)
 c012964:	dc000717 	ldw	r16,28(sp)
 c012968:	dec01104 	addi	sp,sp,68
 c01296c:	f800283a 	ret
 c012970:	24000d26 	beq	r4,r16,c0129a8 <_strtoull_r+0x21c>
 c012974:	d9800017 	ldw	r6,0(sp)
 c012978:	900f883a 	mov	r7,r18
 c01297c:	c016f5c0 	call	c016f5c <__muldi3>
 c012980:	980bd7fa 	srai	r5,r19,31
 c012984:	9885883a 	add	r2,r19,r2
 c012988:	14d1803a 	cmpltu	r8,r2,r19
 c01298c:	28c7883a 	add	r3,r5,r3
 c012990:	1009883a 	mov	r4,r2
 c012994:	40cb883a 	add	r5,r8,r3
 c012998:	01c00044 	movi	r7,1
 c01299c:	003fcd06 	br	c0128d4 <__alt_data_end+0xfc0128d4>
 c0129a0:	00c00dc4 	movi	r3,55
 c0129a4:	003fd506 	br	c0128fc <__alt_data_end+0xfc0128fc>
 c0129a8:	2dfff21e 	bne	r5,r23,c012974 <__alt_data_end+0xfc012974>
 c0129ac:	d8c00317 	ldw	r3,12(sp)
 c0129b0:	1cffc716 	blt	r3,r19,c0128d0 <__alt_data_end+0xfc0128d0>
 c0129b4:	003fef06 	br	c012974 <__alt_data_end+0xfc012974>
 c0129b8:	d8c00517 	ldw	r3,20(sp)
 c0129bc:	00800884 	movi	r2,34
 c0129c0:	013fffc4 	movi	r4,-1
 c0129c4:	18800015 	stw	r2,0(r3)
 c0129c8:	d8800117 	ldw	r2,4(sp)
 c0129cc:	200b883a 	mov	r5,r4
 c0129d0:	103fd926 	beq	r2,zero,c012938 <__alt_data_end+0xfc012938>
 c0129d4:	ad3fffc4 	addi	r20,r21,-1
 c0129d8:	003fd506 	br	c012930 <__alt_data_end+0xfc012930>
 c0129dc:	00800044 	movi	r2,1
 c0129e0:	1c400084 	addi	r17,r3,2
 c0129e4:	1a000043 	ldbu	r8,1(r3)
 c0129e8:	d8800415 	stw	r2,16(sp)
 c0129ec:	003f8706 	br	c01280c <__alt_data_end+0xfc01280c>
 c0129f0:	1c400084 	addi	r17,r3,2
 c0129f4:	1a000043 	ldbu	r8,1(r3)
 c0129f8:	d8000415 	stw	zero,16(sp)
 c0129fc:	003f8306 	br	c01280c <__alt_data_end+0xfc01280c>
 c012a00:	88800003 	ldbu	r2,0(r17)
 c012a04:	00c01604 	movi	r3,88
 c012a08:	108037cc 	andi	r2,r2,223
 c012a0c:	10c01026 	beq	r2,r3,c012a50 <_strtoull_r+0x2c4>
 c012a10:	00c00204 	movi	r3,8
 c012a14:	008001c4 	movi	r2,7
 c012a18:	043fffc4 	movi	r16,-1
 c012a1c:	05c80034 	movhi	r23,8192
 c012a20:	d8c00015 	stw	r3,0(sp)
 c012a24:	d8800315 	stw	r2,12(sp)
 c012a28:	bc2f883a 	add	r23,r23,r16
 c012a2c:	0025883a 	mov	r18,zero
 c012a30:	1839883a 	mov	fp,r3
 c012a34:	003f9606 	br	c012890 <__alt_data_end+0xfc012890>
 c012a38:	00800c04 	movi	r2,48
 c012a3c:	4080101e 	bne	r8,r2,c012a80 <_strtoull_r+0x2f4>
 c012a40:	88800003 	ldbu	r2,0(r17)
 c012a44:	00c01604 	movi	r3,88
 c012a48:	108037cc 	andi	r2,r2,223
 c012a4c:	10c0141e 	bne	r2,r3,c012aa0 <_strtoull_r+0x314>
 c012a50:	00c00404 	movi	r3,16
 c012a54:	008003c4 	movi	r2,15
 c012a58:	043fffc4 	movi	r16,-1
 c012a5c:	05c40034 	movhi	r23,4096
 c012a60:	8a000043 	ldbu	r8,1(r17)
 c012a64:	d8c00015 	stw	r3,0(sp)
 c012a68:	d8800315 	stw	r2,12(sp)
 c012a6c:	8c400084 	addi	r17,r17,2
 c012a70:	bc2f883a 	add	r23,r23,r16
 c012a74:	0025883a 	mov	r18,zero
 c012a78:	1839883a 	mov	fp,r3
 c012a7c:	003f8406 	br	c012890 <__alt_data_end+0xfc012890>
 c012a80:	008003c4 	movi	r2,15
 c012a84:	d8800315 	stw	r2,12(sp)
 c012a88:	043fffc4 	movi	r16,-1
 c012a8c:	05c40034 	movhi	r23,4096
 c012a90:	bc2f883a 	add	r23,r23,r16
 c012a94:	df000015 	stw	fp,0(sp)
 c012a98:	0025883a 	mov	r18,zero
 c012a9c:	003f7c06 	br	c012890 <__alt_data_end+0xfc012890>
 c012aa0:	00c003c4 	movi	r3,15
 c012aa4:	d8c00315 	stw	r3,12(sp)
 c012aa8:	003ff706 	br	c012a88 <__alt_data_end+0xfc012a88>

0c012aac <__ssprint_r>:
 c012aac:	30800217 	ldw	r2,8(r6)
 c012ab0:	defff604 	addi	sp,sp,-40
 c012ab4:	dc800215 	stw	r18,8(sp)
 c012ab8:	dfc00915 	stw	ra,36(sp)
 c012abc:	df000815 	stw	fp,32(sp)
 c012ac0:	ddc00715 	stw	r23,28(sp)
 c012ac4:	dd800615 	stw	r22,24(sp)
 c012ac8:	dd400515 	stw	r21,20(sp)
 c012acc:	dd000415 	stw	r20,16(sp)
 c012ad0:	dcc00315 	stw	r19,12(sp)
 c012ad4:	dc400115 	stw	r17,4(sp)
 c012ad8:	dc000015 	stw	r16,0(sp)
 c012adc:	3025883a 	mov	r18,r6
 c012ae0:	10005826 	beq	r2,zero,c012c44 <__ssprint_r+0x198>
 c012ae4:	2027883a 	mov	r19,r4
 c012ae8:	35c00017 	ldw	r23,0(r6)
 c012aec:	29000017 	ldw	r4,0(r5)
 c012af0:	28800217 	ldw	r2,8(r5)
 c012af4:	2823883a 	mov	r17,r5
 c012af8:	0039883a 	mov	fp,zero
 c012afc:	0021883a 	mov	r16,zero
 c012b00:	80003926 	beq	r16,zero,c012be8 <__ssprint_r+0x13c>
 c012b04:	102b883a 	mov	r21,r2
 c012b08:	102d883a 	mov	r22,r2
 c012b0c:	80803a36 	bltu	r16,r2,c012bf8 <__ssprint_r+0x14c>
 c012b10:	88c0030b 	ldhu	r3,12(r17)
 c012b14:	1881200c 	andi	r2,r3,1152
 c012b18:	10002626 	beq	r2,zero,c012bb4 <__ssprint_r+0x108>
 c012b1c:	88800517 	ldw	r2,20(r17)
 c012b20:	89400417 	ldw	r5,16(r17)
 c012b24:	81800044 	addi	r6,r16,1
 c012b28:	108f883a 	add	r7,r2,r2
 c012b2c:	3885883a 	add	r2,r7,r2
 c012b30:	100ed7fa 	srli	r7,r2,31
 c012b34:	216dc83a 	sub	r22,r4,r5
 c012b38:	3589883a 	add	r4,r6,r22
 c012b3c:	3885883a 	add	r2,r7,r2
 c012b40:	102bd07a 	srai	r21,r2,1
 c012b44:	a80d883a 	mov	r6,r21
 c012b48:	a900022e 	bgeu	r21,r4,c012b54 <__ssprint_r+0xa8>
 c012b4c:	202b883a 	mov	r21,r4
 c012b50:	200d883a 	mov	r6,r4
 c012b54:	18c1000c 	andi	r3,r3,1024
 c012b58:	18002a26 	beq	r3,zero,c012c04 <__ssprint_r+0x158>
 c012b5c:	300b883a 	mov	r5,r6
 c012b60:	9809883a 	mov	r4,r19
 c012b64:	c00478c0 	call	c00478c <_malloc_r>
 c012b68:	1029883a 	mov	r20,r2
 c012b6c:	10002c26 	beq	r2,zero,c012c20 <__ssprint_r+0x174>
 c012b70:	89400417 	ldw	r5,16(r17)
 c012b74:	b00d883a 	mov	r6,r22
 c012b78:	1009883a 	mov	r4,r2
 c012b7c:	c00e77c0 	call	c00e77c <memcpy>
 c012b80:	8880030b 	ldhu	r2,12(r17)
 c012b84:	00fedfc4 	movi	r3,-1153
 c012b88:	10c4703a 	and	r2,r2,r3
 c012b8c:	10802014 	ori	r2,r2,128
 c012b90:	8880030d 	sth	r2,12(r17)
 c012b94:	a589883a 	add	r4,r20,r22
 c012b98:	adadc83a 	sub	r22,r21,r22
 c012b9c:	8d400515 	stw	r21,20(r17)
 c012ba0:	8d800215 	stw	r22,8(r17)
 c012ba4:	8d000415 	stw	r20,16(r17)
 c012ba8:	89000015 	stw	r4,0(r17)
 c012bac:	802b883a 	mov	r21,r16
 c012bb0:	802d883a 	mov	r22,r16
 c012bb4:	b00d883a 	mov	r6,r22
 c012bb8:	e00b883a 	mov	r5,fp
 c012bbc:	c00e8c40 	call	c00e8c4 <memmove>
 c012bc0:	88800217 	ldw	r2,8(r17)
 c012bc4:	89000017 	ldw	r4,0(r17)
 c012bc8:	90c00217 	ldw	r3,8(r18)
 c012bcc:	1545c83a 	sub	r2,r2,r21
 c012bd0:	2589883a 	add	r4,r4,r22
 c012bd4:	88800215 	stw	r2,8(r17)
 c012bd8:	89000015 	stw	r4,0(r17)
 c012bdc:	1c21c83a 	sub	r16,r3,r16
 c012be0:	94000215 	stw	r16,8(r18)
 c012be4:	80001726 	beq	r16,zero,c012c44 <__ssprint_r+0x198>
 c012be8:	bf000017 	ldw	fp,0(r23)
 c012bec:	bc000117 	ldw	r16,4(r23)
 c012bf0:	bdc00204 	addi	r23,r23,8
 c012bf4:	003fc206 	br	c012b00 <__alt_data_end+0xfc012b00>
 c012bf8:	802b883a 	mov	r21,r16
 c012bfc:	802d883a 	mov	r22,r16
 c012c00:	003fec06 	br	c012bb4 <__alt_data_end+0xfc012bb4>
 c012c04:	9809883a 	mov	r4,r19
 c012c08:	c00fd680 	call	c00fd68 <_realloc_r>
 c012c0c:	1029883a 	mov	r20,r2
 c012c10:	103fe01e 	bne	r2,zero,c012b94 <__alt_data_end+0xfc012b94>
 c012c14:	89400417 	ldw	r5,16(r17)
 c012c18:	9809883a 	mov	r4,r19
 c012c1c:	c00d84c0 	call	c00d84c <_free_r>
 c012c20:	88c0030b 	ldhu	r3,12(r17)
 c012c24:	00800304 	movi	r2,12
 c012c28:	98800015 	stw	r2,0(r19)
 c012c2c:	18c01014 	ori	r3,r3,64
 c012c30:	88c0030d 	sth	r3,12(r17)
 c012c34:	00bfffc4 	movi	r2,-1
 c012c38:	90000215 	stw	zero,8(r18)
 c012c3c:	90000115 	stw	zero,4(r18)
 c012c40:	00000206 	br	c012c4c <__ssprint_r+0x1a0>
 c012c44:	90000115 	stw	zero,4(r18)
 c012c48:	0005883a 	mov	r2,zero
 c012c4c:	dfc00917 	ldw	ra,36(sp)
 c012c50:	df000817 	ldw	fp,32(sp)
 c012c54:	ddc00717 	ldw	r23,28(sp)
 c012c58:	dd800617 	ldw	r22,24(sp)
 c012c5c:	dd400517 	ldw	r21,20(sp)
 c012c60:	dd000417 	ldw	r20,16(sp)
 c012c64:	dcc00317 	ldw	r19,12(sp)
 c012c68:	dc800217 	ldw	r18,8(sp)
 c012c6c:	dc400117 	ldw	r17,4(sp)
 c012c70:	dc000017 	ldw	r16,0(sp)
 c012c74:	dec00a04 	addi	sp,sp,40
 c012c78:	f800283a 	ret

0c012c7c <___svfiprintf_internal_r>:
 c012c7c:	2880030b 	ldhu	r2,12(r5)
 c012c80:	deffc804 	addi	sp,sp,-224
 c012c84:	dcc03115 	stw	r19,196(sp)
 c012c88:	dfc03715 	stw	ra,220(sp)
 c012c8c:	df003615 	stw	fp,216(sp)
 c012c90:	ddc03515 	stw	r23,212(sp)
 c012c94:	dd803415 	stw	r22,208(sp)
 c012c98:	dd403315 	stw	r21,204(sp)
 c012c9c:	dd003215 	stw	r20,200(sp)
 c012ca0:	dc803015 	stw	r18,192(sp)
 c012ca4:	dc402f15 	stw	r17,188(sp)
 c012ca8:	dc002e15 	stw	r16,184(sp)
 c012cac:	d9402315 	stw	r5,140(sp)
 c012cb0:	d9002715 	stw	r4,156(sp)
 c012cb4:	1080200c 	andi	r2,r2,128
 c012cb8:	d9c02415 	stw	r7,144(sp)
 c012cbc:	3027883a 	mov	r19,r6
 c012cc0:	10000226 	beq	r2,zero,c012ccc <___svfiprintf_internal_r+0x50>
 c012cc4:	28800417 	ldw	r2,16(r5)
 c012cc8:	10046d26 	beq	r2,zero,c013e80 <___svfiprintf_internal_r+0x1204>
 c012ccc:	d8801a04 	addi	r2,sp,104
 c012cd0:	d8c019c4 	addi	r3,sp,103
 c012cd4:	058300b4 	movhi	r22,3074
 c012cd8:	10c9c83a 	sub	r4,r2,r3
 c012cdc:	b5b7ad04 	addi	r22,r22,-8524
 c012ce0:	d8801e15 	stw	r2,120(sp)
 c012ce4:	d8c01f15 	stw	r3,124(sp)
 c012ce8:	dec01a15 	stw	sp,104(sp)
 c012cec:	d8001c15 	stw	zero,112(sp)
 c012cf0:	d8001b15 	stw	zero,108(sp)
 c012cf4:	d811883a 	mov	r8,sp
 c012cf8:	d8002915 	stw	zero,164(sp)
 c012cfc:	d8002615 	stw	zero,152(sp)
 c012d00:	d9002c15 	stw	r4,176(sp)
 c012d04:	98800007 	ldb	r2,0(r19)
 c012d08:	10031426 	beq	r2,zero,c01395c <___svfiprintf_internal_r+0xce0>
 c012d0c:	00c00944 	movi	r3,37
 c012d10:	9825883a 	mov	r18,r19
 c012d14:	10c0021e 	bne	r2,r3,c012d20 <___svfiprintf_internal_r+0xa4>
 c012d18:	00001406 	br	c012d6c <___svfiprintf_internal_r+0xf0>
 c012d1c:	10c00326 	beq	r2,r3,c012d2c <___svfiprintf_internal_r+0xb0>
 c012d20:	94800044 	addi	r18,r18,1
 c012d24:	90800007 	ldb	r2,0(r18)
 c012d28:	103ffc1e 	bne	r2,zero,c012d1c <__alt_data_end+0xfc012d1c>
 c012d2c:	94e1c83a 	sub	r16,r18,r19
 c012d30:	80000e26 	beq	r16,zero,c012d6c <___svfiprintf_internal_r+0xf0>
 c012d34:	d8c01c17 	ldw	r3,112(sp)
 c012d38:	d8801b17 	ldw	r2,108(sp)
 c012d3c:	44c00015 	stw	r19,0(r8)
 c012d40:	1c07883a 	add	r3,r3,r16
 c012d44:	10800044 	addi	r2,r2,1
 c012d48:	d8c01c15 	stw	r3,112(sp)
 c012d4c:	44000115 	stw	r16,4(r8)
 c012d50:	d8801b15 	stw	r2,108(sp)
 c012d54:	00c001c4 	movi	r3,7
 c012d58:	18835c16 	blt	r3,r2,c013acc <___svfiprintf_internal_r+0xe50>
 c012d5c:	42000204 	addi	r8,r8,8
 c012d60:	d9402617 	ldw	r5,152(sp)
 c012d64:	2c0b883a 	add	r5,r5,r16
 c012d68:	d9402615 	stw	r5,152(sp)
 c012d6c:	90800007 	ldb	r2,0(r18)
 c012d70:	1002fc26 	beq	r2,zero,c013964 <___svfiprintf_internal_r+0xce8>
 c012d74:	0023883a 	mov	r17,zero
 c012d78:	00bfffc4 	movi	r2,-1
 c012d7c:	0021883a 	mov	r16,zero
 c012d80:	94c00044 	addi	r19,r18,1
 c012d84:	90c00047 	ldb	r3,1(r18)
 c012d88:	dc402105 	stb	r17,132(sp)
 c012d8c:	d8001d85 	stb	zero,118(sp)
 c012d90:	002b883a 	mov	r21,zero
 c012d94:	d8802015 	stw	r2,128(sp)
 c012d98:	d8002515 	stw	zero,148(sp)
 c012d9c:	04801604 	movi	r18,88
 c012da0:	05000244 	movi	r20,9
 c012da4:	402f883a 	mov	r23,r8
 c012da8:	8023883a 	mov	r17,r16
 c012dac:	9cc00044 	addi	r19,r19,1
 c012db0:	18bff804 	addi	r2,r3,-32
 c012db4:	9081fb36 	bltu	r18,r2,c0135a4 <___svfiprintf_internal_r+0x928>
 c012db8:	100490ba 	slli	r2,r2,2
 c012dbc:	01030074 	movhi	r4,3073
 c012dc0:	210b7404 	addi	r4,r4,11728
 c012dc4:	1105883a 	add	r2,r2,r4
 c012dc8:	10800017 	ldw	r2,0(r2)
 c012dcc:	1000683a 	jmp	r2
 c012dd0:	0c012fd0 	cmplti	r16,at,1215
 c012dd4:	0c0135a4 	muli	r16,at,1238
 c012dd8:	0c0135a4 	muli	r16,at,1238
 c012ddc:	0c012fc4 	addi	r16,at,1215
 c012de0:	0c0135a4 	muli	r16,at,1238
 c012de4:	0c0135a4 	muli	r16,at,1238
 c012de8:	0c0135a4 	muli	r16,at,1238
 c012dec:	0c0135a4 	muli	r16,at,1238
 c012df0:	0c0135a4 	muli	r16,at,1238
 c012df4:	0c0135a4 	muli	r16,at,1238
 c012df8:	0c012f34 	orhi	r16,at,1212
 c012dfc:	0c013130 	cmpltui	r16,at,1220
 c012e00:	0c0135a4 	muli	r16,at,1238
 c012e04:	0c012f5c 	xori	r16,at,1213
 c012e08:	0c0135e0 	cmpeqi	r16,at,1239
 c012e0c:	0c0135a4 	muli	r16,at,1238
 c012e10:	0c0135d4 	ori	r16,at,1239
 c012e14:	0c013568 	cmpgeui	r16,at,1237
 c012e18:	0c013568 	cmpgeui	r16,at,1237
 c012e1c:	0c013568 	cmpgeui	r16,at,1237
 c012e20:	0c013568 	cmpgeui	r16,at,1237
 c012e24:	0c013568 	cmpgeui	r16,at,1237
 c012e28:	0c013568 	cmpgeui	r16,at,1237
 c012e2c:	0c013568 	cmpgeui	r16,at,1237
 c012e30:	0c013568 	cmpgeui	r16,at,1237
 c012e34:	0c013568 	cmpgeui	r16,at,1237
 c012e38:	0c0135a4 	muli	r16,at,1238
 c012e3c:	0c0135a4 	muli	r16,at,1238
 c012e40:	0c0135a4 	muli	r16,at,1238
 c012e44:	0c0135a4 	muli	r16,at,1238
 c012e48:	0c0135a4 	muli	r16,at,1238
 c012e4c:	0c0135a4 	muli	r16,at,1238
 c012e50:	0c0135a4 	muli	r16,at,1238
 c012e54:	0c0135a4 	muli	r16,at,1238
 c012e58:	0c0135a4 	muli	r16,at,1238
 c012e5c:	0c0135a4 	muli	r16,at,1238
 c012e60:	0c0134ec 	andhi	r16,at,1235
 c012e64:	0c0135a4 	muli	r16,at,1238
 c012e68:	0c0135a4 	muli	r16,at,1238
 c012e6c:	0c0135a4 	muli	r16,at,1238
 c012e70:	0c0135a4 	muli	r16,at,1238
 c012e74:	0c0135a4 	muli	r16,at,1238
 c012e78:	0c0135a4 	muli	r16,at,1238
 c012e7c:	0c0135a4 	muli	r16,at,1238
 c012e80:	0c0135a4 	muli	r16,at,1238
 c012e84:	0c0135a4 	muli	r16,at,1238
 c012e88:	0c0135a4 	muli	r16,at,1238
 c012e8c:	0c01369c 	xori	r16,at,1242
 c012e90:	0c0135a4 	muli	r16,at,1238
 c012e94:	0c0135a4 	muli	r16,at,1238
 c012e98:	0c0135a4 	muli	r16,at,1238
 c012e9c:	0c0135a4 	muli	r16,at,1238
 c012ea0:	0c0135a4 	muli	r16,at,1238
 c012ea4:	0c013628 	cmpgeui	r16,at,1240
 c012ea8:	0c0135a4 	muli	r16,at,1238
 c012eac:	0c0135a4 	muli	r16,at,1238
 c012eb0:	0c013328 	cmpgeui	r16,at,1228
 c012eb4:	0c0135a4 	muli	r16,at,1238
 c012eb8:	0c0135a4 	muli	r16,at,1238
 c012ebc:	0c0135a4 	muli	r16,at,1238
 c012ec0:	0c0135a4 	muli	r16,at,1238
 c012ec4:	0c0135a4 	muli	r16,at,1238
 c012ec8:	0c0135a4 	muli	r16,at,1238
 c012ecc:	0c0135a4 	muli	r16,at,1238
 c012ed0:	0c0135a4 	muli	r16,at,1238
 c012ed4:	0c0135a4 	muli	r16,at,1238
 c012ed8:	0c0135a4 	muli	r16,at,1238
 c012edc:	0c0131f4 	orhi	r16,at,1223
 c012ee0:	0c0133d8 	cmpnei	r16,at,1231
 c012ee4:	0c0135a4 	muli	r16,at,1238
 c012ee8:	0c0135a4 	muli	r16,at,1238
 c012eec:	0c0135a4 	muli	r16,at,1238
 c012ef0:	0c0133cc 	andi	r16,at,1231
 c012ef4:	0c0133d8 	cmpnei	r16,at,1231
 c012ef8:	0c0135a4 	muli	r16,at,1238
 c012efc:	0c0135a4 	muli	r16,at,1238
 c012f00:	0c0133b8 	rdprs	r16,at,1230
 c012f04:	0c0135a4 	muli	r16,at,1238
 c012f08:	0c013378 	rdprs	r16,at,1229
 c012f0c:	0c013144 	addi	r16,at,1221
 c012f10:	0c012f68 	cmpgeui	r16,at,1213
 c012f14:	0c0134e0 	cmpeqi	r16,at,1235
 c012f18:	0c0135a4 	muli	r16,at,1238
 c012f1c:	0c01348c 	andi	r16,at,1234
 c012f20:	0c0135a4 	muli	r16,at,1238
 c012f24:	0c0130a8 	cmpgeui	r16,at,1218
 c012f28:	0c0135a4 	muli	r16,at,1238
 c012f2c:	0c0135a4 	muli	r16,at,1238
 c012f30:	0c012ff4 	orhi	r16,at,1215
 c012f34:	d9002417 	ldw	r4,144(sp)
 c012f38:	d9402417 	ldw	r5,144(sp)
 c012f3c:	21000017 	ldw	r4,0(r4)
 c012f40:	28800104 	addi	r2,r5,4
 c012f44:	d9002515 	stw	r4,148(sp)
 c012f48:	20032b0e 	bge	r4,zero,c013bf8 <___svfiprintf_internal_r+0xf7c>
 c012f4c:	d8c02517 	ldw	r3,148(sp)
 c012f50:	d8802415 	stw	r2,144(sp)
 c012f54:	00c7c83a 	sub	r3,zero,r3
 c012f58:	d8c02515 	stw	r3,148(sp)
 c012f5c:	8c400114 	ori	r17,r17,4
 c012f60:	98c00007 	ldb	r3,0(r19)
 c012f64:	003f9106 	br	c012dac <__alt_data_end+0xfc012dac>
 c012f68:	00800c04 	movi	r2,48
 c012f6c:	d9402417 	ldw	r5,144(sp)
 c012f70:	d9002017 	ldw	r4,128(sp)
 c012f74:	d8801d05 	stb	r2,116(sp)
 c012f78:	00801e04 	movi	r2,120
 c012f7c:	d8801d45 	stb	r2,117(sp)
 c012f80:	d8001d85 	stb	zero,118(sp)
 c012f84:	b811883a 	mov	r8,r23
 c012f88:	28c00104 	addi	r3,r5,4
 c012f8c:	2c800017 	ldw	r18,0(r5)
 c012f90:	0029883a 	mov	r20,zero
 c012f94:	88800094 	ori	r2,r17,2
 c012f98:	20036316 	blt	r4,zero,c013d28 <___svfiprintf_internal_r+0x10ac>
 c012f9c:	00bfdfc4 	movi	r2,-129
 c012fa0:	88a0703a 	and	r16,r17,r2
 c012fa4:	d8c02415 	stw	r3,144(sp)
 c012fa8:	84000094 	ori	r16,r16,2
 c012fac:	90031c26 	beq	r18,zero,c013c20 <___svfiprintf_internal_r+0xfa4>
 c012fb0:	014300b4 	movhi	r5,3074
 c012fb4:	29768104 	addi	r5,r5,-9724
 c012fb8:	002b883a 	mov	r21,zero
 c012fbc:	d9402915 	stw	r5,164(sp)
 c012fc0:	00002906 	br	c013068 <___svfiprintf_internal_r+0x3ec>
 c012fc4:	8c400054 	ori	r17,r17,1
 c012fc8:	98c00007 	ldb	r3,0(r19)
 c012fcc:	003f7706 	br	c012dac <__alt_data_end+0xfc012dac>
 c012fd0:	a8803fcc 	andi	r2,r21,255
 c012fd4:	1080201c 	xori	r2,r2,128
 c012fd8:	10bfe004 	addi	r2,r2,-128
 c012fdc:	10032a1e 	bne	r2,zero,c013c88 <___svfiprintf_internal_r+0x100c>
 c012fe0:	00c00044 	movi	r3,1
 c012fe4:	d8c02105 	stb	r3,132(sp)
 c012fe8:	05400804 	movi	r21,32
 c012fec:	98c00007 	ldb	r3,0(r19)
 c012ff0:	003f6e06 	br	c012dac <__alt_data_end+0xfc012dac>
 c012ff4:	8821883a 	mov	r16,r17
 c012ff8:	dc402103 	ldbu	r17,132(sp)
 c012ffc:	b811883a 	mov	r8,r23
 c013000:	8c403fcc 	andi	r17,r17,255
 c013004:	8803f01e 	bne	r17,zero,c013fc8 <___svfiprintf_internal_r+0x134c>
 c013008:	008300b4 	movhi	r2,3074
 c01300c:	10b68104 	addi	r2,r2,-9724
 c013010:	d8802915 	stw	r2,164(sp)
 c013014:	8080080c 	andi	r2,r16,32
 c013018:	1000cd26 	beq	r2,zero,c013350 <___svfiprintf_internal_r+0x6d4>
 c01301c:	d9002417 	ldw	r4,144(sp)
 c013020:	24800017 	ldw	r18,0(r4)
 c013024:	25000117 	ldw	r20,4(r4)
 c013028:	21000204 	addi	r4,r4,8
 c01302c:	d9002415 	stw	r4,144(sp)
 c013030:	8080004c 	andi	r2,r16,1
 c013034:	1002c726 	beq	r2,zero,c013b54 <___svfiprintf_internal_r+0xed8>
 c013038:	9504b03a 	or	r2,r18,r20
 c01303c:	1003061e 	bne	r2,zero,c013c58 <___svfiprintf_internal_r+0xfdc>
 c013040:	d9002017 	ldw	r4,128(sp)
 c013044:	d8001d85 	stb	zero,118(sp)
 c013048:	20033e16 	blt	r4,zero,c013d44 <___svfiprintf_internal_r+0x10c8>
 c01304c:	00bfdfc4 	movi	r2,-129
 c013050:	80a0703a 	and	r16,r16,r2
 c013054:	d9402017 	ldw	r5,128(sp)
 c013058:	002b883a 	mov	r21,zero
 c01305c:	28002826 	beq	r5,zero,c013100 <___svfiprintf_internal_r+0x484>
 c013060:	0025883a 	mov	r18,zero
 c013064:	0029883a 	mov	r20,zero
 c013068:	d9002917 	ldw	r4,164(sp)
 c01306c:	dc401a04 	addi	r17,sp,104
 c013070:	908003cc 	andi	r2,r18,15
 c013074:	a006973a 	slli	r3,r20,28
 c013078:	2085883a 	add	r2,r4,r2
 c01307c:	9024d13a 	srli	r18,r18,4
 c013080:	10800003 	ldbu	r2,0(r2)
 c013084:	a028d13a 	srli	r20,r20,4
 c013088:	8c7fffc4 	addi	r17,r17,-1
 c01308c:	1ca4b03a 	or	r18,r3,r18
 c013090:	88800005 	stb	r2,0(r17)
 c013094:	9504b03a 	or	r2,r18,r20
 c013098:	103ff51e 	bne	r2,zero,c013070 <__alt_data_end+0xfc013070>
 c01309c:	d8801e17 	ldw	r2,120(sp)
 c0130a0:	1469c83a 	sub	r20,r2,r17
 c0130a4:	00001906 	br	c01310c <___svfiprintf_internal_r+0x490>
 c0130a8:	8821883a 	mov	r16,r17
 c0130ac:	dc402103 	ldbu	r17,132(sp)
 c0130b0:	b811883a 	mov	r8,r23
 c0130b4:	8c403fcc 	andi	r17,r17,255
 c0130b8:	8803d01e 	bne	r17,zero,c013ffc <___svfiprintf_internal_r+0x1380>
 c0130bc:	8080080c 	andi	r2,r16,32
 c0130c0:	10016126 	beq	r2,zero,c013648 <___svfiprintf_internal_r+0x9cc>
 c0130c4:	d9002417 	ldw	r4,144(sp)
 c0130c8:	d9402017 	ldw	r5,128(sp)
 c0130cc:	d8001d85 	stb	zero,118(sp)
 c0130d0:	20c00204 	addi	r3,r4,8
 c0130d4:	24800017 	ldw	r18,0(r4)
 c0130d8:	25000117 	ldw	r20,4(r4)
 c0130dc:	28030f16 	blt	r5,zero,c013d1c <___svfiprintf_internal_r+0x10a0>
 c0130e0:	013fdfc4 	movi	r4,-129
 c0130e4:	9504b03a 	or	r2,r18,r20
 c0130e8:	d8c02415 	stw	r3,144(sp)
 c0130ec:	8120703a 	and	r16,r16,r4
 c0130f0:	002b883a 	mov	r21,zero
 c0130f4:	1000cd1e 	bne	r2,zero,c01342c <___svfiprintf_internal_r+0x7b0>
 c0130f8:	d8c02017 	ldw	r3,128(sp)
 c0130fc:	1803141e 	bne	r3,zero,c013d50 <___svfiprintf_internal_r+0x10d4>
 c013100:	d8002015 	stw	zero,128(sp)
 c013104:	0029883a 	mov	r20,zero
 c013108:	dc401a04 	addi	r17,sp,104
 c01310c:	dc802017 	ldw	r18,128(sp)
 c013110:	9500010e 	bge	r18,r20,c013118 <___svfiprintf_internal_r+0x49c>
 c013114:	a025883a 	mov	r18,r20
 c013118:	ad403fcc 	andi	r21,r21,255
 c01311c:	ad40201c 	xori	r21,r21,128
 c013120:	ad7fe004 	addi	r21,r21,-128
 c013124:	a8003f26 	beq	r21,zero,c013224 <___svfiprintf_internal_r+0x5a8>
 c013128:	94800044 	addi	r18,r18,1
 c01312c:	00003d06 	br	c013224 <___svfiprintf_internal_r+0x5a8>
 c013130:	00c00044 	movi	r3,1
 c013134:	d8c02105 	stb	r3,132(sp)
 c013138:	05400ac4 	movi	r21,43
 c01313c:	98c00007 	ldb	r3,0(r19)
 c013140:	003f1a06 	br	c012dac <__alt_data_end+0xfc012dac>
 c013144:	8821883a 	mov	r16,r17
 c013148:	dc402103 	ldbu	r17,132(sp)
 c01314c:	b811883a 	mov	r8,r23
 c013150:	8c403fcc 	andi	r17,r17,255
 c013154:	8803a71e 	bne	r17,zero,c013ff4 <___svfiprintf_internal_r+0x1378>
 c013158:	8080080c 	andi	r2,r16,32
 c01315c:	10015726 	beq	r2,zero,c0136bc <___svfiprintf_internal_r+0xa40>
 c013160:	d8c02417 	ldw	r3,144(sp)
 c013164:	d9002017 	ldw	r4,128(sp)
 c013168:	d8001d85 	stb	zero,118(sp)
 c01316c:	18800204 	addi	r2,r3,8
 c013170:	1c800017 	ldw	r18,0(r3)
 c013174:	1d000117 	ldw	r20,4(r3)
 c013178:	2002db16 	blt	r4,zero,c013ce8 <___svfiprintf_internal_r+0x106c>
 c01317c:	013fdfc4 	movi	r4,-129
 c013180:	9506b03a 	or	r3,r18,r20
 c013184:	d8802415 	stw	r2,144(sp)
 c013188:	8120703a 	and	r16,r16,r4
 c01318c:	18015826 	beq	r3,zero,c0136f0 <___svfiprintf_internal_r+0xa74>
 c013190:	002b883a 	mov	r21,zero
 c013194:	dc401a04 	addi	r17,sp,104
 c013198:	9006d0fa 	srli	r3,r18,3
 c01319c:	a008977a 	slli	r4,r20,29
 c0131a0:	a028d0fa 	srli	r20,r20,3
 c0131a4:	948001cc 	andi	r18,r18,7
 c0131a8:	90800c04 	addi	r2,r18,48
 c0131ac:	8c7fffc4 	addi	r17,r17,-1
 c0131b0:	20e4b03a 	or	r18,r4,r3
 c0131b4:	88800005 	stb	r2,0(r17)
 c0131b8:	9506b03a 	or	r3,r18,r20
 c0131bc:	183ff61e 	bne	r3,zero,c013198 <__alt_data_end+0xfc013198>
 c0131c0:	80c0004c 	andi	r3,r16,1
 c0131c4:	18028926 	beq	r3,zero,c013bec <___svfiprintf_internal_r+0xf70>
 c0131c8:	10803fcc 	andi	r2,r2,255
 c0131cc:	1080201c 	xori	r2,r2,128
 c0131d0:	10bfe004 	addi	r2,r2,-128
 c0131d4:	00c00c04 	movi	r3,48
 c0131d8:	10ffb026 	beq	r2,r3,c01309c <__alt_data_end+0xfc01309c>
 c0131dc:	88ffffc5 	stb	r3,-1(r17)
 c0131e0:	d8c01e17 	ldw	r3,120(sp)
 c0131e4:	88bfffc4 	addi	r2,r17,-1
 c0131e8:	1023883a 	mov	r17,r2
 c0131ec:	18a9c83a 	sub	r20,r3,r2
 c0131f0:	003fc606 	br	c01310c <__alt_data_end+0xfc01310c>
 c0131f4:	d8c02417 	ldw	r3,144(sp)
 c0131f8:	04800044 	movi	r18,1
 c0131fc:	8821883a 	mov	r16,r17
 c013200:	18800017 	ldw	r2,0(r3)
 c013204:	18c00104 	addi	r3,r3,4
 c013208:	b811883a 	mov	r8,r23
 c01320c:	d8001d85 	stb	zero,118(sp)
 c013210:	d8801005 	stb	r2,64(sp)
 c013214:	d8c02415 	stw	r3,144(sp)
 c013218:	9029883a 	mov	r20,r18
 c01321c:	dc401004 	addi	r17,sp,64
 c013220:	d8002015 	stw	zero,128(sp)
 c013224:	80c0008c 	andi	r3,r16,2
 c013228:	d8c02115 	stw	r3,132(sp)
 c01322c:	18000126 	beq	r3,zero,c013234 <___svfiprintf_internal_r+0x5b8>
 c013230:	94800084 	addi	r18,r18,2
 c013234:	80c0210c 	andi	r3,r16,132
 c013238:	d8c02215 	stw	r3,136(sp)
 c01323c:	1801321e 	bne	r3,zero,c013708 <___svfiprintf_internal_r+0xa8c>
 c013240:	d9002517 	ldw	r4,148(sp)
 c013244:	24b9c83a 	sub	fp,r4,r18
 c013248:	07012f0e 	bge	zero,fp,c013708 <___svfiprintf_internal_r+0xa8c>
 c01324c:	02400404 	movi	r9,16
 c013250:	d8c01c17 	ldw	r3,112(sp)
 c013254:	d8801b17 	ldw	r2,108(sp)
 c013258:	4f03250e 	bge	r9,fp,c013ef0 <___svfiprintf_internal_r+0x1274>
 c01325c:	010300b4 	movhi	r4,3074
 c013260:	2137b104 	addi	r4,r4,-8508
 c013264:	dc002a15 	stw	r16,168(sp)
 c013268:	dc402b15 	stw	r17,172(sp)
 c01326c:	d9002815 	stw	r4,160(sp)
 c013270:	e023883a 	mov	r17,fp
 c013274:	482f883a 	mov	r23,r9
 c013278:	9839883a 	mov	fp,r19
 c01327c:	054001c4 	movi	r21,7
 c013280:	9027883a 	mov	r19,r18
 c013284:	dc002717 	ldw	r16,156(sp)
 c013288:	dc802317 	ldw	r18,140(sp)
 c01328c:	00000306 	br	c01329c <___svfiprintf_internal_r+0x620>
 c013290:	8c7ffc04 	addi	r17,r17,-16
 c013294:	42000204 	addi	r8,r8,8
 c013298:	bc40130e 	bge	r23,r17,c0132e8 <___svfiprintf_internal_r+0x66c>
 c01329c:	014300b4 	movhi	r5,3074
 c0132a0:	18c00404 	addi	r3,r3,16
 c0132a4:	10800044 	addi	r2,r2,1
 c0132a8:	2977b104 	addi	r5,r5,-8508
 c0132ac:	41400015 	stw	r5,0(r8)
 c0132b0:	45c00115 	stw	r23,4(r8)
 c0132b4:	d8c01c15 	stw	r3,112(sp)
 c0132b8:	d8801b15 	stw	r2,108(sp)
 c0132bc:	a8bff40e 	bge	r21,r2,c013290 <__alt_data_end+0xfc013290>
 c0132c0:	d9801a04 	addi	r6,sp,104
 c0132c4:	900b883a 	mov	r5,r18
 c0132c8:	8009883a 	mov	r4,r16
 c0132cc:	c012aac0 	call	c012aac <__ssprint_r>
 c0132d0:	1001aa1e 	bne	r2,zero,c01397c <___svfiprintf_internal_r+0xd00>
 c0132d4:	8c7ffc04 	addi	r17,r17,-16
 c0132d8:	d8c01c17 	ldw	r3,112(sp)
 c0132dc:	d8801b17 	ldw	r2,108(sp)
 c0132e0:	d811883a 	mov	r8,sp
 c0132e4:	bc7fed16 	blt	r23,r17,c01329c <__alt_data_end+0xfc01329c>
 c0132e8:	9825883a 	mov	r18,r19
 c0132ec:	dc002a17 	ldw	r16,168(sp)
 c0132f0:	e027883a 	mov	r19,fp
 c0132f4:	8839883a 	mov	fp,r17
 c0132f8:	dc402b17 	ldw	r17,172(sp)
 c0132fc:	d9002817 	ldw	r4,160(sp)
 c013300:	e0c7883a 	add	r3,fp,r3
 c013304:	10800044 	addi	r2,r2,1
 c013308:	41000015 	stw	r4,0(r8)
 c01330c:	47000115 	stw	fp,4(r8)
 c013310:	d8c01c15 	stw	r3,112(sp)
 c013314:	d8801b15 	stw	r2,108(sp)
 c013318:	010001c4 	movi	r4,7
 c01331c:	20821616 	blt	r4,r2,c013b78 <___svfiprintf_internal_r+0xefc>
 c013320:	42000204 	addi	r8,r8,8
 c013324:	0000fa06 	br	c013710 <___svfiprintf_internal_r+0xa94>
 c013328:	8821883a 	mov	r16,r17
 c01332c:	dc402103 	ldbu	r17,132(sp)
 c013330:	b811883a 	mov	r8,r23
 c013334:	8c403fcc 	andi	r17,r17,255
 c013338:	8803361e 	bne	r17,zero,c014014 <___svfiprintf_internal_r+0x1398>
 c01333c:	014300b4 	movhi	r5,3074
 c013340:	29767c04 	addi	r5,r5,-9744
 c013344:	d9402915 	stw	r5,164(sp)
 c013348:	8080080c 	andi	r2,r16,32
 c01334c:	103f331e 	bne	r2,zero,c01301c <__alt_data_end+0xfc01301c>
 c013350:	8080040c 	andi	r2,r16,16
 c013354:	1002551e 	bne	r2,zero,c013cac <___svfiprintf_internal_r+0x1030>
 c013358:	8080100c 	andi	r2,r16,64
 c01335c:	1002a626 	beq	r2,zero,c013df8 <___svfiprintf_internal_r+0x117c>
 c013360:	d8802417 	ldw	r2,144(sp)
 c013364:	0029883a 	mov	r20,zero
 c013368:	1480000b 	ldhu	r18,0(r2)
 c01336c:	10800104 	addi	r2,r2,4
 c013370:	d8802415 	stw	r2,144(sp)
 c013374:	003f2e06 	br	c013030 <__alt_data_end+0xfc013030>
 c013378:	8821883a 	mov	r16,r17
 c01337c:	dc402103 	ldbu	r17,132(sp)
 c013380:	b811883a 	mov	r8,r23
 c013384:	8c403fcc 	andi	r17,r17,255
 c013388:	88030b1e 	bne	r17,zero,c013fb8 <___svfiprintf_internal_r+0x133c>
 c01338c:	8080080c 	andi	r2,r16,32
 c013390:	1002271e 	bne	r2,zero,c013c30 <___svfiprintf_internal_r+0xfb4>
 c013394:	8080040c 	andi	r2,r16,16
 c013398:	10028e26 	beq	r2,zero,c013dd4 <___svfiprintf_internal_r+0x1158>
 c01339c:	d8c02417 	ldw	r3,144(sp)
 c0133a0:	d9002617 	ldw	r4,152(sp)
 c0133a4:	18800017 	ldw	r2,0(r3)
 c0133a8:	18c00104 	addi	r3,r3,4
 c0133ac:	d8c02415 	stw	r3,144(sp)
 c0133b0:	11000015 	stw	r4,0(r2)
 c0133b4:	003e5306 	br	c012d04 <__alt_data_end+0xfc012d04>
 c0133b8:	98c00007 	ldb	r3,0(r19)
 c0133bc:	01401b04 	movi	r5,108
 c0133c0:	19424f26 	beq	r3,r5,c013d00 <___svfiprintf_internal_r+0x1084>
 c0133c4:	8c400414 	ori	r17,r17,16
 c0133c8:	003e7806 	br	c012dac <__alt_data_end+0xfc012dac>
 c0133cc:	8c401014 	ori	r17,r17,64
 c0133d0:	98c00007 	ldb	r3,0(r19)
 c0133d4:	003e7506 	br	c012dac <__alt_data_end+0xfc012dac>
 c0133d8:	8821883a 	mov	r16,r17
 c0133dc:	dc402103 	ldbu	r17,132(sp)
 c0133e0:	b811883a 	mov	r8,r23
 c0133e4:	8c403fcc 	andi	r17,r17,255
 c0133e8:	8802fe1e 	bne	r17,zero,c013fe4 <___svfiprintf_internal_r+0x1368>
 c0133ec:	8080080c 	andi	r2,r16,32
 c0133f0:	10004626 	beq	r2,zero,c01350c <___svfiprintf_internal_r+0x890>
 c0133f4:	d9002417 	ldw	r4,144(sp)
 c0133f8:	20800117 	ldw	r2,4(r4)
 c0133fc:	24800017 	ldw	r18,0(r4)
 c013400:	21000204 	addi	r4,r4,8
 c013404:	d9002415 	stw	r4,144(sp)
 c013408:	1029883a 	mov	r20,r2
 c01340c:	10004a16 	blt	r2,zero,c013538 <___svfiprintf_internal_r+0x8bc>
 c013410:	d9002017 	ldw	r4,128(sp)
 c013414:	dd401d83 	ldbu	r21,118(sp)
 c013418:	2001eb16 	blt	r4,zero,c013bc8 <___svfiprintf_internal_r+0xf4c>
 c01341c:	00ffdfc4 	movi	r3,-129
 c013420:	9504b03a 	or	r2,r18,r20
 c013424:	80e0703a 	and	r16,r16,r3
 c013428:	103f3326 	beq	r2,zero,c0130f8 <__alt_data_end+0xfc0130f8>
 c01342c:	a0009426 	beq	r20,zero,c013680 <___svfiprintf_internal_r+0xa04>
 c013430:	dc401a04 	addi	r17,sp,104
 c013434:	402f883a 	mov	r23,r8
 c013438:	9009883a 	mov	r4,r18
 c01343c:	a00b883a 	mov	r5,r20
 c013440:	01800284 	movi	r6,10
 c013444:	000f883a 	mov	r7,zero
 c013448:	c0176d80 	call	c0176d8 <__umoddi3>
 c01344c:	10800c04 	addi	r2,r2,48
 c013450:	8c7fffc4 	addi	r17,r17,-1
 c013454:	9009883a 	mov	r4,r18
 c013458:	a00b883a 	mov	r5,r20
 c01345c:	88800005 	stb	r2,0(r17)
 c013460:	01800284 	movi	r6,10
 c013464:	000f883a 	mov	r7,zero
 c013468:	c0170dc0 	call	c0170dc <__udivdi3>
 c01346c:	1025883a 	mov	r18,r2
 c013470:	10c4b03a 	or	r2,r2,r3
 c013474:	1829883a 	mov	r20,r3
 c013478:	103fef1e 	bne	r2,zero,c013438 <__alt_data_end+0xfc013438>
 c01347c:	d9001e17 	ldw	r4,120(sp)
 c013480:	b811883a 	mov	r8,r23
 c013484:	2469c83a 	sub	r20,r4,r17
 c013488:	003f2006 	br	c01310c <__alt_data_end+0xfc01310c>
 c01348c:	d8802417 	ldw	r2,144(sp)
 c013490:	8821883a 	mov	r16,r17
 c013494:	d8001d85 	stb	zero,118(sp)
 c013498:	14400017 	ldw	r17,0(r2)
 c01349c:	b811883a 	mov	r8,r23
 c0134a0:	15c00104 	addi	r23,r2,4
 c0134a4:	88026c26 	beq	r17,zero,c013e58 <___svfiprintf_internal_r+0x11dc>
 c0134a8:	d8c02017 	ldw	r3,128(sp)
 c0134ac:	18025f16 	blt	r3,zero,c013e2c <___svfiprintf_internal_r+0x11b0>
 c0134b0:	180d883a 	mov	r6,r3
 c0134b4:	000b883a 	mov	r5,zero
 c0134b8:	8809883a 	mov	r4,r17
 c0134bc:	da002d15 	stw	r8,180(sp)
 c0134c0:	c00e6980 	call	c00e698 <memchr>
 c0134c4:	da002d17 	ldw	r8,180(sp)
 c0134c8:	1002a526 	beq	r2,zero,c013f60 <___svfiprintf_internal_r+0x12e4>
 c0134cc:	1469c83a 	sub	r20,r2,r17
 c0134d0:	dd401d83 	ldbu	r21,118(sp)
 c0134d4:	ddc02415 	stw	r23,144(sp)
 c0134d8:	d8002015 	stw	zero,128(sp)
 c0134dc:	003f0b06 	br	c01310c <__alt_data_end+0xfc01310c>
 c0134e0:	8c400814 	ori	r17,r17,32
 c0134e4:	98c00007 	ldb	r3,0(r19)
 c0134e8:	003e3006 	br	c012dac <__alt_data_end+0xfc012dac>
 c0134ec:	8821883a 	mov	r16,r17
 c0134f0:	dc402103 	ldbu	r17,132(sp)
 c0134f4:	b811883a 	mov	r8,r23
 c0134f8:	8c403fcc 	andi	r17,r17,255
 c0134fc:	8802b01e 	bne	r17,zero,c013fc0 <___svfiprintf_internal_r+0x1344>
 c013500:	84000414 	ori	r16,r16,16
 c013504:	8080080c 	andi	r2,r16,32
 c013508:	103fba1e 	bne	r2,zero,c0133f4 <__alt_data_end+0xfc0133f4>
 c01350c:	8080040c 	andi	r2,r16,16
 c013510:	1001df1e 	bne	r2,zero,c013c90 <___svfiprintf_internal_r+0x1014>
 c013514:	8080100c 	andi	r2,r16,64
 c013518:	10023d26 	beq	r2,zero,c013e10 <___svfiprintf_internal_r+0x1194>
 c01351c:	d8802417 	ldw	r2,144(sp)
 c013520:	1480000f 	ldh	r18,0(r2)
 c013524:	10800104 	addi	r2,r2,4
 c013528:	d8802415 	stw	r2,144(sp)
 c01352c:	9029d7fa 	srai	r20,r18,31
 c013530:	a005883a 	mov	r2,r20
 c013534:	103fb60e 	bge	r2,zero,c013410 <__alt_data_end+0xfc013410>
 c013538:	d9402017 	ldw	r5,128(sp)
 c01353c:	04a5c83a 	sub	r18,zero,r18
 c013540:	05400b44 	movi	r21,45
 c013544:	9004c03a 	cmpne	r2,r18,zero
 c013548:	0529c83a 	sub	r20,zero,r20
 c01354c:	dd401d85 	stb	r21,118(sp)
 c013550:	a0a9c83a 	sub	r20,r20,r2
 c013554:	28026c16 	blt	r5,zero,c013f08 <___svfiprintf_internal_r+0x128c>
 c013558:	00bfdfc4 	movi	r2,-129
 c01355c:	80a0703a 	and	r16,r16,r2
 c013560:	a03fb31e 	bne	r20,zero,c013430 <__alt_data_end+0xfc013430>
 c013564:	00004606 	br	c013680 <___svfiprintf_internal_r+0xa04>
 c013568:	9839883a 	mov	fp,r19
 c01356c:	d8002515 	stw	zero,148(sp)
 c013570:	1c3ff404 	addi	r16,r3,-48
 c013574:	0009883a 	mov	r4,zero
 c013578:	01400284 	movi	r5,10
 c01357c:	c00473c0 	call	c00473c <__mulsi3>
 c013580:	e0c00007 	ldb	r3,0(fp)
 c013584:	8089883a 	add	r4,r16,r2
 c013588:	9cc00044 	addi	r19,r19,1
 c01358c:	1c3ff404 	addi	r16,r3,-48
 c013590:	9839883a 	mov	fp,r19
 c013594:	a43ff82e 	bgeu	r20,r16,c013578 <__alt_data_end+0xfc013578>
 c013598:	d9002515 	stw	r4,148(sp)
 c01359c:	18bff804 	addi	r2,r3,-32
 c0135a0:	90be052e 	bgeu	r18,r2,c012db8 <__alt_data_end+0xfc012db8>
 c0135a4:	8821883a 	mov	r16,r17
 c0135a8:	dc402103 	ldbu	r17,132(sp)
 c0135ac:	b811883a 	mov	r8,r23
 c0135b0:	8c403fcc 	andi	r17,r17,255
 c0135b4:	88028d1e 	bne	r17,zero,c013fec <___svfiprintf_internal_r+0x1370>
 c0135b8:	1800ea26 	beq	r3,zero,c013964 <___svfiprintf_internal_r+0xce8>
 c0135bc:	04800044 	movi	r18,1
 c0135c0:	d8c01005 	stb	r3,64(sp)
 c0135c4:	d8001d85 	stb	zero,118(sp)
 c0135c8:	9029883a 	mov	r20,r18
 c0135cc:	dc401004 	addi	r17,sp,64
 c0135d0:	003f1306 	br	c013220 <__alt_data_end+0xfc013220>
 c0135d4:	8c402014 	ori	r17,r17,128
 c0135d8:	98c00007 	ldb	r3,0(r19)
 c0135dc:	003df306 	br	c012dac <__alt_data_end+0xfc012dac>
 c0135e0:	98c00007 	ldb	r3,0(r19)
 c0135e4:	01000a84 	movi	r4,42
 c0135e8:	9f000044 	addi	fp,r19,1
 c0135ec:	19026326 	beq	r3,r4,c013f7c <___svfiprintf_internal_r+0x1300>
 c0135f0:	1c3ff404 	addi	r16,r3,-48
 c0135f4:	0009883a 	mov	r4,zero
 c0135f8:	a4025636 	bltu	r20,r16,c013f54 <___svfiprintf_internal_r+0x12d8>
 c0135fc:	01400284 	movi	r5,10
 c013600:	c00473c0 	call	c00473c <__mulsi3>
 c013604:	e0c00007 	ldb	r3,0(fp)
 c013608:	1409883a 	add	r4,r2,r16
 c01360c:	e4c00044 	addi	r19,fp,1
 c013610:	1c3ff404 	addi	r16,r3,-48
 c013614:	9839883a 	mov	fp,r19
 c013618:	a43ff82e 	bgeu	r20,r16,c0135fc <__alt_data_end+0xfc0135fc>
 c01361c:	20020c16 	blt	r4,zero,c013e50 <___svfiprintf_internal_r+0x11d4>
 c013620:	d9002015 	stw	r4,128(sp)
 c013624:	003de206 	br	c012db0 <__alt_data_end+0xfc012db0>
 c013628:	8821883a 	mov	r16,r17
 c01362c:	dc402103 	ldbu	r17,132(sp)
 c013630:	b811883a 	mov	r8,r23
 c013634:	8c403fcc 	andi	r17,r17,255
 c013638:	8802721e 	bne	r17,zero,c014004 <___svfiprintf_internal_r+0x1388>
 c01363c:	84000414 	ori	r16,r16,16
 c013640:	8080080c 	andi	r2,r16,32
 c013644:	103e9f1e 	bne	r2,zero,c0130c4 <__alt_data_end+0xfc0130c4>
 c013648:	8080040c 	andi	r2,r16,16
 c01364c:	10015326 	beq	r2,zero,c013b9c <___svfiprintf_internal_r+0xf20>
 c013650:	d8c02417 	ldw	r3,144(sp)
 c013654:	d9002017 	ldw	r4,128(sp)
 c013658:	d8001d85 	stb	zero,118(sp)
 c01365c:	18800104 	addi	r2,r3,4
 c013660:	1c800017 	ldw	r18,0(r3)
 c013664:	0029883a 	mov	r20,zero
 c013668:	20015516 	blt	r4,zero,c013bc0 <___svfiprintf_internal_r+0xf44>
 c01366c:	00ffdfc4 	movi	r3,-129
 c013670:	d8802415 	stw	r2,144(sp)
 c013674:	80e0703a 	and	r16,r16,r3
 c013678:	002b883a 	mov	r21,zero
 c01367c:	903e9e26 	beq	r18,zero,c0130f8 <__alt_data_end+0xfc0130f8>
 c013680:	00800244 	movi	r2,9
 c013684:	14bf6a36 	bltu	r2,r18,c013430 <__alt_data_end+0xfc013430>
 c013688:	94800c04 	addi	r18,r18,48
 c01368c:	dc8019c5 	stb	r18,103(sp)
 c013690:	dd002c17 	ldw	r20,176(sp)
 c013694:	dc4019c4 	addi	r17,sp,103
 c013698:	003e9c06 	br	c01310c <__alt_data_end+0xfc01310c>
 c01369c:	8821883a 	mov	r16,r17
 c0136a0:	dc402103 	ldbu	r17,132(sp)
 c0136a4:	b811883a 	mov	r8,r23
 c0136a8:	8c403fcc 	andi	r17,r17,255
 c0136ac:	8802571e 	bne	r17,zero,c01400c <___svfiprintf_internal_r+0x1390>
 c0136b0:	84000414 	ori	r16,r16,16
 c0136b4:	8080080c 	andi	r2,r16,32
 c0136b8:	103ea91e 	bne	r2,zero,c013160 <__alt_data_end+0xfc013160>
 c0136bc:	8080040c 	andi	r2,r16,16
 c0136c0:	10018026 	beq	r2,zero,c013cc4 <___svfiprintf_internal_r+0x1048>
 c0136c4:	d9402417 	ldw	r5,144(sp)
 c0136c8:	d8c02017 	ldw	r3,128(sp)
 c0136cc:	d8001d85 	stb	zero,118(sp)
 c0136d0:	28800104 	addi	r2,r5,4
 c0136d4:	2c800017 	ldw	r18,0(r5)
 c0136d8:	0029883a 	mov	r20,zero
 c0136dc:	18018216 	blt	r3,zero,c013ce8 <___svfiprintf_internal_r+0x106c>
 c0136e0:	00ffdfc4 	movi	r3,-129
 c0136e4:	d8802415 	stw	r2,144(sp)
 c0136e8:	80e0703a 	and	r16,r16,r3
 c0136ec:	903ea81e 	bne	r18,zero,c013190 <__alt_data_end+0xfc013190>
 c0136f0:	d8802017 	ldw	r2,128(sp)
 c0136f4:	002b883a 	mov	r21,zero
 c0136f8:	1001f226 	beq	r2,zero,c013ec4 <___svfiprintf_internal_r+0x1248>
 c0136fc:	0025883a 	mov	r18,zero
 c013700:	0029883a 	mov	r20,zero
 c013704:	003ea306 	br	c013194 <__alt_data_end+0xfc013194>
 c013708:	d8c01c17 	ldw	r3,112(sp)
 c01370c:	d8801b17 	ldw	r2,108(sp)
 c013710:	d9001d87 	ldb	r4,118(sp)
 c013714:	20000b26 	beq	r4,zero,c013744 <___svfiprintf_internal_r+0xac8>
 c013718:	d9001d84 	addi	r4,sp,118
 c01371c:	18c00044 	addi	r3,r3,1
 c013720:	10800044 	addi	r2,r2,1
 c013724:	41000015 	stw	r4,0(r8)
 c013728:	01000044 	movi	r4,1
 c01372c:	41000115 	stw	r4,4(r8)
 c013730:	d8c01c15 	stw	r3,112(sp)
 c013734:	d8801b15 	stw	r2,108(sp)
 c013738:	010001c4 	movi	r4,7
 c01373c:	2080f316 	blt	r4,r2,c013b0c <___svfiprintf_internal_r+0xe90>
 c013740:	42000204 	addi	r8,r8,8
 c013744:	d9402117 	ldw	r5,132(sp)
 c013748:	28000b26 	beq	r5,zero,c013778 <___svfiprintf_internal_r+0xafc>
 c01374c:	d9001d04 	addi	r4,sp,116
 c013750:	18c00084 	addi	r3,r3,2
 c013754:	10800044 	addi	r2,r2,1
 c013758:	41000015 	stw	r4,0(r8)
 c01375c:	01000084 	movi	r4,2
 c013760:	41000115 	stw	r4,4(r8)
 c013764:	d8c01c15 	stw	r3,112(sp)
 c013768:	d8801b15 	stw	r2,108(sp)
 c01376c:	010001c4 	movi	r4,7
 c013770:	2080ef16 	blt	r4,r2,c013b30 <___svfiprintf_internal_r+0xeb4>
 c013774:	42000204 	addi	r8,r8,8
 c013778:	d9402217 	ldw	r5,136(sp)
 c01377c:	01002004 	movi	r4,128
 c013780:	29008f26 	beq	r5,r4,c0139c0 <___svfiprintf_internal_r+0xd44>
 c013784:	d9002017 	ldw	r4,128(sp)
 c013788:	252fc83a 	sub	r23,r4,r20
 c01378c:	05c0310e 	bge	zero,r23,c013854 <___svfiprintf_internal_r+0xbd8>
 c013790:	07000404 	movi	fp,16
 c013794:	e5c17d0e 	bge	fp,r23,c013d8c <___svfiprintf_internal_r+0x1110>
 c013798:	010300b4 	movhi	r4,3074
 c01379c:	2137ad04 	addi	r4,r4,-8524
 c0137a0:	dc002015 	stw	r16,128(sp)
 c0137a4:	dc402215 	stw	r17,136(sp)
 c0137a8:	d9002115 	stw	r4,132(sp)
 c0137ac:	b823883a 	mov	r17,r23
 c0137b0:	054001c4 	movi	r21,7
 c0137b4:	982f883a 	mov	r23,r19
 c0137b8:	dc002717 	ldw	r16,156(sp)
 c0137bc:	9027883a 	mov	r19,r18
 c0137c0:	dc802317 	ldw	r18,140(sp)
 c0137c4:	00000306 	br	c0137d4 <___svfiprintf_internal_r+0xb58>
 c0137c8:	8c7ffc04 	addi	r17,r17,-16
 c0137cc:	42000204 	addi	r8,r8,8
 c0137d0:	e440110e 	bge	fp,r17,c013818 <___svfiprintf_internal_r+0xb9c>
 c0137d4:	18c00404 	addi	r3,r3,16
 c0137d8:	10800044 	addi	r2,r2,1
 c0137dc:	45800015 	stw	r22,0(r8)
 c0137e0:	47000115 	stw	fp,4(r8)
 c0137e4:	d8c01c15 	stw	r3,112(sp)
 c0137e8:	d8801b15 	stw	r2,108(sp)
 c0137ec:	a8bff60e 	bge	r21,r2,c0137c8 <__alt_data_end+0xfc0137c8>
 c0137f0:	d9801a04 	addi	r6,sp,104
 c0137f4:	900b883a 	mov	r5,r18
 c0137f8:	8009883a 	mov	r4,r16
 c0137fc:	c012aac0 	call	c012aac <__ssprint_r>
 c013800:	10005e1e 	bne	r2,zero,c01397c <___svfiprintf_internal_r+0xd00>
 c013804:	8c7ffc04 	addi	r17,r17,-16
 c013808:	d8c01c17 	ldw	r3,112(sp)
 c01380c:	d8801b17 	ldw	r2,108(sp)
 c013810:	d811883a 	mov	r8,sp
 c013814:	e47fef16 	blt	fp,r17,c0137d4 <__alt_data_end+0xfc0137d4>
 c013818:	9825883a 	mov	r18,r19
 c01381c:	dc002017 	ldw	r16,128(sp)
 c013820:	b827883a 	mov	r19,r23
 c013824:	882f883a 	mov	r23,r17
 c013828:	dc402217 	ldw	r17,136(sp)
 c01382c:	d9402117 	ldw	r5,132(sp)
 c013830:	1dc7883a 	add	r3,r3,r23
 c013834:	10800044 	addi	r2,r2,1
 c013838:	41400015 	stw	r5,0(r8)
 c01383c:	45c00115 	stw	r23,4(r8)
 c013840:	d8c01c15 	stw	r3,112(sp)
 c013844:	d8801b15 	stw	r2,108(sp)
 c013848:	010001c4 	movi	r4,7
 c01384c:	2080a616 	blt	r4,r2,c013ae8 <___svfiprintf_internal_r+0xe6c>
 c013850:	42000204 	addi	r8,r8,8
 c013854:	a0c7883a 	add	r3,r20,r3
 c013858:	10800044 	addi	r2,r2,1
 c01385c:	44400015 	stw	r17,0(r8)
 c013860:	45000115 	stw	r20,4(r8)
 c013864:	d8c01c15 	stw	r3,112(sp)
 c013868:	d8801b15 	stw	r2,108(sp)
 c01386c:	010001c4 	movi	r4,7
 c013870:	20808816 	blt	r4,r2,c013a94 <___svfiprintf_internal_r+0xe18>
 c013874:	42000204 	addi	r8,r8,8
 c013878:	8400010c 	andi	r16,r16,4
 c01387c:	80002c26 	beq	r16,zero,c013930 <___svfiprintf_internal_r+0xcb4>
 c013880:	d8802517 	ldw	r2,148(sp)
 c013884:	14a1c83a 	sub	r16,r2,r18
 c013888:	0400290e 	bge	zero,r16,c013930 <___svfiprintf_internal_r+0xcb4>
 c01388c:	04400404 	movi	r17,16
 c013890:	d8801b17 	ldw	r2,108(sp)
 c013894:	8c01a70e 	bge	r17,r16,c013f34 <___svfiprintf_internal_r+0x12b8>
 c013898:	014300b4 	movhi	r5,3074
 c01389c:	2977b104 	addi	r5,r5,-8508
 c0138a0:	d9402815 	stw	r5,160(sp)
 c0138a4:	050001c4 	movi	r20,7
 c0138a8:	dd402717 	ldw	r21,156(sp)
 c0138ac:	ddc02317 	ldw	r23,140(sp)
 c0138b0:	00000306 	br	c0138c0 <___svfiprintf_internal_r+0xc44>
 c0138b4:	843ffc04 	addi	r16,r16,-16
 c0138b8:	42000204 	addi	r8,r8,8
 c0138bc:	8c00130e 	bge	r17,r16,c01390c <___svfiprintf_internal_r+0xc90>
 c0138c0:	010300b4 	movhi	r4,3074
 c0138c4:	18c00404 	addi	r3,r3,16
 c0138c8:	10800044 	addi	r2,r2,1
 c0138cc:	2137b104 	addi	r4,r4,-8508
 c0138d0:	41000015 	stw	r4,0(r8)
 c0138d4:	44400115 	stw	r17,4(r8)
 c0138d8:	d8c01c15 	stw	r3,112(sp)
 c0138dc:	d8801b15 	stw	r2,108(sp)
 c0138e0:	a0bff40e 	bge	r20,r2,c0138b4 <__alt_data_end+0xfc0138b4>
 c0138e4:	d9801a04 	addi	r6,sp,104
 c0138e8:	b80b883a 	mov	r5,r23
 c0138ec:	a809883a 	mov	r4,r21
 c0138f0:	c012aac0 	call	c012aac <__ssprint_r>
 c0138f4:	1000211e 	bne	r2,zero,c01397c <___svfiprintf_internal_r+0xd00>
 c0138f8:	843ffc04 	addi	r16,r16,-16
 c0138fc:	d8c01c17 	ldw	r3,112(sp)
 c013900:	d8801b17 	ldw	r2,108(sp)
 c013904:	d811883a 	mov	r8,sp
 c013908:	8c3fed16 	blt	r17,r16,c0138c0 <__alt_data_end+0xfc0138c0>
 c01390c:	d9402817 	ldw	r5,160(sp)
 c013910:	1c07883a 	add	r3,r3,r16
 c013914:	10800044 	addi	r2,r2,1
 c013918:	41400015 	stw	r5,0(r8)
 c01391c:	44000115 	stw	r16,4(r8)
 c013920:	d8c01c15 	stw	r3,112(sp)
 c013924:	d8801b15 	stw	r2,108(sp)
 c013928:	010001c4 	movi	r4,7
 c01392c:	2080b516 	blt	r4,r2,c013c04 <___svfiprintf_internal_r+0xf88>
 c013930:	d8802517 	ldw	r2,148(sp)
 c013934:	1480010e 	bge	r2,r18,c01393c <___svfiprintf_internal_r+0xcc0>
 c013938:	9005883a 	mov	r2,r18
 c01393c:	d9002617 	ldw	r4,152(sp)
 c013940:	2089883a 	add	r4,r4,r2
 c013944:	d9002615 	stw	r4,152(sp)
 c013948:	18005a1e 	bne	r3,zero,c013ab4 <___svfiprintf_internal_r+0xe38>
 c01394c:	98800007 	ldb	r2,0(r19)
 c013950:	d8001b15 	stw	zero,108(sp)
 c013954:	d811883a 	mov	r8,sp
 c013958:	103cec1e 	bne	r2,zero,c012d0c <__alt_data_end+0xfc012d0c>
 c01395c:	9825883a 	mov	r18,r19
 c013960:	003d0206 	br	c012d6c <__alt_data_end+0xfc012d6c>
 c013964:	d8801c17 	ldw	r2,112(sp)
 c013968:	10000426 	beq	r2,zero,c01397c <___svfiprintf_internal_r+0xd00>
 c01396c:	d9402317 	ldw	r5,140(sp)
 c013970:	d9002717 	ldw	r4,156(sp)
 c013974:	d9801a04 	addi	r6,sp,104
 c013978:	c012aac0 	call	c012aac <__ssprint_r>
 c01397c:	d9402317 	ldw	r5,140(sp)
 c013980:	d8802617 	ldw	r2,152(sp)
 c013984:	28c0030b 	ldhu	r3,12(r5)
 c013988:	18c0100c 	andi	r3,r3,64
 c01398c:	18015c1e 	bne	r3,zero,c013f00 <___svfiprintf_internal_r+0x1284>
 c013990:	dfc03717 	ldw	ra,220(sp)
 c013994:	df003617 	ldw	fp,216(sp)
 c013998:	ddc03517 	ldw	r23,212(sp)
 c01399c:	dd803417 	ldw	r22,208(sp)
 c0139a0:	dd403317 	ldw	r21,204(sp)
 c0139a4:	dd003217 	ldw	r20,200(sp)
 c0139a8:	dcc03117 	ldw	r19,196(sp)
 c0139ac:	dc803017 	ldw	r18,192(sp)
 c0139b0:	dc402f17 	ldw	r17,188(sp)
 c0139b4:	dc002e17 	ldw	r16,184(sp)
 c0139b8:	dec03804 	addi	sp,sp,224
 c0139bc:	f800283a 	ret
 c0139c0:	d9002517 	ldw	r4,148(sp)
 c0139c4:	24afc83a 	sub	r23,r4,r18
 c0139c8:	05ff6e0e 	bge	zero,r23,c013784 <__alt_data_end+0xfc013784>
 c0139cc:	07000404 	movi	fp,16
 c0139d0:	e5c15c0e 	bge	fp,r23,c013f44 <___svfiprintf_internal_r+0x12c8>
 c0139d4:	010300b4 	movhi	r4,3074
 c0139d8:	2137ad04 	addi	r4,r4,-8524
 c0139dc:	dc002215 	stw	r16,136(sp)
 c0139e0:	dc402815 	stw	r17,160(sp)
 c0139e4:	d9002115 	stw	r4,132(sp)
 c0139e8:	b823883a 	mov	r17,r23
 c0139ec:	054001c4 	movi	r21,7
 c0139f0:	982f883a 	mov	r23,r19
 c0139f4:	dc002717 	ldw	r16,156(sp)
 c0139f8:	9027883a 	mov	r19,r18
 c0139fc:	dc802317 	ldw	r18,140(sp)
 c013a00:	00000306 	br	c013a10 <___svfiprintf_internal_r+0xd94>
 c013a04:	8c7ffc04 	addi	r17,r17,-16
 c013a08:	42000204 	addi	r8,r8,8
 c013a0c:	e440110e 	bge	fp,r17,c013a54 <___svfiprintf_internal_r+0xdd8>
 c013a10:	18c00404 	addi	r3,r3,16
 c013a14:	10800044 	addi	r2,r2,1
 c013a18:	45800015 	stw	r22,0(r8)
 c013a1c:	47000115 	stw	fp,4(r8)
 c013a20:	d8c01c15 	stw	r3,112(sp)
 c013a24:	d8801b15 	stw	r2,108(sp)
 c013a28:	a8bff60e 	bge	r21,r2,c013a04 <__alt_data_end+0xfc013a04>
 c013a2c:	d9801a04 	addi	r6,sp,104
 c013a30:	900b883a 	mov	r5,r18
 c013a34:	8009883a 	mov	r4,r16
 c013a38:	c012aac0 	call	c012aac <__ssprint_r>
 c013a3c:	103fcf1e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013a40:	8c7ffc04 	addi	r17,r17,-16
 c013a44:	d8c01c17 	ldw	r3,112(sp)
 c013a48:	d8801b17 	ldw	r2,108(sp)
 c013a4c:	d811883a 	mov	r8,sp
 c013a50:	e47fef16 	blt	fp,r17,c013a10 <__alt_data_end+0xfc013a10>
 c013a54:	9825883a 	mov	r18,r19
 c013a58:	dc002217 	ldw	r16,136(sp)
 c013a5c:	b827883a 	mov	r19,r23
 c013a60:	882f883a 	mov	r23,r17
 c013a64:	dc402817 	ldw	r17,160(sp)
 c013a68:	d9402117 	ldw	r5,132(sp)
 c013a6c:	1dc7883a 	add	r3,r3,r23
 c013a70:	10800044 	addi	r2,r2,1
 c013a74:	41400015 	stw	r5,0(r8)
 c013a78:	45c00115 	stw	r23,4(r8)
 c013a7c:	d8c01c15 	stw	r3,112(sp)
 c013a80:	d8801b15 	stw	r2,108(sp)
 c013a84:	010001c4 	movi	r4,7
 c013a88:	2080b716 	blt	r4,r2,c013d68 <___svfiprintf_internal_r+0x10ec>
 c013a8c:	42000204 	addi	r8,r8,8
 c013a90:	003f3c06 	br	c013784 <__alt_data_end+0xfc013784>
 c013a94:	d9402317 	ldw	r5,140(sp)
 c013a98:	d9002717 	ldw	r4,156(sp)
 c013a9c:	d9801a04 	addi	r6,sp,104
 c013aa0:	c012aac0 	call	c012aac <__ssprint_r>
 c013aa4:	103fb51e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013aa8:	d8c01c17 	ldw	r3,112(sp)
 c013aac:	d811883a 	mov	r8,sp
 c013ab0:	003f7106 	br	c013878 <__alt_data_end+0xfc013878>
 c013ab4:	d9402317 	ldw	r5,140(sp)
 c013ab8:	d9002717 	ldw	r4,156(sp)
 c013abc:	d9801a04 	addi	r6,sp,104
 c013ac0:	c012aac0 	call	c012aac <__ssprint_r>
 c013ac4:	103fa126 	beq	r2,zero,c01394c <__alt_data_end+0xfc01394c>
 c013ac8:	003fac06 	br	c01397c <__alt_data_end+0xfc01397c>
 c013acc:	d9402317 	ldw	r5,140(sp)
 c013ad0:	d9002717 	ldw	r4,156(sp)
 c013ad4:	d9801a04 	addi	r6,sp,104
 c013ad8:	c012aac0 	call	c012aac <__ssprint_r>
 c013adc:	103fa71e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013ae0:	d811883a 	mov	r8,sp
 c013ae4:	003c9e06 	br	c012d60 <__alt_data_end+0xfc012d60>
 c013ae8:	d9402317 	ldw	r5,140(sp)
 c013aec:	d9002717 	ldw	r4,156(sp)
 c013af0:	d9801a04 	addi	r6,sp,104
 c013af4:	c012aac0 	call	c012aac <__ssprint_r>
 c013af8:	103fa01e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013afc:	d8c01c17 	ldw	r3,112(sp)
 c013b00:	d8801b17 	ldw	r2,108(sp)
 c013b04:	d811883a 	mov	r8,sp
 c013b08:	003f5206 	br	c013854 <__alt_data_end+0xfc013854>
 c013b0c:	d9402317 	ldw	r5,140(sp)
 c013b10:	d9002717 	ldw	r4,156(sp)
 c013b14:	d9801a04 	addi	r6,sp,104
 c013b18:	c012aac0 	call	c012aac <__ssprint_r>
 c013b1c:	103f971e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013b20:	d8c01c17 	ldw	r3,112(sp)
 c013b24:	d8801b17 	ldw	r2,108(sp)
 c013b28:	d811883a 	mov	r8,sp
 c013b2c:	003f0506 	br	c013744 <__alt_data_end+0xfc013744>
 c013b30:	d9402317 	ldw	r5,140(sp)
 c013b34:	d9002717 	ldw	r4,156(sp)
 c013b38:	d9801a04 	addi	r6,sp,104
 c013b3c:	c012aac0 	call	c012aac <__ssprint_r>
 c013b40:	103f8e1e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013b44:	d8c01c17 	ldw	r3,112(sp)
 c013b48:	d8801b17 	ldw	r2,108(sp)
 c013b4c:	d811883a 	mov	r8,sp
 c013b50:	003f0906 	br	c013778 <__alt_data_end+0xfc013778>
 c013b54:	d9402017 	ldw	r5,128(sp)
 c013b58:	d8001d85 	stb	zero,118(sp)
 c013b5c:	28007716 	blt	r5,zero,c013d3c <___svfiprintf_internal_r+0x10c0>
 c013b60:	00ffdfc4 	movi	r3,-129
 c013b64:	9504b03a 	or	r2,r18,r20
 c013b68:	80e0703a 	and	r16,r16,r3
 c013b6c:	103d3926 	beq	r2,zero,c013054 <__alt_data_end+0xfc013054>
 c013b70:	002b883a 	mov	r21,zero
 c013b74:	003d3c06 	br	c013068 <__alt_data_end+0xfc013068>
 c013b78:	d9402317 	ldw	r5,140(sp)
 c013b7c:	d9002717 	ldw	r4,156(sp)
 c013b80:	d9801a04 	addi	r6,sp,104
 c013b84:	c012aac0 	call	c012aac <__ssprint_r>
 c013b88:	103f7c1e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013b8c:	d8c01c17 	ldw	r3,112(sp)
 c013b90:	d8801b17 	ldw	r2,108(sp)
 c013b94:	d811883a 	mov	r8,sp
 c013b98:	003edd06 	br	c013710 <__alt_data_end+0xfc013710>
 c013b9c:	8080100c 	andi	r2,r16,64
 c013ba0:	d8001d85 	stb	zero,118(sp)
 c013ba4:	10008426 	beq	r2,zero,c013db8 <___svfiprintf_internal_r+0x113c>
 c013ba8:	d9402417 	ldw	r5,144(sp)
 c013bac:	d8c02017 	ldw	r3,128(sp)
 c013bb0:	0029883a 	mov	r20,zero
 c013bb4:	28800104 	addi	r2,r5,4
 c013bb8:	2c80000b 	ldhu	r18,0(r5)
 c013bbc:	183eab0e 	bge	r3,zero,c01366c <__alt_data_end+0xfc01366c>
 c013bc0:	d8802415 	stw	r2,144(sp)
 c013bc4:	002b883a 	mov	r21,zero
 c013bc8:	9504b03a 	or	r2,r18,r20
 c013bcc:	103e171e 	bne	r2,zero,c01342c <__alt_data_end+0xfc01342c>
 c013bd0:	00800044 	movi	r2,1
 c013bd4:	10803fcc 	andi	r2,r2,255
 c013bd8:	00c00044 	movi	r3,1
 c013bdc:	10c05c26 	beq	r2,r3,c013d50 <___svfiprintf_internal_r+0x10d4>
 c013be0:	00c00084 	movi	r3,2
 c013be4:	10fd1e26 	beq	r2,r3,c013060 <__alt_data_end+0xfc013060>
 c013be8:	003ec406 	br	c0136fc <__alt_data_end+0xfc0136fc>
 c013bec:	d9401e17 	ldw	r5,120(sp)
 c013bf0:	2c69c83a 	sub	r20,r5,r17
 c013bf4:	003d4506 	br	c01310c <__alt_data_end+0xfc01310c>
 c013bf8:	d8802415 	stw	r2,144(sp)
 c013bfc:	98c00007 	ldb	r3,0(r19)
 c013c00:	003c6a06 	br	c012dac <__alt_data_end+0xfc012dac>
 c013c04:	d9402317 	ldw	r5,140(sp)
 c013c08:	d9002717 	ldw	r4,156(sp)
 c013c0c:	d9801a04 	addi	r6,sp,104
 c013c10:	c012aac0 	call	c012aac <__ssprint_r>
 c013c14:	103f591e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013c18:	d8c01c17 	ldw	r3,112(sp)
 c013c1c:	003f4406 	br	c013930 <__alt_data_end+0xfc013930>
 c013c20:	014300b4 	movhi	r5,3074
 c013c24:	29768104 	addi	r5,r5,-9724
 c013c28:	d9402915 	stw	r5,164(sp)
 c013c2c:	003d0906 	br	c013054 <__alt_data_end+0xfc013054>
 c013c30:	d8c02417 	ldw	r3,144(sp)
 c013c34:	d9002617 	ldw	r4,152(sp)
 c013c38:	d9402417 	ldw	r5,144(sp)
 c013c3c:	18800017 	ldw	r2,0(r3)
 c013c40:	2007d7fa 	srai	r3,r4,31
 c013c44:	29400104 	addi	r5,r5,4
 c013c48:	d9402415 	stw	r5,144(sp)
 c013c4c:	11000015 	stw	r4,0(r2)
 c013c50:	10c00115 	stw	r3,4(r2)
 c013c54:	003c2b06 	br	c012d04 <__alt_data_end+0xfc012d04>
 c013c58:	d8c01d45 	stb	r3,117(sp)
 c013c5c:	d8c02017 	ldw	r3,128(sp)
 c013c60:	00800c04 	movi	r2,48
 c013c64:	d8801d05 	stb	r2,116(sp)
 c013c68:	d8001d85 	stb	zero,118(sp)
 c013c6c:	80800094 	ori	r2,r16,2
 c013c70:	1800ac16 	blt	r3,zero,c013f24 <___svfiprintf_internal_r+0x12a8>
 c013c74:	00bfdfc4 	movi	r2,-129
 c013c78:	80a0703a 	and	r16,r16,r2
 c013c7c:	84000094 	ori	r16,r16,2
 c013c80:	002b883a 	mov	r21,zero
 c013c84:	003cf806 	br	c013068 <__alt_data_end+0xfc013068>
 c013c88:	98c00007 	ldb	r3,0(r19)
 c013c8c:	003c4706 	br	c012dac <__alt_data_end+0xfc012dac>
 c013c90:	d9402417 	ldw	r5,144(sp)
 c013c94:	2c800017 	ldw	r18,0(r5)
 c013c98:	29400104 	addi	r5,r5,4
 c013c9c:	d9402415 	stw	r5,144(sp)
 c013ca0:	9029d7fa 	srai	r20,r18,31
 c013ca4:	a005883a 	mov	r2,r20
 c013ca8:	003dd806 	br	c01340c <__alt_data_end+0xfc01340c>
 c013cac:	d9402417 	ldw	r5,144(sp)
 c013cb0:	0029883a 	mov	r20,zero
 c013cb4:	2c800017 	ldw	r18,0(r5)
 c013cb8:	29400104 	addi	r5,r5,4
 c013cbc:	d9402415 	stw	r5,144(sp)
 c013cc0:	003cdb06 	br	c013030 <__alt_data_end+0xfc013030>
 c013cc4:	8080100c 	andi	r2,r16,64
 c013cc8:	d8001d85 	stb	zero,118(sp)
 c013ccc:	10003326 	beq	r2,zero,c013d9c <___svfiprintf_internal_r+0x1120>
 c013cd0:	d9002417 	ldw	r4,144(sp)
 c013cd4:	d9402017 	ldw	r5,128(sp)
 c013cd8:	0029883a 	mov	r20,zero
 c013cdc:	20800104 	addi	r2,r4,4
 c013ce0:	2480000b 	ldhu	r18,0(r4)
 c013ce4:	283e7e0e 	bge	r5,zero,c0136e0 <__alt_data_end+0xfc0136e0>
 c013ce8:	9506b03a 	or	r3,r18,r20
 c013cec:	d8802415 	stw	r2,144(sp)
 c013cf0:	183d271e 	bne	r3,zero,c013190 <__alt_data_end+0xfc013190>
 c013cf4:	002b883a 	mov	r21,zero
 c013cf8:	0005883a 	mov	r2,zero
 c013cfc:	003fb506 	br	c013bd4 <__alt_data_end+0xfc013bd4>
 c013d00:	98c00043 	ldbu	r3,1(r19)
 c013d04:	8c400814 	ori	r17,r17,32
 c013d08:	9cc00044 	addi	r19,r19,1
 c013d0c:	18c03fcc 	andi	r3,r3,255
 c013d10:	18c0201c 	xori	r3,r3,128
 c013d14:	18ffe004 	addi	r3,r3,-128
 c013d18:	003c2406 	br	c012dac <__alt_data_end+0xfc012dac>
 c013d1c:	d8c02415 	stw	r3,144(sp)
 c013d20:	002b883a 	mov	r21,zero
 c013d24:	003fa806 	br	c013bc8 <__alt_data_end+0xfc013bc8>
 c013d28:	010300b4 	movhi	r4,3074
 c013d2c:	21368104 	addi	r4,r4,-9724
 c013d30:	d9002915 	stw	r4,164(sp)
 c013d34:	d8c02415 	stw	r3,144(sp)
 c013d38:	1021883a 	mov	r16,r2
 c013d3c:	9504b03a 	or	r2,r18,r20
 c013d40:	103f8b1e 	bne	r2,zero,c013b70 <__alt_data_end+0xfc013b70>
 c013d44:	002b883a 	mov	r21,zero
 c013d48:	00800084 	movi	r2,2
 c013d4c:	003fa106 	br	c013bd4 <__alt_data_end+0xfc013bd4>
 c013d50:	0025883a 	mov	r18,zero
 c013d54:	94800c04 	addi	r18,r18,48
 c013d58:	dc8019c5 	stb	r18,103(sp)
 c013d5c:	dd002c17 	ldw	r20,176(sp)
 c013d60:	dc4019c4 	addi	r17,sp,103
 c013d64:	003ce906 	br	c01310c <__alt_data_end+0xfc01310c>
 c013d68:	d9402317 	ldw	r5,140(sp)
 c013d6c:	d9002717 	ldw	r4,156(sp)
 c013d70:	d9801a04 	addi	r6,sp,104
 c013d74:	c012aac0 	call	c012aac <__ssprint_r>
 c013d78:	103f001e 	bne	r2,zero,c01397c <__alt_data_end+0xfc01397c>
 c013d7c:	d8c01c17 	ldw	r3,112(sp)
 c013d80:	d8801b17 	ldw	r2,108(sp)
 c013d84:	d811883a 	mov	r8,sp
 c013d88:	003e7e06 	br	c013784 <__alt_data_end+0xfc013784>
 c013d8c:	014300b4 	movhi	r5,3074
 c013d90:	2977ad04 	addi	r5,r5,-8524
 c013d94:	d9402115 	stw	r5,132(sp)
 c013d98:	003ea406 	br	c01382c <__alt_data_end+0xfc01382c>
 c013d9c:	d8c02417 	ldw	r3,144(sp)
 c013da0:	d9002017 	ldw	r4,128(sp)
 c013da4:	0029883a 	mov	r20,zero
 c013da8:	18800104 	addi	r2,r3,4
 c013dac:	1c800017 	ldw	r18,0(r3)
 c013db0:	203e4b0e 	bge	r4,zero,c0136e0 <__alt_data_end+0xfc0136e0>
 c013db4:	003fcc06 	br	c013ce8 <__alt_data_end+0xfc013ce8>
 c013db8:	d9002417 	ldw	r4,144(sp)
 c013dbc:	d9402017 	ldw	r5,128(sp)
 c013dc0:	0029883a 	mov	r20,zero
 c013dc4:	20800104 	addi	r2,r4,4
 c013dc8:	24800017 	ldw	r18,0(r4)
 c013dcc:	283e270e 	bge	r5,zero,c01366c <__alt_data_end+0xfc01366c>
 c013dd0:	003f7b06 	br	c013bc0 <__alt_data_end+0xfc013bc0>
 c013dd4:	8400100c 	andi	r16,r16,64
 c013dd8:	80003326 	beq	r16,zero,c013ea8 <___svfiprintf_internal_r+0x122c>
 c013ddc:	d9402417 	ldw	r5,144(sp)
 c013de0:	d8c02617 	ldw	r3,152(sp)
 c013de4:	28800017 	ldw	r2,0(r5)
 c013de8:	29400104 	addi	r5,r5,4
 c013dec:	d9402415 	stw	r5,144(sp)
 c013df0:	10c0000d 	sth	r3,0(r2)
 c013df4:	003bc306 	br	c012d04 <__alt_data_end+0xfc012d04>
 c013df8:	d9002417 	ldw	r4,144(sp)
 c013dfc:	0029883a 	mov	r20,zero
 c013e00:	24800017 	ldw	r18,0(r4)
 c013e04:	21000104 	addi	r4,r4,4
 c013e08:	d9002415 	stw	r4,144(sp)
 c013e0c:	003c8806 	br	c013030 <__alt_data_end+0xfc013030>
 c013e10:	d8c02417 	ldw	r3,144(sp)
 c013e14:	1c800017 	ldw	r18,0(r3)
 c013e18:	18c00104 	addi	r3,r3,4
 c013e1c:	d8c02415 	stw	r3,144(sp)
 c013e20:	9029d7fa 	srai	r20,r18,31
 c013e24:	a005883a 	mov	r2,r20
 c013e28:	003d7806 	br	c01340c <__alt_data_end+0xfc01340c>
 c013e2c:	8809883a 	mov	r4,r17
 c013e30:	da002d15 	stw	r8,180(sp)
 c013e34:	c0052f80 	call	c0052f8 <strlen>
 c013e38:	1029883a 	mov	r20,r2
 c013e3c:	dd401d83 	ldbu	r21,118(sp)
 c013e40:	ddc02415 	stw	r23,144(sp)
 c013e44:	d8002015 	stw	zero,128(sp)
 c013e48:	da002d17 	ldw	r8,180(sp)
 c013e4c:	003caf06 	br	c01310c <__alt_data_end+0xfc01310c>
 c013e50:	013fffc4 	movi	r4,-1
 c013e54:	003df206 	br	c013620 <__alt_data_end+0xfc013620>
 c013e58:	dd002017 	ldw	r20,128(sp)
 c013e5c:	00800184 	movi	r2,6
 c013e60:	1500012e 	bgeu	r2,r20,c013e68 <___svfiprintf_internal_r+0x11ec>
 c013e64:	1029883a 	mov	r20,r2
 c013e68:	a025883a 	mov	r18,r20
 c013e6c:	a0004116 	blt	r20,zero,c013f74 <___svfiprintf_internal_r+0x12f8>
 c013e70:	044300b4 	movhi	r17,3074
 c013e74:	ddc02415 	stw	r23,144(sp)
 c013e78:	8c768604 	addi	r17,r17,-9704
 c013e7c:	003ce806 	br	c013220 <__alt_data_end+0xfc013220>
 c013e80:	04001004 	movi	r16,64
 c013e84:	800b883a 	mov	r5,r16
 c013e88:	c00478c0 	call	c00478c <_malloc_r>
 c013e8c:	d8c02317 	ldw	r3,140(sp)
 c013e90:	18800015 	stw	r2,0(r3)
 c013e94:	18800415 	stw	r2,16(r3)
 c013e98:	10004d26 	beq	r2,zero,c013fd0 <___svfiprintf_internal_r+0x1354>
 c013e9c:	d9402317 	ldw	r5,140(sp)
 c013ea0:	2c000515 	stw	r16,20(r5)
 c013ea4:	003b8906 	br	c012ccc <__alt_data_end+0xfc012ccc>
 c013ea8:	d9002417 	ldw	r4,144(sp)
 c013eac:	d9402617 	ldw	r5,152(sp)
 c013eb0:	20800017 	ldw	r2,0(r4)
 c013eb4:	21000104 	addi	r4,r4,4
 c013eb8:	d9002415 	stw	r4,144(sp)
 c013ebc:	11400015 	stw	r5,0(r2)
 c013ec0:	003b9006 	br	c012d04 <__alt_data_end+0xfc012d04>
 c013ec4:	8080004c 	andi	r2,r16,1
 c013ec8:	002b883a 	mov	r21,zero
 c013ecc:	10000526 	beq	r2,zero,c013ee4 <___svfiprintf_internal_r+0x1268>
 c013ed0:	00800c04 	movi	r2,48
 c013ed4:	d88019c5 	stb	r2,103(sp)
 c013ed8:	dd002c17 	ldw	r20,176(sp)
 c013edc:	dc4019c4 	addi	r17,sp,103
 c013ee0:	003c8a06 	br	c01310c <__alt_data_end+0xfc01310c>
 c013ee4:	0029883a 	mov	r20,zero
 c013ee8:	dc401a04 	addi	r17,sp,104
 c013eec:	003c8706 	br	c01310c <__alt_data_end+0xfc01310c>
 c013ef0:	014300b4 	movhi	r5,3074
 c013ef4:	2977b104 	addi	r5,r5,-8508
 c013ef8:	d9402815 	stw	r5,160(sp)
 c013efc:	003cff06 	br	c0132fc <__alt_data_end+0xfc0132fc>
 c013f00:	00bfffc4 	movi	r2,-1
 c013f04:	003ea206 	br	c013990 <__alt_data_end+0xfc013990>
 c013f08:	00800044 	movi	r2,1
 c013f0c:	10803fcc 	andi	r2,r2,255
 c013f10:	00c00044 	movi	r3,1
 c013f14:	10fd4526 	beq	r2,r3,c01342c <__alt_data_end+0xfc01342c>
 c013f18:	00c00084 	movi	r3,2
 c013f1c:	10fc5226 	beq	r2,r3,c013068 <__alt_data_end+0xfc013068>
 c013f20:	003c9c06 	br	c013194 <__alt_data_end+0xfc013194>
 c013f24:	1021883a 	mov	r16,r2
 c013f28:	002b883a 	mov	r21,zero
 c013f2c:	00800084 	movi	r2,2
 c013f30:	003ff606 	br	c013f0c <__alt_data_end+0xfc013f0c>
 c013f34:	010300b4 	movhi	r4,3074
 c013f38:	2137b104 	addi	r4,r4,-8508
 c013f3c:	d9002815 	stw	r4,160(sp)
 c013f40:	003e7206 	br	c01390c <__alt_data_end+0xfc01390c>
 c013f44:	014300b4 	movhi	r5,3074
 c013f48:	2977ad04 	addi	r5,r5,-8524
 c013f4c:	d9402115 	stw	r5,132(sp)
 c013f50:	003ec506 	br	c013a68 <__alt_data_end+0xfc013a68>
 c013f54:	e027883a 	mov	r19,fp
 c013f58:	d8002015 	stw	zero,128(sp)
 c013f5c:	003b9406 	br	c012db0 <__alt_data_end+0xfc012db0>
 c013f60:	dd002017 	ldw	r20,128(sp)
 c013f64:	dd401d83 	ldbu	r21,118(sp)
 c013f68:	ddc02415 	stw	r23,144(sp)
 c013f6c:	d8002015 	stw	zero,128(sp)
 c013f70:	003c6606 	br	c01310c <__alt_data_end+0xfc01310c>
 c013f74:	0025883a 	mov	r18,zero
 c013f78:	003fbd06 	br	c013e70 <__alt_data_end+0xfc013e70>
 c013f7c:	d9402417 	ldw	r5,144(sp)
 c013f80:	d8c02417 	ldw	r3,144(sp)
 c013f84:	29400017 	ldw	r5,0(r5)
 c013f88:	19000104 	addi	r4,r3,4
 c013f8c:	d9002415 	stw	r4,144(sp)
 c013f90:	d9402015 	stw	r5,128(sp)
 c013f94:	98c00043 	ldbu	r3,1(r19)
 c013f98:	e027883a 	mov	r19,fp
 c013f9c:	283f5b0e 	bge	r5,zero,c013d0c <__alt_data_end+0xfc013d0c>
 c013fa0:	18c03fcc 	andi	r3,r3,255
 c013fa4:	013fffc4 	movi	r4,-1
 c013fa8:	18c0201c 	xori	r3,r3,128
 c013fac:	d9002015 	stw	r4,128(sp)
 c013fb0:	18ffe004 	addi	r3,r3,-128
 c013fb4:	003b7d06 	br	c012dac <__alt_data_end+0xfc012dac>
 c013fb8:	dd401d85 	stb	r21,118(sp)
 c013fbc:	003cf306 	br	c01338c <__alt_data_end+0xfc01338c>
 c013fc0:	dd401d85 	stb	r21,118(sp)
 c013fc4:	003d4e06 	br	c013500 <__alt_data_end+0xfc013500>
 c013fc8:	dd401d85 	stb	r21,118(sp)
 c013fcc:	003c0e06 	br	c013008 <__alt_data_end+0xfc013008>
 c013fd0:	d9002717 	ldw	r4,156(sp)
 c013fd4:	00800304 	movi	r2,12
 c013fd8:	20800015 	stw	r2,0(r4)
 c013fdc:	00bfffc4 	movi	r2,-1
 c013fe0:	003e6b06 	br	c013990 <__alt_data_end+0xfc013990>
 c013fe4:	dd401d85 	stb	r21,118(sp)
 c013fe8:	003d0006 	br	c0133ec <__alt_data_end+0xfc0133ec>
 c013fec:	dd401d85 	stb	r21,118(sp)
 c013ff0:	003d7106 	br	c0135b8 <__alt_data_end+0xfc0135b8>
 c013ff4:	dd401d85 	stb	r21,118(sp)
 c013ff8:	003c5706 	br	c013158 <__alt_data_end+0xfc013158>
 c013ffc:	dd401d85 	stb	r21,118(sp)
 c014000:	003c2e06 	br	c0130bc <__alt_data_end+0xfc0130bc>
 c014004:	dd401d85 	stb	r21,118(sp)
 c014008:	003d8c06 	br	c01363c <__alt_data_end+0xfc01363c>
 c01400c:	dd401d85 	stb	r21,118(sp)
 c014010:	003da706 	br	c0136b0 <__alt_data_end+0xfc0136b0>
 c014014:	dd401d85 	stb	r21,118(sp)
 c014018:	003cc806 	br	c01333c <__alt_data_end+0xfc01333c>

0c01401c <__submore>:
 c01401c:	defffa04 	addi	sp,sp,-24
 c014020:	dc000015 	stw	r16,0(sp)
 c014024:	2821883a 	mov	r16,r5
 c014028:	29400c17 	ldw	r5,48(r5)
 c01402c:	dfc00515 	stw	ra,20(sp)
 c014030:	dd000415 	stw	r20,16(sp)
 c014034:	dcc00315 	stw	r19,12(sp)
 c014038:	dc800215 	stw	r18,8(sp)
 c01403c:	dc400115 	stw	r17,4(sp)
 c014040:	80801004 	addi	r2,r16,64
 c014044:	28801726 	beq	r5,r2,c0140a4 <__submore+0x88>
 c014048:	84400d17 	ldw	r17,52(r16)
 c01404c:	8c67883a 	add	r19,r17,r17
 c014050:	980d883a 	mov	r6,r19
 c014054:	c00fd680 	call	c00fd68 <_realloc_r>
 c014058:	1025883a 	mov	r18,r2
 c01405c:	10002226 	beq	r2,zero,c0140e8 <__submore+0xcc>
 c014060:	1469883a 	add	r20,r2,r17
 c014064:	880d883a 	mov	r6,r17
 c014068:	100b883a 	mov	r5,r2
 c01406c:	a009883a 	mov	r4,r20
 c014070:	c00e77c0 	call	c00e77c <memcpy>
 c014074:	0005883a 	mov	r2,zero
 c014078:	85000015 	stw	r20,0(r16)
 c01407c:	84800c15 	stw	r18,48(r16)
 c014080:	84c00d15 	stw	r19,52(r16)
 c014084:	dfc00517 	ldw	ra,20(sp)
 c014088:	dd000417 	ldw	r20,16(sp)
 c01408c:	dcc00317 	ldw	r19,12(sp)
 c014090:	dc800217 	ldw	r18,8(sp)
 c014094:	dc400117 	ldw	r17,4(sp)
 c014098:	dc000017 	ldw	r16,0(sp)
 c01409c:	dec00604 	addi	sp,sp,24
 c0140a0:	f800283a 	ret
 c0140a4:	04410004 	movi	r17,1024
 c0140a8:	880b883a 	mov	r5,r17
 c0140ac:	c00478c0 	call	c00478c <_malloc_r>
 c0140b0:	1007883a 	mov	r3,r2
 c0140b4:	10000c26 	beq	r2,zero,c0140e8 <__submore+0xcc>
 c0140b8:	80801083 	ldbu	r2,66(r16)
 c0140bc:	80c00c15 	stw	r3,48(r16)
 c0140c0:	84400d15 	stw	r17,52(r16)
 c0140c4:	1880ffc5 	stb	r2,1023(r3)
 c0140c8:	81401043 	ldbu	r5,65(r16)
 c0140cc:	1900ff44 	addi	r4,r3,1021
 c0140d0:	0005883a 	mov	r2,zero
 c0140d4:	1940ff85 	stb	r5,1022(r3)
 c0140d8:	81401003 	ldbu	r5,64(r16)
 c0140dc:	1940ff45 	stb	r5,1021(r3)
 c0140e0:	81000015 	stw	r4,0(r16)
 c0140e4:	003fe706 	br	c014084 <__alt_data_end+0xfc014084>
 c0140e8:	00bfffc4 	movi	r2,-1
 c0140ec:	003fe506 	br	c014084 <__alt_data_end+0xfc014084>

0c0140f0 <_ungetc_r>:
 c0140f0:	00bfffc4 	movi	r2,-1
 c0140f4:	28806126 	beq	r5,r2,c01427c <_ungetc_r+0x18c>
 c0140f8:	defffb04 	addi	sp,sp,-20
 c0140fc:	dcc00315 	stw	r19,12(sp)
 c014100:	dc400115 	stw	r17,4(sp)
 c014104:	dc000015 	stw	r16,0(sp)
 c014108:	dfc00415 	stw	ra,16(sp)
 c01410c:	dc800215 	stw	r18,8(sp)
 c014110:	2023883a 	mov	r17,r4
 c014114:	3021883a 	mov	r16,r6
 c014118:	2827883a 	mov	r19,r5
 c01411c:	20000226 	beq	r4,zero,c014128 <_ungetc_r+0x38>
 c014120:	20800e17 	ldw	r2,56(r4)
 c014124:	10002e26 	beq	r2,zero,c0141e0 <_ungetc_r+0xf0>
 c014128:	80c0030b 	ldhu	r3,12(r16)
 c01412c:	1888000c 	andi	r2,r3,8192
 c014130:	1000051e 	bne	r2,zero,c014148 <_ungetc_r+0x58>
 c014134:	81001917 	ldw	r4,100(r16)
 c014138:	00b7ffc4 	movi	r2,-8193
 c01413c:	18c80014 	ori	r3,r3,8192
 c014140:	2084703a 	and	r2,r4,r2
 c014144:	80801915 	stw	r2,100(r16)
 c014148:	00bff7c4 	movi	r2,-33
 c01414c:	1884703a 	and	r2,r3,r2
 c014150:	8080030d 	sth	r2,12(r16)
 c014154:	1900010c 	andi	r4,r3,4
 c014158:	2000061e 	bne	r4,zero,c014174 <_ungetc_r+0x84>
 c01415c:	1900040c 	andi	r4,r3,16
 c014160:	20001d26 	beq	r4,zero,c0141d8 <_ungetc_r+0xe8>
 c014164:	18c0020c 	andi	r3,r3,8
 c014168:	1800331e 	bne	r3,zero,c014238 <_ungetc_r+0x148>
 c01416c:	10800114 	ori	r2,r2,4
 c014170:	8080030d 	sth	r2,12(r16)
 c014174:	80800c17 	ldw	r2,48(r16)
 c014178:	9c803fcc 	andi	r18,r19,255
 c01417c:	10001a26 	beq	r2,zero,c0141e8 <_ungetc_r+0xf8>
 c014180:	80c00117 	ldw	r3,4(r16)
 c014184:	80800d17 	ldw	r2,52(r16)
 c014188:	18800f0e 	bge	r3,r2,c0141c8 <_ungetc_r+0xd8>
 c01418c:	80c00017 	ldw	r3,0(r16)
 c014190:	9005883a 	mov	r2,r18
 c014194:	193fffc4 	addi	r4,r3,-1
 c014198:	81000015 	stw	r4,0(r16)
 c01419c:	1cffffc5 	stb	r19,-1(r3)
 c0141a0:	80c00117 	ldw	r3,4(r16)
 c0141a4:	18c00044 	addi	r3,r3,1
 c0141a8:	80c00115 	stw	r3,4(r16)
 c0141ac:	dfc00417 	ldw	ra,16(sp)
 c0141b0:	dcc00317 	ldw	r19,12(sp)
 c0141b4:	dc800217 	ldw	r18,8(sp)
 c0141b8:	dc400117 	ldw	r17,4(sp)
 c0141bc:	dc000017 	ldw	r16,0(sp)
 c0141c0:	dec00504 	addi	sp,sp,20
 c0141c4:	f800283a 	ret
 c0141c8:	800b883a 	mov	r5,r16
 c0141cc:	8809883a 	mov	r4,r17
 c0141d0:	c01401c0 	call	c01401c <__submore>
 c0141d4:	103fed26 	beq	r2,zero,c01418c <__alt_data_end+0xfc01418c>
 c0141d8:	00bfffc4 	movi	r2,-1
 c0141dc:	003ff306 	br	c0141ac <__alt_data_end+0xfc0141ac>
 c0141e0:	c00d4680 	call	c00d468 <__sinit>
 c0141e4:	003fd006 	br	c014128 <__alt_data_end+0xfc014128>
 c0141e8:	80c00417 	ldw	r3,16(r16)
 c0141ec:	80800017 	ldw	r2,0(r16)
 c0141f0:	18000326 	beq	r3,zero,c014200 <_ungetc_r+0x110>
 c0141f4:	1880022e 	bgeu	r3,r2,c014200 <_ungetc_r+0x110>
 c0141f8:	10ffffc3 	ldbu	r3,-1(r2)
 c0141fc:	90c01826 	beq	r18,r3,c014260 <_ungetc_r+0x170>
 c014200:	81400117 	ldw	r5,4(r16)
 c014204:	80800e15 	stw	r2,56(r16)
 c014208:	008000c4 	movi	r2,3
 c01420c:	81001004 	addi	r4,r16,64
 c014210:	80c01084 	addi	r3,r16,66
 c014214:	80800d15 	stw	r2,52(r16)
 c014218:	00800044 	movi	r2,1
 c01421c:	80800115 	stw	r2,4(r16)
 c014220:	81400f15 	stw	r5,60(r16)
 c014224:	81000c15 	stw	r4,48(r16)
 c014228:	84c01085 	stb	r19,66(r16)
 c01422c:	80c00015 	stw	r3,0(r16)
 c014230:	9005883a 	mov	r2,r18
 c014234:	003fdd06 	br	c0141ac <__alt_data_end+0xfc0141ac>
 c014238:	800b883a 	mov	r5,r16
 c01423c:	8809883a 	mov	r4,r17
 c014240:	c00d07c0 	call	c00d07c <_fflush_r>
 c014244:	103fe41e 	bne	r2,zero,c0141d8 <__alt_data_end+0xfc0141d8>
 c014248:	8080030b 	ldhu	r2,12(r16)
 c01424c:	00fffdc4 	movi	r3,-9
 c014250:	80000215 	stw	zero,8(r16)
 c014254:	1884703a 	and	r2,r3,r2
 c014258:	80000615 	stw	zero,24(r16)
 c01425c:	003fc306 	br	c01416c <__alt_data_end+0xfc01416c>
 c014260:	80c00117 	ldw	r3,4(r16)
 c014264:	10bfffc4 	addi	r2,r2,-1
 c014268:	80800015 	stw	r2,0(r16)
 c01426c:	18800044 	addi	r2,r3,1
 c014270:	80800115 	stw	r2,4(r16)
 c014274:	9005883a 	mov	r2,r18
 c014278:	003fcc06 	br	c0141ac <__alt_data_end+0xfc0141ac>
 c01427c:	00bfffc4 	movi	r2,-1
 c014280:	f800283a 	ret

0c014284 <ungetc>:
 c014284:	008300b4 	movhi	r2,3074
 c014288:	10bfc304 	addi	r2,r2,-244
 c01428c:	280d883a 	mov	r6,r5
 c014290:	200b883a 	mov	r5,r4
 c014294:	11000017 	ldw	r4,0(r2)
 c014298:	c0140f01 	jmpi	c0140f0 <_ungetc_r>

0c01429c <__sprint_r.part.0>:
 c01429c:	28801917 	ldw	r2,100(r5)
 c0142a0:	defff604 	addi	sp,sp,-40
 c0142a4:	dd400515 	stw	r21,20(sp)
 c0142a8:	dfc00915 	stw	ra,36(sp)
 c0142ac:	df000815 	stw	fp,32(sp)
 c0142b0:	ddc00715 	stw	r23,28(sp)
 c0142b4:	dd800615 	stw	r22,24(sp)
 c0142b8:	dd000415 	stw	r20,16(sp)
 c0142bc:	dcc00315 	stw	r19,12(sp)
 c0142c0:	dc800215 	stw	r18,8(sp)
 c0142c4:	dc400115 	stw	r17,4(sp)
 c0142c8:	dc000015 	stw	r16,0(sp)
 c0142cc:	1088000c 	andi	r2,r2,8192
 c0142d0:	302b883a 	mov	r21,r6
 c0142d4:	10002e26 	beq	r2,zero,c014390 <__sprint_r.part.0+0xf4>
 c0142d8:	30800217 	ldw	r2,8(r6)
 c0142dc:	35800017 	ldw	r22,0(r6)
 c0142e0:	10002926 	beq	r2,zero,c014388 <__sprint_r.part.0+0xec>
 c0142e4:	2827883a 	mov	r19,r5
 c0142e8:	2029883a 	mov	r20,r4
 c0142ec:	b5c00104 	addi	r23,r22,4
 c0142f0:	04bfffc4 	movi	r18,-1
 c0142f4:	bc400017 	ldw	r17,0(r23)
 c0142f8:	b4000017 	ldw	r16,0(r22)
 c0142fc:	0039883a 	mov	fp,zero
 c014300:	8822d0ba 	srli	r17,r17,2
 c014304:	8800031e 	bne	r17,zero,c014314 <__sprint_r.part.0+0x78>
 c014308:	00001806 	br	c01436c <__sprint_r.part.0+0xd0>
 c01430c:	84000104 	addi	r16,r16,4
 c014310:	8f001526 	beq	r17,fp,c014368 <__sprint_r.part.0+0xcc>
 c014314:	81400017 	ldw	r5,0(r16)
 c014318:	980d883a 	mov	r6,r19
 c01431c:	a009883a 	mov	r4,r20
 c014320:	c015ee40 	call	c015ee4 <_fputwc_r>
 c014324:	e7000044 	addi	fp,fp,1
 c014328:	14bff81e 	bne	r2,r18,c01430c <__alt_data_end+0xfc01430c>
 c01432c:	9005883a 	mov	r2,r18
 c014330:	a8000215 	stw	zero,8(r21)
 c014334:	a8000115 	stw	zero,4(r21)
 c014338:	dfc00917 	ldw	ra,36(sp)
 c01433c:	df000817 	ldw	fp,32(sp)
 c014340:	ddc00717 	ldw	r23,28(sp)
 c014344:	dd800617 	ldw	r22,24(sp)
 c014348:	dd400517 	ldw	r21,20(sp)
 c01434c:	dd000417 	ldw	r20,16(sp)
 c014350:	dcc00317 	ldw	r19,12(sp)
 c014354:	dc800217 	ldw	r18,8(sp)
 c014358:	dc400117 	ldw	r17,4(sp)
 c01435c:	dc000017 	ldw	r16,0(sp)
 c014360:	dec00a04 	addi	sp,sp,40
 c014364:	f800283a 	ret
 c014368:	a8800217 	ldw	r2,8(r21)
 c01436c:	8c63883a 	add	r17,r17,r17
 c014370:	8c63883a 	add	r17,r17,r17
 c014374:	1445c83a 	sub	r2,r2,r17
 c014378:	a8800215 	stw	r2,8(r21)
 c01437c:	b5800204 	addi	r22,r22,8
 c014380:	bdc00204 	addi	r23,r23,8
 c014384:	103fdb1e 	bne	r2,zero,c0142f4 <__alt_data_end+0xfc0142f4>
 c014388:	0005883a 	mov	r2,zero
 c01438c:	003fe806 	br	c014330 <__alt_data_end+0xfc014330>
 c014390:	c00db5c0 	call	c00db5c <__sfvwrite_r>
 c014394:	003fe606 	br	c014330 <__alt_data_end+0xfc014330>

0c014398 <__sprint_r>:
 c014398:	30c00217 	ldw	r3,8(r6)
 c01439c:	18000126 	beq	r3,zero,c0143a4 <__sprint_r+0xc>
 c0143a0:	c01429c1 	jmpi	c01429c <__sprint_r.part.0>
 c0143a4:	30000115 	stw	zero,4(r6)
 c0143a8:	0005883a 	mov	r2,zero
 c0143ac:	f800283a 	ret

0c0143b0 <___vfiprintf_internal_r>:
 c0143b0:	deffca04 	addi	sp,sp,-216
 c0143b4:	dd403115 	stw	r21,196(sp)
 c0143b8:	dfc03515 	stw	ra,212(sp)
 c0143bc:	df003415 	stw	fp,208(sp)
 c0143c0:	ddc03315 	stw	r23,204(sp)
 c0143c4:	dd803215 	stw	r22,200(sp)
 c0143c8:	dd003015 	stw	r20,192(sp)
 c0143cc:	dcc02f15 	stw	r19,188(sp)
 c0143d0:	dc802e15 	stw	r18,184(sp)
 c0143d4:	dc402d15 	stw	r17,180(sp)
 c0143d8:	dc002c15 	stw	r16,176(sp)
 c0143dc:	d9002115 	stw	r4,132(sp)
 c0143e0:	d9402015 	stw	r5,128(sp)
 c0143e4:	d9c02215 	stw	r7,136(sp)
 c0143e8:	302b883a 	mov	r21,r6
 c0143ec:	20000226 	beq	r4,zero,c0143f8 <___vfiprintf_internal_r+0x48>
 c0143f0:	20800e17 	ldw	r2,56(r4)
 c0143f4:	1000cf26 	beq	r2,zero,c014734 <___vfiprintf_internal_r+0x384>
 c0143f8:	d8c02017 	ldw	r3,128(sp)
 c0143fc:	1880030b 	ldhu	r2,12(r3)
 c014400:	10c8000c 	andi	r3,r2,8192
 c014404:	1800071e 	bne	r3,zero,c014424 <___vfiprintf_internal_r+0x74>
 c014408:	d9402017 	ldw	r5,128(sp)
 c01440c:	00f7ffc4 	movi	r3,-8193
 c014410:	10880014 	ori	r2,r2,8192
 c014414:	29001917 	ldw	r4,100(r5)
 c014418:	2880030d 	sth	r2,12(r5)
 c01441c:	20c6703a 	and	r3,r4,r3
 c014420:	28c01915 	stw	r3,100(r5)
 c014424:	10c0020c 	andi	r3,r2,8
 c014428:	1800a526 	beq	r3,zero,c0146c0 <___vfiprintf_internal_r+0x310>
 c01442c:	d9002017 	ldw	r4,128(sp)
 c014430:	20c00417 	ldw	r3,16(r4)
 c014434:	1800a226 	beq	r3,zero,c0146c0 <___vfiprintf_internal_r+0x310>
 c014438:	1080068c 	andi	r2,r2,26
 c01443c:	00c00284 	movi	r3,10
 c014440:	10c0a826 	beq	r2,r3,c0146e4 <___vfiprintf_internal_r+0x334>
 c014444:	d9001a04 	addi	r4,sp,104
 c014448:	d94019c4 	addi	r5,sp,103
 c01444c:	048300b4 	movhi	r18,3074
 c014450:	2145c83a 	sub	r2,r4,r5
 c014454:	94b7b504 	addi	r18,r18,-8492
 c014458:	d9001e15 	stw	r4,120(sp)
 c01445c:	d9401f15 	stw	r5,124(sp)
 c014460:	dec01a15 	stw	sp,104(sp)
 c014464:	d8001c15 	stw	zero,112(sp)
 c014468:	d8001b15 	stw	zero,108(sp)
 c01446c:	d811883a 	mov	r8,sp
 c014470:	d8002615 	stw	zero,152(sp)
 c014474:	d8002415 	stw	zero,144(sp)
 c014478:	d8802815 	stw	r2,160(sp)
 c01447c:	a82d883a 	mov	r22,r21
 c014480:	b0800007 	ldb	r2,0(r22)
 c014484:	10040d26 	beq	r2,zero,c0154bc <___vfiprintf_internal_r+0x110c>
 c014488:	00c00944 	movi	r3,37
 c01448c:	b029883a 	mov	r20,r22
 c014490:	10c0021e 	bne	r2,r3,c01449c <___vfiprintf_internal_r+0xec>
 c014494:	00001606 	br	c0144f0 <___vfiprintf_internal_r+0x140>
 c014498:	10c00326 	beq	r2,r3,c0144a8 <___vfiprintf_internal_r+0xf8>
 c01449c:	a5000044 	addi	r20,r20,1
 c0144a0:	a0800007 	ldb	r2,0(r20)
 c0144a4:	103ffc1e 	bne	r2,zero,c014498 <__alt_data_end+0xfc014498>
 c0144a8:	a5a1c83a 	sub	r16,r20,r22
 c0144ac:	80001026 	beq	r16,zero,c0144f0 <___vfiprintf_internal_r+0x140>
 c0144b0:	d8c01c17 	ldw	r3,112(sp)
 c0144b4:	d8801b17 	ldw	r2,108(sp)
 c0144b8:	45800015 	stw	r22,0(r8)
 c0144bc:	80c7883a 	add	r3,r16,r3
 c0144c0:	10800044 	addi	r2,r2,1
 c0144c4:	44000115 	stw	r16,4(r8)
 c0144c8:	d8c01c15 	stw	r3,112(sp)
 c0144cc:	d8801b15 	stw	r2,108(sp)
 c0144d0:	010001c4 	movi	r4,7
 c0144d4:	2080750e 	bge	r4,r2,c0146ac <___vfiprintf_internal_r+0x2fc>
 c0144d8:	1803951e 	bne	r3,zero,c015330 <___vfiprintf_internal_r+0xf80>
 c0144dc:	d8c02417 	ldw	r3,144(sp)
 c0144e0:	d8001b15 	stw	zero,108(sp)
 c0144e4:	d811883a 	mov	r8,sp
 c0144e8:	1c07883a 	add	r3,r3,r16
 c0144ec:	d8c02415 	stw	r3,144(sp)
 c0144f0:	a0800007 	ldb	r2,0(r20)
 c0144f4:	1002e026 	beq	r2,zero,c015078 <___vfiprintf_internal_r+0xcc8>
 c0144f8:	a5800044 	addi	r22,r20,1
 c0144fc:	a0c00047 	ldb	r3,1(r20)
 c014500:	d8001d85 	stb	zero,118(sp)
 c014504:	0027883a 	mov	r19,zero
 c014508:	d8002305 	stb	zero,140(sp)
 c01450c:	043fffc4 	movi	r16,-1
 c014510:	d8002515 	stw	zero,148(sp)
 c014514:	0023883a 	mov	r17,zero
 c014518:	05001604 	movi	r20,88
 c01451c:	05400244 	movi	r21,9
 c014520:	402f883a 	mov	r23,r8
 c014524:	b5800044 	addi	r22,r22,1
 c014528:	18bff804 	addi	r2,r3,-32
 c01452c:	a0827736 	bltu	r20,r2,c014f0c <___vfiprintf_internal_r+0xb5c>
 c014530:	100490ba 	slli	r2,r2,2
 c014534:	01030074 	movhi	r4,3073
 c014538:	21115204 	addi	r4,r4,17736
 c01453c:	1105883a 	add	r2,r2,r4
 c014540:	10800017 	ldw	r2,0(r2)
 c014544:	1000683a 	jmp	r2
 c014548:	0c014c0c 	andi	r16,at,1328
 c01454c:	0c014f0c 	andi	r16,at,1340
 c014550:	0c014f0c 	andi	r16,at,1340
 c014554:	0c014c28 	cmpgeui	r16,at,1328
 c014558:	0c014f0c 	andi	r16,at,1340
 c01455c:	0c014f0c 	andi	r16,at,1340
 c014560:	0c014f0c 	andi	r16,at,1340
 c014564:	0c014f0c 	andi	r16,at,1340
 c014568:	0c014f0c 	andi	r16,at,1340
 c01456c:	0c014f0c 	andi	r16,at,1340
 c014570:	0c014e30 	cmpltui	r16,at,1336
 c014574:	0c014e54 	ori	r16,at,1337
 c014578:	0c014f0c 	andi	r16,at,1340
 c01457c:	0c01474c 	andi	r16,at,1309
 c014580:	0c014e68 	cmpgeui	r16,at,1337
 c014584:	0c014f0c 	andi	r16,at,1340
 c014588:	0c014c34 	orhi	r16,at,1328
 c01458c:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c014590:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c014594:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c014598:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c01459c:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c0145a0:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c0145a4:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c0145a8:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c0145ac:	0c014c40 	call	c014c4 <__alt_mem_onchip_memory2_0+0xc014c4>
 c0145b0:	0c014f0c 	andi	r16,at,1340
 c0145b4:	0c014f0c 	andi	r16,at,1340
 c0145b8:	0c014f0c 	andi	r16,at,1340
 c0145bc:	0c014f0c 	andi	r16,at,1340
 c0145c0:	0c014f0c 	andi	r16,at,1340
 c0145c4:	0c014f0c 	andi	r16,at,1340
 c0145c8:	0c014f0c 	andi	r16,at,1340
 c0145cc:	0c014f0c 	andi	r16,at,1340
 c0145d0:	0c014f0c 	andi	r16,at,1340
 c0145d4:	0c014f0c 	andi	r16,at,1340
 c0145d8:	0c014c80 	call	c014c8 <__alt_mem_onchip_memory2_0+0xc014c8>
 c0145dc:	0c014f0c 	andi	r16,at,1340
 c0145e0:	0c014f0c 	andi	r16,at,1340
 c0145e4:	0c014f0c 	andi	r16,at,1340
 c0145e8:	0c014f0c 	andi	r16,at,1340
 c0145ec:	0c014f0c 	andi	r16,at,1340
 c0145f0:	0c014f0c 	andi	r16,at,1340
 c0145f4:	0c014f0c 	andi	r16,at,1340
 c0145f8:	0c014f0c 	andi	r16,at,1340
 c0145fc:	0c014f0c 	andi	r16,at,1340
 c014600:	0c014f0c 	andi	r16,at,1340
 c014604:	0c014cbc 	xorhi	r16,at,1330
 c014608:	0c014f0c 	andi	r16,at,1340
 c01460c:	0c014f0c 	andi	r16,at,1340
 c014610:	0c014f0c 	andi	r16,at,1340
 c014614:	0c014f0c 	andi	r16,at,1340
 c014618:	0c014f0c 	andi	r16,at,1340
 c01461c:	0c014d18 	cmpnei	r16,at,1332
 c014620:	0c014f0c 	andi	r16,at,1340
 c014624:	0c014f0c 	andi	r16,at,1340
 c014628:	0c014d8c 	andi	r16,at,1334
 c01462c:	0c014f0c 	andi	r16,at,1340
 c014630:	0c014f0c 	andi	r16,at,1340
 c014634:	0c014f0c 	andi	r16,at,1340
 c014638:	0c014f0c 	andi	r16,at,1340
 c01463c:	0c014f0c 	andi	r16,at,1340
 c014640:	0c014f0c 	andi	r16,at,1340
 c014644:	0c014f0c 	andi	r16,at,1340
 c014648:	0c014f0c 	andi	r16,at,1340
 c01464c:	0c014f0c 	andi	r16,at,1340
 c014650:	0c014f0c 	andi	r16,at,1340
 c014654:	0c014b34 	orhi	r16,at,1324
 c014658:	0c014b64 	muli	r16,at,1325
 c01465c:	0c014f0c 	andi	r16,at,1340
 c014660:	0c014f0c 	andi	r16,at,1340
 c014664:	0c014f0c 	andi	r16,at,1340
 c014668:	0c014eb4 	orhi	r16,at,1338
 c01466c:	0c014b64 	muli	r16,at,1325
 c014670:	0c014f0c 	andi	r16,at,1340
 c014674:	0c014f0c 	andi	r16,at,1340
 c014678:	0c014a0c 	andi	r16,at,1320
 c01467c:	0c014f0c 	andi	r16,at,1340
 c014680:	0c014a20 	cmpeqi	r16,at,1320
 c014684:	0c014a58 	cmpnei	r16,at,1321
 c014688:	0c014758 	cmpnei	r16,at,1309
 c01468c:	0c014a00 	call	c014a0 <__alt_mem_onchip_memory2_0+0xc014a0>
 c014690:	0c014f0c 	andi	r16,at,1340
 c014694:	0c014dcc 	andi	r16,at,1335
 c014698:	0c014f0c 	andi	r16,at,1340
 c01469c:	0c014e18 	cmpnei	r16,at,1336
 c0146a0:	0c014f0c 	andi	r16,at,1340
 c0146a4:	0c014f0c 	andi	r16,at,1340
 c0146a8:	0c014adc 	xori	r16,at,1323
 c0146ac:	42000204 	addi	r8,r8,8
 c0146b0:	d8c02417 	ldw	r3,144(sp)
 c0146b4:	1c07883a 	add	r3,r3,r16
 c0146b8:	d8c02415 	stw	r3,144(sp)
 c0146bc:	003f8c06 	br	c0144f0 <__alt_data_end+0xfc0144f0>
 c0146c0:	d9402017 	ldw	r5,128(sp)
 c0146c4:	d9002117 	ldw	r4,132(sp)
 c0146c8:	c00b45c0 	call	c00b45c <__swsetup_r>
 c0146cc:	1003c11e 	bne	r2,zero,c0155d4 <___vfiprintf_internal_r+0x1224>
 c0146d0:	d9402017 	ldw	r5,128(sp)
 c0146d4:	00c00284 	movi	r3,10
 c0146d8:	2880030b 	ldhu	r2,12(r5)
 c0146dc:	1080068c 	andi	r2,r2,26
 c0146e0:	10ff581e 	bne	r2,r3,c014444 <__alt_data_end+0xfc014444>
 c0146e4:	d8c02017 	ldw	r3,128(sp)
 c0146e8:	1880038f 	ldh	r2,14(r3)
 c0146ec:	103f5516 	blt	r2,zero,c014444 <__alt_data_end+0xfc014444>
 c0146f0:	d9c02217 	ldw	r7,136(sp)
 c0146f4:	d9002117 	ldw	r4,132(sp)
 c0146f8:	a80d883a 	mov	r6,r21
 c0146fc:	180b883a 	mov	r5,r3
 c014700:	c0158d80 	call	c0158d8 <__sbprintf>
 c014704:	dfc03517 	ldw	ra,212(sp)
 c014708:	df003417 	ldw	fp,208(sp)
 c01470c:	ddc03317 	ldw	r23,204(sp)
 c014710:	dd803217 	ldw	r22,200(sp)
 c014714:	dd403117 	ldw	r21,196(sp)
 c014718:	dd003017 	ldw	r20,192(sp)
 c01471c:	dcc02f17 	ldw	r19,188(sp)
 c014720:	dc802e17 	ldw	r18,184(sp)
 c014724:	dc402d17 	ldw	r17,180(sp)
 c014728:	dc002c17 	ldw	r16,176(sp)
 c01472c:	dec03604 	addi	sp,sp,216
 c014730:	f800283a 	ret
 c014734:	c00d4680 	call	c00d468 <__sinit>
 c014738:	003f2f06 	br	c0143f8 <__alt_data_end+0xfc0143f8>
 c01473c:	d8c02517 	ldw	r3,148(sp)
 c014740:	d8802215 	stw	r2,136(sp)
 c014744:	00c7c83a 	sub	r3,zero,r3
 c014748:	d8c02515 	stw	r3,148(sp)
 c01474c:	8c400114 	ori	r17,r17,4
 c014750:	b0c00007 	ldb	r3,0(r22)
 c014754:	003f7306 	br	c014524 <__alt_data_end+0xfc014524>
 c014758:	00800c04 	movi	r2,48
 c01475c:	d9402217 	ldw	r5,136(sp)
 c014760:	d8801d05 	stb	r2,116(sp)
 c014764:	00801e04 	movi	r2,120
 c014768:	d8801d45 	stb	r2,117(sp)
 c01476c:	d8001d85 	stb	zero,118(sp)
 c014770:	b811883a 	mov	r8,r23
 c014774:	28c00104 	addi	r3,r5,4
 c014778:	2cc00017 	ldw	r19,0(r5)
 c01477c:	0029883a 	mov	r20,zero
 c014780:	88800094 	ori	r2,r17,2
 c014784:	80032516 	blt	r16,zero,c01541c <___vfiprintf_internal_r+0x106c>
 c014788:	00bfdfc4 	movi	r2,-129
 c01478c:	88a2703a 	and	r17,r17,r2
 c014790:	d8c02215 	stw	r3,136(sp)
 c014794:	8c400094 	ori	r17,r17,2
 c014798:	98032a1e 	bne	r19,zero,c015444 <___vfiprintf_internal_r+0x1094>
 c01479c:	008300b4 	movhi	r2,3074
 c0147a0:	10b68104 	addi	r2,r2,-9724
 c0147a4:	d8802615 	stw	r2,152(sp)
 c0147a8:	002b883a 	mov	r21,zero
 c0147ac:	8001741e 	bne	r16,zero,c014d80 <___vfiprintf_internal_r+0x9d0>
 c0147b0:	0021883a 	mov	r16,zero
 c0147b4:	0029883a 	mov	r20,zero
 c0147b8:	ddc01a04 	addi	r23,sp,104
 c0147bc:	8027883a 	mov	r19,r16
 c0147c0:	8500010e 	bge	r16,r20,c0147c8 <___vfiprintf_internal_r+0x418>
 c0147c4:	a027883a 	mov	r19,r20
 c0147c8:	ad403fcc 	andi	r21,r21,255
 c0147cc:	ad40201c 	xori	r21,r21,128
 c0147d0:	ad7fe004 	addi	r21,r21,-128
 c0147d4:	a8000126 	beq	r21,zero,c0147dc <___vfiprintf_internal_r+0x42c>
 c0147d8:	9cc00044 	addi	r19,r19,1
 c0147dc:	89c0008c 	andi	r7,r17,2
 c0147e0:	38000126 	beq	r7,zero,c0147e8 <___vfiprintf_internal_r+0x438>
 c0147e4:	9cc00084 	addi	r19,r19,2
 c0147e8:	88c0210c 	andi	r3,r17,132
 c0147ec:	1801dd1e 	bne	r3,zero,c014f64 <___vfiprintf_internal_r+0xbb4>
 c0147f0:	d9402517 	ldw	r5,148(sp)
 c0147f4:	2cebc83a 	sub	r21,r5,r19
 c0147f8:	0541da0e 	bge	zero,r21,c014f64 <___vfiprintf_internal_r+0xbb4>
 c0147fc:	07000404 	movi	fp,16
 c014800:	d8801c17 	ldw	r2,112(sp)
 c014804:	e543be0e 	bge	fp,r21,c015700 <___vfiprintf_internal_r+0x1350>
 c014808:	014300b4 	movhi	r5,3074
 c01480c:	2977b904 	addi	r5,r5,-8476
 c014810:	dc002715 	stw	r16,156(sp)
 c014814:	d9801b17 	ldw	r6,108(sp)
 c014818:	a821883a 	mov	r16,r21
 c01481c:	d9402315 	stw	r5,140(sp)
 c014820:	028001c4 	movi	r10,7
 c014824:	d9c02915 	stw	r7,164(sp)
 c014828:	182b883a 	mov	r21,r3
 c01482c:	00000506 	br	c014844 <___vfiprintf_internal_r+0x494>
 c014830:	31000084 	addi	r4,r6,2
 c014834:	42000204 	addi	r8,r8,8
 c014838:	180d883a 	mov	r6,r3
 c01483c:	843ffc04 	addi	r16,r16,-16
 c014840:	e4000f0e 	bge	fp,r16,c014880 <___vfiprintf_internal_r+0x4d0>
 c014844:	010300b4 	movhi	r4,3074
 c014848:	10800404 	addi	r2,r2,16
 c01484c:	30c00044 	addi	r3,r6,1
 c014850:	2137b904 	addi	r4,r4,-8476
 c014854:	41000015 	stw	r4,0(r8)
 c014858:	47000115 	stw	fp,4(r8)
 c01485c:	d8801c15 	stw	r2,112(sp)
 c014860:	d8c01b15 	stw	r3,108(sp)
 c014864:	50fff20e 	bge	r10,r3,c014830 <__alt_data_end+0xfc014830>
 c014868:	1001b21e 	bne	r2,zero,c014f34 <___vfiprintf_internal_r+0xb84>
 c01486c:	843ffc04 	addi	r16,r16,-16
 c014870:	000d883a 	mov	r6,zero
 c014874:	01000044 	movi	r4,1
 c014878:	d811883a 	mov	r8,sp
 c01487c:	e43ff116 	blt	fp,r16,c014844 <__alt_data_end+0xfc014844>
 c014880:	a807883a 	mov	r3,r21
 c014884:	d9c02917 	ldw	r7,164(sp)
 c014888:	802b883a 	mov	r21,r16
 c01488c:	dc002717 	ldw	r16,156(sp)
 c014890:	d9402317 	ldw	r5,140(sp)
 c014894:	a885883a 	add	r2,r21,r2
 c014898:	45400115 	stw	r21,4(r8)
 c01489c:	41400015 	stw	r5,0(r8)
 c0148a0:	d8801c15 	stw	r2,112(sp)
 c0148a4:	d9001b15 	stw	r4,108(sp)
 c0148a8:	014001c4 	movi	r5,7
 c0148ac:	29026216 	blt	r5,r4,c015238 <___vfiprintf_internal_r+0xe88>
 c0148b0:	d9801d87 	ldb	r6,118(sp)
 c0148b4:	42000204 	addi	r8,r8,8
 c0148b8:	21400044 	addi	r5,r4,1
 c0148bc:	3001ae1e 	bne	r6,zero,c014f78 <___vfiprintf_internal_r+0xbc8>
 c0148c0:	3801bb26 	beq	r7,zero,c014fb0 <___vfiprintf_internal_r+0xc00>
 c0148c4:	d9001d04 	addi	r4,sp,116
 c0148c8:	10800084 	addi	r2,r2,2
 c0148cc:	41000015 	stw	r4,0(r8)
 c0148d0:	01000084 	movi	r4,2
 c0148d4:	41000115 	stw	r4,4(r8)
 c0148d8:	d8801c15 	stw	r2,112(sp)
 c0148dc:	d9401b15 	stw	r5,108(sp)
 c0148e0:	010001c4 	movi	r4,7
 c0148e4:	2142680e 	bge	r4,r5,c015288 <___vfiprintf_internal_r+0xed8>
 c0148e8:	1002b11e 	bne	r2,zero,c0153b0 <___vfiprintf_internal_r+0x1000>
 c0148ec:	01802004 	movi	r6,128
 c0148f0:	01400044 	movi	r5,1
 c0148f4:	0009883a 	mov	r4,zero
 c0148f8:	d811883a 	mov	r8,sp
 c0148fc:	1981ae1e 	bne	r3,r6,c014fb8 <___vfiprintf_internal_r+0xc08>
 c014900:	d8c02517 	ldw	r3,148(sp)
 c014904:	1cf9c83a 	sub	fp,r3,r19
 c014908:	0701ab0e 	bge	zero,fp,c014fb8 <___vfiprintf_internal_r+0xc08>
 c01490c:	05400404 	movi	r21,16
 c014910:	af03a90e 	bge	r21,fp,c0157b8 <___vfiprintf_internal_r+0x1408>
 c014914:	014300b4 	movhi	r5,3074
 c014918:	2977b504 	addi	r5,r5,-8492
 c01491c:	d9402315 	stw	r5,140(sp)
 c014920:	01c001c4 	movi	r7,7
 c014924:	00000506 	br	c01493c <___vfiprintf_internal_r+0x58c>
 c014928:	21800084 	addi	r6,r4,2
 c01492c:	42000204 	addi	r8,r8,8
 c014930:	1809883a 	mov	r4,r3
 c014934:	e73ffc04 	addi	fp,fp,-16
 c014938:	af000d0e 	bge	r21,fp,c014970 <___vfiprintf_internal_r+0x5c0>
 c01493c:	10800404 	addi	r2,r2,16
 c014940:	20c00044 	addi	r3,r4,1
 c014944:	44800015 	stw	r18,0(r8)
 c014948:	45400115 	stw	r21,4(r8)
 c01494c:	d8801c15 	stw	r2,112(sp)
 c014950:	d8c01b15 	stw	r3,108(sp)
 c014954:	38fff40e 	bge	r7,r3,c014928 <__alt_data_end+0xfc014928>
 c014958:	10022b1e 	bne	r2,zero,c015208 <___vfiprintf_internal_r+0xe58>
 c01495c:	e73ffc04 	addi	fp,fp,-16
 c014960:	01800044 	movi	r6,1
 c014964:	0009883a 	mov	r4,zero
 c014968:	d811883a 	mov	r8,sp
 c01496c:	af3ff316 	blt	r21,fp,c01493c <__alt_data_end+0xfc01493c>
 c014970:	d8c02317 	ldw	r3,140(sp)
 c014974:	1705883a 	add	r2,r2,fp
 c014978:	47000115 	stw	fp,4(r8)
 c01497c:	40c00015 	stw	r3,0(r8)
 c014980:	d8801c15 	stw	r2,112(sp)
 c014984:	d9801b15 	stw	r6,108(sp)
 c014988:	00c001c4 	movi	r3,7
 c01498c:	19829416 	blt	r3,r6,c0153e0 <___vfiprintf_internal_r+0x1030>
 c014990:	8521c83a 	sub	r16,r16,r20
 c014994:	42000204 	addi	r8,r8,8
 c014998:	31400044 	addi	r5,r6,1
 c01499c:	3009883a 	mov	r4,r6
 c0149a0:	04018716 	blt	zero,r16,c014fc0 <___vfiprintf_internal_r+0xc10>
 c0149a4:	a085883a 	add	r2,r20,r2
 c0149a8:	45c00015 	stw	r23,0(r8)
 c0149ac:	45000115 	stw	r20,4(r8)
 c0149b0:	d8801c15 	stw	r2,112(sp)
 c0149b4:	d9401b15 	stw	r5,108(sp)
 c0149b8:	00c001c4 	movi	r3,7
 c0149bc:	1941c20e 	bge	r3,r5,c0150c8 <___vfiprintf_internal_r+0xd18>
 c0149c0:	1002531e 	bne	r2,zero,c015310 <___vfiprintf_internal_r+0xf60>
 c0149c4:	d8001b15 	stw	zero,108(sp)
 c0149c8:	8c40010c 	andi	r17,r17,4
 c0149cc:	88023226 	beq	r17,zero,c015298 <___vfiprintf_internal_r+0xee8>
 c0149d0:	d9002517 	ldw	r4,148(sp)
 c0149d4:	24e3c83a 	sub	r17,r4,r19
 c0149d8:	04432916 	blt	zero,r17,c015680 <___vfiprintf_internal_r+0x12d0>
 c0149dc:	d8802517 	ldw	r2,148(sp)
 c0149e0:	14c0010e 	bge	r2,r19,c0149e8 <___vfiprintf_internal_r+0x638>
 c0149e4:	9805883a 	mov	r2,r19
 c0149e8:	d8c02417 	ldw	r3,144(sp)
 c0149ec:	1887883a 	add	r3,r3,r2
 c0149f0:	d8c02415 	stw	r3,144(sp)
 c0149f4:	d8001b15 	stw	zero,108(sp)
 c0149f8:	d811883a 	mov	r8,sp
 c0149fc:	003ea006 	br	c014480 <__alt_data_end+0xfc014480>
 c014a00:	8c400814 	ori	r17,r17,32
 c014a04:	b0c00007 	ldb	r3,0(r22)
 c014a08:	003ec606 	br	c014524 <__alt_data_end+0xfc014524>
 c014a0c:	b0c00007 	ldb	r3,0(r22)
 c014a10:	00801b04 	movi	r2,108
 c014a14:	18832026 	beq	r3,r2,c015698 <___vfiprintf_internal_r+0x12e8>
 c014a18:	8c400414 	ori	r17,r17,16
 c014a1c:	003ec106 	br	c014524 <__alt_data_end+0xfc014524>
 c014a20:	9cc03fcc 	andi	r19,r19,255
 c014a24:	b811883a 	mov	r8,r23
 c014a28:	9803981e 	bne	r19,zero,c01588c <___vfiprintf_internal_r+0x14dc>
 c014a2c:	8880080c 	andi	r2,r17,32
 c014a30:	1002be26 	beq	r2,zero,c01552c <___vfiprintf_internal_r+0x117c>
 c014a34:	d9002217 	ldw	r4,136(sp)
 c014a38:	d9402417 	ldw	r5,144(sp)
 c014a3c:	20800017 	ldw	r2,0(r4)
 c014a40:	2807d7fa 	srai	r3,r5,31
 c014a44:	21000104 	addi	r4,r4,4
 c014a48:	d9002215 	stw	r4,136(sp)
 c014a4c:	11400015 	stw	r5,0(r2)
 c014a50:	10c00115 	stw	r3,4(r2)
 c014a54:	003e8a06 	br	c014480 <__alt_data_end+0xfc014480>
 c014a58:	9cc03fcc 	andi	r19,r19,255
 c014a5c:	b811883a 	mov	r8,r23
 c014a60:	9803871e 	bne	r19,zero,c015880 <___vfiprintf_internal_r+0x14d0>
 c014a64:	8880080c 	andi	r2,r17,32
 c014a68:	10009a26 	beq	r2,zero,c014cd4 <___vfiprintf_internal_r+0x924>
 c014a6c:	d9002217 	ldw	r4,136(sp)
 c014a70:	d8001d85 	stb	zero,118(sp)
 c014a74:	20800204 	addi	r2,r4,8
 c014a78:	24c00017 	ldw	r19,0(r4)
 c014a7c:	25000117 	ldw	r20,4(r4)
 c014a80:	8002a416 	blt	r16,zero,c015514 <___vfiprintf_internal_r+0x1164>
 c014a84:	013fdfc4 	movi	r4,-129
 c014a88:	9d06b03a 	or	r3,r19,r20
 c014a8c:	d8802215 	stw	r2,136(sp)
 c014a90:	8922703a 	and	r17,r17,r4
 c014a94:	18009b26 	beq	r3,zero,c014d04 <___vfiprintf_internal_r+0x954>
 c014a98:	002b883a 	mov	r21,zero
 c014a9c:	ddc01a04 	addi	r23,sp,104
 c014aa0:	9806d0fa 	srli	r3,r19,3
 c014aa4:	a008977a 	slli	r4,r20,29
 c014aa8:	a028d0fa 	srli	r20,r20,3
 c014aac:	9cc001cc 	andi	r19,r19,7
 c014ab0:	98800c04 	addi	r2,r19,48
 c014ab4:	bdffffc4 	addi	r23,r23,-1
 c014ab8:	20e6b03a 	or	r19,r4,r3
 c014abc:	b8800005 	stb	r2,0(r23)
 c014ac0:	9d06b03a 	or	r3,r19,r20
 c014ac4:	183ff61e 	bne	r3,zero,c014aa0 <__alt_data_end+0xfc014aa0>
 c014ac8:	88c0004c 	andi	r3,r17,1
 c014acc:	18021f1e 	bne	r3,zero,c01534c <___vfiprintf_internal_r+0xf9c>
 c014ad0:	d9401e17 	ldw	r5,120(sp)
 c014ad4:	2de9c83a 	sub	r20,r5,r23
 c014ad8:	003f3806 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c014adc:	9cc03fcc 	andi	r19,r19,255
 c014ae0:	b811883a 	mov	r8,r23
 c014ae4:	98034f1e 	bne	r19,zero,c015824 <___vfiprintf_internal_r+0x1474>
 c014ae8:	008300b4 	movhi	r2,3074
 c014aec:	10b68104 	addi	r2,r2,-9724
 c014af0:	d8802615 	stw	r2,152(sp)
 c014af4:	8880080c 	andi	r2,r17,32
 c014af8:	1000ac26 	beq	r2,zero,c014dac <___vfiprintf_internal_r+0x9fc>
 c014afc:	d9002217 	ldw	r4,136(sp)
 c014b00:	24c00017 	ldw	r19,0(r4)
 c014b04:	25000117 	ldw	r20,4(r4)
 c014b08:	21000204 	addi	r4,r4,8
 c014b0c:	d9002215 	stw	r4,136(sp)
 c014b10:	8880004c 	andi	r2,r17,1
 c014b14:	1001e726 	beq	r2,zero,c0152b4 <___vfiprintf_internal_r+0xf04>
 c014b18:	9d04b03a 	or	r2,r19,r20
 c014b1c:	10025c1e 	bne	r2,zero,c015490 <___vfiprintf_internal_r+0x10e0>
 c014b20:	d8001d85 	stb	zero,118(sp)
 c014b24:	80024416 	blt	r16,zero,c015438 <___vfiprintf_internal_r+0x1088>
 c014b28:	00bfdfc4 	movi	r2,-129
 c014b2c:	88a2703a 	and	r17,r17,r2
 c014b30:	003f1d06 	br	c0147a8 <__alt_data_end+0xfc0147a8>
 c014b34:	d8c02217 	ldw	r3,136(sp)
 c014b38:	04c00044 	movi	r19,1
 c014b3c:	b811883a 	mov	r8,r23
 c014b40:	18800017 	ldw	r2,0(r3)
 c014b44:	18c00104 	addi	r3,r3,4
 c014b48:	d8001d85 	stb	zero,118(sp)
 c014b4c:	d8801005 	stb	r2,64(sp)
 c014b50:	d8c02215 	stw	r3,136(sp)
 c014b54:	9829883a 	mov	r20,r19
 c014b58:	ddc01004 	addi	r23,sp,64
 c014b5c:	0021883a 	mov	r16,zero
 c014b60:	003f1e06 	br	c0147dc <__alt_data_end+0xfc0147dc>
 c014b64:	9cc03fcc 	andi	r19,r19,255
 c014b68:	b811883a 	mov	r8,r23
 c014b6c:	9803331e 	bne	r19,zero,c01583c <___vfiprintf_internal_r+0x148c>
 c014b70:	8880080c 	andi	r2,r17,32
 c014b74:	10004826 	beq	r2,zero,c014c98 <___vfiprintf_internal_r+0x8e8>
 c014b78:	d9002217 	ldw	r4,136(sp)
 c014b7c:	20800117 	ldw	r2,4(r4)
 c014b80:	24c00017 	ldw	r19,0(r4)
 c014b84:	21000204 	addi	r4,r4,8
 c014b88:	d9002215 	stw	r4,136(sp)
 c014b8c:	1029883a 	mov	r20,r2
 c014b90:	10024c16 	blt	r2,zero,c0154c4 <___vfiprintf_internal_r+0x1114>
 c014b94:	dd401d83 	ldbu	r21,118(sp)
 c014b98:	80007116 	blt	r16,zero,c014d60 <___vfiprintf_internal_r+0x9b0>
 c014b9c:	00ffdfc4 	movi	r3,-129
 c014ba0:	9d04b03a 	or	r2,r19,r20
 c014ba4:	88e2703a 	and	r17,r17,r3
 c014ba8:	1000d126 	beq	r2,zero,c014ef0 <___vfiprintf_internal_r+0xb40>
 c014bac:	a0023526 	beq	r20,zero,c015484 <___vfiprintf_internal_r+0x10d4>
 c014bb0:	ddc01a04 	addi	r23,sp,104
 c014bb4:	4039883a 	mov	fp,r8
 c014bb8:	9809883a 	mov	r4,r19
 c014bbc:	a00b883a 	mov	r5,r20
 c014bc0:	01800284 	movi	r6,10
 c014bc4:	000f883a 	mov	r7,zero
 c014bc8:	c0176d80 	call	c0176d8 <__umoddi3>
 c014bcc:	10800c04 	addi	r2,r2,48
 c014bd0:	bdffffc4 	addi	r23,r23,-1
 c014bd4:	9809883a 	mov	r4,r19
 c014bd8:	a00b883a 	mov	r5,r20
 c014bdc:	b8800005 	stb	r2,0(r23)
 c014be0:	01800284 	movi	r6,10
 c014be4:	000f883a 	mov	r7,zero
 c014be8:	c0170dc0 	call	c0170dc <__udivdi3>
 c014bec:	1027883a 	mov	r19,r2
 c014bf0:	10c4b03a 	or	r2,r2,r3
 c014bf4:	1829883a 	mov	r20,r3
 c014bf8:	103fef1e 	bne	r2,zero,c014bb8 <__alt_data_end+0xfc014bb8>
 c014bfc:	d9001e17 	ldw	r4,120(sp)
 c014c00:	e011883a 	mov	r8,fp
 c014c04:	25e9c83a 	sub	r20,r4,r23
 c014c08:	003eec06 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c014c0c:	d8802307 	ldb	r2,140(sp)
 c014c10:	1002361e 	bne	r2,zero,c0154ec <___vfiprintf_internal_r+0x113c>
 c014c14:	00c00804 	movi	r3,32
 c014c18:	d8c02305 	stb	r3,140(sp)
 c014c1c:	04c00044 	movi	r19,1
 c014c20:	b0c00007 	ldb	r3,0(r22)
 c014c24:	003e3f06 	br	c014524 <__alt_data_end+0xfc014524>
 c014c28:	8c400054 	ori	r17,r17,1
 c014c2c:	b0c00007 	ldb	r3,0(r22)
 c014c30:	003e3c06 	br	c014524 <__alt_data_end+0xfc014524>
 c014c34:	8c402014 	ori	r17,r17,128
 c014c38:	b0c00007 	ldb	r3,0(r22)
 c014c3c:	003e3906 	br	c014524 <__alt_data_end+0xfc014524>
 c014c40:	dc002715 	stw	r16,156(sp)
 c014c44:	d8002515 	stw	zero,148(sp)
 c014c48:	1f3ff404 	addi	fp,r3,-48
 c014c4c:	0009883a 	mov	r4,zero
 c014c50:	b021883a 	mov	r16,r22
 c014c54:	01400284 	movi	r5,10
 c014c58:	c00473c0 	call	c00473c <__mulsi3>
 c014c5c:	80c00007 	ldb	r3,0(r16)
 c014c60:	e089883a 	add	r4,fp,r2
 c014c64:	b5800044 	addi	r22,r22,1
 c014c68:	1f3ff404 	addi	fp,r3,-48
 c014c6c:	b021883a 	mov	r16,r22
 c014c70:	af3ff82e 	bgeu	r21,fp,c014c54 <__alt_data_end+0xfc014c54>
 c014c74:	d9002515 	stw	r4,148(sp)
 c014c78:	dc002717 	ldw	r16,156(sp)
 c014c7c:	003e2a06 	br	c014528 <__alt_data_end+0xfc014528>
 c014c80:	9cc03fcc 	andi	r19,r19,255
 c014c84:	b811883a 	mov	r8,r23
 c014c88:	9802e91e 	bne	r19,zero,c015830 <___vfiprintf_internal_r+0x1480>
 c014c8c:	8c400414 	ori	r17,r17,16
 c014c90:	8880080c 	andi	r2,r17,32
 c014c94:	103fb81e 	bne	r2,zero,c014b78 <__alt_data_end+0xfc014b78>
 c014c98:	8880040c 	andi	r2,r17,16
 c014c9c:	10022e26 	beq	r2,zero,c015558 <___vfiprintf_internal_r+0x11a8>
 c014ca0:	d9402217 	ldw	r5,136(sp)
 c014ca4:	2cc00017 	ldw	r19,0(r5)
 c014ca8:	29400104 	addi	r5,r5,4
 c014cac:	d9402215 	stw	r5,136(sp)
 c014cb0:	9829d7fa 	srai	r20,r19,31
 c014cb4:	a005883a 	mov	r2,r20
 c014cb8:	003fb506 	br	c014b90 <__alt_data_end+0xfc014b90>
 c014cbc:	9cc03fcc 	andi	r19,r19,255
 c014cc0:	b811883a 	mov	r8,r23
 c014cc4:	9802fa1e 	bne	r19,zero,c0158b0 <___vfiprintf_internal_r+0x1500>
 c014cc8:	8c400414 	ori	r17,r17,16
 c014ccc:	8880080c 	andi	r2,r17,32
 c014cd0:	103f661e 	bne	r2,zero,c014a6c <__alt_data_end+0xfc014a6c>
 c014cd4:	8880040c 	andi	r2,r17,16
 c014cd8:	10020626 	beq	r2,zero,c0154f4 <___vfiprintf_internal_r+0x1144>
 c014cdc:	d9402217 	ldw	r5,136(sp)
 c014ce0:	d8001d85 	stb	zero,118(sp)
 c014ce4:	0029883a 	mov	r20,zero
 c014ce8:	28800104 	addi	r2,r5,4
 c014cec:	2cc00017 	ldw	r19,0(r5)
 c014cf0:	80020816 	blt	r16,zero,c015514 <___vfiprintf_internal_r+0x1164>
 c014cf4:	00ffdfc4 	movi	r3,-129
 c014cf8:	d8802215 	stw	r2,136(sp)
 c014cfc:	88e2703a 	and	r17,r17,r3
 c014d00:	983f651e 	bne	r19,zero,c014a98 <__alt_data_end+0xfc014a98>
 c014d04:	002b883a 	mov	r21,zero
 c014d08:	8002cf26 	beq	r16,zero,c015848 <___vfiprintf_internal_r+0x1498>
 c014d0c:	0027883a 	mov	r19,zero
 c014d10:	0029883a 	mov	r20,zero
 c014d14:	003f6106 	br	c014a9c <__alt_data_end+0xfc014a9c>
 c014d18:	9cc03fcc 	andi	r19,r19,255
 c014d1c:	b811883a 	mov	r8,r23
 c014d20:	9802e01e 	bne	r19,zero,c0158a4 <___vfiprintf_internal_r+0x14f4>
 c014d24:	8c400414 	ori	r17,r17,16
 c014d28:	8880080c 	andi	r2,r17,32
 c014d2c:	1000641e 	bne	r2,zero,c014ec0 <___vfiprintf_internal_r+0xb10>
 c014d30:	8880040c 	andi	r2,r17,16
 c014d34:	1001c81e 	bne	r2,zero,c015458 <___vfiprintf_internal_r+0x10a8>
 c014d38:	8880100c 	andi	r2,r17,64
 c014d3c:	d8001d85 	stb	zero,118(sp)
 c014d40:	1002281e 	bne	r2,zero,c0155e4 <___vfiprintf_internal_r+0x1234>
 c014d44:	d9002217 	ldw	r4,136(sp)
 c014d48:	0029883a 	mov	r20,zero
 c014d4c:	20800104 	addi	r2,r4,4
 c014d50:	24c00017 	ldw	r19,0(r4)
 c014d54:	8001c60e 	bge	r16,zero,c015470 <___vfiprintf_internal_r+0x10c0>
 c014d58:	d8802215 	stw	r2,136(sp)
 c014d5c:	002b883a 	mov	r21,zero
 c014d60:	9d04b03a 	or	r2,r19,r20
 c014d64:	103f911e 	bne	r2,zero,c014bac <__alt_data_end+0xfc014bac>
 c014d68:	00800044 	movi	r2,1
 c014d6c:	10803fcc 	andi	r2,r2,255
 c014d70:	00c00044 	movi	r3,1
 c014d74:	10c05f26 	beq	r2,r3,c014ef4 <___vfiprintf_internal_r+0xb44>
 c014d78:	00c00084 	movi	r3,2
 c014d7c:	10ffe31e 	bne	r2,r3,c014d0c <__alt_data_end+0xfc014d0c>
 c014d80:	0027883a 	mov	r19,zero
 c014d84:	0029883a 	mov	r20,zero
 c014d88:	00015106 	br	c0152d0 <___vfiprintf_internal_r+0xf20>
 c014d8c:	9cc03fcc 	andi	r19,r19,255
 c014d90:	b811883a 	mov	r8,r23
 c014d94:	9802c01e 	bne	r19,zero,c015898 <___vfiprintf_internal_r+0x14e8>
 c014d98:	014300b4 	movhi	r5,3074
 c014d9c:	29767c04 	addi	r5,r5,-9744
 c014da0:	d9402615 	stw	r5,152(sp)
 c014da4:	8880080c 	andi	r2,r17,32
 c014da8:	103f541e 	bne	r2,zero,c014afc <__alt_data_end+0xfc014afc>
 c014dac:	8880040c 	andi	r2,r17,16
 c014db0:	1001f226 	beq	r2,zero,c01557c <___vfiprintf_internal_r+0x11cc>
 c014db4:	d9402217 	ldw	r5,136(sp)
 c014db8:	0029883a 	mov	r20,zero
 c014dbc:	2cc00017 	ldw	r19,0(r5)
 c014dc0:	29400104 	addi	r5,r5,4
 c014dc4:	d9402215 	stw	r5,136(sp)
 c014dc8:	003f5106 	br	c014b10 <__alt_data_end+0xfc014b10>
 c014dcc:	d8c02217 	ldw	r3,136(sp)
 c014dd0:	b811883a 	mov	r8,r23
 c014dd4:	d8001d85 	stb	zero,118(sp)
 c014dd8:	1dc00017 	ldw	r23,0(r3)
 c014ddc:	1f000104 	addi	fp,r3,4
 c014de0:	b8025926 	beq	r23,zero,c015748 <___vfiprintf_internal_r+0x1398>
 c014de4:	80023316 	blt	r16,zero,c0156b4 <___vfiprintf_internal_r+0x1304>
 c014de8:	800d883a 	mov	r6,r16
 c014dec:	000b883a 	mov	r5,zero
 c014df0:	b809883a 	mov	r4,r23
 c014df4:	da002a15 	stw	r8,168(sp)
 c014df8:	c00e6980 	call	c00e698 <memchr>
 c014dfc:	da002a17 	ldw	r8,168(sp)
 c014e00:	10026826 	beq	r2,zero,c0157a4 <___vfiprintf_internal_r+0x13f4>
 c014e04:	15e9c83a 	sub	r20,r2,r23
 c014e08:	dd401d83 	ldbu	r21,118(sp)
 c014e0c:	df002215 	stw	fp,136(sp)
 c014e10:	0021883a 	mov	r16,zero
 c014e14:	003e6906 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c014e18:	9cc03fcc 	andi	r19,r19,255
 c014e1c:	b811883a 	mov	r8,r23
 c014e20:	983fc126 	beq	r19,zero,c014d28 <__alt_data_end+0xfc014d28>
 c014e24:	d8c02303 	ldbu	r3,140(sp)
 c014e28:	d8c01d85 	stb	r3,118(sp)
 c014e2c:	003fbe06 	br	c014d28 <__alt_data_end+0xfc014d28>
 c014e30:	d9002217 	ldw	r4,136(sp)
 c014e34:	d9402217 	ldw	r5,136(sp)
 c014e38:	21000017 	ldw	r4,0(r4)
 c014e3c:	28800104 	addi	r2,r5,4
 c014e40:	d9002515 	stw	r4,148(sp)
 c014e44:	203e3d16 	blt	r4,zero,c01473c <__alt_data_end+0xfc01473c>
 c014e48:	d8802215 	stw	r2,136(sp)
 c014e4c:	b0c00007 	ldb	r3,0(r22)
 c014e50:	003db406 	br	c014524 <__alt_data_end+0xfc014524>
 c014e54:	00c00ac4 	movi	r3,43
 c014e58:	d8c02305 	stb	r3,140(sp)
 c014e5c:	04c00044 	movi	r19,1
 c014e60:	b0c00007 	ldb	r3,0(r22)
 c014e64:	003daf06 	br	c014524 <__alt_data_end+0xfc014524>
 c014e68:	b0c00007 	ldb	r3,0(r22)
 c014e6c:	01000a84 	movi	r4,42
 c014e70:	b4000044 	addi	r16,r22,1
 c014e74:	19025e26 	beq	r3,r4,c0157f0 <___vfiprintf_internal_r+0x1440>
 c014e78:	1f3ff404 	addi	fp,r3,-48
 c014e7c:	0009883a 	mov	r4,zero
 c014e80:	af025236 	bltu	r21,fp,c0157cc <___vfiprintf_internal_r+0x141c>
 c014e84:	01400284 	movi	r5,10
 c014e88:	c00473c0 	call	c00473c <__mulsi3>
 c014e8c:	80c00007 	ldb	r3,0(r16)
 c014e90:	1709883a 	add	r4,r2,fp
 c014e94:	85800044 	addi	r22,r16,1
 c014e98:	1f3ff404 	addi	fp,r3,-48
 c014e9c:	b021883a 	mov	r16,r22
 c014ea0:	af3ff82e 	bgeu	r21,fp,c014e84 <__alt_data_end+0xfc014e84>
 c014ea4:	2021883a 	mov	r16,r4
 c014ea8:	203d9f0e 	bge	r4,zero,c014528 <__alt_data_end+0xfc014528>
 c014eac:	043fffc4 	movi	r16,-1
 c014eb0:	003d9d06 	br	c014528 <__alt_data_end+0xfc014528>
 c014eb4:	8c401014 	ori	r17,r17,64
 c014eb8:	b0c00007 	ldb	r3,0(r22)
 c014ebc:	003d9906 	br	c014524 <__alt_data_end+0xfc014524>
 c014ec0:	d9002217 	ldw	r4,136(sp)
 c014ec4:	d8001d85 	stb	zero,118(sp)
 c014ec8:	20c00204 	addi	r3,r4,8
 c014ecc:	24c00017 	ldw	r19,0(r4)
 c014ed0:	25000117 	ldw	r20,4(r4)
 c014ed4:	8001e716 	blt	r16,zero,c015674 <___vfiprintf_internal_r+0x12c4>
 c014ed8:	013fdfc4 	movi	r4,-129
 c014edc:	9d04b03a 	or	r2,r19,r20
 c014ee0:	d8c02215 	stw	r3,136(sp)
 c014ee4:	8922703a 	and	r17,r17,r4
 c014ee8:	002b883a 	mov	r21,zero
 c014eec:	103f2f1e 	bne	r2,zero,c014bac <__alt_data_end+0xfc014bac>
 c014ef0:	803e2f26 	beq	r16,zero,c0147b0 <__alt_data_end+0xfc0147b0>
 c014ef4:	0027883a 	mov	r19,zero
 c014ef8:	9cc00c04 	addi	r19,r19,48
 c014efc:	dcc019c5 	stb	r19,103(sp)
 c014f00:	dd002817 	ldw	r20,160(sp)
 c014f04:	ddc019c4 	addi	r23,sp,103
 c014f08:	003e2c06 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c014f0c:	9cc03fcc 	andi	r19,r19,255
 c014f10:	b811883a 	mov	r8,r23
 c014f14:	9802571e 	bne	r19,zero,c015874 <___vfiprintf_internal_r+0x14c4>
 c014f18:	18005726 	beq	r3,zero,c015078 <___vfiprintf_internal_r+0xcc8>
 c014f1c:	04c00044 	movi	r19,1
 c014f20:	d8c01005 	stb	r3,64(sp)
 c014f24:	d8001d85 	stb	zero,118(sp)
 c014f28:	9829883a 	mov	r20,r19
 c014f2c:	ddc01004 	addi	r23,sp,64
 c014f30:	003f0a06 	br	c014b5c <__alt_data_end+0xfc014b5c>
 c014f34:	d9402017 	ldw	r5,128(sp)
 c014f38:	d9002117 	ldw	r4,132(sp)
 c014f3c:	d9801a04 	addi	r6,sp,104
 c014f40:	da802a15 	stw	r10,168(sp)
 c014f44:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c014f48:	da802a17 	ldw	r10,168(sp)
 c014f4c:	1000501e 	bne	r2,zero,c015090 <___vfiprintf_internal_r+0xce0>
 c014f50:	d9801b17 	ldw	r6,108(sp)
 c014f54:	d8801c17 	ldw	r2,112(sp)
 c014f58:	d811883a 	mov	r8,sp
 c014f5c:	31000044 	addi	r4,r6,1
 c014f60:	003e3606 	br	c01483c <__alt_data_end+0xfc01483c>
 c014f64:	d9001b17 	ldw	r4,108(sp)
 c014f68:	d8801c17 	ldw	r2,112(sp)
 c014f6c:	21400044 	addi	r5,r4,1
 c014f70:	d9801d87 	ldb	r6,118(sp)
 c014f74:	303e5226 	beq	r6,zero,c0148c0 <__alt_data_end+0xfc0148c0>
 c014f78:	01800044 	movi	r6,1
 c014f7c:	d9001d84 	addi	r4,sp,118
 c014f80:	1185883a 	add	r2,r2,r6
 c014f84:	41000015 	stw	r4,0(r8)
 c014f88:	41800115 	stw	r6,4(r8)
 c014f8c:	d8801c15 	stw	r2,112(sp)
 c014f90:	d9401b15 	stw	r5,108(sp)
 c014f94:	010001c4 	movi	r4,7
 c014f98:	2140b00e 	bge	r4,r5,c01525c <___vfiprintf_internal_r+0xeac>
 c014f9c:	1000f61e 	bne	r2,zero,c015378 <___vfiprintf_internal_r+0xfc8>
 c014fa0:	3800b31e 	bne	r7,zero,c015270 <___vfiprintf_internal_r+0xec0>
 c014fa4:	0009883a 	mov	r4,zero
 c014fa8:	300b883a 	mov	r5,r6
 c014fac:	d811883a 	mov	r8,sp
 c014fb0:	01802004 	movi	r6,128
 c014fb4:	19be5226 	beq	r3,r6,c014900 <__alt_data_end+0xfc014900>
 c014fb8:	8521c83a 	sub	r16,r16,r20
 c014fbc:	043e790e 	bge	zero,r16,c0149a4 <__alt_data_end+0xfc0149a4>
 c014fc0:	05400404 	movi	r21,16
 c014fc4:	ac01b00e 	bge	r21,r16,c015688 <___vfiprintf_internal_r+0x12d8>
 c014fc8:	014300b4 	movhi	r5,3074
 c014fcc:	2977b504 	addi	r5,r5,-8492
 c014fd0:	d9402315 	stw	r5,140(sp)
 c014fd4:	070001c4 	movi	fp,7
 c014fd8:	00000506 	br	c014ff0 <___vfiprintf_internal_r+0xc40>
 c014fdc:	21400084 	addi	r5,r4,2
 c014fe0:	42000204 	addi	r8,r8,8
 c014fe4:	1809883a 	mov	r4,r3
 c014fe8:	843ffc04 	addi	r16,r16,-16
 c014fec:	ac000d0e 	bge	r21,r16,c015024 <___vfiprintf_internal_r+0xc74>
 c014ff0:	10800404 	addi	r2,r2,16
 c014ff4:	20c00044 	addi	r3,r4,1
 c014ff8:	44800015 	stw	r18,0(r8)
 c014ffc:	45400115 	stw	r21,4(r8)
 c015000:	d8801c15 	stw	r2,112(sp)
 c015004:	d8c01b15 	stw	r3,108(sp)
 c015008:	e0fff40e 	bge	fp,r3,c014fdc <__alt_data_end+0xfc014fdc>
 c01500c:	1000101e 	bne	r2,zero,c015050 <___vfiprintf_internal_r+0xca0>
 c015010:	843ffc04 	addi	r16,r16,-16
 c015014:	01400044 	movi	r5,1
 c015018:	0009883a 	mov	r4,zero
 c01501c:	d811883a 	mov	r8,sp
 c015020:	ac3ff316 	blt	r21,r16,c014ff0 <__alt_data_end+0xfc014ff0>
 c015024:	d8c02317 	ldw	r3,140(sp)
 c015028:	1405883a 	add	r2,r2,r16
 c01502c:	44000115 	stw	r16,4(r8)
 c015030:	40c00015 	stw	r3,0(r8)
 c015034:	d8801c15 	stw	r2,112(sp)
 c015038:	d9401b15 	stw	r5,108(sp)
 c01503c:	00c001c4 	movi	r3,7
 c015040:	19401916 	blt	r3,r5,c0150a8 <___vfiprintf_internal_r+0xcf8>
 c015044:	42000204 	addi	r8,r8,8
 c015048:	29400044 	addi	r5,r5,1
 c01504c:	003e5506 	br	c0149a4 <__alt_data_end+0xfc0149a4>
 c015050:	d9402017 	ldw	r5,128(sp)
 c015054:	d9002117 	ldw	r4,132(sp)
 c015058:	d9801a04 	addi	r6,sp,104
 c01505c:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c015060:	10000b1e 	bne	r2,zero,c015090 <___vfiprintf_internal_r+0xce0>
 c015064:	d9001b17 	ldw	r4,108(sp)
 c015068:	d8801c17 	ldw	r2,112(sp)
 c01506c:	d811883a 	mov	r8,sp
 c015070:	21400044 	addi	r5,r4,1
 c015074:	003fdc06 	br	c014fe8 <__alt_data_end+0xfc014fe8>
 c015078:	d8801c17 	ldw	r2,112(sp)
 c01507c:	10000426 	beq	r2,zero,c015090 <___vfiprintf_internal_r+0xce0>
 c015080:	d9402017 	ldw	r5,128(sp)
 c015084:	d9002117 	ldw	r4,132(sp)
 c015088:	d9801a04 	addi	r6,sp,104
 c01508c:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c015090:	d9402017 	ldw	r5,128(sp)
 c015094:	2880030b 	ldhu	r2,12(r5)
 c015098:	1080100c 	andi	r2,r2,64
 c01509c:	10014d1e 	bne	r2,zero,c0155d4 <___vfiprintf_internal_r+0x1224>
 c0150a0:	d8802417 	ldw	r2,144(sp)
 c0150a4:	003d9706 	br	c014704 <__alt_data_end+0xfc014704>
 c0150a8:	1000d21e 	bne	r2,zero,c0153f4 <___vfiprintf_internal_r+0x1044>
 c0150ac:	00c00044 	movi	r3,1
 c0150b0:	a005883a 	mov	r2,r20
 c0150b4:	ddc00015 	stw	r23,0(sp)
 c0150b8:	dd000115 	stw	r20,4(sp)
 c0150bc:	dd001c15 	stw	r20,112(sp)
 c0150c0:	d8c01b15 	stw	r3,108(sp)
 c0150c4:	d811883a 	mov	r8,sp
 c0150c8:	42000204 	addi	r8,r8,8
 c0150cc:	8c40010c 	andi	r17,r17,4
 c0150d0:	88004026 	beq	r17,zero,c0151d4 <___vfiprintf_internal_r+0xe24>
 c0150d4:	d9002517 	ldw	r4,148(sp)
 c0150d8:	24e3c83a 	sub	r17,r4,r19
 c0150dc:	04403d0e 	bge	zero,r17,c0151d4 <___vfiprintf_internal_r+0xe24>
 c0150e0:	04000404 	movi	r16,16
 c0150e4:	8441a90e 	bge	r16,r17,c01578c <___vfiprintf_internal_r+0x13dc>
 c0150e8:	00c300b4 	movhi	r3,3074
 c0150ec:	18f7b904 	addi	r3,r3,-8476
 c0150f0:	d9001b17 	ldw	r4,108(sp)
 c0150f4:	d8c02315 	stw	r3,140(sp)
 c0150f8:	050001c4 	movi	r20,7
 c0150fc:	dd402117 	ldw	r21,132(sp)
 c015100:	ddc02017 	ldw	r23,128(sp)
 c015104:	00000506 	br	c01511c <___vfiprintf_internal_r+0xd6c>
 c015108:	21400084 	addi	r5,r4,2
 c01510c:	42000204 	addi	r8,r8,8
 c015110:	1809883a 	mov	r4,r3
 c015114:	8c7ffc04 	addi	r17,r17,-16
 c015118:	84400f0e 	bge	r16,r17,c015158 <___vfiprintf_internal_r+0xda8>
 c01511c:	014300b4 	movhi	r5,3074
 c015120:	10800404 	addi	r2,r2,16
 c015124:	20c00044 	addi	r3,r4,1
 c015128:	2977b904 	addi	r5,r5,-8476
 c01512c:	41400015 	stw	r5,0(r8)
 c015130:	44000115 	stw	r16,4(r8)
 c015134:	d8801c15 	stw	r2,112(sp)
 c015138:	d8c01b15 	stw	r3,108(sp)
 c01513c:	a0fff20e 	bge	r20,r3,c015108 <__alt_data_end+0xfc015108>
 c015140:	1000141e 	bne	r2,zero,c015194 <___vfiprintf_internal_r+0xde4>
 c015144:	8c7ffc04 	addi	r17,r17,-16
 c015148:	01400044 	movi	r5,1
 c01514c:	0009883a 	mov	r4,zero
 c015150:	d811883a 	mov	r8,sp
 c015154:	847ff116 	blt	r16,r17,c01511c <__alt_data_end+0xfc01511c>
 c015158:	d8c02317 	ldw	r3,140(sp)
 c01515c:	1445883a 	add	r2,r2,r17
 c015160:	44400115 	stw	r17,4(r8)
 c015164:	40c00015 	stw	r3,0(r8)
 c015168:	d8801c15 	stw	r2,112(sp)
 c01516c:	d9401b15 	stw	r5,108(sp)
 c015170:	00c001c4 	movi	r3,7
 c015174:	1940170e 	bge	r3,r5,c0151d4 <___vfiprintf_internal_r+0xe24>
 c015178:	1000101e 	bne	r2,zero,c0151bc <___vfiprintf_internal_r+0xe0c>
 c01517c:	d8802517 	ldw	r2,148(sp)
 c015180:	14c11616 	blt	r2,r19,c0155dc <___vfiprintf_internal_r+0x122c>
 c015184:	d9002417 	ldw	r4,144(sp)
 c015188:	2089883a 	add	r4,r4,r2
 c01518c:	d9002415 	stw	r4,144(sp)
 c015190:	003e1806 	br	c0149f4 <__alt_data_end+0xfc0149f4>
 c015194:	d9801a04 	addi	r6,sp,104
 c015198:	b80b883a 	mov	r5,r23
 c01519c:	a809883a 	mov	r4,r21
 c0151a0:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c0151a4:	103fba1e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c0151a8:	d9001b17 	ldw	r4,108(sp)
 c0151ac:	d8801c17 	ldw	r2,112(sp)
 c0151b0:	d811883a 	mov	r8,sp
 c0151b4:	21400044 	addi	r5,r4,1
 c0151b8:	003fd606 	br	c015114 <__alt_data_end+0xfc015114>
 c0151bc:	d9402017 	ldw	r5,128(sp)
 c0151c0:	d9002117 	ldw	r4,132(sp)
 c0151c4:	d9801a04 	addi	r6,sp,104
 c0151c8:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c0151cc:	103fb01e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c0151d0:	d8801c17 	ldw	r2,112(sp)
 c0151d4:	d8c02517 	ldw	r3,148(sp)
 c0151d8:	1cc0010e 	bge	r3,r19,c0151e0 <___vfiprintf_internal_r+0xe30>
 c0151dc:	9807883a 	mov	r3,r19
 c0151e0:	d9002417 	ldw	r4,144(sp)
 c0151e4:	20c9883a 	add	r4,r4,r3
 c0151e8:	d9002415 	stw	r4,144(sp)
 c0151ec:	103e0126 	beq	r2,zero,c0149f4 <__alt_data_end+0xfc0149f4>
 c0151f0:	d9402017 	ldw	r5,128(sp)
 c0151f4:	d9002117 	ldw	r4,132(sp)
 c0151f8:	d9801a04 	addi	r6,sp,104
 c0151fc:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c015200:	103dfc26 	beq	r2,zero,c0149f4 <__alt_data_end+0xfc0149f4>
 c015204:	003fa206 	br	c015090 <__alt_data_end+0xfc015090>
 c015208:	d9402017 	ldw	r5,128(sp)
 c01520c:	d9002117 	ldw	r4,132(sp)
 c015210:	d9801a04 	addi	r6,sp,104
 c015214:	d9c02b15 	stw	r7,172(sp)
 c015218:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c01521c:	d9c02b17 	ldw	r7,172(sp)
 c015220:	103f9b1e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c015224:	d9001b17 	ldw	r4,108(sp)
 c015228:	d8801c17 	ldw	r2,112(sp)
 c01522c:	d811883a 	mov	r8,sp
 c015230:	21800044 	addi	r6,r4,1
 c015234:	003dbf06 	br	c014934 <__alt_data_end+0xfc014934>
 c015238:	1000d81e 	bne	r2,zero,c01559c <___vfiprintf_internal_r+0x11ec>
 c01523c:	d9001d87 	ldb	r4,118(sp)
 c015240:	20000a26 	beq	r4,zero,c01526c <___vfiprintf_internal_r+0xebc>
 c015244:	00800044 	movi	r2,1
 c015248:	d9001d84 	addi	r4,sp,118
 c01524c:	100b883a 	mov	r5,r2
 c015250:	d9000015 	stw	r4,0(sp)
 c015254:	d8800115 	stw	r2,4(sp)
 c015258:	d811883a 	mov	r8,sp
 c01525c:	2809883a 	mov	r4,r5
 c015260:	42000204 	addi	r8,r8,8
 c015264:	29400044 	addi	r5,r5,1
 c015268:	003d9506 	br	c0148c0 <__alt_data_end+0xfc0148c0>
 c01526c:	3800fd26 	beq	r7,zero,c015664 <___vfiprintf_internal_r+0x12b4>
 c015270:	00800084 	movi	r2,2
 c015274:	d9001d04 	addi	r4,sp,116
 c015278:	d9000015 	stw	r4,0(sp)
 c01527c:	d8800115 	stw	r2,4(sp)
 c015280:	01400044 	movi	r5,1
 c015284:	d811883a 	mov	r8,sp
 c015288:	2809883a 	mov	r4,r5
 c01528c:	42000204 	addi	r8,r8,8
 c015290:	29400044 	addi	r5,r5,1
 c015294:	003f4606 	br	c014fb0 <__alt_data_end+0xfc014fb0>
 c015298:	d8802517 	ldw	r2,148(sp)
 c01529c:	14c0010e 	bge	r2,r19,c0152a4 <___vfiprintf_internal_r+0xef4>
 c0152a0:	9805883a 	mov	r2,r19
 c0152a4:	d9402417 	ldw	r5,144(sp)
 c0152a8:	288b883a 	add	r5,r5,r2
 c0152ac:	d9402415 	stw	r5,144(sp)
 c0152b0:	003dd006 	br	c0149f4 <__alt_data_end+0xfc0149f4>
 c0152b4:	d8001d85 	stb	zero,118(sp)
 c0152b8:	80005d16 	blt	r16,zero,c015430 <___vfiprintf_internal_r+0x1080>
 c0152bc:	00ffdfc4 	movi	r3,-129
 c0152c0:	9d04b03a 	or	r2,r19,r20
 c0152c4:	88e2703a 	and	r17,r17,r3
 c0152c8:	103d3726 	beq	r2,zero,c0147a8 <__alt_data_end+0xfc0147a8>
 c0152cc:	002b883a 	mov	r21,zero
 c0152d0:	d9002617 	ldw	r4,152(sp)
 c0152d4:	ddc01a04 	addi	r23,sp,104
 c0152d8:	988003cc 	andi	r2,r19,15
 c0152dc:	a006973a 	slli	r3,r20,28
 c0152e0:	2085883a 	add	r2,r4,r2
 c0152e4:	9826d13a 	srli	r19,r19,4
 c0152e8:	10800003 	ldbu	r2,0(r2)
 c0152ec:	a028d13a 	srli	r20,r20,4
 c0152f0:	bdffffc4 	addi	r23,r23,-1
 c0152f4:	1ce6b03a 	or	r19,r3,r19
 c0152f8:	b8800005 	stb	r2,0(r23)
 c0152fc:	9d04b03a 	or	r2,r19,r20
 c015300:	103ff51e 	bne	r2,zero,c0152d8 <__alt_data_end+0xfc0152d8>
 c015304:	d8801e17 	ldw	r2,120(sp)
 c015308:	15e9c83a 	sub	r20,r2,r23
 c01530c:	003d2b06 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c015310:	d9402017 	ldw	r5,128(sp)
 c015314:	d9002117 	ldw	r4,132(sp)
 c015318:	d9801a04 	addi	r6,sp,104
 c01531c:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c015320:	103f5b1e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c015324:	d8801c17 	ldw	r2,112(sp)
 c015328:	d811883a 	mov	r8,sp
 c01532c:	003f6706 	br	c0150cc <__alt_data_end+0xfc0150cc>
 c015330:	d9402017 	ldw	r5,128(sp)
 c015334:	d9002117 	ldw	r4,132(sp)
 c015338:	d9801a04 	addi	r6,sp,104
 c01533c:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c015340:	103f531e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c015344:	d811883a 	mov	r8,sp
 c015348:	003cd906 	br	c0146b0 <__alt_data_end+0xfc0146b0>
 c01534c:	10803fcc 	andi	r2,r2,255
 c015350:	1080201c 	xori	r2,r2,128
 c015354:	10bfe004 	addi	r2,r2,-128
 c015358:	00c00c04 	movi	r3,48
 c01535c:	10ffe926 	beq	r2,r3,c015304 <__alt_data_end+0xfc015304>
 c015360:	b8ffffc5 	stb	r3,-1(r23)
 c015364:	d8c01e17 	ldw	r3,120(sp)
 c015368:	b8bfffc4 	addi	r2,r23,-1
 c01536c:	102f883a 	mov	r23,r2
 c015370:	18a9c83a 	sub	r20,r3,r2
 c015374:	003d1106 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c015378:	d9402017 	ldw	r5,128(sp)
 c01537c:	d9002117 	ldw	r4,132(sp)
 c015380:	d9801a04 	addi	r6,sp,104
 c015384:	d8c02a15 	stw	r3,168(sp)
 c015388:	d9c02b15 	stw	r7,172(sp)
 c01538c:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c015390:	d8c02a17 	ldw	r3,168(sp)
 c015394:	d9c02b17 	ldw	r7,172(sp)
 c015398:	103f3d1e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c01539c:	d9001b17 	ldw	r4,108(sp)
 c0153a0:	d8801c17 	ldw	r2,112(sp)
 c0153a4:	d811883a 	mov	r8,sp
 c0153a8:	21400044 	addi	r5,r4,1
 c0153ac:	003d4406 	br	c0148c0 <__alt_data_end+0xfc0148c0>
 c0153b0:	d9402017 	ldw	r5,128(sp)
 c0153b4:	d9002117 	ldw	r4,132(sp)
 c0153b8:	d9801a04 	addi	r6,sp,104
 c0153bc:	d8c02a15 	stw	r3,168(sp)
 c0153c0:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c0153c4:	d8c02a17 	ldw	r3,168(sp)
 c0153c8:	103f311e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c0153cc:	d9001b17 	ldw	r4,108(sp)
 c0153d0:	d8801c17 	ldw	r2,112(sp)
 c0153d4:	d811883a 	mov	r8,sp
 c0153d8:	21400044 	addi	r5,r4,1
 c0153dc:	003ef406 	br	c014fb0 <__alt_data_end+0xfc014fb0>
 c0153e0:	1000bd1e 	bne	r2,zero,c0156d8 <___vfiprintf_internal_r+0x1328>
 c0153e4:	01400044 	movi	r5,1
 c0153e8:	0009883a 	mov	r4,zero
 c0153ec:	d811883a 	mov	r8,sp
 c0153f0:	003ef106 	br	c014fb8 <__alt_data_end+0xfc014fb8>
 c0153f4:	d9402017 	ldw	r5,128(sp)
 c0153f8:	d9002117 	ldw	r4,132(sp)
 c0153fc:	d9801a04 	addi	r6,sp,104
 c015400:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c015404:	103f221e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c015408:	d9401b17 	ldw	r5,108(sp)
 c01540c:	d8801c17 	ldw	r2,112(sp)
 c015410:	d811883a 	mov	r8,sp
 c015414:	29400044 	addi	r5,r5,1
 c015418:	003d6206 	br	c0149a4 <__alt_data_end+0xfc0149a4>
 c01541c:	014300b4 	movhi	r5,3074
 c015420:	29768104 	addi	r5,r5,-9724
 c015424:	d9402615 	stw	r5,152(sp)
 c015428:	d8c02215 	stw	r3,136(sp)
 c01542c:	1023883a 	mov	r17,r2
 c015430:	9d04b03a 	or	r2,r19,r20
 c015434:	103fa51e 	bne	r2,zero,c0152cc <__alt_data_end+0xfc0152cc>
 c015438:	002b883a 	mov	r21,zero
 c01543c:	00800084 	movi	r2,2
 c015440:	003e4a06 	br	c014d6c <__alt_data_end+0xfc014d6c>
 c015444:	014300b4 	movhi	r5,3074
 c015448:	29768104 	addi	r5,r5,-9724
 c01544c:	002b883a 	mov	r21,zero
 c015450:	d9402615 	stw	r5,152(sp)
 c015454:	003f9e06 	br	c0152d0 <__alt_data_end+0xfc0152d0>
 c015458:	d9402217 	ldw	r5,136(sp)
 c01545c:	d8001d85 	stb	zero,118(sp)
 c015460:	0029883a 	mov	r20,zero
 c015464:	28800104 	addi	r2,r5,4
 c015468:	2cc00017 	ldw	r19,0(r5)
 c01546c:	803e3a16 	blt	r16,zero,c014d58 <__alt_data_end+0xfc014d58>
 c015470:	00ffdfc4 	movi	r3,-129
 c015474:	d8802215 	stw	r2,136(sp)
 c015478:	88e2703a 	and	r17,r17,r3
 c01547c:	002b883a 	mov	r21,zero
 c015480:	983e9b26 	beq	r19,zero,c014ef0 <__alt_data_end+0xfc014ef0>
 c015484:	00800244 	movi	r2,9
 c015488:	14fdc936 	bltu	r2,r19,c014bb0 <__alt_data_end+0xfc014bb0>
 c01548c:	003e9a06 	br	c014ef8 <__alt_data_end+0xfc014ef8>
 c015490:	00800c04 	movi	r2,48
 c015494:	d8c01d45 	stb	r3,117(sp)
 c015498:	d8801d05 	stb	r2,116(sp)
 c01549c:	d8001d85 	stb	zero,118(sp)
 c0154a0:	88c00094 	ori	r3,r17,2
 c0154a4:	80009c16 	blt	r16,zero,c015718 <___vfiprintf_internal_r+0x1368>
 c0154a8:	00bfdfc4 	movi	r2,-129
 c0154ac:	88a2703a 	and	r17,r17,r2
 c0154b0:	8c400094 	ori	r17,r17,2
 c0154b4:	002b883a 	mov	r21,zero
 c0154b8:	003f8506 	br	c0152d0 <__alt_data_end+0xfc0152d0>
 c0154bc:	b029883a 	mov	r20,r22
 c0154c0:	003c0b06 	br	c0144f0 <__alt_data_end+0xfc0144f0>
 c0154c4:	04e7c83a 	sub	r19,zero,r19
 c0154c8:	05400b44 	movi	r21,45
 c0154cc:	9804c03a 	cmpne	r2,r19,zero
 c0154d0:	0529c83a 	sub	r20,zero,r20
 c0154d4:	dd401d85 	stb	r21,118(sp)
 c0154d8:	a0a9c83a 	sub	r20,r20,r2
 c0154dc:	80009716 	blt	r16,zero,c01573c <___vfiprintf_internal_r+0x138c>
 c0154e0:	00bfdfc4 	movi	r2,-129
 c0154e4:	88a2703a 	and	r17,r17,r2
 c0154e8:	003db006 	br	c014bac <__alt_data_end+0xfc014bac>
 c0154ec:	b0c00007 	ldb	r3,0(r22)
 c0154f0:	003c0c06 	br	c014524 <__alt_data_end+0xfc014524>
 c0154f4:	8880100c 	andi	r2,r17,64
 c0154f8:	d8001d85 	stb	zero,118(sp)
 c0154fc:	1000461e 	bne	r2,zero,c015618 <___vfiprintf_internal_r+0x1268>
 c015500:	d9002217 	ldw	r4,136(sp)
 c015504:	0029883a 	mov	r20,zero
 c015508:	20800104 	addi	r2,r4,4
 c01550c:	24c00017 	ldw	r19,0(r4)
 c015510:	803df80e 	bge	r16,zero,c014cf4 <__alt_data_end+0xfc014cf4>
 c015514:	9d06b03a 	or	r3,r19,r20
 c015518:	d8802215 	stw	r2,136(sp)
 c01551c:	183d5e1e 	bne	r3,zero,c014a98 <__alt_data_end+0xfc014a98>
 c015520:	002b883a 	mov	r21,zero
 c015524:	0005883a 	mov	r2,zero
 c015528:	003e1006 	br	c014d6c <__alt_data_end+0xfc014d6c>
 c01552c:	8880040c 	andi	r2,r17,16
 c015530:	1000321e 	bne	r2,zero,c0155fc <___vfiprintf_internal_r+0x124c>
 c015534:	8c40100c 	andi	r17,r17,64
 c015538:	88008d26 	beq	r17,zero,c015770 <___vfiprintf_internal_r+0x13c0>
 c01553c:	d9402217 	ldw	r5,136(sp)
 c015540:	d8c02417 	ldw	r3,144(sp)
 c015544:	28800017 	ldw	r2,0(r5)
 c015548:	29400104 	addi	r5,r5,4
 c01554c:	d9402215 	stw	r5,136(sp)
 c015550:	10c0000d 	sth	r3,0(r2)
 c015554:	003bca06 	br	c014480 <__alt_data_end+0xfc014480>
 c015558:	8880100c 	andi	r2,r17,64
 c01555c:	10003a26 	beq	r2,zero,c015648 <___vfiprintf_internal_r+0x1298>
 c015560:	d8802217 	ldw	r2,136(sp)
 c015564:	14c0000f 	ldh	r19,0(r2)
 c015568:	10800104 	addi	r2,r2,4
 c01556c:	d8802215 	stw	r2,136(sp)
 c015570:	9829d7fa 	srai	r20,r19,31
 c015574:	a005883a 	mov	r2,r20
 c015578:	003d8506 	br	c014b90 <__alt_data_end+0xfc014b90>
 c01557c:	8880100c 	andi	r2,r17,64
 c015580:	10002b26 	beq	r2,zero,c015630 <___vfiprintf_internal_r+0x1280>
 c015584:	d8802217 	ldw	r2,136(sp)
 c015588:	0029883a 	mov	r20,zero
 c01558c:	14c0000b 	ldhu	r19,0(r2)
 c015590:	10800104 	addi	r2,r2,4
 c015594:	d8802215 	stw	r2,136(sp)
 c015598:	003d5d06 	br	c014b10 <__alt_data_end+0xfc014b10>
 c01559c:	d9402017 	ldw	r5,128(sp)
 c0155a0:	d9002117 	ldw	r4,132(sp)
 c0155a4:	d9801a04 	addi	r6,sp,104
 c0155a8:	d8c02a15 	stw	r3,168(sp)
 c0155ac:	d9c02b15 	stw	r7,172(sp)
 c0155b0:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c0155b4:	d8c02a17 	ldw	r3,168(sp)
 c0155b8:	d9c02b17 	ldw	r7,172(sp)
 c0155bc:	103eb41e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c0155c0:	d9001b17 	ldw	r4,108(sp)
 c0155c4:	d8801c17 	ldw	r2,112(sp)
 c0155c8:	d811883a 	mov	r8,sp
 c0155cc:	21400044 	addi	r5,r4,1
 c0155d0:	003e6706 	br	c014f70 <__alt_data_end+0xfc014f70>
 c0155d4:	00bfffc4 	movi	r2,-1
 c0155d8:	003c4a06 	br	c014704 <__alt_data_end+0xfc014704>
 c0155dc:	9805883a 	mov	r2,r19
 c0155e0:	003ee806 	br	c015184 <__alt_data_end+0xfc015184>
 c0155e4:	d8c02217 	ldw	r3,136(sp)
 c0155e8:	0029883a 	mov	r20,zero
 c0155ec:	18800104 	addi	r2,r3,4
 c0155f0:	1cc0000b 	ldhu	r19,0(r3)
 c0155f4:	803f9e0e 	bge	r16,zero,c015470 <__alt_data_end+0xfc015470>
 c0155f8:	003dd706 	br	c014d58 <__alt_data_end+0xfc014d58>
 c0155fc:	d8c02217 	ldw	r3,136(sp)
 c015600:	d9002417 	ldw	r4,144(sp)
 c015604:	18800017 	ldw	r2,0(r3)
 c015608:	18c00104 	addi	r3,r3,4
 c01560c:	d8c02215 	stw	r3,136(sp)
 c015610:	11000015 	stw	r4,0(r2)
 c015614:	003b9a06 	br	c014480 <__alt_data_end+0xfc014480>
 c015618:	d8c02217 	ldw	r3,136(sp)
 c01561c:	0029883a 	mov	r20,zero
 c015620:	18800104 	addi	r2,r3,4
 c015624:	1cc0000b 	ldhu	r19,0(r3)
 c015628:	803db20e 	bge	r16,zero,c014cf4 <__alt_data_end+0xfc014cf4>
 c01562c:	003fb906 	br	c015514 <__alt_data_end+0xfc015514>
 c015630:	d9002217 	ldw	r4,136(sp)
 c015634:	0029883a 	mov	r20,zero
 c015638:	24c00017 	ldw	r19,0(r4)
 c01563c:	21000104 	addi	r4,r4,4
 c015640:	d9002215 	stw	r4,136(sp)
 c015644:	003d3206 	br	c014b10 <__alt_data_end+0xfc014b10>
 c015648:	d8c02217 	ldw	r3,136(sp)
 c01564c:	1cc00017 	ldw	r19,0(r3)
 c015650:	18c00104 	addi	r3,r3,4
 c015654:	d8c02215 	stw	r3,136(sp)
 c015658:	9829d7fa 	srai	r20,r19,31
 c01565c:	a005883a 	mov	r2,r20
 c015660:	003d4b06 	br	c014b90 <__alt_data_end+0xfc014b90>
 c015664:	0009883a 	mov	r4,zero
 c015668:	01400044 	movi	r5,1
 c01566c:	d811883a 	mov	r8,sp
 c015670:	003e4f06 	br	c014fb0 <__alt_data_end+0xfc014fb0>
 c015674:	d8c02215 	stw	r3,136(sp)
 c015678:	002b883a 	mov	r21,zero
 c01567c:	003db806 	br	c014d60 <__alt_data_end+0xfc014d60>
 c015680:	d811883a 	mov	r8,sp
 c015684:	003e9606 	br	c0150e0 <__alt_data_end+0xfc0150e0>
 c015688:	010300b4 	movhi	r4,3074
 c01568c:	2137b504 	addi	r4,r4,-8492
 c015690:	d9002315 	stw	r4,140(sp)
 c015694:	003e6306 	br	c015024 <__alt_data_end+0xfc015024>
 c015698:	b0c00043 	ldbu	r3,1(r22)
 c01569c:	8c400814 	ori	r17,r17,32
 c0156a0:	b5800044 	addi	r22,r22,1
 c0156a4:	18c03fcc 	andi	r3,r3,255
 c0156a8:	18c0201c 	xori	r3,r3,128
 c0156ac:	18ffe004 	addi	r3,r3,-128
 c0156b0:	003b9c06 	br	c014524 <__alt_data_end+0xfc014524>
 c0156b4:	b809883a 	mov	r4,r23
 c0156b8:	da002a15 	stw	r8,168(sp)
 c0156bc:	c0052f80 	call	c0052f8 <strlen>
 c0156c0:	1029883a 	mov	r20,r2
 c0156c4:	dd401d83 	ldbu	r21,118(sp)
 c0156c8:	df002215 	stw	fp,136(sp)
 c0156cc:	0021883a 	mov	r16,zero
 c0156d0:	da002a17 	ldw	r8,168(sp)
 c0156d4:	003c3906 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c0156d8:	d9402017 	ldw	r5,128(sp)
 c0156dc:	d9002117 	ldw	r4,132(sp)
 c0156e0:	d9801a04 	addi	r6,sp,104
 c0156e4:	c01429c0 	call	c01429c <__sprint_r.part.0>
 c0156e8:	103e691e 	bne	r2,zero,c015090 <__alt_data_end+0xfc015090>
 c0156ec:	d9001b17 	ldw	r4,108(sp)
 c0156f0:	d8801c17 	ldw	r2,112(sp)
 c0156f4:	d811883a 	mov	r8,sp
 c0156f8:	21400044 	addi	r5,r4,1
 c0156fc:	003e2e06 	br	c014fb8 <__alt_data_end+0xfc014fb8>
 c015700:	010300b4 	movhi	r4,3074
 c015704:	2137b904 	addi	r4,r4,-8476
 c015708:	d9002315 	stw	r4,140(sp)
 c01570c:	d9001b17 	ldw	r4,108(sp)
 c015710:	21000044 	addi	r4,r4,1
 c015714:	003c5e06 	br	c014890 <__alt_data_end+0xfc014890>
 c015718:	002b883a 	mov	r21,zero
 c01571c:	00800084 	movi	r2,2
 c015720:	10803fcc 	andi	r2,r2,255
 c015724:	01000044 	movi	r4,1
 c015728:	11002b26 	beq	r2,r4,c0157d8 <___vfiprintf_internal_r+0x1428>
 c01572c:	01000084 	movi	r4,2
 c015730:	11002b1e 	bne	r2,r4,c0157e0 <___vfiprintf_internal_r+0x1430>
 c015734:	1823883a 	mov	r17,r3
 c015738:	003ee506 	br	c0152d0 <__alt_data_end+0xfc0152d0>
 c01573c:	8807883a 	mov	r3,r17
 c015740:	00800044 	movi	r2,1
 c015744:	003ff606 	br	c015720 <__alt_data_end+0xfc015720>
 c015748:	00800184 	movi	r2,6
 c01574c:	1400012e 	bgeu	r2,r16,c015754 <___vfiprintf_internal_r+0x13a4>
 c015750:	1021883a 	mov	r16,r2
 c015754:	8029883a 	mov	r20,r16
 c015758:	8027883a 	mov	r19,r16
 c01575c:	80002216 	blt	r16,zero,c0157e8 <___vfiprintf_internal_r+0x1438>
 c015760:	05c300b4 	movhi	r23,3074
 c015764:	df002215 	stw	fp,136(sp)
 c015768:	bdf68604 	addi	r23,r23,-9704
 c01576c:	003cfb06 	br	c014b5c <__alt_data_end+0xfc014b5c>
 c015770:	d9002217 	ldw	r4,136(sp)
 c015774:	d9402417 	ldw	r5,144(sp)
 c015778:	20800017 	ldw	r2,0(r4)
 c01577c:	21000104 	addi	r4,r4,4
 c015780:	d9002215 	stw	r4,136(sp)
 c015784:	11400015 	stw	r5,0(r2)
 c015788:	003b3d06 	br	c014480 <__alt_data_end+0xfc014480>
 c01578c:	014300b4 	movhi	r5,3074
 c015790:	2977b904 	addi	r5,r5,-8476
 c015794:	d9402315 	stw	r5,140(sp)
 c015798:	d9401b17 	ldw	r5,108(sp)
 c01579c:	29400044 	addi	r5,r5,1
 c0157a0:	003e6d06 	br	c015158 <__alt_data_end+0xfc015158>
 c0157a4:	8029883a 	mov	r20,r16
 c0157a8:	dd401d83 	ldbu	r21,118(sp)
 c0157ac:	df002215 	stw	fp,136(sp)
 c0157b0:	0021883a 	mov	r16,zero
 c0157b4:	003c0106 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c0157b8:	00c300b4 	movhi	r3,3074
 c0157bc:	18f7b504 	addi	r3,r3,-8492
 c0157c0:	d8c02315 	stw	r3,140(sp)
 c0157c4:	280d883a 	mov	r6,r5
 c0157c8:	003c6906 	br	c014970 <__alt_data_end+0xfc014970>
 c0157cc:	802d883a 	mov	r22,r16
 c0157d0:	0021883a 	mov	r16,zero
 c0157d4:	003b5406 	br	c014528 <__alt_data_end+0xfc014528>
 c0157d8:	1823883a 	mov	r17,r3
 c0157dc:	003cf306 	br	c014bac <__alt_data_end+0xfc014bac>
 c0157e0:	1823883a 	mov	r17,r3
 c0157e4:	003cad06 	br	c014a9c <__alt_data_end+0xfc014a9c>
 c0157e8:	0027883a 	mov	r19,zero
 c0157ec:	003fdc06 	br	c015760 <__alt_data_end+0xfc015760>
 c0157f0:	d9402217 	ldw	r5,136(sp)
 c0157f4:	8005883a 	mov	r2,r16
 c0157f8:	b0c00043 	ldbu	r3,1(r22)
 c0157fc:	2c000017 	ldw	r16,0(r5)
 c015800:	29000104 	addi	r4,r5,4
 c015804:	d9002215 	stw	r4,136(sp)
 c015808:	102d883a 	mov	r22,r2
 c01580c:	803fa50e 	bge	r16,zero,c0156a4 <__alt_data_end+0xfc0156a4>
 c015810:	18c03fcc 	andi	r3,r3,255
 c015814:	18c0201c 	xori	r3,r3,128
 c015818:	043fffc4 	movi	r16,-1
 c01581c:	18ffe004 	addi	r3,r3,-128
 c015820:	003b4006 	br	c014524 <__alt_data_end+0xfc014524>
 c015824:	d9402303 	ldbu	r5,140(sp)
 c015828:	d9401d85 	stb	r5,118(sp)
 c01582c:	003cae06 	br	c014ae8 <__alt_data_end+0xfc014ae8>
 c015830:	d8c02303 	ldbu	r3,140(sp)
 c015834:	d8c01d85 	stb	r3,118(sp)
 c015838:	003d1406 	br	c014c8c <__alt_data_end+0xfc014c8c>
 c01583c:	d8c02303 	ldbu	r3,140(sp)
 c015840:	d8c01d85 	stb	r3,118(sp)
 c015844:	003cca06 	br	c014b70 <__alt_data_end+0xfc014b70>
 c015848:	8880004c 	andi	r2,r17,1
 c01584c:	002b883a 	mov	r21,zero
 c015850:	10000526 	beq	r2,zero,c015868 <___vfiprintf_internal_r+0x14b8>
 c015854:	00800c04 	movi	r2,48
 c015858:	d88019c5 	stb	r2,103(sp)
 c01585c:	dd002817 	ldw	r20,160(sp)
 c015860:	ddc019c4 	addi	r23,sp,103
 c015864:	003bd506 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c015868:	0029883a 	mov	r20,zero
 c01586c:	ddc01a04 	addi	r23,sp,104
 c015870:	003bd206 	br	c0147bc <__alt_data_end+0xfc0147bc>
 c015874:	d9002303 	ldbu	r4,140(sp)
 c015878:	d9001d85 	stb	r4,118(sp)
 c01587c:	003da606 	br	c014f18 <__alt_data_end+0xfc014f18>
 c015880:	d8c02303 	ldbu	r3,140(sp)
 c015884:	d8c01d85 	stb	r3,118(sp)
 c015888:	003c7606 	br	c014a64 <__alt_data_end+0xfc014a64>
 c01588c:	d8c02303 	ldbu	r3,140(sp)
 c015890:	d8c01d85 	stb	r3,118(sp)
 c015894:	003c6506 	br	c014a2c <__alt_data_end+0xfc014a2c>
 c015898:	d9002303 	ldbu	r4,140(sp)
 c01589c:	d9001d85 	stb	r4,118(sp)
 c0158a0:	003d3d06 	br	c014d98 <__alt_data_end+0xfc014d98>
 c0158a4:	d8c02303 	ldbu	r3,140(sp)
 c0158a8:	d8c01d85 	stb	r3,118(sp)
 c0158ac:	003d1d06 	br	c014d24 <__alt_data_end+0xfc014d24>
 c0158b0:	d8c02303 	ldbu	r3,140(sp)
 c0158b4:	d8c01d85 	stb	r3,118(sp)
 c0158b8:	003d0306 	br	c014cc8 <__alt_data_end+0xfc014cc8>

0c0158bc <__vfiprintf_internal>:
 c0158bc:	008300b4 	movhi	r2,3074
 c0158c0:	10bfc304 	addi	r2,r2,-244
 c0158c4:	300f883a 	mov	r7,r6
 c0158c8:	280d883a 	mov	r6,r5
 c0158cc:	200b883a 	mov	r5,r4
 c0158d0:	11000017 	ldw	r4,0(r2)
 c0158d4:	c0143b01 	jmpi	c0143b0 <___vfiprintf_internal_r>

0c0158d8 <__sbprintf>:
 c0158d8:	2880030b 	ldhu	r2,12(r5)
 c0158dc:	2ac01917 	ldw	r11,100(r5)
 c0158e0:	2a80038b 	ldhu	r10,14(r5)
 c0158e4:	2a400717 	ldw	r9,28(r5)
 c0158e8:	2a000917 	ldw	r8,36(r5)
 c0158ec:	defee204 	addi	sp,sp,-1144
 c0158f0:	00c10004 	movi	r3,1024
 c0158f4:	dc011a15 	stw	r16,1128(sp)
 c0158f8:	10bfff4c 	andi	r2,r2,65533
 c0158fc:	2821883a 	mov	r16,r5
 c015900:	d8cb883a 	add	r5,sp,r3
 c015904:	dc811c15 	stw	r18,1136(sp)
 c015908:	dc411b15 	stw	r17,1132(sp)
 c01590c:	dfc11d15 	stw	ra,1140(sp)
 c015910:	2025883a 	mov	r18,r4
 c015914:	d881030d 	sth	r2,1036(sp)
 c015918:	dac11915 	stw	r11,1124(sp)
 c01591c:	da81038d 	sth	r10,1038(sp)
 c015920:	da410715 	stw	r9,1052(sp)
 c015924:	da010915 	stw	r8,1060(sp)
 c015928:	dec10015 	stw	sp,1024(sp)
 c01592c:	dec10415 	stw	sp,1040(sp)
 c015930:	d8c10215 	stw	r3,1032(sp)
 c015934:	d8c10515 	stw	r3,1044(sp)
 c015938:	d8010615 	stw	zero,1048(sp)
 c01593c:	c0143b00 	call	c0143b0 <___vfiprintf_internal_r>
 c015940:	1023883a 	mov	r17,r2
 c015944:	10000416 	blt	r2,zero,c015958 <__sbprintf+0x80>
 c015948:	d9410004 	addi	r5,sp,1024
 c01594c:	9009883a 	mov	r4,r18
 c015950:	c00d07c0 	call	c00d07c <_fflush_r>
 c015954:	10000d1e 	bne	r2,zero,c01598c <__sbprintf+0xb4>
 c015958:	d881030b 	ldhu	r2,1036(sp)
 c01595c:	1080100c 	andi	r2,r2,64
 c015960:	10000326 	beq	r2,zero,c015970 <__sbprintf+0x98>
 c015964:	8080030b 	ldhu	r2,12(r16)
 c015968:	10801014 	ori	r2,r2,64
 c01596c:	8080030d 	sth	r2,12(r16)
 c015970:	8805883a 	mov	r2,r17
 c015974:	dfc11d17 	ldw	ra,1140(sp)
 c015978:	dc811c17 	ldw	r18,1136(sp)
 c01597c:	dc411b17 	ldw	r17,1132(sp)
 c015980:	dc011a17 	ldw	r16,1128(sp)
 c015984:	dec11e04 	addi	sp,sp,1144
 c015988:	f800283a 	ret
 c01598c:	047fffc4 	movi	r17,-1
 c015990:	003ff106 	br	c015958 <__alt_data_end+0xfc015958>

0c015994 <__swbuf_r>:
 c015994:	defffb04 	addi	sp,sp,-20
 c015998:	dcc00315 	stw	r19,12(sp)
 c01599c:	dc800215 	stw	r18,8(sp)
 c0159a0:	dc000015 	stw	r16,0(sp)
 c0159a4:	dfc00415 	stw	ra,16(sp)
 c0159a8:	dc400115 	stw	r17,4(sp)
 c0159ac:	2025883a 	mov	r18,r4
 c0159b0:	2827883a 	mov	r19,r5
 c0159b4:	3021883a 	mov	r16,r6
 c0159b8:	20000226 	beq	r4,zero,c0159c4 <__swbuf_r+0x30>
 c0159bc:	20800e17 	ldw	r2,56(r4)
 c0159c0:	10004226 	beq	r2,zero,c015acc <__swbuf_r+0x138>
 c0159c4:	80800617 	ldw	r2,24(r16)
 c0159c8:	8100030b 	ldhu	r4,12(r16)
 c0159cc:	80800215 	stw	r2,8(r16)
 c0159d0:	2080020c 	andi	r2,r4,8
 c0159d4:	10003626 	beq	r2,zero,c015ab0 <__swbuf_r+0x11c>
 c0159d8:	80c00417 	ldw	r3,16(r16)
 c0159dc:	18003426 	beq	r3,zero,c015ab0 <__swbuf_r+0x11c>
 c0159e0:	2088000c 	andi	r2,r4,8192
 c0159e4:	9c403fcc 	andi	r17,r19,255
 c0159e8:	10001a26 	beq	r2,zero,c015a54 <__swbuf_r+0xc0>
 c0159ec:	80800017 	ldw	r2,0(r16)
 c0159f0:	81000517 	ldw	r4,20(r16)
 c0159f4:	10c7c83a 	sub	r3,r2,r3
 c0159f8:	1900200e 	bge	r3,r4,c015a7c <__swbuf_r+0xe8>
 c0159fc:	18c00044 	addi	r3,r3,1
 c015a00:	81000217 	ldw	r4,8(r16)
 c015a04:	11400044 	addi	r5,r2,1
 c015a08:	81400015 	stw	r5,0(r16)
 c015a0c:	213fffc4 	addi	r4,r4,-1
 c015a10:	81000215 	stw	r4,8(r16)
 c015a14:	14c00005 	stb	r19,0(r2)
 c015a18:	80800517 	ldw	r2,20(r16)
 c015a1c:	10c01e26 	beq	r2,r3,c015a98 <__swbuf_r+0x104>
 c015a20:	8080030b 	ldhu	r2,12(r16)
 c015a24:	1080004c 	andi	r2,r2,1
 c015a28:	10000226 	beq	r2,zero,c015a34 <__swbuf_r+0xa0>
 c015a2c:	00800284 	movi	r2,10
 c015a30:	88801926 	beq	r17,r2,c015a98 <__swbuf_r+0x104>
 c015a34:	8805883a 	mov	r2,r17
 c015a38:	dfc00417 	ldw	ra,16(sp)
 c015a3c:	dcc00317 	ldw	r19,12(sp)
 c015a40:	dc800217 	ldw	r18,8(sp)
 c015a44:	dc400117 	ldw	r17,4(sp)
 c015a48:	dc000017 	ldw	r16,0(sp)
 c015a4c:	dec00504 	addi	sp,sp,20
 c015a50:	f800283a 	ret
 c015a54:	81401917 	ldw	r5,100(r16)
 c015a58:	00b7ffc4 	movi	r2,-8193
 c015a5c:	21080014 	ori	r4,r4,8192
 c015a60:	2884703a 	and	r2,r5,r2
 c015a64:	80801915 	stw	r2,100(r16)
 c015a68:	80800017 	ldw	r2,0(r16)
 c015a6c:	8100030d 	sth	r4,12(r16)
 c015a70:	81000517 	ldw	r4,20(r16)
 c015a74:	10c7c83a 	sub	r3,r2,r3
 c015a78:	193fe016 	blt	r3,r4,c0159fc <__alt_data_end+0xfc0159fc>
 c015a7c:	800b883a 	mov	r5,r16
 c015a80:	9009883a 	mov	r4,r18
 c015a84:	c00d07c0 	call	c00d07c <_fflush_r>
 c015a88:	1000071e 	bne	r2,zero,c015aa8 <__swbuf_r+0x114>
 c015a8c:	80800017 	ldw	r2,0(r16)
 c015a90:	00c00044 	movi	r3,1
 c015a94:	003fda06 	br	c015a00 <__alt_data_end+0xfc015a00>
 c015a98:	800b883a 	mov	r5,r16
 c015a9c:	9009883a 	mov	r4,r18
 c015aa0:	c00d07c0 	call	c00d07c <_fflush_r>
 c015aa4:	103fe326 	beq	r2,zero,c015a34 <__alt_data_end+0xfc015a34>
 c015aa8:	00bfffc4 	movi	r2,-1
 c015aac:	003fe206 	br	c015a38 <__alt_data_end+0xfc015a38>
 c015ab0:	800b883a 	mov	r5,r16
 c015ab4:	9009883a 	mov	r4,r18
 c015ab8:	c00b45c0 	call	c00b45c <__swsetup_r>
 c015abc:	103ffa1e 	bne	r2,zero,c015aa8 <__alt_data_end+0xfc015aa8>
 c015ac0:	8100030b 	ldhu	r4,12(r16)
 c015ac4:	80c00417 	ldw	r3,16(r16)
 c015ac8:	003fc506 	br	c0159e0 <__alt_data_end+0xfc0159e0>
 c015acc:	c00d4680 	call	c00d468 <__sinit>
 c015ad0:	003fbc06 	br	c0159c4 <__alt_data_end+0xfc0159c4>

0c015ad4 <__swbuf>:
 c015ad4:	008300b4 	movhi	r2,3074
 c015ad8:	10bfc304 	addi	r2,r2,-244
 c015adc:	280d883a 	mov	r6,r5
 c015ae0:	200b883a 	mov	r5,r4
 c015ae4:	11000017 	ldw	r4,0(r2)
 c015ae8:	c0159941 	jmpi	c015994 <__swbuf_r>

0c015aec <_write_r>:
 c015aec:	defffd04 	addi	sp,sp,-12
 c015af0:	2805883a 	mov	r2,r5
 c015af4:	dc000015 	stw	r16,0(sp)
 c015af8:	040300b4 	movhi	r16,3074
 c015afc:	dc400115 	stw	r17,4(sp)
 c015b00:	300b883a 	mov	r5,r6
 c015b04:	84076104 	addi	r16,r16,7556
 c015b08:	2023883a 	mov	r17,r4
 c015b0c:	380d883a 	mov	r6,r7
 c015b10:	1009883a 	mov	r4,r2
 c015b14:	dfc00215 	stw	ra,8(sp)
 c015b18:	80000015 	stw	zero,0(r16)
 c015b1c:	c01b5b40 	call	c01b5b4 <write>
 c015b20:	00ffffc4 	movi	r3,-1
 c015b24:	10c00526 	beq	r2,r3,c015b3c <_write_r+0x50>
 c015b28:	dfc00217 	ldw	ra,8(sp)
 c015b2c:	dc400117 	ldw	r17,4(sp)
 c015b30:	dc000017 	ldw	r16,0(sp)
 c015b34:	dec00304 	addi	sp,sp,12
 c015b38:	f800283a 	ret
 c015b3c:	80c00017 	ldw	r3,0(r16)
 c015b40:	183ff926 	beq	r3,zero,c015b28 <__alt_data_end+0xfc015b28>
 c015b44:	88c00015 	stw	r3,0(r17)
 c015b48:	003ff706 	br	c015b28 <__alt_data_end+0xfc015b28>

0c015b4c <_close_r>:
 c015b4c:	defffd04 	addi	sp,sp,-12
 c015b50:	dc000015 	stw	r16,0(sp)
 c015b54:	040300b4 	movhi	r16,3074
 c015b58:	dc400115 	stw	r17,4(sp)
 c015b5c:	84076104 	addi	r16,r16,7556
 c015b60:	2023883a 	mov	r17,r4
 c015b64:	2809883a 	mov	r4,r5
 c015b68:	dfc00215 	stw	ra,8(sp)
 c015b6c:	80000015 	stw	zero,0(r16)
 c015b70:	c01a9200 	call	c01a920 <close>
 c015b74:	00ffffc4 	movi	r3,-1
 c015b78:	10c00526 	beq	r2,r3,c015b90 <_close_r+0x44>
 c015b7c:	dfc00217 	ldw	ra,8(sp)
 c015b80:	dc400117 	ldw	r17,4(sp)
 c015b84:	dc000017 	ldw	r16,0(sp)
 c015b88:	dec00304 	addi	sp,sp,12
 c015b8c:	f800283a 	ret
 c015b90:	80c00017 	ldw	r3,0(r16)
 c015b94:	183ff926 	beq	r3,zero,c015b7c <__alt_data_end+0xfc015b7c>
 c015b98:	88c00015 	stw	r3,0(r17)
 c015b9c:	003ff706 	br	c015b7c <__alt_data_end+0xfc015b7c>

0c015ba0 <_calloc_r>:
 c015ba0:	defffe04 	addi	sp,sp,-8
 c015ba4:	2805883a 	mov	r2,r5
 c015ba8:	dc000015 	stw	r16,0(sp)
 c015bac:	300b883a 	mov	r5,r6
 c015bb0:	2021883a 	mov	r16,r4
 c015bb4:	1009883a 	mov	r4,r2
 c015bb8:	dfc00115 	stw	ra,4(sp)
 c015bbc:	c00473c0 	call	c00473c <__mulsi3>
 c015bc0:	100b883a 	mov	r5,r2
 c015bc4:	8009883a 	mov	r4,r16
 c015bc8:	c00478c0 	call	c00478c <_malloc_r>
 c015bcc:	10002926 	beq	r2,zero,c015c74 <_calloc_r+0xd4>
 c015bd0:	11bfff17 	ldw	r6,-4(r2)
 c015bd4:	1021883a 	mov	r16,r2
 c015bd8:	00bfff04 	movi	r2,-4
 c015bdc:	308c703a 	and	r6,r6,r2
 c015be0:	00c00904 	movi	r3,36
 c015be4:	308d883a 	add	r6,r6,r2
 c015be8:	19801636 	bltu	r3,r6,c015c44 <_calloc_r+0xa4>
 c015bec:	008004c4 	movi	r2,19
 c015bf0:	11800b2e 	bgeu	r2,r6,c015c20 <_calloc_r+0x80>
 c015bf4:	80000015 	stw	zero,0(r16)
 c015bf8:	80000115 	stw	zero,4(r16)
 c015bfc:	008006c4 	movi	r2,27
 c015c00:	11801a2e 	bgeu	r2,r6,c015c6c <_calloc_r+0xcc>
 c015c04:	80000215 	stw	zero,8(r16)
 c015c08:	80000315 	stw	zero,12(r16)
 c015c0c:	30c0151e 	bne	r6,r3,c015c64 <_calloc_r+0xc4>
 c015c10:	80000415 	stw	zero,16(r16)
 c015c14:	80800604 	addi	r2,r16,24
 c015c18:	80000515 	stw	zero,20(r16)
 c015c1c:	00000106 	br	c015c24 <_calloc_r+0x84>
 c015c20:	8005883a 	mov	r2,r16
 c015c24:	10000015 	stw	zero,0(r2)
 c015c28:	10000115 	stw	zero,4(r2)
 c015c2c:	10000215 	stw	zero,8(r2)
 c015c30:	8005883a 	mov	r2,r16
 c015c34:	dfc00117 	ldw	ra,4(sp)
 c015c38:	dc000017 	ldw	r16,0(sp)
 c015c3c:	dec00204 	addi	sp,sp,8
 c015c40:	f800283a 	ret
 c015c44:	000b883a 	mov	r5,zero
 c015c48:	8009883a 	mov	r4,r16
 c015c4c:	c00ea200 	call	c00ea20 <memset>
 c015c50:	8005883a 	mov	r2,r16
 c015c54:	dfc00117 	ldw	ra,4(sp)
 c015c58:	dc000017 	ldw	r16,0(sp)
 c015c5c:	dec00204 	addi	sp,sp,8
 c015c60:	f800283a 	ret
 c015c64:	80800404 	addi	r2,r16,16
 c015c68:	003fee06 	br	c015c24 <__alt_data_end+0xfc015c24>
 c015c6c:	80800204 	addi	r2,r16,8
 c015c70:	003fec06 	br	c015c24 <__alt_data_end+0xfc015c24>
 c015c74:	0005883a 	mov	r2,zero
 c015c78:	003fee06 	br	c015c34 <__alt_data_end+0xfc015c34>

0c015c7c <_fclose_r>:
 c015c7c:	28003926 	beq	r5,zero,c015d64 <_fclose_r+0xe8>
 c015c80:	defffc04 	addi	sp,sp,-16
 c015c84:	dc400115 	stw	r17,4(sp)
 c015c88:	dc000015 	stw	r16,0(sp)
 c015c8c:	dfc00315 	stw	ra,12(sp)
 c015c90:	dc800215 	stw	r18,8(sp)
 c015c94:	2023883a 	mov	r17,r4
 c015c98:	2821883a 	mov	r16,r5
 c015c9c:	20000226 	beq	r4,zero,c015ca8 <_fclose_r+0x2c>
 c015ca0:	20800e17 	ldw	r2,56(r4)
 c015ca4:	10002726 	beq	r2,zero,c015d44 <_fclose_r+0xc8>
 c015ca8:	8080030f 	ldh	r2,12(r16)
 c015cac:	1000071e 	bne	r2,zero,c015ccc <_fclose_r+0x50>
 c015cb0:	0005883a 	mov	r2,zero
 c015cb4:	dfc00317 	ldw	ra,12(sp)
 c015cb8:	dc800217 	ldw	r18,8(sp)
 c015cbc:	dc400117 	ldw	r17,4(sp)
 c015cc0:	dc000017 	ldw	r16,0(sp)
 c015cc4:	dec00404 	addi	sp,sp,16
 c015cc8:	f800283a 	ret
 c015ccc:	800b883a 	mov	r5,r16
 c015cd0:	8809883a 	mov	r4,r17
 c015cd4:	c00ce600 	call	c00ce60 <__sflush_r>
 c015cd8:	1025883a 	mov	r18,r2
 c015cdc:	80800b17 	ldw	r2,44(r16)
 c015ce0:	10000426 	beq	r2,zero,c015cf4 <_fclose_r+0x78>
 c015ce4:	81400717 	ldw	r5,28(r16)
 c015ce8:	8809883a 	mov	r4,r17
 c015cec:	103ee83a 	callr	r2
 c015cf0:	10001616 	blt	r2,zero,c015d4c <_fclose_r+0xd0>
 c015cf4:	8080030b 	ldhu	r2,12(r16)
 c015cf8:	1080200c 	andi	r2,r2,128
 c015cfc:	1000151e 	bne	r2,zero,c015d54 <_fclose_r+0xd8>
 c015d00:	81400c17 	ldw	r5,48(r16)
 c015d04:	28000526 	beq	r5,zero,c015d1c <_fclose_r+0xa0>
 c015d08:	80801004 	addi	r2,r16,64
 c015d0c:	28800226 	beq	r5,r2,c015d18 <_fclose_r+0x9c>
 c015d10:	8809883a 	mov	r4,r17
 c015d14:	c00d84c0 	call	c00d84c <_free_r>
 c015d18:	80000c15 	stw	zero,48(r16)
 c015d1c:	81401117 	ldw	r5,68(r16)
 c015d20:	28000326 	beq	r5,zero,c015d30 <_fclose_r+0xb4>
 c015d24:	8809883a 	mov	r4,r17
 c015d28:	c00d84c0 	call	c00d84c <_free_r>
 c015d2c:	80001115 	stw	zero,68(r16)
 c015d30:	c00d4780 	call	c00d478 <__sfp_lock_acquire>
 c015d34:	8000030d 	sth	zero,12(r16)
 c015d38:	c00d47c0 	call	c00d47c <__sfp_lock_release>
 c015d3c:	9005883a 	mov	r2,r18
 c015d40:	003fdc06 	br	c015cb4 <__alt_data_end+0xfc015cb4>
 c015d44:	c00d4680 	call	c00d468 <__sinit>
 c015d48:	003fd706 	br	c015ca8 <__alt_data_end+0xfc015ca8>
 c015d4c:	04bfffc4 	movi	r18,-1
 c015d50:	003fe806 	br	c015cf4 <__alt_data_end+0xfc015cf4>
 c015d54:	81400417 	ldw	r5,16(r16)
 c015d58:	8809883a 	mov	r4,r17
 c015d5c:	c00d84c0 	call	c00d84c <_free_r>
 c015d60:	003fe706 	br	c015d00 <__alt_data_end+0xfc015d00>
 c015d64:	0005883a 	mov	r2,zero
 c015d68:	f800283a 	ret

0c015d6c <fclose>:
 c015d6c:	008300b4 	movhi	r2,3074
 c015d70:	10bfc304 	addi	r2,r2,-244
 c015d74:	200b883a 	mov	r5,r4
 c015d78:	11000017 	ldw	r4,0(r2)
 c015d7c:	c015c7c1 	jmpi	c015c7c <_fclose_r>

0c015d80 <__fputwc>:
 c015d80:	defff804 	addi	sp,sp,-32
 c015d84:	dcc00415 	stw	r19,16(sp)
 c015d88:	dc800315 	stw	r18,12(sp)
 c015d8c:	dc000115 	stw	r16,4(sp)
 c015d90:	dfc00715 	stw	ra,28(sp)
 c015d94:	dd400615 	stw	r21,24(sp)
 c015d98:	dd000515 	stw	r20,20(sp)
 c015d9c:	dc400215 	stw	r17,8(sp)
 c015da0:	2027883a 	mov	r19,r4
 c015da4:	2825883a 	mov	r18,r5
 c015da8:	3021883a 	mov	r16,r6
 c015dac:	c00e2640 	call	c00e264 <__locale_mb_cur_max>
 c015db0:	00c00044 	movi	r3,1
 c015db4:	10c03e26 	beq	r2,r3,c015eb0 <__fputwc+0x130>
 c015db8:	81c01704 	addi	r7,r16,92
 c015dbc:	900d883a 	mov	r6,r18
 c015dc0:	d80b883a 	mov	r5,sp
 c015dc4:	9809883a 	mov	r4,r19
 c015dc8:	c016d740 	call	c016d74 <_wcrtomb_r>
 c015dcc:	1029883a 	mov	r20,r2
 c015dd0:	00bfffc4 	movi	r2,-1
 c015dd4:	a0802026 	beq	r20,r2,c015e58 <__fputwc+0xd8>
 c015dd8:	d9400003 	ldbu	r5,0(sp)
 c015ddc:	a0001c26 	beq	r20,zero,c015e50 <__fputwc+0xd0>
 c015de0:	0023883a 	mov	r17,zero
 c015de4:	05400284 	movi	r21,10
 c015de8:	00000906 	br	c015e10 <__fputwc+0x90>
 c015dec:	80800017 	ldw	r2,0(r16)
 c015df0:	11400005 	stb	r5,0(r2)
 c015df4:	80c00017 	ldw	r3,0(r16)
 c015df8:	18c00044 	addi	r3,r3,1
 c015dfc:	80c00015 	stw	r3,0(r16)
 c015e00:	8c400044 	addi	r17,r17,1
 c015e04:	dc45883a 	add	r2,sp,r17
 c015e08:	8d00112e 	bgeu	r17,r20,c015e50 <__fputwc+0xd0>
 c015e0c:	11400003 	ldbu	r5,0(r2)
 c015e10:	80c00217 	ldw	r3,8(r16)
 c015e14:	18ffffc4 	addi	r3,r3,-1
 c015e18:	80c00215 	stw	r3,8(r16)
 c015e1c:	183ff30e 	bge	r3,zero,c015dec <__alt_data_end+0xfc015dec>
 c015e20:	80800617 	ldw	r2,24(r16)
 c015e24:	18801916 	blt	r3,r2,c015e8c <__fputwc+0x10c>
 c015e28:	80800017 	ldw	r2,0(r16)
 c015e2c:	11400005 	stb	r5,0(r2)
 c015e30:	80800017 	ldw	r2,0(r16)
 c015e34:	10c00003 	ldbu	r3,0(r2)
 c015e38:	10800044 	addi	r2,r2,1
 c015e3c:	1d402326 	beq	r3,r21,c015ecc <__fputwc+0x14c>
 c015e40:	80800015 	stw	r2,0(r16)
 c015e44:	8c400044 	addi	r17,r17,1
 c015e48:	dc45883a 	add	r2,sp,r17
 c015e4c:	8d3fef36 	bltu	r17,r20,c015e0c <__alt_data_end+0xfc015e0c>
 c015e50:	9005883a 	mov	r2,r18
 c015e54:	00000406 	br	c015e68 <__fputwc+0xe8>
 c015e58:	80c0030b 	ldhu	r3,12(r16)
 c015e5c:	a005883a 	mov	r2,r20
 c015e60:	18c01014 	ori	r3,r3,64
 c015e64:	80c0030d 	sth	r3,12(r16)
 c015e68:	dfc00717 	ldw	ra,28(sp)
 c015e6c:	dd400617 	ldw	r21,24(sp)
 c015e70:	dd000517 	ldw	r20,20(sp)
 c015e74:	dcc00417 	ldw	r19,16(sp)
 c015e78:	dc800317 	ldw	r18,12(sp)
 c015e7c:	dc400217 	ldw	r17,8(sp)
 c015e80:	dc000117 	ldw	r16,4(sp)
 c015e84:	dec00804 	addi	sp,sp,32
 c015e88:	f800283a 	ret
 c015e8c:	800d883a 	mov	r6,r16
 c015e90:	29403fcc 	andi	r5,r5,255
 c015e94:	9809883a 	mov	r4,r19
 c015e98:	c0159940 	call	c015994 <__swbuf_r>
 c015e9c:	10bfffe0 	cmpeqi	r2,r2,-1
 c015ea0:	10803fcc 	andi	r2,r2,255
 c015ea4:	103fd626 	beq	r2,zero,c015e00 <__alt_data_end+0xfc015e00>
 c015ea8:	00bfffc4 	movi	r2,-1
 c015eac:	003fee06 	br	c015e68 <__alt_data_end+0xfc015e68>
 c015eb0:	90ffffc4 	addi	r3,r18,-1
 c015eb4:	01003f84 	movi	r4,254
 c015eb8:	20ffbf36 	bltu	r4,r3,c015db8 <__alt_data_end+0xfc015db8>
 c015ebc:	900b883a 	mov	r5,r18
 c015ec0:	dc800005 	stb	r18,0(sp)
 c015ec4:	1029883a 	mov	r20,r2
 c015ec8:	003fc506 	br	c015de0 <__alt_data_end+0xfc015de0>
 c015ecc:	800d883a 	mov	r6,r16
 c015ed0:	a80b883a 	mov	r5,r21
 c015ed4:	9809883a 	mov	r4,r19
 c015ed8:	c0159940 	call	c015994 <__swbuf_r>
 c015edc:	10bfffe0 	cmpeqi	r2,r2,-1
 c015ee0:	003fef06 	br	c015ea0 <__alt_data_end+0xfc015ea0>

0c015ee4 <_fputwc_r>:
 c015ee4:	3080030b 	ldhu	r2,12(r6)
 c015ee8:	10c8000c 	andi	r3,r2,8192
 c015eec:	1800051e 	bne	r3,zero,c015f04 <_fputwc_r+0x20>
 c015ef0:	30c01917 	ldw	r3,100(r6)
 c015ef4:	10880014 	ori	r2,r2,8192
 c015ef8:	3080030d 	sth	r2,12(r6)
 c015efc:	18880014 	ori	r2,r3,8192
 c015f00:	30801915 	stw	r2,100(r6)
 c015f04:	c015d801 	jmpi	c015d80 <__fputwc>

0c015f08 <fputwc>:
 c015f08:	008300b4 	movhi	r2,3074
 c015f0c:	defffc04 	addi	sp,sp,-16
 c015f10:	10bfc304 	addi	r2,r2,-244
 c015f14:	dc000115 	stw	r16,4(sp)
 c015f18:	14000017 	ldw	r16,0(r2)
 c015f1c:	dc400215 	stw	r17,8(sp)
 c015f20:	dfc00315 	stw	ra,12(sp)
 c015f24:	2023883a 	mov	r17,r4
 c015f28:	80000226 	beq	r16,zero,c015f34 <fputwc+0x2c>
 c015f2c:	80800e17 	ldw	r2,56(r16)
 c015f30:	10001026 	beq	r2,zero,c015f74 <fputwc+0x6c>
 c015f34:	2880030b 	ldhu	r2,12(r5)
 c015f38:	10c8000c 	andi	r3,r2,8192
 c015f3c:	1800051e 	bne	r3,zero,c015f54 <fputwc+0x4c>
 c015f40:	28c01917 	ldw	r3,100(r5)
 c015f44:	10880014 	ori	r2,r2,8192
 c015f48:	2880030d 	sth	r2,12(r5)
 c015f4c:	18880014 	ori	r2,r3,8192
 c015f50:	28801915 	stw	r2,100(r5)
 c015f54:	280d883a 	mov	r6,r5
 c015f58:	8009883a 	mov	r4,r16
 c015f5c:	880b883a 	mov	r5,r17
 c015f60:	dfc00317 	ldw	ra,12(sp)
 c015f64:	dc400217 	ldw	r17,8(sp)
 c015f68:	dc000117 	ldw	r16,4(sp)
 c015f6c:	dec00404 	addi	sp,sp,16
 c015f70:	c015d801 	jmpi	c015d80 <__fputwc>
 c015f74:	8009883a 	mov	r4,r16
 c015f78:	d9400015 	stw	r5,0(sp)
 c015f7c:	c00d4680 	call	c00d468 <__sinit>
 c015f80:	d9400017 	ldw	r5,0(sp)
 c015f84:	003feb06 	br	c015f34 <__alt_data_end+0xfc015f34>

0c015f88 <_fstat_r>:
 c015f88:	defffd04 	addi	sp,sp,-12
 c015f8c:	2805883a 	mov	r2,r5
 c015f90:	dc000015 	stw	r16,0(sp)
 c015f94:	040300b4 	movhi	r16,3074
 c015f98:	dc400115 	stw	r17,4(sp)
 c015f9c:	84076104 	addi	r16,r16,7556
 c015fa0:	2023883a 	mov	r17,r4
 c015fa4:	300b883a 	mov	r5,r6
 c015fa8:	1009883a 	mov	r4,r2
 c015fac:	dfc00215 	stw	ra,8(sp)
 c015fb0:	80000015 	stw	zero,0(r16)
 c015fb4:	c01aa600 	call	c01aa60 <fstat>
 c015fb8:	00ffffc4 	movi	r3,-1
 c015fbc:	10c00526 	beq	r2,r3,c015fd4 <_fstat_r+0x4c>
 c015fc0:	dfc00217 	ldw	ra,8(sp)
 c015fc4:	dc400117 	ldw	r17,4(sp)
 c015fc8:	dc000017 	ldw	r16,0(sp)
 c015fcc:	dec00304 	addi	sp,sp,12
 c015fd0:	f800283a 	ret
 c015fd4:	80c00017 	ldw	r3,0(r16)
 c015fd8:	183ff926 	beq	r3,zero,c015fc0 <__alt_data_end+0xfc015fc0>
 c015fdc:	88c00015 	stw	r3,0(r17)
 c015fe0:	003ff706 	br	c015fc0 <__alt_data_end+0xfc015fc0>

0c015fe4 <rshift>:
 c015fe4:	2807d17a 	srai	r3,r5,5
 c015fe8:	20800417 	ldw	r2,16(r4)
 c015fec:	22000504 	addi	r8,r4,20
 c015ff0:	1880250e 	bge	r3,r2,c016088 <rshift+0xa4>
 c015ff4:	1085883a 	add	r2,r2,r2
 c015ff8:	18c7883a 	add	r3,r3,r3
 c015ffc:	1085883a 	add	r2,r2,r2
 c016000:	18c7883a 	add	r3,r3,r3
 c016004:	294007cc 	andi	r5,r5,31
 c016008:	4085883a 	add	r2,r8,r2
 c01600c:	40c7883a 	add	r3,r8,r3
 c016010:	28002026 	beq	r5,zero,c016094 <rshift+0xb0>
 c016014:	19800017 	ldw	r6,0(r3)
 c016018:	02c00804 	movi	r11,32
 c01601c:	19c00104 	addi	r7,r3,4
 c016020:	5957c83a 	sub	r11,r11,r5
 c016024:	314cd83a 	srl	r6,r6,r5
 c016028:	38802c2e 	bgeu	r7,r2,c0160dc <rshift+0xf8>
 c01602c:	4015883a 	mov	r10,r8
 c016030:	3a400017 	ldw	r9,0(r7)
 c016034:	52800104 	addi	r10,r10,4
 c016038:	39c00104 	addi	r7,r7,4
 c01603c:	4ad2983a 	sll	r9,r9,r11
 c016040:	498cb03a 	or	r6,r9,r6
 c016044:	51bfff15 	stw	r6,-4(r10)
 c016048:	39bfff17 	ldw	r6,-4(r7)
 c01604c:	314cd83a 	srl	r6,r6,r5
 c016050:	38bff736 	bltu	r7,r2,c016030 <__alt_data_end+0xfc016030>
 c016054:	10c7c83a 	sub	r3,r2,r3
 c016058:	18fffec4 	addi	r3,r3,-5
 c01605c:	1806d0ba 	srli	r3,r3,2
 c016060:	18c00044 	addi	r3,r3,1
 c016064:	18c7883a 	add	r3,r3,r3
 c016068:	18c7883a 	add	r3,r3,r3
 c01606c:	40c7883a 	add	r3,r8,r3
 c016070:	19800015 	stw	r6,0(r3)
 c016074:	30000126 	beq	r6,zero,c01607c <rshift+0x98>
 c016078:	18c00104 	addi	r3,r3,4
 c01607c:	1a05c83a 	sub	r2,r3,r8
 c016080:	1005d0ba 	srai	r2,r2,2
 c016084:	00001206 	br	c0160d0 <rshift+0xec>
 c016088:	20000415 	stw	zero,16(r4)
 c01608c:	20000515 	stw	zero,20(r4)
 c016090:	f800283a 	ret
 c016094:	18bffc2e 	bgeu	r3,r2,c016088 <__alt_data_end+0xfc016088>
 c016098:	180d883a 	mov	r6,r3
 c01609c:	400b883a 	mov	r5,r8
 c0160a0:	31c00017 	ldw	r7,0(r6)
 c0160a4:	29400104 	addi	r5,r5,4
 c0160a8:	31800104 	addi	r6,r6,4
 c0160ac:	29ffff15 	stw	r7,-4(r5)
 c0160b0:	30bffb36 	bltu	r6,r2,c0160a0 <__alt_data_end+0xfc0160a0>
 c0160b4:	00c6303a 	nor	r3,zero,r3
 c0160b8:	1885883a 	add	r2,r3,r2
 c0160bc:	1004d0ba 	srli	r2,r2,2
 c0160c0:	10800044 	addi	r2,r2,1
 c0160c4:	1085883a 	add	r2,r2,r2
 c0160c8:	1085883a 	add	r2,r2,r2
 c0160cc:	1005d0ba 	srai	r2,r2,2
 c0160d0:	20800415 	stw	r2,16(r4)
 c0160d4:	103fed26 	beq	r2,zero,c01608c <__alt_data_end+0xfc01608c>
 c0160d8:	f800283a 	ret
 c0160dc:	4007883a 	mov	r3,r8
 c0160e0:	003fe306 	br	c016070 <__alt_data_end+0xfc016070>

0c0160e4 <__gethex>:
 c0160e4:	deffea04 	addi	sp,sp,-88
 c0160e8:	d9c00415 	stw	r7,16(sp)
 c0160ec:	dfc01515 	stw	ra,84(sp)
 c0160f0:	dd001015 	stw	r20,64(sp)
 c0160f4:	dcc00f15 	stw	r19,60(sp)
 c0160f8:	2829883a 	mov	r20,r5
 c0160fc:	dc800e15 	stw	r18,56(sp)
 c016100:	d9000215 	stw	r4,8(sp)
 c016104:	d9800115 	stw	r6,4(sp)
 c016108:	df001415 	stw	fp,80(sp)
 c01610c:	ddc01315 	stw	r23,76(sp)
 c016110:	dd801215 	stw	r22,72(sp)
 c016114:	dd401115 	stw	r21,68(sp)
 c016118:	dc400d15 	stw	r17,52(sp)
 c01611c:	dc000c15 	stw	r16,48(sp)
 c016120:	c00e2880 	call	c00e288 <_localeconv_r>
 c016124:	14800017 	ldw	r18,0(r2)
 c016128:	9009883a 	mov	r4,r18
 c01612c:	c0052f80 	call	c0052f8 <strlen>
 c016130:	a1c00017 	ldw	r7,0(r20)
 c016134:	1027883a 	mov	r19,r2
 c016138:	9085883a 	add	r2,r18,r2
 c01613c:	10bfffc3 	ldbu	r2,-1(r2)
 c016140:	38c00083 	ldbu	r3,2(r7)
 c016144:	d8800305 	stb	r2,12(sp)
 c016148:	00800c04 	movi	r2,48
 c01614c:	18815a1e 	bne	r3,r2,c0166b8 <__gethex+0x5d4>
 c016150:	013fff84 	movi	r4,-2
 c016154:	388000c4 	addi	r2,r7,3
 c016158:	21c9c83a 	sub	r4,r4,r7
 c01615c:	180b883a 	mov	r5,r3
 c016160:	20b9883a 	add	fp,r4,r2
 c016164:	102f883a 	mov	r23,r2
 c016168:	10800044 	addi	r2,r2,1
 c01616c:	10ffffc3 	ldbu	r3,-1(r2)
 c016170:	197ffb26 	beq	r3,r5,c016160 <__alt_data_end+0xfc016160>
 c016174:	058300b4 	movhi	r22,3074
 c016178:	b5b7bd04 	addi	r22,r22,-8460
 c01617c:	b0c7883a 	add	r3,r22,r3
 c016180:	18800003 	ldbu	r2,0(r3)
 c016184:	10008726 	beq	r2,zero,c0163a4 <__gethex+0x2c0>
 c016188:	b8800003 	ldbu	r2,0(r23)
 c01618c:	d8000015 	stw	zero,0(sp)
 c016190:	0021883a 	mov	r16,zero
 c016194:	b085883a 	add	r2,r22,r2
 c016198:	10800003 	ldbu	r2,0(r2)
 c01619c:	b823883a 	mov	r17,r23
 c0161a0:	10000526 	beq	r2,zero,c0161b8 <__gethex+0xd4>
 c0161a4:	8c400044 	addi	r17,r17,1
 c0161a8:	88800003 	ldbu	r2,0(r17)
 c0161ac:	b085883a 	add	r2,r22,r2
 c0161b0:	10800003 	ldbu	r2,0(r2)
 c0161b4:	103ffb1e 	bne	r2,zero,c0161a4 <__alt_data_end+0xfc0161a4>
 c0161b8:	980d883a 	mov	r6,r19
 c0161bc:	900b883a 	mov	r5,r18
 c0161c0:	8809883a 	mov	r4,r17
 c0161c4:	c016ca40 	call	c016ca4 <strncmp>
 c0161c8:	1000031e 	bne	r2,zero,c0161d8 <__gethex+0xf4>
 c0161cc:	80015c26 	beq	r16,zero,c016740 <__gethex+0x65c>
 c0161d0:	88800003 	ldbu	r2,0(r17)
 c0161d4:	00000206 	br	c0161e0 <__gethex+0xfc>
 c0161d8:	88800003 	ldbu	r2,0(r17)
 c0161dc:	80012926 	beq	r16,zero,c016684 <__gethex+0x5a0>
 c0161e0:	8c21c83a 	sub	r16,r17,r16
 c0161e4:	8421883a 	add	r16,r16,r16
 c0161e8:	8421883a 	add	r16,r16,r16
 c0161ec:	0421c83a 	sub	r16,zero,r16
 c0161f0:	10803fcc 	andi	r2,r2,255
 c0161f4:	01001404 	movi	r4,80
 c0161f8:	11008826 	beq	r2,r4,c01641c <__gethex+0x338>
 c0161fc:	01001c04 	movi	r4,112
 c016200:	11008626 	beq	r2,r4,c01641c <__gethex+0x338>
 c016204:	882b883a 	mov	r21,r17
 c016208:	d8c00017 	ldw	r3,0(sp)
 c01620c:	a4400015 	stw	r17,0(r20)
 c016210:	1800711e 	bne	r3,zero,c0163d8 <__gethex+0x2f4>
 c016214:	adc5c83a 	sub	r2,r21,r23
 c016218:	10bfffc4 	addi	r2,r2,-1
 c01621c:	00c001c4 	movi	r3,7
 c016220:	000b883a 	mov	r5,zero
 c016224:	1880030e 	bge	r3,r2,c016234 <__gethex+0x150>
 c016228:	1005d07a 	srai	r2,r2,1
 c01622c:	29400044 	addi	r5,r5,1
 c016230:	18bffd16 	blt	r3,r2,c016228 <__alt_data_end+0xfc016228>
 c016234:	d9000217 	ldw	r4,8(sp)
 c016238:	c00eb480 	call	c00eb48 <_Balloc>
 c01623c:	10c00504 	addi	r3,r2,20
 c016240:	d8c00015 	stw	r3,0(sp)
 c016244:	1029883a 	mov	r20,r2
 c016248:	bd417c2e 	bgeu	r23,r21,c01683c <__gethex+0x758>
 c01624c:	dc400303 	ldbu	r17,12(sp)
 c016250:	03000044 	movi	r12,1
 c016254:	1813883a 	mov	r9,r3
 c016258:	0039883a 	mov	fp,zero
 c01625c:	0007883a 	mov	r3,zero
 c016260:	64d9c83a 	sub	r12,r12,r19
 c016264:	02800804 	movi	r10,32
 c016268:	a8bfffc3 	ldbu	r2,-1(r21)
 c01626c:	ab7fffc4 	addi	r13,r21,-1
 c016270:	88803026 	beq	r17,r2,c016334 <__gethex+0x250>
 c016274:	e2804526 	beq	fp,r10,c01638c <__gethex+0x2a8>
 c016278:	e00b883a 	mov	r5,fp
 c01627c:	e7000104 	addi	fp,fp,4
 c016280:	a93fffc3 	ldbu	r4,-1(r21)
 c016284:	682b883a 	mov	r21,r13
 c016288:	b109883a 	add	r4,r22,r4
 c01628c:	20800003 	ldbu	r2,0(r4)
 c016290:	108003cc 	andi	r2,r2,15
 c016294:	1144983a 	sll	r2,r2,r5
 c016298:	1886b03a 	or	r3,r3,r2
 c01629c:	bd7ff236 	bltu	r23,r21,c016268 <__alt_data_end+0xfc016268>
 c0162a0:	d9000017 	ldw	r4,0(sp)
 c0162a4:	48800104 	addi	r2,r9,4
 c0162a8:	48c00015 	stw	r3,0(r9)
 c0162ac:	1105c83a 	sub	r2,r2,r4
 c0162b0:	1005d0ba 	srai	r2,r2,2
 c0162b4:	1809883a 	mov	r4,r3
 c0162b8:	a0800415 	stw	r2,16(r20)
 c0162bc:	1022917a 	slli	r17,r2,5
 c0162c0:	c00ee640 	call	c00ee64 <__hi0bits>
 c0162c4:	d8c00117 	ldw	r3,4(sp)
 c0162c8:	8885c83a 	sub	r2,r17,r2
 c0162cc:	1c800017 	ldw	r18,0(r3)
 c0162d0:	9080d016 	blt	r18,r2,c016614 <__gethex+0x530>
 c0162d4:	1480ed16 	blt	r2,r18,c01668c <__gethex+0x5a8>
 c0162d8:	0027883a 	mov	r19,zero
 c0162dc:	d8c00117 	ldw	r3,4(sp)
 c0162e0:	18800217 	ldw	r2,8(r3)
 c0162e4:	14009416 	blt	r2,r16,c016538 <__gethex+0x454>
 c0162e8:	d8c00117 	ldw	r3,4(sp)
 c0162ec:	18800117 	ldw	r2,4(r3)
 c0162f0:	8080b30e 	bge	r16,r2,c0165c0 <__gethex+0x4dc>
 c0162f4:	1421c83a 	sub	r16,r2,r16
 c0162f8:	8480f616 	blt	r16,r18,c0166d4 <__gethex+0x5f0>
 c0162fc:	18c00317 	ldw	r3,12(r3)
 c016300:	01000084 	movi	r4,2
 c016304:	19015226 	beq	r3,r4,c016850 <__gethex+0x76c>
 c016308:	010000c4 	movi	r4,3
 c01630c:	19013726 	beq	r3,r4,c0167ec <__gethex+0x708>
 c016310:	01000044 	movi	r4,1
 c016314:	19015126 	beq	r3,r4,c01685c <__gethex+0x778>
 c016318:	d9000217 	ldw	r4,8(sp)
 c01631c:	a00b883a 	mov	r5,r20
 c016320:	c00ebf00 	call	c00ebf0 <_Bfree>
 c016324:	d8801617 	ldw	r2,88(sp)
 c016328:	10000015 	stw	zero,0(r2)
 c01632c:	00801404 	movi	r2,80
 c016330:	00002b06 	br	c0163e0 <__gethex+0x2fc>
 c016334:	6b1d883a 	add	r14,r13,r12
 c016338:	75ffce36 	bltu	r14,r23,c016274 <__alt_data_end+0xfc016274>
 c01633c:	7009883a 	mov	r4,r14
 c016340:	980d883a 	mov	r6,r19
 c016344:	900b883a 	mov	r5,r18
 c016348:	d8c00715 	stw	r3,28(sp)
 c01634c:	da400615 	stw	r9,24(sp)
 c016350:	da800b15 	stw	r10,44(sp)
 c016354:	db000a15 	stw	r12,40(sp)
 c016358:	db400815 	stw	r13,32(sp)
 c01635c:	db800915 	stw	r14,36(sp)
 c016360:	c016ca40 	call	c016ca4 <strncmp>
 c016364:	d8c00717 	ldw	r3,28(sp)
 c016368:	da400617 	ldw	r9,24(sp)
 c01636c:	da800b17 	ldw	r10,44(sp)
 c016370:	db000a17 	ldw	r12,40(sp)
 c016374:	db400817 	ldw	r13,32(sp)
 c016378:	db800917 	ldw	r14,36(sp)
 c01637c:	103fbd1e 	bne	r2,zero,c016274 <__alt_data_end+0xfc016274>
 c016380:	702b883a 	mov	r21,r14
 c016384:	bd7fb836 	bltu	r23,r21,c016268 <__alt_data_end+0xfc016268>
 c016388:	003fc506 	br	c0162a0 <__alt_data_end+0xfc0162a0>
 c01638c:	07000104 	movi	fp,4
 c016390:	48c00015 	stw	r3,0(r9)
 c016394:	000b883a 	mov	r5,zero
 c016398:	4f13883a 	add	r9,r9,fp
 c01639c:	0007883a 	mov	r3,zero
 c0163a0:	003fb706 	br	c016280 <__alt_data_end+0xfc016280>
 c0163a4:	980d883a 	mov	r6,r19
 c0163a8:	900b883a 	mov	r5,r18
 c0163ac:	b809883a 	mov	r4,r23
 c0163b0:	c016ca40 	call	c016ca4 <strncmp>
 c0163b4:	10006c26 	beq	r2,zero,c016568 <__gethex+0x484>
 c0163b8:	b8800003 	ldbu	r2,0(r23)
 c0163bc:	b823883a 	mov	r17,r23
 c0163c0:	10803fcc 	andi	r2,r2,255
 c0163c4:	01001404 	movi	r4,80
 c0163c8:	11001126 	beq	r2,r4,c016410 <__gethex+0x32c>
 c0163cc:	01001c04 	movi	r4,112
 c0163d0:	11000f26 	beq	r2,r4,c016410 <__gethex+0x32c>
 c0163d4:	a4400015 	stw	r17,0(r20)
 c0163d8:	e0008c1e 	bne	fp,zero,c01660c <__gethex+0x528>
 c0163dc:	00800184 	movi	r2,6
 c0163e0:	dfc01517 	ldw	ra,84(sp)
 c0163e4:	df001417 	ldw	fp,80(sp)
 c0163e8:	ddc01317 	ldw	r23,76(sp)
 c0163ec:	dd801217 	ldw	r22,72(sp)
 c0163f0:	dd401117 	ldw	r21,68(sp)
 c0163f4:	dd001017 	ldw	r20,64(sp)
 c0163f8:	dcc00f17 	ldw	r19,60(sp)
 c0163fc:	dc800e17 	ldw	r18,56(sp)
 c016400:	dc400d17 	ldw	r17,52(sp)
 c016404:	dc000c17 	ldw	r16,48(sp)
 c016408:	dec01604 	addi	sp,sp,88
 c01640c:	f800283a 	ret
 c016410:	00c00044 	movi	r3,1
 c016414:	0021883a 	mov	r16,zero
 c016418:	d8c00015 	stw	r3,0(sp)
 c01641c:	88800043 	ldbu	r2,1(r17)
 c016420:	01400ac4 	movi	r5,43
 c016424:	11003fcc 	andi	r4,r2,255
 c016428:	21407626 	beq	r4,r5,c016604 <__gethex+0x520>
 c01642c:	01400b44 	movi	r5,45
 c016430:	21404826 	beq	r4,r5,c016554 <__gethex+0x470>
 c016434:	8ac00044 	addi	r11,r17,1
 c016438:	d8000515 	stw	zero,20(sp)
 c01643c:	10803fcc 	andi	r2,r2,255
 c016440:	b085883a 	add	r2,r22,r2
 c016444:	11000003 	ldbu	r4,0(r2)
 c016448:	05400604 	movi	r21,24
 c01644c:	20bfffc4 	addi	r2,r4,-1
 c016450:	10803fcc 	andi	r2,r2,255
 c016454:	a8bf6b36 	bltu	r21,r2,c016204 <__alt_data_end+0xfc016204>
 c016458:	58800043 	ldbu	r2,1(r11)
 c01645c:	014300b4 	movhi	r5,3074
 c016460:	2977bd04 	addi	r5,r5,-8460
 c016464:	2885883a 	add	r2,r5,r2
 c016468:	12800003 	ldbu	r10,0(r2)
 c01646c:	21003fcc 	andi	r4,r4,255
 c016470:	213ffc04 	addi	r4,r4,-16
 c016474:	50bfffc4 	addi	r2,r10,-1
 c016478:	10803fcc 	andi	r2,r2,255
 c01647c:	5ac00044 	addi	r11,r11,1
 c016480:	51803fcc 	andi	r6,r10,255
 c016484:	a8801036 	bltu	r21,r2,c0164c8 <__gethex+0x3e4>
 c016488:	5ac00044 	addi	r11,r11,1
 c01648c:	01400284 	movi	r5,10
 c016490:	d9800715 	stw	r6,28(sp)
 c016494:	dac00615 	stw	r11,24(sp)
 c016498:	c00473c0 	call	c00473c <__mulsi3>
 c01649c:	dac00617 	ldw	r11,24(sp)
 c0164a0:	d9800717 	ldw	r6,28(sp)
 c0164a4:	5a800003 	ldbu	r10,0(r11)
 c0164a8:	1185883a 	add	r2,r2,r6
 c0164ac:	113ffc04 	addi	r4,r2,-16
 c0164b0:	b295883a 	add	r10,r22,r10
 c0164b4:	51400003 	ldbu	r5,0(r10)
 c0164b8:	2abfffc4 	addi	r10,r5,-1
 c0164bc:	52803fcc 	andi	r10,r10,255
 c0164c0:	29803fcc 	andi	r6,r5,255
 c0164c4:	aabff02e 	bgeu	r21,r10,c016488 <__alt_data_end+0xfc016488>
 c0164c8:	d8c00517 	ldw	r3,20(sp)
 c0164cc:	18000126 	beq	r3,zero,c0164d4 <__gethex+0x3f0>
 c0164d0:	0109c83a 	sub	r4,zero,r4
 c0164d4:	882b883a 	mov	r21,r17
 c0164d8:	8121883a 	add	r16,r16,r4
 c0164dc:	5823883a 	mov	r17,r11
 c0164e0:	003f4906 	br	c016208 <__alt_data_end+0xfc016208>
 c0164e4:	a0800217 	ldw	r2,8(r20)
 c0164e8:	a880f20e 	bge	r21,r2,c0168b4 <__gethex+0x7d0>
 c0164ec:	a807883a 	mov	r3,r21
 c0164f0:	18800144 	addi	r2,r3,5
 c0164f4:	1085883a 	add	r2,r2,r2
 c0164f8:	18c00044 	addi	r3,r3,1
 c0164fc:	1085883a 	add	r2,r2,r2
 c016500:	a085883a 	add	r2,r20,r2
 c016504:	a0c00415 	stw	r3,16(r20)
 c016508:	01000044 	movi	r4,1
 c01650c:	11000015 	stw	r4,0(r2)
 c016510:	00800084 	movi	r2,2
 c016514:	8880da26 	beq	r17,r2,c016880 <__gethex+0x79c>
 c016518:	a8c0ae0e 	bge	r21,r3,c0167d4 <__gethex+0x6f0>
 c01651c:	01400044 	movi	r5,1
 c016520:	a009883a 	mov	r4,r20
 c016524:	c015fe40 	call	c015fe4 <rshift>
 c016528:	d8c00117 	ldw	r3,4(sp)
 c01652c:	84000044 	addi	r16,r16,1
 c016530:	18800217 	ldw	r2,8(r3)
 c016534:	1400a90e 	bge	r2,r16,c0167dc <__gethex+0x6f8>
 c016538:	d9000217 	ldw	r4,8(sp)
 c01653c:	a00b883a 	mov	r5,r20
 c016540:	c00ebf00 	call	c00ebf0 <_Bfree>
 c016544:	d9001617 	ldw	r4,88(sp)
 c016548:	008028c4 	movi	r2,163
 c01654c:	20000015 	stw	zero,0(r4)
 c016550:	003fa306 	br	c0163e0 <__alt_data_end+0xfc0163e0>
 c016554:	00c00044 	movi	r3,1
 c016558:	d8c00515 	stw	r3,20(sp)
 c01655c:	88800083 	ldbu	r2,2(r17)
 c016560:	8ac00084 	addi	r11,r17,2
 c016564:	003fb506 	br	c01643c <__alt_data_end+0xfc01643c>
 c016568:	bce3883a 	add	r17,r23,r19
 c01656c:	89000003 	ldbu	r4,0(r17)
 c016570:	21403fcc 	andi	r5,r4,255
 c016574:	b145883a 	add	r2,r22,r5
 c016578:	10800003 	ldbu	r2,0(r2)
 c01657c:	11803fcc 	andi	r6,r2,255
 c016580:	30005026 	beq	r6,zero,c0166c4 <__gethex+0x5e0>
 c016584:	01000c04 	movi	r4,48
 c016588:	882f883a 	mov	r23,r17
 c01658c:	2900061e 	bne	r5,r4,c0165a8 <__gethex+0x4c4>
 c016590:	2809883a 	mov	r4,r5
 c016594:	bdc00044 	addi	r23,r23,1
 c016598:	b8800003 	ldbu	r2,0(r23)
 c01659c:	113ffd26 	beq	r2,r4,c016594 <__alt_data_end+0xfc016594>
 c0165a0:	b085883a 	add	r2,r22,r2
 c0165a4:	10800003 	ldbu	r2,0(r2)
 c0165a8:	10803fcc 	andi	r2,r2,255
 c0165ac:	1007003a 	cmpeq	r3,r2,zero
 c0165b0:	d8c00015 	stw	r3,0(sp)
 c0165b4:	8821883a 	mov	r16,r17
 c0165b8:	07000044 	movi	fp,1
 c0165bc:	003ef706 	br	c01619c <__alt_data_end+0xfc01619c>
 c0165c0:	04400044 	movi	r17,1
 c0165c4:	98000926 	beq	r19,zero,c0165ec <__gethex+0x508>
 c0165c8:	d8c00117 	ldw	r3,4(sp)
 c0165cc:	18800317 	ldw	r2,12(r3)
 c0165d0:	00c00084 	movi	r3,2
 c0165d4:	10c06826 	beq	r2,r3,c016778 <__gethex+0x694>
 c0165d8:	00c000c4 	movi	r3,3
 c0165dc:	10c06a26 	beq	r2,r3,c016788 <__gethex+0x6a4>
 c0165e0:	00c00044 	movi	r3,1
 c0165e4:	10c08d26 	beq	r2,r3,c01681c <__gethex+0x738>
 c0165e8:	8c400414 	ori	r17,r17,16
 c0165ec:	d9001617 	ldw	r4,88(sp)
 c0165f0:	d8c00417 	ldw	r3,16(sp)
 c0165f4:	8805883a 	mov	r2,r17
 c0165f8:	25000015 	stw	r20,0(r4)
 c0165fc:	1c000015 	stw	r16,0(r3)
 c016600:	003f7706 	br	c0163e0 <__alt_data_end+0xfc0163e0>
 c016604:	d8000515 	stw	zero,20(sp)
 c016608:	003fd406 	br	c01655c <__alt_data_end+0xfc01655c>
 c01660c:	0005883a 	mov	r2,zero
 c016610:	003f7306 	br	c0163e0 <__alt_data_end+0xfc0163e0>
 c016614:	14a3c83a 	sub	r17,r2,r18
 c016618:	880b883a 	mov	r5,r17
 c01661c:	a009883a 	mov	r4,r20
 c016620:	c00fb740 	call	c00fb74 <__any_on>
 c016624:	10002926 	beq	r2,zero,c0166cc <__gethex+0x5e8>
 c016628:	897fffc4 	addi	r5,r17,-1
 c01662c:	2807d17a 	srai	r3,r5,5
 c016630:	d8800017 	ldw	r2,0(sp)
 c016634:	290007cc 	andi	r4,r5,31
 c016638:	18c7883a 	add	r3,r3,r3
 c01663c:	18c7883a 	add	r3,r3,r3
 c016640:	04c00044 	movi	r19,1
 c016644:	10c7883a 	add	r3,r2,r3
 c016648:	9908983a 	sll	r4,r19,r4
 c01664c:	18c00017 	ldw	r3,0(r3)
 c016650:	20c6703a 	and	r3,r4,r3
 c016654:	18000626 	beq	r3,zero,c016670 <__gethex+0x58c>
 c016658:	99407b0e 	bge	r19,r5,c016848 <__gethex+0x764>
 c01665c:	897fff84 	addi	r5,r17,-2
 c016660:	a009883a 	mov	r4,r20
 c016664:	c00fb740 	call	c00fb74 <__any_on>
 c016668:	10007726 	beq	r2,zero,c016848 <__gethex+0x764>
 c01666c:	04c000c4 	movi	r19,3
 c016670:	880b883a 	mov	r5,r17
 c016674:	a009883a 	mov	r4,r20
 c016678:	c015fe40 	call	c015fe4 <rshift>
 c01667c:	8461883a 	add	r16,r16,r17
 c016680:	003f1606 	br	c0162dc <__alt_data_end+0xfc0162dc>
 c016684:	0021883a 	mov	r16,zero
 c016688:	003ed906 	br	c0161f0 <__alt_data_end+0xfc0161f0>
 c01668c:	d9000217 	ldw	r4,8(sp)
 c016690:	90a3c83a 	sub	r17,r18,r2
 c016694:	a00b883a 	mov	r5,r20
 c016698:	880d883a 	mov	r6,r17
 c01669c:	c00f3840 	call	c00f384 <__lshift>
 c0166a0:	10c00504 	addi	r3,r2,20
 c0166a4:	1029883a 	mov	r20,r2
 c0166a8:	8461c83a 	sub	r16,r16,r17
 c0166ac:	d8c00015 	stw	r3,0(sp)
 c0166b0:	0027883a 	mov	r19,zero
 c0166b4:	003f0906 	br	c0162dc <__alt_data_end+0xfc0162dc>
 c0166b8:	3dc00084 	addi	r23,r7,2
 c0166bc:	0039883a 	mov	fp,zero
 c0166c0:	003eac06 	br	c016174 <__alt_data_end+0xfc016174>
 c0166c4:	2005883a 	mov	r2,r4
 c0166c8:	003f3d06 	br	c0163c0 <__alt_data_end+0xfc0163c0>
 c0166cc:	0027883a 	mov	r19,zero
 c0166d0:	003fe706 	br	c016670 <__alt_data_end+0xfc016670>
 c0166d4:	847fffc4 	addi	r17,r16,-1
 c0166d8:	9800421e 	bne	r19,zero,c0167e4 <__gethex+0x700>
 c0166dc:	88000426 	beq	r17,zero,c0166f0 <__gethex+0x60c>
 c0166e0:	880b883a 	mov	r5,r17
 c0166e4:	a009883a 	mov	r4,r20
 c0166e8:	c00fb740 	call	c00fb74 <__any_on>
 c0166ec:	1027883a 	mov	r19,r2
 c0166f0:	8805d17a 	srai	r2,r17,5
 c0166f4:	d8c00017 	ldw	r3,0(sp)
 c0166f8:	8c4007cc 	andi	r17,r17,31
 c0166fc:	1085883a 	add	r2,r2,r2
 c016700:	1085883a 	add	r2,r2,r2
 c016704:	1885883a 	add	r2,r3,r2
 c016708:	00c00044 	movi	r3,1
 c01670c:	1c62983a 	sll	r17,r3,r17
 c016710:	10800017 	ldw	r2,0(r2)
 c016714:	8884703a 	and	r2,r17,r2
 c016718:	10000126 	beq	r2,zero,c016720 <__gethex+0x63c>
 c01671c:	9cc00094 	ori	r19,r19,2
 c016720:	800b883a 	mov	r5,r16
 c016724:	a009883a 	mov	r4,r20
 c016728:	c015fe40 	call	c015fe4 <rshift>
 c01672c:	d8c00117 	ldw	r3,4(sp)
 c016730:	9425c83a 	sub	r18,r18,r16
 c016734:	04400084 	movi	r17,2
 c016738:	1c000117 	ldw	r16,4(r3)
 c01673c:	003fa106 	br	c0165c4 <__alt_data_end+0xfc0165c4>
 c016740:	8ce1883a 	add	r16,r17,r19
 c016744:	80800003 	ldbu	r2,0(r16)
 c016748:	8023883a 	mov	r17,r16
 c01674c:	10c03fcc 	andi	r3,r2,255
 c016750:	b0c7883a 	add	r3,r22,r3
 c016754:	18c00003 	ldbu	r3,0(r3)
 c016758:	183ea026 	beq	r3,zero,c0161dc <__alt_data_end+0xfc0161dc>
 c01675c:	8c400044 	addi	r17,r17,1
 c016760:	88800003 	ldbu	r2,0(r17)
 c016764:	11003fcc 	andi	r4,r2,255
 c016768:	b109883a 	add	r4,r22,r4
 c01676c:	21000003 	ldbu	r4,0(r4)
 c016770:	203ffa1e 	bne	r4,zero,c01675c <__alt_data_end+0xfc01675c>
 c016774:	003e9906 	br	c0161dc <__alt_data_end+0xfc0161dc>
 c016778:	d9001717 	ldw	r4,92(sp)
 c01677c:	00800044 	movi	r2,1
 c016780:	1109c83a 	sub	r4,r2,r4
 c016784:	d9001715 	stw	r4,92(sp)
 c016788:	d8801717 	ldw	r2,92(sp)
 c01678c:	103f9626 	beq	r2,zero,c0165e8 <__alt_data_end+0xfc0165e8>
 c016790:	a5400417 	ldw	r21,16(r20)
 c016794:	d9800017 	ldw	r6,0(sp)
 c016798:	013fffc4 	movi	r4,-1
 c01679c:	ad67883a 	add	r19,r21,r21
 c0167a0:	9ce7883a 	add	r19,r19,r19
 c0167a4:	3005883a 	mov	r2,r6
 c0167a8:	34cb883a 	add	r5,r6,r19
 c0167ac:	00000306 	br	c0167bc <__gethex+0x6d8>
 c0167b0:	10000015 	stw	zero,0(r2)
 c0167b4:	10800104 	addi	r2,r2,4
 c0167b8:	117f4a2e 	bgeu	r2,r5,c0164e4 <__alt_data_end+0xfc0164e4>
 c0167bc:	10c00017 	ldw	r3,0(r2)
 c0167c0:	193ffb26 	beq	r3,r4,c0167b0 <__alt_data_end+0xfc0167b0>
 c0167c4:	18c00044 	addi	r3,r3,1
 c0167c8:	10c00015 	stw	r3,0(r2)
 c0167cc:	00800084 	movi	r2,2
 c0167d0:	88802b26 	beq	r17,r2,c016880 <__gethex+0x79c>
 c0167d4:	948007cc 	andi	r18,r18,31
 c0167d8:	90002f1e 	bne	r18,zero,c016898 <__gethex+0x7b4>
 c0167dc:	04400844 	movi	r17,33
 c0167e0:	003f8206 	br	c0165ec <__alt_data_end+0xfc0165ec>
 c0167e4:	04c00044 	movi	r19,1
 c0167e8:	003fc106 	br	c0166f0 <__alt_data_end+0xfc0166f0>
 c0167ec:	d8c01717 	ldw	r3,92(sp)
 c0167f0:	183ec926 	beq	r3,zero,c016318 <__alt_data_end+0xfc016318>
 c0167f4:	d8c00417 	ldw	r3,16(sp)
 c0167f8:	d9001617 	ldw	r4,88(sp)
 c0167fc:	18800015 	stw	r2,0(r3)
 c016800:	d8c00017 	ldw	r3,0(sp)
 c016804:	00800044 	movi	r2,1
 c016808:	a0800415 	stw	r2,16(r20)
 c01680c:	18800015 	stw	r2,0(r3)
 c016810:	25000015 	stw	r20,0(r4)
 c016814:	00801884 	movi	r2,98
 c016818:	003ef106 	br	c0163e0 <__alt_data_end+0xfc0163e0>
 c01681c:	9880008c 	andi	r2,r19,2
 c016820:	103f7126 	beq	r2,zero,c0165e8 <__alt_data_end+0xfc0165e8>
 c016824:	d8c00017 	ldw	r3,0(sp)
 c016828:	18800017 	ldw	r2,0(r3)
 c01682c:	9884b03a 	or	r2,r19,r2
 c016830:	1080004c 	andi	r2,r2,1
 c016834:	103fd61e 	bne	r2,zero,c016790 <__alt_data_end+0xfc016790>
 c016838:	003f6b06 	br	c0165e8 <__alt_data_end+0xfc0165e8>
 c01683c:	da400017 	ldw	r9,0(sp)
 c016840:	0007883a 	mov	r3,zero
 c016844:	003e9606 	br	c0162a0 <__alt_data_end+0xfc0162a0>
 c016848:	04c00084 	movi	r19,2
 c01684c:	003f8806 	br	c016670 <__alt_data_end+0xfc016670>
 c016850:	d9001717 	ldw	r4,92(sp)
 c016854:	203fe726 	beq	r4,zero,c0167f4 <__alt_data_end+0xfc0167f4>
 c016858:	003eaf06 	br	c016318 <__alt_data_end+0xfc016318>
 c01685c:	943eae1e 	bne	r18,r16,c016318 <__alt_data_end+0xfc016318>
 c016860:	1cbfe40e 	bge	r3,r18,c0167f4 <__alt_data_end+0xfc0167f4>
 c016864:	917fffc4 	addi	r5,r18,-1
 c016868:	a009883a 	mov	r4,r20
 c01686c:	c00fb740 	call	c00fb74 <__any_on>
 c016870:	103ea926 	beq	r2,zero,c016318 <__alt_data_end+0xfc016318>
 c016874:	d8c00117 	ldw	r3,4(sp)
 c016878:	18800117 	ldw	r2,4(r3)
 c01687c:	003fdd06 	br	c0167f4 <__alt_data_end+0xfc0167f4>
 c016880:	d8c00117 	ldw	r3,4(sp)
 c016884:	18800017 	ldw	r2,0(r3)
 c016888:	10bfffc4 	addi	r2,r2,-1
 c01688c:	90801c26 	beq	r18,r2,c016900 <__gethex+0x81c>
 c016890:	04400884 	movi	r17,34
 c016894:	003f5506 	br	c0165ec <__alt_data_end+0xfc0165ec>
 c016898:	34c5883a 	add	r2,r6,r19
 c01689c:	113fff17 	ldw	r4,-4(r2)
 c0168a0:	c00ee640 	call	c00ee64 <__hi0bits>
 c0168a4:	00c00804 	movi	r3,32
 c0168a8:	1ca5c83a 	sub	r18,r3,r18
 c0168ac:	14bfcb0e 	bge	r2,r18,c0167dc <__alt_data_end+0xfc0167dc>
 c0168b0:	003f1a06 	br	c01651c <__alt_data_end+0xfc01651c>
 c0168b4:	a1400117 	ldw	r5,4(r20)
 c0168b8:	d9000217 	ldw	r4,8(sp)
 c0168bc:	29400044 	addi	r5,r5,1
 c0168c0:	c00eb480 	call	c00eb48 <_Balloc>
 c0168c4:	a1800417 	ldw	r6,16(r20)
 c0168c8:	a1400304 	addi	r5,r20,12
 c0168cc:	11000304 	addi	r4,r2,12
 c0168d0:	31800084 	addi	r6,r6,2
 c0168d4:	318d883a 	add	r6,r6,r6
 c0168d8:	318d883a 	add	r6,r6,r6
 c0168dc:	102d883a 	mov	r22,r2
 c0168e0:	c00e77c0 	call	c00e77c <memcpy>
 c0168e4:	d9000217 	ldw	r4,8(sp)
 c0168e8:	a00b883a 	mov	r5,r20
 c0168ec:	b029883a 	mov	r20,r22
 c0168f0:	c00ebf00 	call	c00ebf0 <_Bfree>
 c0168f4:	b0c00417 	ldw	r3,16(r22)
 c0168f8:	b1800504 	addi	r6,r22,20
 c0168fc:	003efc06 	br	c0164f0 <__alt_data_end+0xfc0164f0>
 c016900:	9005d17a 	srai	r2,r18,5
 c016904:	944007cc 	andi	r17,r18,31
 c016908:	1085883a 	add	r2,r2,r2
 c01690c:	1085883a 	add	r2,r2,r2
 c016910:	3087883a 	add	r3,r6,r2
 c016914:	00800044 	movi	r2,1
 c016918:	1462983a 	sll	r17,r2,r17
 c01691c:	18800017 	ldw	r2,0(r3)
 c016920:	8884703a 	and	r2,r17,r2
 c016924:	1022c03a 	cmpne	r17,r2,zero
 c016928:	00800884 	movi	r2,34
 c01692c:	1463c83a 	sub	r17,r2,r17
 c016930:	003f2e06 	br	c0165ec <__alt_data_end+0xfc0165ec>

0c016934 <__hexnan>:
 c016934:	defff904 	addi	sp,sp,-28
 c016938:	dc800215 	stw	r18,8(sp)
 c01693c:	2c800017 	ldw	r18,0(r5)
 c016940:	dfc00615 	stw	ra,24(sp)
 c016944:	dd400515 	stw	r21,20(sp)
 c016948:	901fd17a 	srai	r15,r18,5
 c01694c:	dd000415 	stw	r20,16(sp)
 c016950:	dcc00315 	stw	r19,12(sp)
 c016954:	7bdf883a 	add	r15,r15,r15
 c016958:	7bdf883a 	add	r15,r15,r15
 c01695c:	dc400115 	stw	r17,4(sp)
 c016960:	dc000015 	stw	r16,0(sp)
 c016964:	948007cc 	andi	r18,r18,31
 c016968:	33df883a 	add	r15,r6,r15
 c01696c:	90000126 	beq	r18,zero,c016974 <__hexnan+0x40>
 c016970:	7bc00104 	addi	r15,r15,4
 c016974:	22000017 	ldw	r8,0(r4)
 c016978:	7affff04 	addi	r11,r15,-4
 c01697c:	038300b4 	movhi	r14,3074
 c016980:	783fff15 	stw	zero,-4(r15)
 c016984:	581b883a 	mov	r13,r11
 c016988:	580b883a 	mov	r5,r11
 c01698c:	000f883a 	mov	r7,zero
 c016990:	003f883a 	mov	ra,zero
 c016994:	0019883a 	mov	r12,zero
 c016998:	73b7bd04 	addi	r14,r14,-8460
 c01699c:	04400204 	movi	r17,8
 c0169a0:	04000804 	movi	r16,32
 c0169a4:	04c001c4 	movi	r19,7
 c0169a8:	42000044 	addi	r8,r8,1
 c0169ac:	40c00003 	ldbu	r3,0(r8)
 c0169b0:	18001d26 	beq	r3,zero,c016a28 <__hexnan+0xf4>
 c0169b4:	70c5883a 	add	r2,r14,r3
 c0169b8:	10800003 	ldbu	r2,0(r2)
 c0169bc:	12403fcc 	andi	r9,r2,255
 c0169c0:	4800301e 	bne	r9,zero,c016a84 <__hexnan+0x150>
 c0169c4:	80c04236 	bltu	r16,r3,c016ad0 <__hexnan+0x19c>
 c0169c8:	fb3ff70e 	bge	ra,r12,c0169a8 <__alt_data_end+0xfc0169a8>
 c0169cc:	2b40112e 	bgeu	r5,r13,c016a14 <__hexnan+0xe0>
 c0169d0:	99c01016 	blt	r19,r7,c016a14 <__hexnan+0xe0>
 c0169d4:	89e9c83a 	sub	r20,r17,r7
 c0169d8:	a529883a 	add	r20,r20,r20
 c0169dc:	2a800017 	ldw	r10,0(r5)
 c0169e0:	a529883a 	add	r20,r20,r20
 c0169e4:	852bc83a 	sub	r21,r16,r20
 c0169e8:	28c00104 	addi	r3,r5,4
 c0169ec:	2805883a 	mov	r2,r5
 c0169f0:	19c00017 	ldw	r7,0(r3)
 c0169f4:	10800104 	addi	r2,r2,4
 c0169f8:	18c00104 	addi	r3,r3,4
 c0169fc:	3d52983a 	sll	r9,r7,r21
 c016a00:	4a92b03a 	or	r9,r9,r10
 c016a04:	3d14d83a 	srl	r10,r7,r20
 c016a08:	127fff15 	stw	r9,-4(r2)
 c016a0c:	1abfff15 	stw	r10,-4(r3)
 c016a10:	137ff736 	bltu	r2,r13,c0169f0 <__alt_data_end+0xfc0169f0>
 c016a14:	31402836 	bltu	r6,r5,c016ab8 <__hexnan+0x184>
 c016a18:	42000044 	addi	r8,r8,1
 c016a1c:	40c00003 	ldbu	r3,0(r8)
 c016a20:	01c00204 	movi	r7,8
 c016a24:	183fe31e 	bne	r3,zero,c0169b4 <__alt_data_end+0xfc0169b4>
 c016a28:	60002b26 	beq	r12,zero,c016ad8 <__hexnan+0x1a4>
 c016a2c:	2b40022e 	bgeu	r5,r13,c016a38 <__hexnan+0x104>
 c016a30:	008001c4 	movi	r2,7
 c016a34:	11c0430e 	bge	r2,r7,c016b44 <__hexnan+0x210>
 c016a38:	3140312e 	bgeu	r6,r5,c016b00 <__hexnan+0x1cc>
 c016a3c:	3007883a 	mov	r3,r6
 c016a40:	29000017 	ldw	r4,0(r5)
 c016a44:	18800104 	addi	r2,r3,4
 c016a48:	29400104 	addi	r5,r5,4
 c016a4c:	19000015 	stw	r4,0(r3)
 c016a50:	1007883a 	mov	r3,r2
 c016a54:	597ffa2e 	bgeu	r11,r5,c016a40 <__alt_data_end+0xfc016a40>
 c016a58:	10000015 	stw	zero,0(r2)
 c016a5c:	10800104 	addi	r2,r2,4
 c016a60:	58bffd2e 	bgeu	r11,r2,c016a58 <__alt_data_end+0xfc016a58>
 c016a64:	78bfff17 	ldw	r2,-4(r15)
 c016a68:	1000041e 	bne	r2,zero,c016a7c <__hexnan+0x148>
 c016a6c:	32c02d26 	beq	r6,r11,c016b24 <__hexnan+0x1f0>
 c016a70:	5affff04 	addi	r11,r11,-4
 c016a74:	58800017 	ldw	r2,0(r11)
 c016a78:	103ffc26 	beq	r2,zero,c016a6c <__alt_data_end+0xfc016a6c>
 c016a7c:	00800144 	movi	r2,5
 c016a80:	00001606 	br	c016adc <__hexnan+0x1a8>
 c016a84:	39c00044 	addi	r7,r7,1
 c016a88:	63000044 	addi	r12,r12,1
 c016a8c:	89c0040e 	bge	r17,r7,c016aa0 <__hexnan+0x16c>
 c016a90:	317fc52e 	bgeu	r6,r5,c0169a8 <__alt_data_end+0xfc0169a8>
 c016a94:	283fff15 	stw	zero,-4(r5)
 c016a98:	01c00044 	movi	r7,1
 c016a9c:	297fff04 	addi	r5,r5,-4
 c016aa0:	28c00017 	ldw	r3,0(r5)
 c016aa4:	108003cc 	andi	r2,r2,15
 c016aa8:	1806913a 	slli	r3,r3,4
 c016aac:	1884b03a 	or	r2,r3,r2
 c016ab0:	28800015 	stw	r2,0(r5)
 c016ab4:	003fbc06 	br	c0169a8 <__alt_data_end+0xfc0169a8>
 c016ab8:	2b7fff04 	addi	r13,r5,-4
 c016abc:	283fff15 	stw	zero,-4(r5)
 c016ac0:	603f883a 	mov	ra,r12
 c016ac4:	680b883a 	mov	r5,r13
 c016ac8:	000f883a 	mov	r7,zero
 c016acc:	003fb606 	br	c0169a8 <__alt_data_end+0xfc0169a8>
 c016ad0:	00800a44 	movi	r2,41
 c016ad4:	18801726 	beq	r3,r2,c016b34 <__hexnan+0x200>
 c016ad8:	00800104 	movi	r2,4
 c016adc:	dfc00617 	ldw	ra,24(sp)
 c016ae0:	dd400517 	ldw	r21,20(sp)
 c016ae4:	dd000417 	ldw	r20,16(sp)
 c016ae8:	dcc00317 	ldw	r19,12(sp)
 c016aec:	dc800217 	ldw	r18,8(sp)
 c016af0:	dc400117 	ldw	r17,4(sp)
 c016af4:	dc000017 	ldw	r16,0(sp)
 c016af8:	dec00704 	addi	sp,sp,28
 c016afc:	f800283a 	ret
 c016b00:	903fd826 	beq	r18,zero,c016a64 <__alt_data_end+0xfc016a64>
 c016b04:	00c00804 	movi	r3,32
 c016b08:	1ca5c83a 	sub	r18,r3,r18
 c016b0c:	00ffffc4 	movi	r3,-1
 c016b10:	78bfff17 	ldw	r2,-4(r15)
 c016b14:	1c86d83a 	srl	r3,r3,r18
 c016b18:	1884703a 	and	r2,r3,r2
 c016b1c:	78bfff15 	stw	r2,-4(r15)
 c016b20:	003fd106 	br	c016a68 <__alt_data_end+0xfc016a68>
 c016b24:	00800044 	movi	r2,1
 c016b28:	58800015 	stw	r2,0(r11)
 c016b2c:	00800144 	movi	r2,5
 c016b30:	003fea06 	br	c016adc <__alt_data_end+0xfc016adc>
 c016b34:	42000044 	addi	r8,r8,1
 c016b38:	22000015 	stw	r8,0(r4)
 c016b3c:	603fbb1e 	bne	r12,zero,c016a2c <__alt_data_end+0xfc016a2c>
 c016b40:	003fe506 	br	c016ad8 <__alt_data_end+0xfc016ad8>
 c016b44:	02400204 	movi	r9,8
 c016b48:	49d3c83a 	sub	r9,r9,r7
 c016b4c:	4a53883a 	add	r9,r9,r9
 c016b50:	2a000017 	ldw	r8,0(r5)
 c016b54:	4a53883a 	add	r9,r9,r9
 c016b58:	02800804 	movi	r10,32
 c016b5c:	5255c83a 	sub	r10,r10,r9
 c016b60:	28c00104 	addi	r3,r5,4
 c016b64:	2805883a 	mov	r2,r5
 c016b68:	19c00017 	ldw	r7,0(r3)
 c016b6c:	10800104 	addi	r2,r2,4
 c016b70:	18c00104 	addi	r3,r3,4
 c016b74:	3a88983a 	sll	r4,r7,r10
 c016b78:	2208b03a 	or	r4,r4,r8
 c016b7c:	3a50d83a 	srl	r8,r7,r9
 c016b80:	113fff15 	stw	r4,-4(r2)
 c016b84:	1a3fff15 	stw	r8,-4(r3)
 c016b88:	137ff736 	bltu	r2,r13,c016b68 <__alt_data_end+0xfc016b68>
 c016b8c:	003faa06 	br	c016a38 <__alt_data_end+0xfc016a38>

0c016b90 <_isatty_r>:
 c016b90:	defffd04 	addi	sp,sp,-12
 c016b94:	dc000015 	stw	r16,0(sp)
 c016b98:	040300b4 	movhi	r16,3074
 c016b9c:	dc400115 	stw	r17,4(sp)
 c016ba0:	84076104 	addi	r16,r16,7556
 c016ba4:	2023883a 	mov	r17,r4
 c016ba8:	2809883a 	mov	r4,r5
 c016bac:	dfc00215 	stw	ra,8(sp)
 c016bb0:	80000015 	stw	zero,0(r16)
 c016bb4:	c01ab540 	call	c01ab54 <isatty>
 c016bb8:	00ffffc4 	movi	r3,-1
 c016bbc:	10c00526 	beq	r2,r3,c016bd4 <_isatty_r+0x44>
 c016bc0:	dfc00217 	ldw	ra,8(sp)
 c016bc4:	dc400117 	ldw	r17,4(sp)
 c016bc8:	dc000017 	ldw	r16,0(sp)
 c016bcc:	dec00304 	addi	sp,sp,12
 c016bd0:	f800283a 	ret
 c016bd4:	80c00017 	ldw	r3,0(r16)
 c016bd8:	183ff926 	beq	r3,zero,c016bc0 <__alt_data_end+0xfc016bc0>
 c016bdc:	88c00015 	stw	r3,0(r17)
 c016be0:	003ff706 	br	c016bc0 <__alt_data_end+0xfc016bc0>

0c016be4 <_lseek_r>:
 c016be4:	defffd04 	addi	sp,sp,-12
 c016be8:	2805883a 	mov	r2,r5
 c016bec:	dc000015 	stw	r16,0(sp)
 c016bf0:	040300b4 	movhi	r16,3074
 c016bf4:	dc400115 	stw	r17,4(sp)
 c016bf8:	300b883a 	mov	r5,r6
 c016bfc:	84076104 	addi	r16,r16,7556
 c016c00:	2023883a 	mov	r17,r4
 c016c04:	380d883a 	mov	r6,r7
 c016c08:	1009883a 	mov	r4,r2
 c016c0c:	dfc00215 	stw	ra,8(sp)
 c016c10:	80000015 	stw	zero,0(r16)
 c016c14:	c01ad280 	call	c01ad28 <lseek>
 c016c18:	00ffffc4 	movi	r3,-1
 c016c1c:	10c00526 	beq	r2,r3,c016c34 <_lseek_r+0x50>
 c016c20:	dfc00217 	ldw	ra,8(sp)
 c016c24:	dc400117 	ldw	r17,4(sp)
 c016c28:	dc000017 	ldw	r16,0(sp)
 c016c2c:	dec00304 	addi	sp,sp,12
 c016c30:	f800283a 	ret
 c016c34:	80c00017 	ldw	r3,0(r16)
 c016c38:	183ff926 	beq	r3,zero,c016c20 <__alt_data_end+0xfc016c20>
 c016c3c:	88c00015 	stw	r3,0(r17)
 c016c40:	003ff706 	br	c016c20 <__alt_data_end+0xfc016c20>

0c016c44 <_read_r>:
 c016c44:	defffd04 	addi	sp,sp,-12
 c016c48:	2805883a 	mov	r2,r5
 c016c4c:	dc000015 	stw	r16,0(sp)
 c016c50:	040300b4 	movhi	r16,3074
 c016c54:	dc400115 	stw	r17,4(sp)
 c016c58:	300b883a 	mov	r5,r6
 c016c5c:	84076104 	addi	r16,r16,7556
 c016c60:	2023883a 	mov	r17,r4
 c016c64:	380d883a 	mov	r6,r7
 c016c68:	1009883a 	mov	r4,r2
 c016c6c:	dfc00215 	stw	ra,8(sp)
 c016c70:	80000015 	stw	zero,0(r16)
 c016c74:	c01b16c0 	call	c01b16c <read>
 c016c78:	00ffffc4 	movi	r3,-1
 c016c7c:	10c00526 	beq	r2,r3,c016c94 <_read_r+0x50>
 c016c80:	dfc00217 	ldw	ra,8(sp)
 c016c84:	dc400117 	ldw	r17,4(sp)
 c016c88:	dc000017 	ldw	r16,0(sp)
 c016c8c:	dec00304 	addi	sp,sp,12
 c016c90:	f800283a 	ret
 c016c94:	80c00017 	ldw	r3,0(r16)
 c016c98:	183ff926 	beq	r3,zero,c016c80 <__alt_data_end+0xfc016c80>
 c016c9c:	88c00015 	stw	r3,0(r17)
 c016ca0:	003ff706 	br	c016c80 <__alt_data_end+0xfc016c80>

0c016ca4 <strncmp>:
 c016ca4:	30003126 	beq	r6,zero,c016d6c <strncmp+0xc8>
 c016ca8:	2144b03a 	or	r2,r4,r5
 c016cac:	108000cc 	andi	r2,r2,3
 c016cb0:	10001e1e 	bne	r2,zero,c016d2c <strncmp+0x88>
 c016cb4:	024000c4 	movi	r9,3
 c016cb8:	49801c2e 	bgeu	r9,r6,c016d2c <strncmp+0x88>
 c016cbc:	20800017 	ldw	r2,0(r4)
 c016cc0:	28c00017 	ldw	r3,0(r5)
 c016cc4:	10c0191e 	bne	r2,r3,c016d2c <strncmp+0x88>
 c016cc8:	31bfff04 	addi	r6,r6,-4
 c016ccc:	30002726 	beq	r6,zero,c016d6c <strncmp+0xc8>
 c016cd0:	02ffbff4 	movhi	r11,65279
 c016cd4:	5affbfc4 	addi	r11,r11,-257
 c016cd8:	0086303a 	nor	r3,zero,r2
 c016cdc:	02a02074 	movhi	r10,32897
 c016ce0:	12c5883a 	add	r2,r2,r11
 c016ce4:	52a02004 	addi	r10,r10,-32640
 c016ce8:	10c4703a 	and	r2,r2,r3
 c016cec:	1284703a 	and	r2,r2,r10
 c016cf0:	10000b26 	beq	r2,zero,c016d20 <strncmp+0x7c>
 c016cf4:	00001d06 	br	c016d6c <strncmp+0xc8>
 c016cf8:	20c00017 	ldw	r3,0(r4)
 c016cfc:	29c00017 	ldw	r7,0(r5)
 c016d00:	1ad1883a 	add	r8,r3,r11
 c016d04:	00c4303a 	nor	r2,zero,r3
 c016d08:	4084703a 	and	r2,r8,r2
 c016d0c:	1284703a 	and	r2,r2,r10
 c016d10:	19c0061e 	bne	r3,r7,c016d2c <strncmp+0x88>
 c016d14:	31bfff04 	addi	r6,r6,-4
 c016d18:	30001426 	beq	r6,zero,c016d6c <strncmp+0xc8>
 c016d1c:	1000131e 	bne	r2,zero,c016d6c <strncmp+0xc8>
 c016d20:	21000104 	addi	r4,r4,4
 c016d24:	29400104 	addi	r5,r5,4
 c016d28:	49bff336 	bltu	r9,r6,c016cf8 <__alt_data_end+0xfc016cf8>
 c016d2c:	28800007 	ldb	r2,0(r5)
 c016d30:	20c00007 	ldb	r3,0(r4)
 c016d34:	31bfffc4 	addi	r6,r6,-1
 c016d38:	10c0081e 	bne	r2,r3,c016d5c <strncmp+0xb8>
 c016d3c:	30000b26 	beq	r6,zero,c016d6c <strncmp+0xc8>
 c016d40:	10000a26 	beq	r2,zero,c016d6c <strncmp+0xc8>
 c016d44:	21000044 	addi	r4,r4,1
 c016d48:	29400044 	addi	r5,r5,1
 c016d4c:	20800007 	ldb	r2,0(r4)
 c016d50:	28c00007 	ldb	r3,0(r5)
 c016d54:	31bfffc4 	addi	r6,r6,-1
 c016d58:	10fff826 	beq	r2,r3,c016d3c <__alt_data_end+0xfc016d3c>
 c016d5c:	20800003 	ldbu	r2,0(r4)
 c016d60:	28c00003 	ldbu	r3,0(r5)
 c016d64:	10c5c83a 	sub	r2,r2,r3
 c016d68:	f800283a 	ret
 c016d6c:	0005883a 	mov	r2,zero
 c016d70:	f800283a 	ret

0c016d74 <_wcrtomb_r>:
 c016d74:	defff604 	addi	sp,sp,-40
 c016d78:	008300b4 	movhi	r2,3074
 c016d7c:	dc800815 	stw	r18,32(sp)
 c016d80:	dc400715 	stw	r17,28(sp)
 c016d84:	dc000615 	stw	r16,24(sp)
 c016d88:	10bfc604 	addi	r2,r2,-232
 c016d8c:	dfc00915 	stw	ra,36(sp)
 c016d90:	2021883a 	mov	r16,r4
 c016d94:	3823883a 	mov	r17,r7
 c016d98:	14800017 	ldw	r18,0(r2)
 c016d9c:	28001426 	beq	r5,zero,c016df0 <_wcrtomb_r+0x7c>
 c016da0:	d9400415 	stw	r5,16(sp)
 c016da4:	d9800515 	stw	r6,20(sp)
 c016da8:	c00e2580 	call	c00e258 <__locale_charset>
 c016dac:	d9800517 	ldw	r6,20(sp)
 c016db0:	d9400417 	ldw	r5,16(sp)
 c016db4:	100f883a 	mov	r7,r2
 c016db8:	dc400015 	stw	r17,0(sp)
 c016dbc:	8009883a 	mov	r4,r16
 c016dc0:	903ee83a 	callr	r18
 c016dc4:	00ffffc4 	movi	r3,-1
 c016dc8:	10c0031e 	bne	r2,r3,c016dd8 <_wcrtomb_r+0x64>
 c016dcc:	88000015 	stw	zero,0(r17)
 c016dd0:	00c02284 	movi	r3,138
 c016dd4:	80c00015 	stw	r3,0(r16)
 c016dd8:	dfc00917 	ldw	ra,36(sp)
 c016ddc:	dc800817 	ldw	r18,32(sp)
 c016de0:	dc400717 	ldw	r17,28(sp)
 c016de4:	dc000617 	ldw	r16,24(sp)
 c016de8:	dec00a04 	addi	sp,sp,40
 c016dec:	f800283a 	ret
 c016df0:	c00e2580 	call	c00e258 <__locale_charset>
 c016df4:	100f883a 	mov	r7,r2
 c016df8:	dc400015 	stw	r17,0(sp)
 c016dfc:	000d883a 	mov	r6,zero
 c016e00:	d9400104 	addi	r5,sp,4
 c016e04:	8009883a 	mov	r4,r16
 c016e08:	903ee83a 	callr	r18
 c016e0c:	003fed06 	br	c016dc4 <__alt_data_end+0xfc016dc4>

0c016e10 <wcrtomb>:
 c016e10:	defff604 	addi	sp,sp,-40
 c016e14:	008300b4 	movhi	r2,3074
 c016e18:	dc800615 	stw	r18,24(sp)
 c016e1c:	dc400515 	stw	r17,20(sp)
 c016e20:	10bfc304 	addi	r2,r2,-244
 c016e24:	dfc00915 	stw	ra,36(sp)
 c016e28:	dd000815 	stw	r20,32(sp)
 c016e2c:	dcc00715 	stw	r19,28(sp)
 c016e30:	dc000415 	stw	r16,16(sp)
 c016e34:	3025883a 	mov	r18,r6
 c016e38:	14400017 	ldw	r17,0(r2)
 c016e3c:	20001926 	beq	r4,zero,c016ea4 <wcrtomb+0x94>
 c016e40:	008300b4 	movhi	r2,3074
 c016e44:	10bfc604 	addi	r2,r2,-232
 c016e48:	15000017 	ldw	r20,0(r2)
 c016e4c:	2021883a 	mov	r16,r4
 c016e50:	2827883a 	mov	r19,r5
 c016e54:	c00e2580 	call	c00e258 <__locale_charset>
 c016e58:	100f883a 	mov	r7,r2
 c016e5c:	dc800015 	stw	r18,0(sp)
 c016e60:	980d883a 	mov	r6,r19
 c016e64:	800b883a 	mov	r5,r16
 c016e68:	8809883a 	mov	r4,r17
 c016e6c:	a03ee83a 	callr	r20
 c016e70:	00ffffc4 	movi	r3,-1
 c016e74:	10c0031e 	bne	r2,r3,c016e84 <wcrtomb+0x74>
 c016e78:	90000015 	stw	zero,0(r18)
 c016e7c:	00c02284 	movi	r3,138
 c016e80:	88c00015 	stw	r3,0(r17)
 c016e84:	dfc00917 	ldw	ra,36(sp)
 c016e88:	dd000817 	ldw	r20,32(sp)
 c016e8c:	dcc00717 	ldw	r19,28(sp)
 c016e90:	dc800617 	ldw	r18,24(sp)
 c016e94:	dc400517 	ldw	r17,20(sp)
 c016e98:	dc000417 	ldw	r16,16(sp)
 c016e9c:	dec00a04 	addi	sp,sp,40
 c016ea0:	f800283a 	ret
 c016ea4:	008300b4 	movhi	r2,3074
 c016ea8:	10bfc604 	addi	r2,r2,-232
 c016eac:	14000017 	ldw	r16,0(r2)
 c016eb0:	c00e2580 	call	c00e258 <__locale_charset>
 c016eb4:	100f883a 	mov	r7,r2
 c016eb8:	dc800015 	stw	r18,0(sp)
 c016ebc:	000d883a 	mov	r6,zero
 c016ec0:	d9400104 	addi	r5,sp,4
 c016ec4:	8809883a 	mov	r4,r17
 c016ec8:	803ee83a 	callr	r16
 c016ecc:	003fe806 	br	c016e70 <__alt_data_end+0xfc016e70>

0c016ed0 <__ascii_wctomb>:
 c016ed0:	28000526 	beq	r5,zero,c016ee8 <__ascii_wctomb+0x18>
 c016ed4:	00803fc4 	movi	r2,255
 c016ed8:	11800536 	bltu	r2,r6,c016ef0 <__ascii_wctomb+0x20>
 c016edc:	29800005 	stb	r6,0(r5)
 c016ee0:	00800044 	movi	r2,1
 c016ee4:	f800283a 	ret
 c016ee8:	0005883a 	mov	r2,zero
 c016eec:	f800283a 	ret
 c016ef0:	00802284 	movi	r2,138
 c016ef4:	20800015 	stw	r2,0(r4)
 c016ef8:	00bfffc4 	movi	r2,-1
 c016efc:	f800283a 	ret

0c016f00 <_wctomb_r>:
 c016f00:	008300b4 	movhi	r2,3074
 c016f04:	defff904 	addi	sp,sp,-28
 c016f08:	10bfc604 	addi	r2,r2,-232
 c016f0c:	dfc00615 	stw	ra,24(sp)
 c016f10:	dc400515 	stw	r17,20(sp)
 c016f14:	dc000415 	stw	r16,16(sp)
 c016f18:	3823883a 	mov	r17,r7
 c016f1c:	14000017 	ldw	r16,0(r2)
 c016f20:	d9000115 	stw	r4,4(sp)
 c016f24:	d9400215 	stw	r5,8(sp)
 c016f28:	d9800315 	stw	r6,12(sp)
 c016f2c:	c00e2580 	call	c00e258 <__locale_charset>
 c016f30:	d9800317 	ldw	r6,12(sp)
 c016f34:	d9400217 	ldw	r5,8(sp)
 c016f38:	d9000117 	ldw	r4,4(sp)
 c016f3c:	100f883a 	mov	r7,r2
 c016f40:	dc400015 	stw	r17,0(sp)
 c016f44:	803ee83a 	callr	r16
 c016f48:	dfc00617 	ldw	ra,24(sp)
 c016f4c:	dc400517 	ldw	r17,20(sp)
 c016f50:	dc000417 	ldw	r16,16(sp)
 c016f54:	dec00704 	addi	sp,sp,28
 c016f58:	f800283a 	ret

0c016f5c <__muldi3>:
 c016f5c:	defff604 	addi	sp,sp,-40
 c016f60:	dd800615 	stw	r22,24(sp)
 c016f64:	dd400515 	stw	r21,20(sp)
 c016f68:	dc400115 	stw	r17,4(sp)
 c016f6c:	357fffcc 	andi	r21,r6,65535
 c016f70:	2022d43a 	srli	r17,r4,16
 c016f74:	25bfffcc 	andi	r22,r4,65535
 c016f78:	dcc00315 	stw	r19,12(sp)
 c016f7c:	dc800215 	stw	r18,8(sp)
 c016f80:	2027883a 	mov	r19,r4
 c016f84:	2825883a 	mov	r18,r5
 c016f88:	b009883a 	mov	r4,r22
 c016f8c:	a80b883a 	mov	r5,r21
 c016f90:	dfc00915 	stw	ra,36(sp)
 c016f94:	df000815 	stw	fp,32(sp)
 c016f98:	ddc00715 	stw	r23,28(sp)
 c016f9c:	3839883a 	mov	fp,r7
 c016fa0:	302ed43a 	srli	r23,r6,16
 c016fa4:	dd000415 	stw	r20,16(sp)
 c016fa8:	dc000015 	stw	r16,0(sp)
 c016fac:	3029883a 	mov	r20,r6
 c016fb0:	c00473c0 	call	c00473c <__mulsi3>
 c016fb4:	a80b883a 	mov	r5,r21
 c016fb8:	8809883a 	mov	r4,r17
 c016fbc:	1021883a 	mov	r16,r2
 c016fc0:	c00473c0 	call	c00473c <__mulsi3>
 c016fc4:	8809883a 	mov	r4,r17
 c016fc8:	b80b883a 	mov	r5,r23
 c016fcc:	102b883a 	mov	r21,r2
 c016fd0:	c00473c0 	call	c00473c <__mulsi3>
 c016fd4:	b80b883a 	mov	r5,r23
 c016fd8:	b009883a 	mov	r4,r22
 c016fdc:	1023883a 	mov	r17,r2
 c016fe0:	c00473c0 	call	c00473c <__mulsi3>
 c016fe4:	8006d43a 	srli	r3,r16,16
 c016fe8:	1545883a 	add	r2,r2,r21
 c016fec:	1885883a 	add	r2,r3,r2
 c016ff0:	1540022e 	bgeu	r2,r21,c016ffc <__muldi3+0xa0>
 c016ff4:	00c00074 	movhi	r3,1
 c016ff8:	88e3883a 	add	r17,r17,r3
 c016ffc:	1006d43a 	srli	r3,r2,16
 c017000:	1004943a 	slli	r2,r2,16
 c017004:	e00b883a 	mov	r5,fp
 c017008:	9809883a 	mov	r4,r19
 c01700c:	843fffcc 	andi	r16,r16,65535
 c017010:	1c63883a 	add	r17,r3,r17
 c017014:	1421883a 	add	r16,r2,r16
 c017018:	c00473c0 	call	c00473c <__mulsi3>
 c01701c:	900b883a 	mov	r5,r18
 c017020:	a009883a 	mov	r4,r20
 c017024:	1027883a 	mov	r19,r2
 c017028:	c00473c0 	call	c00473c <__mulsi3>
 c01702c:	9885883a 	add	r2,r19,r2
 c017030:	1447883a 	add	r3,r2,r17
 c017034:	8005883a 	mov	r2,r16
 c017038:	dfc00917 	ldw	ra,36(sp)
 c01703c:	df000817 	ldw	fp,32(sp)
 c017040:	ddc00717 	ldw	r23,28(sp)
 c017044:	dd800617 	ldw	r22,24(sp)
 c017048:	dd400517 	ldw	r21,20(sp)
 c01704c:	dd000417 	ldw	r20,16(sp)
 c017050:	dcc00317 	ldw	r19,12(sp)
 c017054:	dc800217 	ldw	r18,8(sp)
 c017058:	dc400117 	ldw	r17,4(sp)
 c01705c:	dc000017 	ldw	r16,0(sp)
 c017060:	dec00a04 	addi	sp,sp,40
 c017064:	f800283a 	ret

0c017068 <__fixunsdfsi>:
 c017068:	defffd04 	addi	sp,sp,-12
 c01706c:	000d883a 	mov	r6,zero
 c017070:	01d07834 	movhi	r7,16864
 c017074:	dc400115 	stw	r17,4(sp)
 c017078:	dc000015 	stw	r16,0(sp)
 c01707c:	dfc00215 	stw	ra,8(sp)
 c017080:	2023883a 	mov	r17,r4
 c017084:	2821883a 	mov	r16,r5
 c017088:	c01919c0 	call	c01919c <__gedf2>
 c01708c:	1000080e 	bge	r2,zero,c0170b0 <__fixunsdfsi+0x48>
 c017090:	8809883a 	mov	r4,r17
 c017094:	800b883a 	mov	r5,r16
 c017098:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c01709c:	dfc00217 	ldw	ra,8(sp)
 c0170a0:	dc400117 	ldw	r17,4(sp)
 c0170a4:	dc000017 	ldw	r16,0(sp)
 c0170a8:	dec00304 	addi	sp,sp,12
 c0170ac:	f800283a 	ret
 c0170b0:	000d883a 	mov	r6,zero
 c0170b4:	01d07834 	movhi	r7,16864
 c0170b8:	8809883a 	mov	r4,r17
 c0170bc:	800b883a 	mov	r5,r16
 c0170c0:	c019bd80 	call	c019bd8 <__subdf3>
 c0170c4:	180b883a 	mov	r5,r3
 c0170c8:	1009883a 	mov	r4,r2
 c0170cc:	c01a4d40 	call	c01a4d4 <__fixdfsi>
 c0170d0:	00e00034 	movhi	r3,32768
 c0170d4:	10c5883a 	add	r2,r2,r3
 c0170d8:	003ff006 	br	c01709c <__alt_data_end+0xfc01709c>

0c0170dc <__udivdi3>:
 c0170dc:	defff404 	addi	sp,sp,-48
 c0170e0:	dcc00515 	stw	r19,20(sp)
 c0170e4:	dc000215 	stw	r16,8(sp)
 c0170e8:	dfc00b15 	stw	ra,44(sp)
 c0170ec:	df000a15 	stw	fp,40(sp)
 c0170f0:	ddc00915 	stw	r23,36(sp)
 c0170f4:	dd800815 	stw	r22,32(sp)
 c0170f8:	dd400715 	stw	r21,28(sp)
 c0170fc:	dd000615 	stw	r20,24(sp)
 c017100:	dc800415 	stw	r18,16(sp)
 c017104:	dc400315 	stw	r17,12(sp)
 c017108:	2027883a 	mov	r19,r4
 c01710c:	2821883a 	mov	r16,r5
 c017110:	3800461e 	bne	r7,zero,c01722c <__udivdi3+0x150>
 c017114:	3023883a 	mov	r17,r6
 c017118:	2025883a 	mov	r18,r4
 c01711c:	2980572e 	bgeu	r5,r6,c01727c <__udivdi3+0x1a0>
 c017120:	00bfffd4 	movui	r2,65535
 c017124:	282d883a 	mov	r22,r5
 c017128:	1180b236 	bltu	r2,r6,c0173f4 <__udivdi3+0x318>
 c01712c:	00803fc4 	movi	r2,255
 c017130:	1185803a 	cmpltu	r2,r2,r6
 c017134:	100490fa 	slli	r2,r2,3
 c017138:	3086d83a 	srl	r3,r6,r2
 c01713c:	010300b4 	movhi	r4,3074
 c017140:	2137fd04 	addi	r4,r4,-8204
 c017144:	20c7883a 	add	r3,r4,r3
 c017148:	18c00003 	ldbu	r3,0(r3)
 c01714c:	1885883a 	add	r2,r3,r2
 c017150:	00c00804 	movi	r3,32
 c017154:	1887c83a 	sub	r3,r3,r2
 c017158:	18000526 	beq	r3,zero,c017170 <__udivdi3+0x94>
 c01715c:	80e0983a 	sll	r16,r16,r3
 c017160:	9884d83a 	srl	r2,r19,r2
 c017164:	30e2983a 	sll	r17,r6,r3
 c017168:	98e4983a 	sll	r18,r19,r3
 c01716c:	142cb03a 	or	r22,r2,r16
 c017170:	882ad43a 	srli	r21,r17,16
 c017174:	b009883a 	mov	r4,r22
 c017178:	8d3fffcc 	andi	r20,r17,65535
 c01717c:	a80b883a 	mov	r5,r21
 c017180:	c0046e40 	call	c0046e4 <__umodsi3>
 c017184:	b009883a 	mov	r4,r22
 c017188:	a80b883a 	mov	r5,r21
 c01718c:	1027883a 	mov	r19,r2
 c017190:	c0046800 	call	c004680 <__udivsi3>
 c017194:	100b883a 	mov	r5,r2
 c017198:	a009883a 	mov	r4,r20
 c01719c:	102d883a 	mov	r22,r2
 c0171a0:	c00473c0 	call	c00473c <__mulsi3>
 c0171a4:	9826943a 	slli	r19,r19,16
 c0171a8:	9006d43a 	srli	r3,r18,16
 c0171ac:	1cc6b03a 	or	r3,r3,r19
 c0171b0:	1880052e 	bgeu	r3,r2,c0171c8 <__udivdi3+0xec>
 c0171b4:	1c47883a 	add	r3,r3,r17
 c0171b8:	b13fffc4 	addi	r4,r22,-1
 c0171bc:	1c400136 	bltu	r3,r17,c0171c4 <__udivdi3+0xe8>
 c0171c0:	18814236 	bltu	r3,r2,c0176cc <__udivdi3+0x5f0>
 c0171c4:	202d883a 	mov	r22,r4
 c0171c8:	18a1c83a 	sub	r16,r3,r2
 c0171cc:	8009883a 	mov	r4,r16
 c0171d0:	a80b883a 	mov	r5,r21
 c0171d4:	c0046e40 	call	c0046e4 <__umodsi3>
 c0171d8:	1027883a 	mov	r19,r2
 c0171dc:	8009883a 	mov	r4,r16
 c0171e0:	a80b883a 	mov	r5,r21
 c0171e4:	9826943a 	slli	r19,r19,16
 c0171e8:	c0046800 	call	c004680 <__udivsi3>
 c0171ec:	100b883a 	mov	r5,r2
 c0171f0:	a009883a 	mov	r4,r20
 c0171f4:	94bfffcc 	andi	r18,r18,65535
 c0171f8:	1021883a 	mov	r16,r2
 c0171fc:	94e4b03a 	or	r18,r18,r19
 c017200:	c00473c0 	call	c00473c <__mulsi3>
 c017204:	9080052e 	bgeu	r18,r2,c01721c <__udivdi3+0x140>
 c017208:	8ca5883a 	add	r18,r17,r18
 c01720c:	80ffffc4 	addi	r3,r16,-1
 c017210:	94410c36 	bltu	r18,r17,c017644 <__udivdi3+0x568>
 c017214:	90810b2e 	bgeu	r18,r2,c017644 <__udivdi3+0x568>
 c017218:	843fff84 	addi	r16,r16,-2
 c01721c:	b004943a 	slli	r2,r22,16
 c017220:	0007883a 	mov	r3,zero
 c017224:	1404b03a 	or	r2,r2,r16
 c017228:	00005e06 	br	c0173a4 <__udivdi3+0x2c8>
 c01722c:	29c05b36 	bltu	r5,r7,c01739c <__udivdi3+0x2c0>
 c017230:	00bfffd4 	movui	r2,65535
 c017234:	11c0672e 	bgeu	r2,r7,c0173d4 <__udivdi3+0x2f8>
 c017238:	00804034 	movhi	r2,256
 c01723c:	10bfffc4 	addi	r2,r2,-1
 c017240:	11c10a36 	bltu	r2,r7,c01766c <__udivdi3+0x590>
 c017244:	00800404 	movi	r2,16
 c017248:	3886d83a 	srl	r3,r7,r2
 c01724c:	010300b4 	movhi	r4,3074
 c017250:	2137fd04 	addi	r4,r4,-8204
 c017254:	20c7883a 	add	r3,r4,r3
 c017258:	18c00003 	ldbu	r3,0(r3)
 c01725c:	05c00804 	movi	r23,32
 c017260:	1885883a 	add	r2,r3,r2
 c017264:	b8afc83a 	sub	r23,r23,r2
 c017268:	b800671e 	bne	r23,zero,c017408 <__udivdi3+0x32c>
 c01726c:	3c010536 	bltu	r7,r16,c017684 <__udivdi3+0x5a8>
 c017270:	9985403a 	cmpgeu	r2,r19,r6
 c017274:	0007883a 	mov	r3,zero
 c017278:	00004a06 	br	c0173a4 <__udivdi3+0x2c8>
 c01727c:	3000041e 	bne	r6,zero,c017290 <__udivdi3+0x1b4>
 c017280:	000b883a 	mov	r5,zero
 c017284:	01000044 	movi	r4,1
 c017288:	c0046800 	call	c004680 <__udivsi3>
 c01728c:	1023883a 	mov	r17,r2
 c017290:	00bfffd4 	movui	r2,65535
 c017294:	1440532e 	bgeu	r2,r17,c0173e4 <__udivdi3+0x308>
 c017298:	00804034 	movhi	r2,256
 c01729c:	10bfffc4 	addi	r2,r2,-1
 c0172a0:	1440f436 	bltu	r2,r17,c017674 <__udivdi3+0x598>
 c0172a4:	00800404 	movi	r2,16
 c0172a8:	8886d83a 	srl	r3,r17,r2
 c0172ac:	010300b4 	movhi	r4,3074
 c0172b0:	2137fd04 	addi	r4,r4,-8204
 c0172b4:	20c7883a 	add	r3,r4,r3
 c0172b8:	18c00003 	ldbu	r3,0(r3)
 c0172bc:	1885883a 	add	r2,r3,r2
 c0172c0:	00c00804 	movi	r3,32
 c0172c4:	1887c83a 	sub	r3,r3,r2
 c0172c8:	1800a51e 	bne	r3,zero,c017560 <__udivdi3+0x484>
 c0172cc:	882ad43a 	srli	r21,r17,16
 c0172d0:	8461c83a 	sub	r16,r16,r17
 c0172d4:	8d3fffcc 	andi	r20,r17,65535
 c0172d8:	00c00044 	movi	r3,1
 c0172dc:	a80b883a 	mov	r5,r21
 c0172e0:	8009883a 	mov	r4,r16
 c0172e4:	d8c00115 	stw	r3,4(sp)
 c0172e8:	c0046e40 	call	c0046e4 <__umodsi3>
 c0172ec:	a80b883a 	mov	r5,r21
 c0172f0:	8009883a 	mov	r4,r16
 c0172f4:	1027883a 	mov	r19,r2
 c0172f8:	c0046800 	call	c004680 <__udivsi3>
 c0172fc:	a00b883a 	mov	r5,r20
 c017300:	1009883a 	mov	r4,r2
 c017304:	102d883a 	mov	r22,r2
 c017308:	c00473c0 	call	c00473c <__mulsi3>
 c01730c:	9826943a 	slli	r19,r19,16
 c017310:	900ed43a 	srli	r7,r18,16
 c017314:	d8c00117 	ldw	r3,4(sp)
 c017318:	3cceb03a 	or	r7,r7,r19
 c01731c:	3880052e 	bgeu	r7,r2,c017334 <__udivdi3+0x258>
 c017320:	3c4f883a 	add	r7,r7,r17
 c017324:	b13fffc4 	addi	r4,r22,-1
 c017328:	3c400136 	bltu	r7,r17,c017330 <__udivdi3+0x254>
 c01732c:	3880e436 	bltu	r7,r2,c0176c0 <__udivdi3+0x5e4>
 c017330:	202d883a 	mov	r22,r4
 c017334:	38a1c83a 	sub	r16,r7,r2
 c017338:	8009883a 	mov	r4,r16
 c01733c:	a80b883a 	mov	r5,r21
 c017340:	d8c00115 	stw	r3,4(sp)
 c017344:	c0046e40 	call	c0046e4 <__umodsi3>
 c017348:	1027883a 	mov	r19,r2
 c01734c:	8009883a 	mov	r4,r16
 c017350:	a80b883a 	mov	r5,r21
 c017354:	9826943a 	slli	r19,r19,16
 c017358:	c0046800 	call	c004680 <__udivsi3>
 c01735c:	a00b883a 	mov	r5,r20
 c017360:	1009883a 	mov	r4,r2
 c017364:	94bfffcc 	andi	r18,r18,65535
 c017368:	1021883a 	mov	r16,r2
 c01736c:	94e4b03a 	or	r18,r18,r19
 c017370:	c00473c0 	call	c00473c <__mulsi3>
 c017374:	d8c00117 	ldw	r3,4(sp)
 c017378:	9080052e 	bgeu	r18,r2,c017390 <__udivdi3+0x2b4>
 c01737c:	8ca5883a 	add	r18,r17,r18
 c017380:	813fffc4 	addi	r4,r16,-1
 c017384:	9440ad36 	bltu	r18,r17,c01763c <__udivdi3+0x560>
 c017388:	9080ac2e 	bgeu	r18,r2,c01763c <__udivdi3+0x560>
 c01738c:	843fff84 	addi	r16,r16,-2
 c017390:	b004943a 	slli	r2,r22,16
 c017394:	1404b03a 	or	r2,r2,r16
 c017398:	00000206 	br	c0173a4 <__udivdi3+0x2c8>
 c01739c:	0007883a 	mov	r3,zero
 c0173a0:	0005883a 	mov	r2,zero
 c0173a4:	dfc00b17 	ldw	ra,44(sp)
 c0173a8:	df000a17 	ldw	fp,40(sp)
 c0173ac:	ddc00917 	ldw	r23,36(sp)
 c0173b0:	dd800817 	ldw	r22,32(sp)
 c0173b4:	dd400717 	ldw	r21,28(sp)
 c0173b8:	dd000617 	ldw	r20,24(sp)
 c0173bc:	dcc00517 	ldw	r19,20(sp)
 c0173c0:	dc800417 	ldw	r18,16(sp)
 c0173c4:	dc400317 	ldw	r17,12(sp)
 c0173c8:	dc000217 	ldw	r16,8(sp)
 c0173cc:	dec00c04 	addi	sp,sp,48
 c0173d0:	f800283a 	ret
 c0173d4:	00803fc4 	movi	r2,255
 c0173d8:	11c5803a 	cmpltu	r2,r2,r7
 c0173dc:	100490fa 	slli	r2,r2,3
 c0173e0:	003f9906 	br	c017248 <__alt_data_end+0xfc017248>
 c0173e4:	00803fc4 	movi	r2,255
 c0173e8:	1445803a 	cmpltu	r2,r2,r17
 c0173ec:	100490fa 	slli	r2,r2,3
 c0173f0:	003fad06 	br	c0172a8 <__alt_data_end+0xfc0172a8>
 c0173f4:	00804034 	movhi	r2,256
 c0173f8:	10bfffc4 	addi	r2,r2,-1
 c0173fc:	11809f36 	bltu	r2,r6,c01767c <__udivdi3+0x5a0>
 c017400:	00800404 	movi	r2,16
 c017404:	003f4c06 	br	c017138 <__alt_data_end+0xfc017138>
 c017408:	3dce983a 	sll	r7,r7,r23
 c01740c:	30b8d83a 	srl	fp,r6,r2
 c017410:	80a2d83a 	srl	r17,r16,r2
 c017414:	35cc983a 	sll	r6,r6,r23
 c017418:	3f38b03a 	or	fp,r7,fp
 c01741c:	e024d43a 	srli	r18,fp,16
 c017420:	9884d83a 	srl	r2,r19,r2
 c017424:	85e0983a 	sll	r16,r16,r23
 c017428:	8809883a 	mov	r4,r17
 c01742c:	900b883a 	mov	r5,r18
 c017430:	d9800015 	stw	r6,0(sp)
 c017434:	1420b03a 	or	r16,r2,r16
 c017438:	c0046e40 	call	c0046e4 <__umodsi3>
 c01743c:	900b883a 	mov	r5,r18
 c017440:	8809883a 	mov	r4,r17
 c017444:	1029883a 	mov	r20,r2
 c017448:	e5bfffcc 	andi	r22,fp,65535
 c01744c:	c0046800 	call	c004680 <__udivsi3>
 c017450:	100b883a 	mov	r5,r2
 c017454:	b009883a 	mov	r4,r22
 c017458:	102b883a 	mov	r21,r2
 c01745c:	c00473c0 	call	c00473c <__mulsi3>
 c017460:	a028943a 	slli	r20,r20,16
 c017464:	8006d43a 	srli	r3,r16,16
 c017468:	1d06b03a 	or	r3,r3,r20
 c01746c:	1880042e 	bgeu	r3,r2,c017480 <__udivdi3+0x3a4>
 c017470:	1f07883a 	add	r3,r3,fp
 c017474:	a93fffc4 	addi	r4,r21,-1
 c017478:	1f00892e 	bgeu	r3,fp,c0176a0 <__udivdi3+0x5c4>
 c01747c:	202b883a 	mov	r21,r4
 c017480:	18a3c83a 	sub	r17,r3,r2
 c017484:	8809883a 	mov	r4,r17
 c017488:	900b883a 	mov	r5,r18
 c01748c:	c0046e40 	call	c0046e4 <__umodsi3>
 c017490:	1029883a 	mov	r20,r2
 c017494:	8809883a 	mov	r4,r17
 c017498:	900b883a 	mov	r5,r18
 c01749c:	a028943a 	slli	r20,r20,16
 c0174a0:	c0046800 	call	c004680 <__udivsi3>
 c0174a4:	100b883a 	mov	r5,r2
 c0174a8:	b009883a 	mov	r4,r22
 c0174ac:	843fffcc 	andi	r16,r16,65535
 c0174b0:	1023883a 	mov	r17,r2
 c0174b4:	8520b03a 	or	r16,r16,r20
 c0174b8:	c00473c0 	call	c00473c <__mulsi3>
 c0174bc:	8080042e 	bgeu	r16,r2,c0174d0 <__udivdi3+0x3f4>
 c0174c0:	8721883a 	add	r16,r16,fp
 c0174c4:	88ffffc4 	addi	r3,r17,-1
 c0174c8:	8700712e 	bgeu	r16,fp,c017690 <__udivdi3+0x5b4>
 c0174cc:	1823883a 	mov	r17,r3
 c0174d0:	a80e943a 	slli	r7,r21,16
 c0174d4:	d8c00017 	ldw	r3,0(sp)
 c0174d8:	80a1c83a 	sub	r16,r16,r2
 c0174dc:	3c64b03a 	or	r18,r7,r17
 c0174e0:	1d3fffcc 	andi	r20,r3,65535
 c0174e4:	9022d43a 	srli	r17,r18,16
 c0174e8:	95bfffcc 	andi	r22,r18,65535
 c0174ec:	a00b883a 	mov	r5,r20
 c0174f0:	b009883a 	mov	r4,r22
 c0174f4:	182ad43a 	srli	r21,r3,16
 c0174f8:	c00473c0 	call	c00473c <__mulsi3>
 c0174fc:	a00b883a 	mov	r5,r20
 c017500:	8809883a 	mov	r4,r17
 c017504:	1039883a 	mov	fp,r2
 c017508:	c00473c0 	call	c00473c <__mulsi3>
 c01750c:	8809883a 	mov	r4,r17
 c017510:	a80b883a 	mov	r5,r21
 c017514:	1029883a 	mov	r20,r2
 c017518:	c00473c0 	call	c00473c <__mulsi3>
 c01751c:	a80b883a 	mov	r5,r21
 c017520:	b009883a 	mov	r4,r22
 c017524:	1023883a 	mov	r17,r2
 c017528:	c00473c0 	call	c00473c <__mulsi3>
 c01752c:	e006d43a 	srli	r3,fp,16
 c017530:	1505883a 	add	r2,r2,r20
 c017534:	1887883a 	add	r3,r3,r2
 c017538:	1d00022e 	bgeu	r3,r20,c017544 <__udivdi3+0x468>
 c01753c:	00800074 	movhi	r2,1
 c017540:	88a3883a 	add	r17,r17,r2
 c017544:	1804d43a 	srli	r2,r3,16
 c017548:	1463883a 	add	r17,r2,r17
 c01754c:	84404436 	bltu	r16,r17,c017660 <__udivdi3+0x584>
 c017550:	84403e26 	beq	r16,r17,c01764c <__udivdi3+0x570>
 c017554:	9005883a 	mov	r2,r18
 c017558:	0007883a 	mov	r3,zero
 c01755c:	003f9106 	br	c0173a4 <__alt_data_end+0xfc0173a4>
 c017560:	88e2983a 	sll	r17,r17,r3
 c017564:	80aed83a 	srl	r23,r16,r2
 c017568:	80e0983a 	sll	r16,r16,r3
 c01756c:	882ad43a 	srli	r21,r17,16
 c017570:	9884d83a 	srl	r2,r19,r2
 c017574:	b809883a 	mov	r4,r23
 c017578:	a80b883a 	mov	r5,r21
 c01757c:	98e4983a 	sll	r18,r19,r3
 c017580:	142cb03a 	or	r22,r2,r16
 c017584:	c0046e40 	call	c0046e4 <__umodsi3>
 c017588:	b809883a 	mov	r4,r23
 c01758c:	a80b883a 	mov	r5,r21
 c017590:	1027883a 	mov	r19,r2
 c017594:	8d3fffcc 	andi	r20,r17,65535
 c017598:	c0046800 	call	c004680 <__udivsi3>
 c01759c:	a009883a 	mov	r4,r20
 c0175a0:	100b883a 	mov	r5,r2
 c0175a4:	102f883a 	mov	r23,r2
 c0175a8:	c00473c0 	call	c00473c <__mulsi3>
 c0175ac:	9826943a 	slli	r19,r19,16
 c0175b0:	b008d43a 	srli	r4,r22,16
 c0175b4:	24c8b03a 	or	r4,r4,r19
 c0175b8:	2080062e 	bgeu	r4,r2,c0175d4 <__udivdi3+0x4f8>
 c0175bc:	2449883a 	add	r4,r4,r17
 c0175c0:	b8ffffc4 	addi	r3,r23,-1
 c0175c4:	24403c36 	bltu	r4,r17,c0176b8 <__udivdi3+0x5dc>
 c0175c8:	20803b2e 	bgeu	r4,r2,c0176b8 <__udivdi3+0x5dc>
 c0175cc:	bdffff84 	addi	r23,r23,-2
 c0175d0:	2449883a 	add	r4,r4,r17
 c0175d4:	20a1c83a 	sub	r16,r4,r2
 c0175d8:	a80b883a 	mov	r5,r21
 c0175dc:	8009883a 	mov	r4,r16
 c0175e0:	c0046e40 	call	c0046e4 <__umodsi3>
 c0175e4:	a80b883a 	mov	r5,r21
 c0175e8:	8009883a 	mov	r4,r16
 c0175ec:	1027883a 	mov	r19,r2
 c0175f0:	c0046800 	call	c004680 <__udivsi3>
 c0175f4:	a009883a 	mov	r4,r20
 c0175f8:	100b883a 	mov	r5,r2
 c0175fc:	9826943a 	slli	r19,r19,16
 c017600:	1039883a 	mov	fp,r2
 c017604:	c00473c0 	call	c00473c <__mulsi3>
 c017608:	b13fffcc 	andi	r4,r22,65535
 c01760c:	24c8b03a 	or	r4,r4,r19
 c017610:	2080062e 	bgeu	r4,r2,c01762c <__udivdi3+0x550>
 c017614:	2449883a 	add	r4,r4,r17
 c017618:	e0ffffc4 	addi	r3,fp,-1
 c01761c:	24402436 	bltu	r4,r17,c0176b0 <__udivdi3+0x5d4>
 c017620:	2080232e 	bgeu	r4,r2,c0176b0 <__udivdi3+0x5d4>
 c017624:	e73fff84 	addi	fp,fp,-2
 c017628:	2449883a 	add	r4,r4,r17
 c01762c:	b82e943a 	slli	r23,r23,16
 c017630:	20a1c83a 	sub	r16,r4,r2
 c017634:	bf06b03a 	or	r3,r23,fp
 c017638:	003f2806 	br	c0172dc <__alt_data_end+0xfc0172dc>
 c01763c:	2021883a 	mov	r16,r4
 c017640:	003f5306 	br	c017390 <__alt_data_end+0xfc017390>
 c017644:	1821883a 	mov	r16,r3
 c017648:	003ef406 	br	c01721c <__alt_data_end+0xfc01721c>
 c01764c:	1806943a 	slli	r3,r3,16
 c017650:	9de6983a 	sll	r19,r19,r23
 c017654:	e73fffcc 	andi	fp,fp,65535
 c017658:	1f07883a 	add	r3,r3,fp
 c01765c:	98ffbd2e 	bgeu	r19,r3,c017554 <__alt_data_end+0xfc017554>
 c017660:	90bfffc4 	addi	r2,r18,-1
 c017664:	0007883a 	mov	r3,zero
 c017668:	003f4e06 	br	c0173a4 <__alt_data_end+0xfc0173a4>
 c01766c:	00800604 	movi	r2,24
 c017670:	003ef506 	br	c017248 <__alt_data_end+0xfc017248>
 c017674:	00800604 	movi	r2,24
 c017678:	003f0b06 	br	c0172a8 <__alt_data_end+0xfc0172a8>
 c01767c:	00800604 	movi	r2,24
 c017680:	003ead06 	br	c017138 <__alt_data_end+0xfc017138>
 c017684:	0007883a 	mov	r3,zero
 c017688:	00800044 	movi	r2,1
 c01768c:	003f4506 	br	c0173a4 <__alt_data_end+0xfc0173a4>
 c017690:	80bf8e2e 	bgeu	r16,r2,c0174cc <__alt_data_end+0xfc0174cc>
 c017694:	8c7fff84 	addi	r17,r17,-2
 c017698:	8721883a 	add	r16,r16,fp
 c01769c:	003f8c06 	br	c0174d0 <__alt_data_end+0xfc0174d0>
 c0176a0:	18bf762e 	bgeu	r3,r2,c01747c <__alt_data_end+0xfc01747c>
 c0176a4:	ad7fff84 	addi	r21,r21,-2
 c0176a8:	1f07883a 	add	r3,r3,fp
 c0176ac:	003f7406 	br	c017480 <__alt_data_end+0xfc017480>
 c0176b0:	1839883a 	mov	fp,r3
 c0176b4:	003fdd06 	br	c01762c <__alt_data_end+0xfc01762c>
 c0176b8:	182f883a 	mov	r23,r3
 c0176bc:	003fc506 	br	c0175d4 <__alt_data_end+0xfc0175d4>
 c0176c0:	b5bfff84 	addi	r22,r22,-2
 c0176c4:	3c4f883a 	add	r7,r7,r17
 c0176c8:	003f1a06 	br	c017334 <__alt_data_end+0xfc017334>
 c0176cc:	b5bfff84 	addi	r22,r22,-2
 c0176d0:	1c47883a 	add	r3,r3,r17
 c0176d4:	003ebc06 	br	c0171c8 <__alt_data_end+0xfc0171c8>

0c0176d8 <__umoddi3>:
 c0176d8:	defff304 	addi	sp,sp,-52
 c0176dc:	df000b15 	stw	fp,44(sp)
 c0176e0:	dc400415 	stw	r17,16(sp)
 c0176e4:	dc000315 	stw	r16,12(sp)
 c0176e8:	dfc00c15 	stw	ra,48(sp)
 c0176ec:	ddc00a15 	stw	r23,40(sp)
 c0176f0:	dd800915 	stw	r22,36(sp)
 c0176f4:	dd400815 	stw	r21,32(sp)
 c0176f8:	dd000715 	stw	r20,28(sp)
 c0176fc:	dcc00615 	stw	r19,24(sp)
 c017700:	dc800515 	stw	r18,20(sp)
 c017704:	2021883a 	mov	r16,r4
 c017708:	2823883a 	mov	r17,r5
 c01770c:	2839883a 	mov	fp,r5
 c017710:	3800401e 	bne	r7,zero,c017814 <__umoddi3+0x13c>
 c017714:	3027883a 	mov	r19,r6
 c017718:	2029883a 	mov	r20,r4
 c01771c:	2980552e 	bgeu	r5,r6,c017874 <__umoddi3+0x19c>
 c017720:	00bfffd4 	movui	r2,65535
 c017724:	1180a236 	bltu	r2,r6,c0179b0 <__umoddi3+0x2d8>
 c017728:	01003fc4 	movi	r4,255
 c01772c:	2189803a 	cmpltu	r4,r4,r6
 c017730:	200890fa 	slli	r4,r4,3
 c017734:	3104d83a 	srl	r2,r6,r4
 c017738:	00c300b4 	movhi	r3,3074
 c01773c:	18f7fd04 	addi	r3,r3,-8204
 c017740:	1885883a 	add	r2,r3,r2
 c017744:	10c00003 	ldbu	r3,0(r2)
 c017748:	00800804 	movi	r2,32
 c01774c:	1909883a 	add	r4,r3,r4
 c017750:	1125c83a 	sub	r18,r2,r4
 c017754:	90000526 	beq	r18,zero,c01776c <__umoddi3+0x94>
 c017758:	8ca2983a 	sll	r17,r17,r18
 c01775c:	8108d83a 	srl	r4,r16,r4
 c017760:	34a6983a 	sll	r19,r6,r18
 c017764:	84a8983a 	sll	r20,r16,r18
 c017768:	2478b03a 	or	fp,r4,r17
 c01776c:	982cd43a 	srli	r22,r19,16
 c017770:	e009883a 	mov	r4,fp
 c017774:	9dffffcc 	andi	r23,r19,65535
 c017778:	b00b883a 	mov	r5,r22
 c01777c:	c0046e40 	call	c0046e4 <__umodsi3>
 c017780:	b00b883a 	mov	r5,r22
 c017784:	e009883a 	mov	r4,fp
 c017788:	102b883a 	mov	r21,r2
 c01778c:	c0046800 	call	c004680 <__udivsi3>
 c017790:	100b883a 	mov	r5,r2
 c017794:	b809883a 	mov	r4,r23
 c017798:	c00473c0 	call	c00473c <__mulsi3>
 c01779c:	a82a943a 	slli	r21,r21,16
 c0177a0:	a006d43a 	srli	r3,r20,16
 c0177a4:	1d46b03a 	or	r3,r3,r21
 c0177a8:	1880032e 	bgeu	r3,r2,c0177b8 <__umoddi3+0xe0>
 c0177ac:	1cc7883a 	add	r3,r3,r19
 c0177b0:	1cc00136 	bltu	r3,r19,c0177b8 <__umoddi3+0xe0>
 c0177b4:	18813136 	bltu	r3,r2,c017c7c <__umoddi3+0x5a4>
 c0177b8:	18a1c83a 	sub	r16,r3,r2
 c0177bc:	b00b883a 	mov	r5,r22
 c0177c0:	8009883a 	mov	r4,r16
 c0177c4:	c0046e40 	call	c0046e4 <__umodsi3>
 c0177c8:	b00b883a 	mov	r5,r22
 c0177cc:	8009883a 	mov	r4,r16
 c0177d0:	1023883a 	mov	r17,r2
 c0177d4:	c0046800 	call	c004680 <__udivsi3>
 c0177d8:	100b883a 	mov	r5,r2
 c0177dc:	b809883a 	mov	r4,r23
 c0177e0:	8822943a 	slli	r17,r17,16
 c0177e4:	c00473c0 	call	c00473c <__mulsi3>
 c0177e8:	a0ffffcc 	andi	r3,r20,65535
 c0177ec:	1c46b03a 	or	r3,r3,r17
 c0177f0:	1880042e 	bgeu	r3,r2,c017804 <__umoddi3+0x12c>
 c0177f4:	1cc7883a 	add	r3,r3,r19
 c0177f8:	1cc00236 	bltu	r3,r19,c017804 <__umoddi3+0x12c>
 c0177fc:	1880012e 	bgeu	r3,r2,c017804 <__umoddi3+0x12c>
 c017800:	1cc7883a 	add	r3,r3,r19
 c017804:	1885c83a 	sub	r2,r3,r2
 c017808:	1484d83a 	srl	r2,r2,r18
 c01780c:	0007883a 	mov	r3,zero
 c017810:	00005306 	br	c017960 <__umoddi3+0x288>
 c017814:	29c05036 	bltu	r5,r7,c017958 <__umoddi3+0x280>
 c017818:	00bfffd4 	movui	r2,65535
 c01781c:	11c05c2e 	bgeu	r2,r7,c017990 <__umoddi3+0x2b8>
 c017820:	00804034 	movhi	r2,256
 c017824:	10bfffc4 	addi	r2,r2,-1
 c017828:	11c10636 	bltu	r2,r7,c017c44 <__umoddi3+0x56c>
 c01782c:	01000404 	movi	r4,16
 c017830:	3904d83a 	srl	r2,r7,r4
 c017834:	00c300b4 	movhi	r3,3074
 c017838:	18f7fd04 	addi	r3,r3,-8204
 c01783c:	1885883a 	add	r2,r3,r2
 c017840:	14c00003 	ldbu	r19,0(r2)
 c017844:	00c00804 	movi	r3,32
 c017848:	9927883a 	add	r19,r19,r4
 c01784c:	1ce9c83a 	sub	r20,r3,r19
 c017850:	a0005c1e 	bne	r20,zero,c0179c4 <__umoddi3+0x2ec>
 c017854:	3c400136 	bltu	r7,r17,c01785c <__umoddi3+0x184>
 c017858:	81810a36 	bltu	r16,r6,c017c84 <__umoddi3+0x5ac>
 c01785c:	8185c83a 	sub	r2,r16,r6
 c017860:	89e3c83a 	sub	r17,r17,r7
 c017864:	8089803a 	cmpltu	r4,r16,r2
 c017868:	8939c83a 	sub	fp,r17,r4
 c01786c:	e007883a 	mov	r3,fp
 c017870:	00003b06 	br	c017960 <__umoddi3+0x288>
 c017874:	3000041e 	bne	r6,zero,c017888 <__umoddi3+0x1b0>
 c017878:	000b883a 	mov	r5,zero
 c01787c:	01000044 	movi	r4,1
 c017880:	c0046800 	call	c004680 <__udivsi3>
 c017884:	1027883a 	mov	r19,r2
 c017888:	00bfffd4 	movui	r2,65535
 c01788c:	14c0442e 	bgeu	r2,r19,c0179a0 <__umoddi3+0x2c8>
 c017890:	00804034 	movhi	r2,256
 c017894:	10bfffc4 	addi	r2,r2,-1
 c017898:	14c0ec36 	bltu	r2,r19,c017c4c <__umoddi3+0x574>
 c01789c:	00800404 	movi	r2,16
 c0178a0:	9886d83a 	srl	r3,r19,r2
 c0178a4:	010300b4 	movhi	r4,3074
 c0178a8:	2137fd04 	addi	r4,r4,-8204
 c0178ac:	20c7883a 	add	r3,r4,r3
 c0178b0:	18c00003 	ldbu	r3,0(r3)
 c0178b4:	1887883a 	add	r3,r3,r2
 c0178b8:	00800804 	movi	r2,32
 c0178bc:	10e5c83a 	sub	r18,r2,r3
 c0178c0:	9000ab1e 	bne	r18,zero,c017b70 <__umoddi3+0x498>
 c0178c4:	982cd43a 	srli	r22,r19,16
 c0178c8:	8ce3c83a 	sub	r17,r17,r19
 c0178cc:	9dffffcc 	andi	r23,r19,65535
 c0178d0:	b00b883a 	mov	r5,r22
 c0178d4:	8809883a 	mov	r4,r17
 c0178d8:	c0046e40 	call	c0046e4 <__umodsi3>
 c0178dc:	b00b883a 	mov	r5,r22
 c0178e0:	8809883a 	mov	r4,r17
 c0178e4:	102b883a 	mov	r21,r2
 c0178e8:	c0046800 	call	c004680 <__udivsi3>
 c0178ec:	b80b883a 	mov	r5,r23
 c0178f0:	1009883a 	mov	r4,r2
 c0178f4:	c00473c0 	call	c00473c <__mulsi3>
 c0178f8:	a82a943a 	slli	r21,r21,16
 c0178fc:	a006d43a 	srli	r3,r20,16
 c017900:	1d46b03a 	or	r3,r3,r21
 c017904:	1880042e 	bgeu	r3,r2,c017918 <__umoddi3+0x240>
 c017908:	1cc7883a 	add	r3,r3,r19
 c01790c:	1cc00236 	bltu	r3,r19,c017918 <__umoddi3+0x240>
 c017910:	1880012e 	bgeu	r3,r2,c017918 <__umoddi3+0x240>
 c017914:	1cc7883a 	add	r3,r3,r19
 c017918:	18a1c83a 	sub	r16,r3,r2
 c01791c:	b00b883a 	mov	r5,r22
 c017920:	8009883a 	mov	r4,r16
 c017924:	c0046e40 	call	c0046e4 <__umodsi3>
 c017928:	1023883a 	mov	r17,r2
 c01792c:	b00b883a 	mov	r5,r22
 c017930:	8009883a 	mov	r4,r16
 c017934:	c0046800 	call	c004680 <__udivsi3>
 c017938:	8822943a 	slli	r17,r17,16
 c01793c:	b80b883a 	mov	r5,r23
 c017940:	1009883a 	mov	r4,r2
 c017944:	c00473c0 	call	c00473c <__mulsi3>
 c017948:	a53fffcc 	andi	r20,r20,65535
 c01794c:	a446b03a 	or	r3,r20,r17
 c017950:	18bfac2e 	bgeu	r3,r2,c017804 <__alt_data_end+0xfc017804>
 c017954:	003fa706 	br	c0177f4 <__alt_data_end+0xfc0177f4>
 c017958:	2005883a 	mov	r2,r4
 c01795c:	2807883a 	mov	r3,r5
 c017960:	dfc00c17 	ldw	ra,48(sp)
 c017964:	df000b17 	ldw	fp,44(sp)
 c017968:	ddc00a17 	ldw	r23,40(sp)
 c01796c:	dd800917 	ldw	r22,36(sp)
 c017970:	dd400817 	ldw	r21,32(sp)
 c017974:	dd000717 	ldw	r20,28(sp)
 c017978:	dcc00617 	ldw	r19,24(sp)
 c01797c:	dc800517 	ldw	r18,20(sp)
 c017980:	dc400417 	ldw	r17,16(sp)
 c017984:	dc000317 	ldw	r16,12(sp)
 c017988:	dec00d04 	addi	sp,sp,52
 c01798c:	f800283a 	ret
 c017990:	04c03fc4 	movi	r19,255
 c017994:	99c9803a 	cmpltu	r4,r19,r7
 c017998:	200890fa 	slli	r4,r4,3
 c01799c:	003fa406 	br	c017830 <__alt_data_end+0xfc017830>
 c0179a0:	00803fc4 	movi	r2,255
 c0179a4:	14c5803a 	cmpltu	r2,r2,r19
 c0179a8:	100490fa 	slli	r2,r2,3
 c0179ac:	003fbc06 	br	c0178a0 <__alt_data_end+0xfc0178a0>
 c0179b0:	00804034 	movhi	r2,256
 c0179b4:	10bfffc4 	addi	r2,r2,-1
 c0179b8:	1180a636 	bltu	r2,r6,c017c54 <__umoddi3+0x57c>
 c0179bc:	01000404 	movi	r4,16
 c0179c0:	003f5c06 	br	c017734 <__alt_data_end+0xfc017734>
 c0179c4:	3d0e983a 	sll	r7,r7,r20
 c0179c8:	34ead83a 	srl	r21,r6,r19
 c0179cc:	8cc6d83a 	srl	r3,r17,r19
 c0179d0:	8d10983a 	sll	r8,r17,r20
 c0179d4:	3d6ab03a 	or	r21,r7,r21
 c0179d8:	a82cd43a 	srli	r22,r21,16
 c0179dc:	84e2d83a 	srl	r17,r16,r19
 c0179e0:	1809883a 	mov	r4,r3
 c0179e4:	b00b883a 	mov	r5,r22
 c0179e8:	8a22b03a 	or	r17,r17,r8
 c0179ec:	3524983a 	sll	r18,r6,r20
 c0179f0:	dc400015 	stw	r17,0(sp)
 c0179f4:	d8c00115 	stw	r3,4(sp)
 c0179f8:	c0046e40 	call	c0046e4 <__umodsi3>
 c0179fc:	d8c00117 	ldw	r3,4(sp)
 c017a00:	b00b883a 	mov	r5,r22
 c017a04:	1039883a 	mov	fp,r2
 c017a08:	1809883a 	mov	r4,r3
 c017a0c:	c0046800 	call	c004680 <__udivsi3>
 c017a10:	adffffcc 	andi	r23,r21,65535
 c017a14:	100b883a 	mov	r5,r2
 c017a18:	b809883a 	mov	r4,r23
 c017a1c:	1023883a 	mov	r17,r2
 c017a20:	c00473c0 	call	c00473c <__mulsi3>
 c017a24:	d9400017 	ldw	r5,0(sp)
 c017a28:	e008943a 	slli	r4,fp,16
 c017a2c:	8520983a 	sll	r16,r16,r20
 c017a30:	2806d43a 	srli	r3,r5,16
 c017a34:	1906b03a 	or	r3,r3,r4
 c017a38:	1880042e 	bgeu	r3,r2,c017a4c <__umoddi3+0x374>
 c017a3c:	1d47883a 	add	r3,r3,r21
 c017a40:	893fffc4 	addi	r4,r17,-1
 c017a44:	1d40892e 	bgeu	r3,r21,c017c6c <__umoddi3+0x594>
 c017a48:	2023883a 	mov	r17,r4
 c017a4c:	18b9c83a 	sub	fp,r3,r2
 c017a50:	b00b883a 	mov	r5,r22
 c017a54:	e009883a 	mov	r4,fp
 c017a58:	c0046e40 	call	c0046e4 <__umodsi3>
 c017a5c:	b00b883a 	mov	r5,r22
 c017a60:	e009883a 	mov	r4,fp
 c017a64:	d8800215 	stw	r2,8(sp)
 c017a68:	c0046800 	call	c004680 <__udivsi3>
 c017a6c:	100b883a 	mov	r5,r2
 c017a70:	b809883a 	mov	r4,r23
 c017a74:	102d883a 	mov	r22,r2
 c017a78:	c00473c0 	call	c00473c <__mulsi3>
 c017a7c:	d9800217 	ldw	r6,8(sp)
 c017a80:	d8c00017 	ldw	r3,0(sp)
 c017a84:	300c943a 	slli	r6,r6,16
 c017a88:	1a3fffcc 	andi	r8,r3,65535
 c017a8c:	4190b03a 	or	r8,r8,r6
 c017a90:	4080042e 	bgeu	r8,r2,c017aa4 <__umoddi3+0x3cc>
 c017a94:	4551883a 	add	r8,r8,r21
 c017a98:	b0ffffc4 	addi	r3,r22,-1
 c017a9c:	45406f2e 	bgeu	r8,r21,c017c5c <__umoddi3+0x584>
 c017aa0:	182d883a 	mov	r22,r3
 c017aa4:	880e943a 	slli	r7,r17,16
 c017aa8:	9006d43a 	srli	r3,r18,16
 c017aac:	91bfffcc 	andi	r6,r18,65535
 c017ab0:	3dacb03a 	or	r22,r7,r22
 c017ab4:	b02ed43a 	srli	r23,r22,16
 c017ab8:	b5bfffcc 	andi	r22,r22,65535
 c017abc:	300b883a 	mov	r5,r6
 c017ac0:	b009883a 	mov	r4,r22
 c017ac4:	40a3c83a 	sub	r17,r8,r2
 c017ac8:	d8c00115 	stw	r3,4(sp)
 c017acc:	d9800215 	stw	r6,8(sp)
 c017ad0:	c00473c0 	call	c00473c <__mulsi3>
 c017ad4:	d9800217 	ldw	r6,8(sp)
 c017ad8:	b809883a 	mov	r4,r23
 c017adc:	1039883a 	mov	fp,r2
 c017ae0:	300b883a 	mov	r5,r6
 c017ae4:	c00473c0 	call	c00473c <__mulsi3>
 c017ae8:	d8c00117 	ldw	r3,4(sp)
 c017aec:	b809883a 	mov	r4,r23
 c017af0:	d8800215 	stw	r2,8(sp)
 c017af4:	180b883a 	mov	r5,r3
 c017af8:	c00473c0 	call	c00473c <__mulsi3>
 c017afc:	d8c00117 	ldw	r3,4(sp)
 c017b00:	b009883a 	mov	r4,r22
 c017b04:	102f883a 	mov	r23,r2
 c017b08:	180b883a 	mov	r5,r3
 c017b0c:	c00473c0 	call	c00473c <__mulsi3>
 c017b10:	d9800217 	ldw	r6,8(sp)
 c017b14:	e006d43a 	srli	r3,fp,16
 c017b18:	1185883a 	add	r2,r2,r6
 c017b1c:	1885883a 	add	r2,r3,r2
 c017b20:	1180022e 	bgeu	r2,r6,c017b2c <__umoddi3+0x454>
 c017b24:	00c00074 	movhi	r3,1
 c017b28:	b8ef883a 	add	r23,r23,r3
 c017b2c:	1006d43a 	srli	r3,r2,16
 c017b30:	1004943a 	slli	r2,r2,16
 c017b34:	e73fffcc 	andi	fp,fp,65535
 c017b38:	1dc7883a 	add	r3,r3,r23
 c017b3c:	1739883a 	add	fp,r2,fp
 c017b40:	88c03a36 	bltu	r17,r3,c017c2c <__umoddi3+0x554>
 c017b44:	88c05126 	beq	r17,r3,c017c8c <__umoddi3+0x5b4>
 c017b48:	88c9c83a 	sub	r4,r17,r3
 c017b4c:	e00f883a 	mov	r7,fp
 c017b50:	81cfc83a 	sub	r7,r16,r7
 c017b54:	81c7803a 	cmpltu	r3,r16,r7
 c017b58:	20c7c83a 	sub	r3,r4,r3
 c017b5c:	1cc4983a 	sll	r2,r3,r19
 c017b60:	3d0ed83a 	srl	r7,r7,r20
 c017b64:	1d06d83a 	srl	r3,r3,r20
 c017b68:	11c4b03a 	or	r2,r2,r7
 c017b6c:	003f7c06 	br	c017960 <__alt_data_end+0xfc017960>
 c017b70:	9ca6983a 	sll	r19,r19,r18
 c017b74:	88f8d83a 	srl	fp,r17,r3
 c017b78:	80c4d83a 	srl	r2,r16,r3
 c017b7c:	982cd43a 	srli	r22,r19,16
 c017b80:	8ca2983a 	sll	r17,r17,r18
 c017b84:	e009883a 	mov	r4,fp
 c017b88:	b00b883a 	mov	r5,r22
 c017b8c:	146ab03a 	or	r21,r2,r17
 c017b90:	c0046e40 	call	c0046e4 <__umodsi3>
 c017b94:	b00b883a 	mov	r5,r22
 c017b98:	e009883a 	mov	r4,fp
 c017b9c:	1029883a 	mov	r20,r2
 c017ba0:	9dffffcc 	andi	r23,r19,65535
 c017ba4:	c0046800 	call	c004680 <__udivsi3>
 c017ba8:	b809883a 	mov	r4,r23
 c017bac:	100b883a 	mov	r5,r2
 c017bb0:	c00473c0 	call	c00473c <__mulsi3>
 c017bb4:	a008943a 	slli	r4,r20,16
 c017bb8:	a806d43a 	srli	r3,r21,16
 c017bbc:	84a8983a 	sll	r20,r16,r18
 c017bc0:	1906b03a 	or	r3,r3,r4
 c017bc4:	1880042e 	bgeu	r3,r2,c017bd8 <__umoddi3+0x500>
 c017bc8:	1cc7883a 	add	r3,r3,r19
 c017bcc:	1cc00236 	bltu	r3,r19,c017bd8 <__umoddi3+0x500>
 c017bd0:	1880012e 	bgeu	r3,r2,c017bd8 <__umoddi3+0x500>
 c017bd4:	1cc7883a 	add	r3,r3,r19
 c017bd8:	18a3c83a 	sub	r17,r3,r2
 c017bdc:	b00b883a 	mov	r5,r22
 c017be0:	8809883a 	mov	r4,r17
 c017be4:	c0046e40 	call	c0046e4 <__umodsi3>
 c017be8:	b00b883a 	mov	r5,r22
 c017bec:	8809883a 	mov	r4,r17
 c017bf0:	1021883a 	mov	r16,r2
 c017bf4:	c0046800 	call	c004680 <__udivsi3>
 c017bf8:	100b883a 	mov	r5,r2
 c017bfc:	b809883a 	mov	r4,r23
 c017c00:	8020943a 	slli	r16,r16,16
 c017c04:	c00473c0 	call	c00473c <__mulsi3>
 c017c08:	a8ffffcc 	andi	r3,r21,65535
 c017c0c:	1c06b03a 	or	r3,r3,r16
 c017c10:	1880042e 	bgeu	r3,r2,c017c24 <__umoddi3+0x54c>
 c017c14:	1cc7883a 	add	r3,r3,r19
 c017c18:	1cc00236 	bltu	r3,r19,c017c24 <__umoddi3+0x54c>
 c017c1c:	1880012e 	bgeu	r3,r2,c017c24 <__umoddi3+0x54c>
 c017c20:	1cc7883a 	add	r3,r3,r19
 c017c24:	18a3c83a 	sub	r17,r3,r2
 c017c28:	003f2906 	br	c0178d0 <__alt_data_end+0xfc0178d0>
 c017c2c:	e48fc83a 	sub	r7,fp,r18
 c017c30:	1d49c83a 	sub	r4,r3,r21
 c017c34:	e1f9803a 	cmpltu	fp,fp,r7
 c017c38:	2739c83a 	sub	fp,r4,fp
 c017c3c:	8f09c83a 	sub	r4,r17,fp
 c017c40:	003fc306 	br	c017b50 <__alt_data_end+0xfc017b50>
 c017c44:	01000604 	movi	r4,24
 c017c48:	003ef906 	br	c017830 <__alt_data_end+0xfc017830>
 c017c4c:	00800604 	movi	r2,24
 c017c50:	003f1306 	br	c0178a0 <__alt_data_end+0xfc0178a0>
 c017c54:	01000604 	movi	r4,24
 c017c58:	003eb606 	br	c017734 <__alt_data_end+0xfc017734>
 c017c5c:	40bf902e 	bgeu	r8,r2,c017aa0 <__alt_data_end+0xfc017aa0>
 c017c60:	b5bfff84 	addi	r22,r22,-2
 c017c64:	4551883a 	add	r8,r8,r21
 c017c68:	003f8e06 	br	c017aa4 <__alt_data_end+0xfc017aa4>
 c017c6c:	18bf762e 	bgeu	r3,r2,c017a48 <__alt_data_end+0xfc017a48>
 c017c70:	8c7fff84 	addi	r17,r17,-2
 c017c74:	1d47883a 	add	r3,r3,r21
 c017c78:	003f7406 	br	c017a4c <__alt_data_end+0xfc017a4c>
 c017c7c:	1cc7883a 	add	r3,r3,r19
 c017c80:	003ecd06 	br	c0177b8 <__alt_data_end+0xfc0177b8>
 c017c84:	8005883a 	mov	r2,r16
 c017c88:	003ef806 	br	c01786c <__alt_data_end+0xfc01786c>
 c017c8c:	873fe736 	bltu	r16,fp,c017c2c <__alt_data_end+0xfc017c2c>
 c017c90:	e00f883a 	mov	r7,fp
 c017c94:	0009883a 	mov	r4,zero
 c017c98:	003fad06 	br	c017b50 <__alt_data_end+0xfc017b50>

0c017c9c <__eqsf2>:
 c017c9c:	2006d5fa 	srli	r3,r4,23
 c017ca0:	280cd5fa 	srli	r6,r5,23
 c017ca4:	01c02034 	movhi	r7,128
 c017ca8:	39ffffc4 	addi	r7,r7,-1
 c017cac:	18c03fcc 	andi	r3,r3,255
 c017cb0:	02003fc4 	movi	r8,255
 c017cb4:	3904703a 	and	r2,r7,r4
 c017cb8:	31803fcc 	andi	r6,r6,255
 c017cbc:	394e703a 	and	r7,r7,r5
 c017cc0:	2008d7fa 	srli	r4,r4,31
 c017cc4:	280ad7fa 	srli	r5,r5,31
 c017cc8:	1a000d26 	beq	r3,r8,c017d00 <__eqsf2+0x64>
 c017ccc:	02003fc4 	movi	r8,255
 c017cd0:	32000826 	beq	r6,r8,c017cf4 <__eqsf2+0x58>
 c017cd4:	19800226 	beq	r3,r6,c017ce0 <__eqsf2+0x44>
 c017cd8:	00800044 	movi	r2,1
 c017cdc:	f800283a 	ret
 c017ce0:	11fffd1e 	bne	r2,r7,c017cd8 <__alt_data_end+0xfc017cd8>
 c017ce4:	21400926 	beq	r4,r5,c017d0c <__eqsf2+0x70>
 c017ce8:	183ffb1e 	bne	r3,zero,c017cd8 <__alt_data_end+0xfc017cd8>
 c017cec:	1004c03a 	cmpne	r2,r2,zero
 c017cf0:	f800283a 	ret
 c017cf4:	383ff726 	beq	r7,zero,c017cd4 <__alt_data_end+0xfc017cd4>
 c017cf8:	00800044 	movi	r2,1
 c017cfc:	f800283a 	ret
 c017d00:	103ff226 	beq	r2,zero,c017ccc <__alt_data_end+0xfc017ccc>
 c017d04:	00800044 	movi	r2,1
 c017d08:	f800283a 	ret
 c017d0c:	0005883a 	mov	r2,zero
 c017d10:	f800283a 	ret

0c017d14 <__gesf2>:
 c017d14:	2004d5fa 	srli	r2,r4,23
 c017d18:	2806d5fa 	srli	r3,r5,23
 c017d1c:	01802034 	movhi	r6,128
 c017d20:	31bfffc4 	addi	r6,r6,-1
 c017d24:	10803fcc 	andi	r2,r2,255
 c017d28:	01c03fc4 	movi	r7,255
 c017d2c:	3110703a 	and	r8,r6,r4
 c017d30:	18c03fcc 	andi	r3,r3,255
 c017d34:	314c703a 	and	r6,r6,r5
 c017d38:	2008d7fa 	srli	r4,r4,31
 c017d3c:	280ad7fa 	srli	r5,r5,31
 c017d40:	11c01926 	beq	r2,r7,c017da8 <__gesf2+0x94>
 c017d44:	01c03fc4 	movi	r7,255
 c017d48:	19c00f26 	beq	r3,r7,c017d88 <__gesf2+0x74>
 c017d4c:	1000061e 	bne	r2,zero,c017d68 <__gesf2+0x54>
 c017d50:	400f003a 	cmpeq	r7,r8,zero
 c017d54:	1800071e 	bne	r3,zero,c017d74 <__gesf2+0x60>
 c017d58:	3000061e 	bne	r6,zero,c017d74 <__gesf2+0x60>
 c017d5c:	0005883a 	mov	r2,zero
 c017d60:	40000e1e 	bne	r8,zero,c017d9c <__gesf2+0x88>
 c017d64:	f800283a 	ret
 c017d68:	18000a1e 	bne	r3,zero,c017d94 <__gesf2+0x80>
 c017d6c:	30000b26 	beq	r6,zero,c017d9c <__gesf2+0x88>
 c017d70:	000f883a 	mov	r7,zero
 c017d74:	29403fcc 	andi	r5,r5,255
 c017d78:	38000726 	beq	r7,zero,c017d98 <__gesf2+0x84>
 c017d7c:	28000826 	beq	r5,zero,c017da0 <__gesf2+0x8c>
 c017d80:	00800044 	movi	r2,1
 c017d84:	f800283a 	ret
 c017d88:	303ff026 	beq	r6,zero,c017d4c <__alt_data_end+0xfc017d4c>
 c017d8c:	00bfff84 	movi	r2,-2
 c017d90:	f800283a 	ret
 c017d94:	29403fcc 	andi	r5,r5,255
 c017d98:	21400526 	beq	r4,r5,c017db0 <__gesf2+0x9c>
 c017d9c:	203ff826 	beq	r4,zero,c017d80 <__alt_data_end+0xfc017d80>
 c017da0:	00bfffc4 	movi	r2,-1
 c017da4:	f800283a 	ret
 c017da8:	403fe626 	beq	r8,zero,c017d44 <__alt_data_end+0xfc017d44>
 c017dac:	003ff706 	br	c017d8c <__alt_data_end+0xfc017d8c>
 c017db0:	18bffa16 	blt	r3,r2,c017d9c <__alt_data_end+0xfc017d9c>
 c017db4:	10c00216 	blt	r2,r3,c017dc0 <__gesf2+0xac>
 c017db8:	323ff836 	bltu	r6,r8,c017d9c <__alt_data_end+0xfc017d9c>
 c017dbc:	4180022e 	bgeu	r8,r6,c017dc8 <__gesf2+0xb4>
 c017dc0:	203fef1e 	bne	r4,zero,c017d80 <__alt_data_end+0xfc017d80>
 c017dc4:	003ff606 	br	c017da0 <__alt_data_end+0xfc017da0>
 c017dc8:	0005883a 	mov	r2,zero
 c017dcc:	f800283a 	ret

0c017dd0 <__lesf2>:
 c017dd0:	2004d5fa 	srli	r2,r4,23
 c017dd4:	280cd5fa 	srli	r6,r5,23
 c017dd8:	00c02034 	movhi	r3,128
 c017ddc:	18ffffc4 	addi	r3,r3,-1
 c017de0:	10803fcc 	andi	r2,r2,255
 c017de4:	01c03fc4 	movi	r7,255
 c017de8:	1910703a 	and	r8,r3,r4
 c017dec:	31803fcc 	andi	r6,r6,255
 c017df0:	1946703a 	and	r3,r3,r5
 c017df4:	2008d7fa 	srli	r4,r4,31
 c017df8:	280ad7fa 	srli	r5,r5,31
 c017dfc:	11c01b26 	beq	r2,r7,c017e6c <__lesf2+0x9c>
 c017e00:	01c03fc4 	movi	r7,255
 c017e04:	31c01126 	beq	r6,r7,c017e4c <__lesf2+0x7c>
 c017e08:	1000071e 	bne	r2,zero,c017e28 <__lesf2+0x58>
 c017e0c:	400f003a 	cmpeq	r7,r8,zero
 c017e10:	21003fcc 	andi	r4,r4,255
 c017e14:	3000081e 	bne	r6,zero,c017e38 <__lesf2+0x68>
 c017e18:	1800071e 	bne	r3,zero,c017e38 <__lesf2+0x68>
 c017e1c:	0005883a 	mov	r2,zero
 c017e20:	40000f1e 	bne	r8,zero,c017e60 <__lesf2+0x90>
 c017e24:	f800283a 	ret
 c017e28:	21003fcc 	andi	r4,r4,255
 c017e2c:	30000a1e 	bne	r6,zero,c017e58 <__lesf2+0x88>
 c017e30:	18000b26 	beq	r3,zero,c017e60 <__lesf2+0x90>
 c017e34:	000f883a 	mov	r7,zero
 c017e38:	29403fcc 	andi	r5,r5,255
 c017e3c:	38000726 	beq	r7,zero,c017e5c <__lesf2+0x8c>
 c017e40:	28000826 	beq	r5,zero,c017e64 <__lesf2+0x94>
 c017e44:	00800044 	movi	r2,1
 c017e48:	f800283a 	ret
 c017e4c:	183fee26 	beq	r3,zero,c017e08 <__alt_data_end+0xfc017e08>
 c017e50:	00800084 	movi	r2,2
 c017e54:	f800283a 	ret
 c017e58:	29403fcc 	andi	r5,r5,255
 c017e5c:	21400626 	beq	r4,r5,c017e78 <__lesf2+0xa8>
 c017e60:	203ff826 	beq	r4,zero,c017e44 <__alt_data_end+0xfc017e44>
 c017e64:	00bfffc4 	movi	r2,-1
 c017e68:	f800283a 	ret
 c017e6c:	403fe426 	beq	r8,zero,c017e00 <__alt_data_end+0xfc017e00>
 c017e70:	00800084 	movi	r2,2
 c017e74:	f800283a 	ret
 c017e78:	30bff916 	blt	r6,r2,c017e60 <__alt_data_end+0xfc017e60>
 c017e7c:	11800216 	blt	r2,r6,c017e88 <__lesf2+0xb8>
 c017e80:	1a3ff736 	bltu	r3,r8,c017e60 <__alt_data_end+0xfc017e60>
 c017e84:	40c0022e 	bgeu	r8,r3,c017e90 <__lesf2+0xc0>
 c017e88:	203fee1e 	bne	r4,zero,c017e44 <__alt_data_end+0xfc017e44>
 c017e8c:	003ff506 	br	c017e64 <__alt_data_end+0xfc017e64>
 c017e90:	0005883a 	mov	r2,zero
 c017e94:	f800283a 	ret

0c017e98 <__adddf3>:
 c017e98:	02c00434 	movhi	r11,16
 c017e9c:	5affffc4 	addi	r11,r11,-1
 c017ea0:	2806d7fa 	srli	r3,r5,31
 c017ea4:	2ad4703a 	and	r10,r5,r11
 c017ea8:	3ad2703a 	and	r9,r7,r11
 c017eac:	3804d53a 	srli	r2,r7,20
 c017eb0:	3018d77a 	srli	r12,r6,29
 c017eb4:	280ad53a 	srli	r5,r5,20
 c017eb8:	501490fa 	slli	r10,r10,3
 c017ebc:	2010d77a 	srli	r8,r4,29
 c017ec0:	481290fa 	slli	r9,r9,3
 c017ec4:	380ed7fa 	srli	r7,r7,31
 c017ec8:	defffb04 	addi	sp,sp,-20
 c017ecc:	dc800215 	stw	r18,8(sp)
 c017ed0:	dc400115 	stw	r17,4(sp)
 c017ed4:	dc000015 	stw	r16,0(sp)
 c017ed8:	dfc00415 	stw	ra,16(sp)
 c017edc:	dcc00315 	stw	r19,12(sp)
 c017ee0:	1c803fcc 	andi	r18,r3,255
 c017ee4:	2c01ffcc 	andi	r16,r5,2047
 c017ee8:	5210b03a 	or	r8,r10,r8
 c017eec:	202290fa 	slli	r17,r4,3
 c017ef0:	1081ffcc 	andi	r2,r2,2047
 c017ef4:	4b12b03a 	or	r9,r9,r12
 c017ef8:	300c90fa 	slli	r6,r6,3
 c017efc:	91c07526 	beq	r18,r7,c0180d4 <__adddf3+0x23c>
 c017f00:	8087c83a 	sub	r3,r16,r2
 c017f04:	00c0ab0e 	bge	zero,r3,c0181b4 <__adddf3+0x31c>
 c017f08:	10002a1e 	bne	r2,zero,c017fb4 <__adddf3+0x11c>
 c017f0c:	4984b03a 	or	r2,r9,r6
 c017f10:	1000961e 	bne	r2,zero,c01816c <__adddf3+0x2d4>
 c017f14:	888001cc 	andi	r2,r17,7
 c017f18:	10000726 	beq	r2,zero,c017f38 <__adddf3+0xa0>
 c017f1c:	888003cc 	andi	r2,r17,15
 c017f20:	00c00104 	movi	r3,4
 c017f24:	10c00426 	beq	r2,r3,c017f38 <__adddf3+0xa0>
 c017f28:	88c7883a 	add	r3,r17,r3
 c017f2c:	1c63803a 	cmpltu	r17,r3,r17
 c017f30:	4451883a 	add	r8,r8,r17
 c017f34:	1823883a 	mov	r17,r3
 c017f38:	4080202c 	andhi	r2,r8,128
 c017f3c:	10005926 	beq	r2,zero,c0180a4 <__adddf3+0x20c>
 c017f40:	84000044 	addi	r16,r16,1
 c017f44:	0081ffc4 	movi	r2,2047
 c017f48:	8080ba26 	beq	r16,r2,c018234 <__adddf3+0x39c>
 c017f4c:	00bfe034 	movhi	r2,65408
 c017f50:	10bfffc4 	addi	r2,r2,-1
 c017f54:	4090703a 	and	r8,r8,r2
 c017f58:	4004977a 	slli	r2,r8,29
 c017f5c:	4010927a 	slli	r8,r8,9
 c017f60:	8822d0fa 	srli	r17,r17,3
 c017f64:	8401ffcc 	andi	r16,r16,2047
 c017f68:	4010d33a 	srli	r8,r8,12
 c017f6c:	9007883a 	mov	r3,r18
 c017f70:	1444b03a 	or	r2,r2,r17
 c017f74:	8401ffcc 	andi	r16,r16,2047
 c017f78:	8020953a 	slli	r16,r16,20
 c017f7c:	18c03fcc 	andi	r3,r3,255
 c017f80:	01000434 	movhi	r4,16
 c017f84:	213fffc4 	addi	r4,r4,-1
 c017f88:	180697fa 	slli	r3,r3,31
 c017f8c:	4110703a 	and	r8,r8,r4
 c017f90:	4410b03a 	or	r8,r8,r16
 c017f94:	40c6b03a 	or	r3,r8,r3
 c017f98:	dfc00417 	ldw	ra,16(sp)
 c017f9c:	dcc00317 	ldw	r19,12(sp)
 c017fa0:	dc800217 	ldw	r18,8(sp)
 c017fa4:	dc400117 	ldw	r17,4(sp)
 c017fa8:	dc000017 	ldw	r16,0(sp)
 c017fac:	dec00504 	addi	sp,sp,20
 c017fb0:	f800283a 	ret
 c017fb4:	0081ffc4 	movi	r2,2047
 c017fb8:	80bfd626 	beq	r16,r2,c017f14 <__alt_data_end+0xfc017f14>
 c017fbc:	4a402034 	orhi	r9,r9,128
 c017fc0:	00800e04 	movi	r2,56
 c017fc4:	10c09f16 	blt	r2,r3,c018244 <__adddf3+0x3ac>
 c017fc8:	008007c4 	movi	r2,31
 c017fcc:	10c0c216 	blt	r2,r3,c0182d8 <__adddf3+0x440>
 c017fd0:	00800804 	movi	r2,32
 c017fd4:	10c5c83a 	sub	r2,r2,r3
 c017fd8:	488a983a 	sll	r5,r9,r2
 c017fdc:	30c8d83a 	srl	r4,r6,r3
 c017fe0:	3084983a 	sll	r2,r6,r2
 c017fe4:	48c6d83a 	srl	r3,r9,r3
 c017fe8:	290cb03a 	or	r6,r5,r4
 c017fec:	1004c03a 	cmpne	r2,r2,zero
 c017ff0:	308cb03a 	or	r6,r6,r2
 c017ff4:	898dc83a 	sub	r6,r17,r6
 c017ff8:	89a3803a 	cmpltu	r17,r17,r6
 c017ffc:	40d1c83a 	sub	r8,r8,r3
 c018000:	4451c83a 	sub	r8,r8,r17
 c018004:	3023883a 	mov	r17,r6
 c018008:	4080202c 	andhi	r2,r8,128
 c01800c:	10002326 	beq	r2,zero,c01809c <__adddf3+0x204>
 c018010:	04c02034 	movhi	r19,128
 c018014:	9cffffc4 	addi	r19,r19,-1
 c018018:	44e6703a 	and	r19,r8,r19
 c01801c:	98007626 	beq	r19,zero,c0181f8 <__adddf3+0x360>
 c018020:	9809883a 	mov	r4,r19
 c018024:	c01a8800 	call	c01a880 <__clzsi2>
 c018028:	10fffe04 	addi	r3,r2,-8
 c01802c:	010007c4 	movi	r4,31
 c018030:	20c07716 	blt	r4,r3,c018210 <__adddf3+0x378>
 c018034:	00800804 	movi	r2,32
 c018038:	10c5c83a 	sub	r2,r2,r3
 c01803c:	8884d83a 	srl	r2,r17,r2
 c018040:	98d0983a 	sll	r8,r19,r3
 c018044:	88e2983a 	sll	r17,r17,r3
 c018048:	1204b03a 	or	r2,r2,r8
 c01804c:	1c007416 	blt	r3,r16,c018220 <__adddf3+0x388>
 c018050:	1c21c83a 	sub	r16,r3,r16
 c018054:	82000044 	addi	r8,r16,1
 c018058:	00c007c4 	movi	r3,31
 c01805c:	1a009116 	blt	r3,r8,c0182a4 <__adddf3+0x40c>
 c018060:	00c00804 	movi	r3,32
 c018064:	1a07c83a 	sub	r3,r3,r8
 c018068:	8a08d83a 	srl	r4,r17,r8
 c01806c:	88e2983a 	sll	r17,r17,r3
 c018070:	10c6983a 	sll	r3,r2,r3
 c018074:	1210d83a 	srl	r8,r2,r8
 c018078:	8804c03a 	cmpne	r2,r17,zero
 c01807c:	1906b03a 	or	r3,r3,r4
 c018080:	18a2b03a 	or	r17,r3,r2
 c018084:	0021883a 	mov	r16,zero
 c018088:	003fa206 	br	c017f14 <__alt_data_end+0xfc017f14>
 c01808c:	1890b03a 	or	r8,r3,r2
 c018090:	40017d26 	beq	r8,zero,c018688 <__adddf3+0x7f0>
 c018094:	1011883a 	mov	r8,r2
 c018098:	1823883a 	mov	r17,r3
 c01809c:	888001cc 	andi	r2,r17,7
 c0180a0:	103f9e1e 	bne	r2,zero,c017f1c <__alt_data_end+0xfc017f1c>
 c0180a4:	4004977a 	slli	r2,r8,29
 c0180a8:	8822d0fa 	srli	r17,r17,3
 c0180ac:	4010d0fa 	srli	r8,r8,3
 c0180b0:	9007883a 	mov	r3,r18
 c0180b4:	1444b03a 	or	r2,r2,r17
 c0180b8:	0101ffc4 	movi	r4,2047
 c0180bc:	81002426 	beq	r16,r4,c018150 <__adddf3+0x2b8>
 c0180c0:	8120703a 	and	r16,r16,r4
 c0180c4:	01000434 	movhi	r4,16
 c0180c8:	213fffc4 	addi	r4,r4,-1
 c0180cc:	4110703a 	and	r8,r8,r4
 c0180d0:	003fa806 	br	c017f74 <__alt_data_end+0xfc017f74>
 c0180d4:	8089c83a 	sub	r4,r16,r2
 c0180d8:	01005e0e 	bge	zero,r4,c018254 <__adddf3+0x3bc>
 c0180dc:	10002b26 	beq	r2,zero,c01818c <__adddf3+0x2f4>
 c0180e0:	0081ffc4 	movi	r2,2047
 c0180e4:	80bf8b26 	beq	r16,r2,c017f14 <__alt_data_end+0xfc017f14>
 c0180e8:	4a402034 	orhi	r9,r9,128
 c0180ec:	00800e04 	movi	r2,56
 c0180f0:	1100a40e 	bge	r2,r4,c018384 <__adddf3+0x4ec>
 c0180f4:	498cb03a 	or	r6,r9,r6
 c0180f8:	300ac03a 	cmpne	r5,r6,zero
 c0180fc:	0013883a 	mov	r9,zero
 c018100:	2c4b883a 	add	r5,r5,r17
 c018104:	2c63803a 	cmpltu	r17,r5,r17
 c018108:	4a11883a 	add	r8,r9,r8
 c01810c:	8a11883a 	add	r8,r17,r8
 c018110:	2823883a 	mov	r17,r5
 c018114:	4080202c 	andhi	r2,r8,128
 c018118:	103fe026 	beq	r2,zero,c01809c <__alt_data_end+0xfc01809c>
 c01811c:	84000044 	addi	r16,r16,1
 c018120:	0081ffc4 	movi	r2,2047
 c018124:	8080d226 	beq	r16,r2,c018470 <__adddf3+0x5d8>
 c018128:	00bfe034 	movhi	r2,65408
 c01812c:	10bfffc4 	addi	r2,r2,-1
 c018130:	4090703a 	and	r8,r8,r2
 c018134:	880ad07a 	srli	r5,r17,1
 c018138:	400897fa 	slli	r4,r8,31
 c01813c:	88c0004c 	andi	r3,r17,1
 c018140:	28e2b03a 	or	r17,r5,r3
 c018144:	4010d07a 	srli	r8,r8,1
 c018148:	2462b03a 	or	r17,r4,r17
 c01814c:	003f7106 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018150:	4088b03a 	or	r4,r8,r2
 c018154:	20014526 	beq	r4,zero,c01866c <__adddf3+0x7d4>
 c018158:	01000434 	movhi	r4,16
 c01815c:	42000234 	orhi	r8,r8,8
 c018160:	213fffc4 	addi	r4,r4,-1
 c018164:	4110703a 	and	r8,r8,r4
 c018168:	003f8206 	br	c017f74 <__alt_data_end+0xfc017f74>
 c01816c:	18ffffc4 	addi	r3,r3,-1
 c018170:	1800491e 	bne	r3,zero,c018298 <__adddf3+0x400>
 c018174:	898bc83a 	sub	r5,r17,r6
 c018178:	8963803a 	cmpltu	r17,r17,r5
 c01817c:	4251c83a 	sub	r8,r8,r9
 c018180:	4451c83a 	sub	r8,r8,r17
 c018184:	2823883a 	mov	r17,r5
 c018188:	003f9f06 	br	c018008 <__alt_data_end+0xfc018008>
 c01818c:	4984b03a 	or	r2,r9,r6
 c018190:	103f6026 	beq	r2,zero,c017f14 <__alt_data_end+0xfc017f14>
 c018194:	213fffc4 	addi	r4,r4,-1
 c018198:	2000931e 	bne	r4,zero,c0183e8 <__adddf3+0x550>
 c01819c:	898d883a 	add	r6,r17,r6
 c0181a0:	3463803a 	cmpltu	r17,r6,r17
 c0181a4:	4251883a 	add	r8,r8,r9
 c0181a8:	8a11883a 	add	r8,r17,r8
 c0181ac:	3023883a 	mov	r17,r6
 c0181b0:	003fd806 	br	c018114 <__alt_data_end+0xfc018114>
 c0181b4:	1800541e 	bne	r3,zero,c018308 <__adddf3+0x470>
 c0181b8:	80800044 	addi	r2,r16,1
 c0181bc:	1081ffcc 	andi	r2,r2,2047
 c0181c0:	00c00044 	movi	r3,1
 c0181c4:	1880a00e 	bge	r3,r2,c018448 <__adddf3+0x5b0>
 c0181c8:	8989c83a 	sub	r4,r17,r6
 c0181cc:	8905803a 	cmpltu	r2,r17,r4
 c0181d0:	4267c83a 	sub	r19,r8,r9
 c0181d4:	98a7c83a 	sub	r19,r19,r2
 c0181d8:	9880202c 	andhi	r2,r19,128
 c0181dc:	10006326 	beq	r2,zero,c01836c <__adddf3+0x4d4>
 c0181e0:	3463c83a 	sub	r17,r6,r17
 c0181e4:	4a07c83a 	sub	r3,r9,r8
 c0181e8:	344d803a 	cmpltu	r6,r6,r17
 c0181ec:	19a7c83a 	sub	r19,r3,r6
 c0181f0:	3825883a 	mov	r18,r7
 c0181f4:	983f8a1e 	bne	r19,zero,c018020 <__alt_data_end+0xfc018020>
 c0181f8:	8809883a 	mov	r4,r17
 c0181fc:	c01a8800 	call	c01a880 <__clzsi2>
 c018200:	10800804 	addi	r2,r2,32
 c018204:	10fffe04 	addi	r3,r2,-8
 c018208:	010007c4 	movi	r4,31
 c01820c:	20ff890e 	bge	r4,r3,c018034 <__alt_data_end+0xfc018034>
 c018210:	10bff604 	addi	r2,r2,-40
 c018214:	8884983a 	sll	r2,r17,r2
 c018218:	0023883a 	mov	r17,zero
 c01821c:	1c3f8c0e 	bge	r3,r16,c018050 <__alt_data_end+0xfc018050>
 c018220:	023fe034 	movhi	r8,65408
 c018224:	423fffc4 	addi	r8,r8,-1
 c018228:	80e1c83a 	sub	r16,r16,r3
 c01822c:	1210703a 	and	r8,r2,r8
 c018230:	003f3806 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018234:	9007883a 	mov	r3,r18
 c018238:	0011883a 	mov	r8,zero
 c01823c:	0005883a 	mov	r2,zero
 c018240:	003f4c06 	br	c017f74 <__alt_data_end+0xfc017f74>
 c018244:	498cb03a 	or	r6,r9,r6
 c018248:	300cc03a 	cmpne	r6,r6,zero
 c01824c:	0007883a 	mov	r3,zero
 c018250:	003f6806 	br	c017ff4 <__alt_data_end+0xfc017ff4>
 c018254:	20009c1e 	bne	r4,zero,c0184c8 <__adddf3+0x630>
 c018258:	80800044 	addi	r2,r16,1
 c01825c:	1141ffcc 	andi	r5,r2,2047
 c018260:	01000044 	movi	r4,1
 c018264:	2140670e 	bge	r4,r5,c018404 <__adddf3+0x56c>
 c018268:	0101ffc4 	movi	r4,2047
 c01826c:	11007f26 	beq	r2,r4,c01846c <__adddf3+0x5d4>
 c018270:	898d883a 	add	r6,r17,r6
 c018274:	4247883a 	add	r3,r8,r9
 c018278:	3451803a 	cmpltu	r8,r6,r17
 c01827c:	40d1883a 	add	r8,r8,r3
 c018280:	402297fa 	slli	r17,r8,31
 c018284:	300cd07a 	srli	r6,r6,1
 c018288:	4010d07a 	srli	r8,r8,1
 c01828c:	1021883a 	mov	r16,r2
 c018290:	89a2b03a 	or	r17,r17,r6
 c018294:	003f1f06 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018298:	0081ffc4 	movi	r2,2047
 c01829c:	80bf481e 	bne	r16,r2,c017fc0 <__alt_data_end+0xfc017fc0>
 c0182a0:	003f1c06 	br	c017f14 <__alt_data_end+0xfc017f14>
 c0182a4:	843ff844 	addi	r16,r16,-31
 c0182a8:	01000804 	movi	r4,32
 c0182ac:	1406d83a 	srl	r3,r2,r16
 c0182b0:	41005026 	beq	r8,r4,c0183f4 <__adddf3+0x55c>
 c0182b4:	01001004 	movi	r4,64
 c0182b8:	2211c83a 	sub	r8,r4,r8
 c0182bc:	1204983a 	sll	r2,r2,r8
 c0182c0:	88a2b03a 	or	r17,r17,r2
 c0182c4:	8822c03a 	cmpne	r17,r17,zero
 c0182c8:	1c62b03a 	or	r17,r3,r17
 c0182cc:	0011883a 	mov	r8,zero
 c0182d0:	0021883a 	mov	r16,zero
 c0182d4:	003f7106 	br	c01809c <__alt_data_end+0xfc01809c>
 c0182d8:	193ff804 	addi	r4,r3,-32
 c0182dc:	00800804 	movi	r2,32
 c0182e0:	4908d83a 	srl	r4,r9,r4
 c0182e4:	18804526 	beq	r3,r2,c0183fc <__adddf3+0x564>
 c0182e8:	00801004 	movi	r2,64
 c0182ec:	10c5c83a 	sub	r2,r2,r3
 c0182f0:	4886983a 	sll	r3,r9,r2
 c0182f4:	198cb03a 	or	r6,r3,r6
 c0182f8:	300cc03a 	cmpne	r6,r6,zero
 c0182fc:	218cb03a 	or	r6,r4,r6
 c018300:	0007883a 	mov	r3,zero
 c018304:	003f3b06 	br	c017ff4 <__alt_data_end+0xfc017ff4>
 c018308:	80002a26 	beq	r16,zero,c0183b4 <__adddf3+0x51c>
 c01830c:	0101ffc4 	movi	r4,2047
 c018310:	11006826 	beq	r2,r4,c0184b4 <__adddf3+0x61c>
 c018314:	00c7c83a 	sub	r3,zero,r3
 c018318:	42002034 	orhi	r8,r8,128
 c01831c:	01000e04 	movi	r4,56
 c018320:	20c07c16 	blt	r4,r3,c018514 <__adddf3+0x67c>
 c018324:	010007c4 	movi	r4,31
 c018328:	20c0da16 	blt	r4,r3,c018694 <__adddf3+0x7fc>
 c01832c:	01000804 	movi	r4,32
 c018330:	20c9c83a 	sub	r4,r4,r3
 c018334:	4114983a 	sll	r10,r8,r4
 c018338:	88cad83a 	srl	r5,r17,r3
 c01833c:	8908983a 	sll	r4,r17,r4
 c018340:	40c6d83a 	srl	r3,r8,r3
 c018344:	5162b03a 	or	r17,r10,r5
 c018348:	2008c03a 	cmpne	r4,r4,zero
 c01834c:	8922b03a 	or	r17,r17,r4
 c018350:	3463c83a 	sub	r17,r6,r17
 c018354:	48c7c83a 	sub	r3,r9,r3
 c018358:	344d803a 	cmpltu	r6,r6,r17
 c01835c:	1991c83a 	sub	r8,r3,r6
 c018360:	1021883a 	mov	r16,r2
 c018364:	3825883a 	mov	r18,r7
 c018368:	003f2706 	br	c018008 <__alt_data_end+0xfc018008>
 c01836c:	24d0b03a 	or	r8,r4,r19
 c018370:	40001b1e 	bne	r8,zero,c0183e0 <__adddf3+0x548>
 c018374:	0005883a 	mov	r2,zero
 c018378:	0007883a 	mov	r3,zero
 c01837c:	0021883a 	mov	r16,zero
 c018380:	003f4d06 	br	c0180b8 <__alt_data_end+0xfc0180b8>
 c018384:	008007c4 	movi	r2,31
 c018388:	11003c16 	blt	r2,r4,c01847c <__adddf3+0x5e4>
 c01838c:	00800804 	movi	r2,32
 c018390:	1105c83a 	sub	r2,r2,r4
 c018394:	488e983a 	sll	r7,r9,r2
 c018398:	310ad83a 	srl	r5,r6,r4
 c01839c:	3084983a 	sll	r2,r6,r2
 c0183a0:	4912d83a 	srl	r9,r9,r4
 c0183a4:	394ab03a 	or	r5,r7,r5
 c0183a8:	1004c03a 	cmpne	r2,r2,zero
 c0183ac:	288ab03a 	or	r5,r5,r2
 c0183b0:	003f5306 	br	c018100 <__alt_data_end+0xfc018100>
 c0183b4:	4448b03a 	or	r4,r8,r17
 c0183b8:	20003e26 	beq	r4,zero,c0184b4 <__adddf3+0x61c>
 c0183bc:	00c6303a 	nor	r3,zero,r3
 c0183c0:	18003a1e 	bne	r3,zero,c0184ac <__adddf3+0x614>
 c0183c4:	3463c83a 	sub	r17,r6,r17
 c0183c8:	4a07c83a 	sub	r3,r9,r8
 c0183cc:	344d803a 	cmpltu	r6,r6,r17
 c0183d0:	1991c83a 	sub	r8,r3,r6
 c0183d4:	1021883a 	mov	r16,r2
 c0183d8:	3825883a 	mov	r18,r7
 c0183dc:	003f0a06 	br	c018008 <__alt_data_end+0xfc018008>
 c0183e0:	2023883a 	mov	r17,r4
 c0183e4:	003f0d06 	br	c01801c <__alt_data_end+0xfc01801c>
 c0183e8:	0081ffc4 	movi	r2,2047
 c0183ec:	80bf3f1e 	bne	r16,r2,c0180ec <__alt_data_end+0xfc0180ec>
 c0183f0:	003ec806 	br	c017f14 <__alt_data_end+0xfc017f14>
 c0183f4:	0005883a 	mov	r2,zero
 c0183f8:	003fb106 	br	c0182c0 <__alt_data_end+0xfc0182c0>
 c0183fc:	0007883a 	mov	r3,zero
 c018400:	003fbc06 	br	c0182f4 <__alt_data_end+0xfc0182f4>
 c018404:	4444b03a 	or	r2,r8,r17
 c018408:	8000871e 	bne	r16,zero,c018628 <__adddf3+0x790>
 c01840c:	1000ba26 	beq	r2,zero,c0186f8 <__adddf3+0x860>
 c018410:	4984b03a 	or	r2,r9,r6
 c018414:	103ebf26 	beq	r2,zero,c017f14 <__alt_data_end+0xfc017f14>
 c018418:	8985883a 	add	r2,r17,r6
 c01841c:	4247883a 	add	r3,r8,r9
 c018420:	1451803a 	cmpltu	r8,r2,r17
 c018424:	40d1883a 	add	r8,r8,r3
 c018428:	40c0202c 	andhi	r3,r8,128
 c01842c:	1023883a 	mov	r17,r2
 c018430:	183f1a26 	beq	r3,zero,c01809c <__alt_data_end+0xfc01809c>
 c018434:	00bfe034 	movhi	r2,65408
 c018438:	10bfffc4 	addi	r2,r2,-1
 c01843c:	2021883a 	mov	r16,r4
 c018440:	4090703a 	and	r8,r8,r2
 c018444:	003eb306 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018448:	4444b03a 	or	r2,r8,r17
 c01844c:	8000291e 	bne	r16,zero,c0184f4 <__adddf3+0x65c>
 c018450:	10004b1e 	bne	r2,zero,c018580 <__adddf3+0x6e8>
 c018454:	4990b03a 	or	r8,r9,r6
 c018458:	40008b26 	beq	r8,zero,c018688 <__adddf3+0x7f0>
 c01845c:	4811883a 	mov	r8,r9
 c018460:	3023883a 	mov	r17,r6
 c018464:	3825883a 	mov	r18,r7
 c018468:	003eaa06 	br	c017f14 <__alt_data_end+0xfc017f14>
 c01846c:	1021883a 	mov	r16,r2
 c018470:	0011883a 	mov	r8,zero
 c018474:	0005883a 	mov	r2,zero
 c018478:	003f0f06 	br	c0180b8 <__alt_data_end+0xfc0180b8>
 c01847c:	217ff804 	addi	r5,r4,-32
 c018480:	00800804 	movi	r2,32
 c018484:	494ad83a 	srl	r5,r9,r5
 c018488:	20807d26 	beq	r4,r2,c018680 <__adddf3+0x7e8>
 c01848c:	00801004 	movi	r2,64
 c018490:	1109c83a 	sub	r4,r2,r4
 c018494:	4912983a 	sll	r9,r9,r4
 c018498:	498cb03a 	or	r6,r9,r6
 c01849c:	300cc03a 	cmpne	r6,r6,zero
 c0184a0:	298ab03a 	or	r5,r5,r6
 c0184a4:	0013883a 	mov	r9,zero
 c0184a8:	003f1506 	br	c018100 <__alt_data_end+0xfc018100>
 c0184ac:	0101ffc4 	movi	r4,2047
 c0184b0:	113f9a1e 	bne	r2,r4,c01831c <__alt_data_end+0xfc01831c>
 c0184b4:	4811883a 	mov	r8,r9
 c0184b8:	3023883a 	mov	r17,r6
 c0184bc:	1021883a 	mov	r16,r2
 c0184c0:	3825883a 	mov	r18,r7
 c0184c4:	003e9306 	br	c017f14 <__alt_data_end+0xfc017f14>
 c0184c8:	8000161e 	bne	r16,zero,c018524 <__adddf3+0x68c>
 c0184cc:	444ab03a 	or	r5,r8,r17
 c0184d0:	28005126 	beq	r5,zero,c018618 <__adddf3+0x780>
 c0184d4:	0108303a 	nor	r4,zero,r4
 c0184d8:	20004d1e 	bne	r4,zero,c018610 <__adddf3+0x778>
 c0184dc:	89a3883a 	add	r17,r17,r6
 c0184e0:	4253883a 	add	r9,r8,r9
 c0184e4:	898d803a 	cmpltu	r6,r17,r6
 c0184e8:	3251883a 	add	r8,r6,r9
 c0184ec:	1021883a 	mov	r16,r2
 c0184f0:	003f0806 	br	c018114 <__alt_data_end+0xfc018114>
 c0184f4:	1000301e 	bne	r2,zero,c0185b8 <__adddf3+0x720>
 c0184f8:	4984b03a 	or	r2,r9,r6
 c0184fc:	10007126 	beq	r2,zero,c0186c4 <__adddf3+0x82c>
 c018500:	4811883a 	mov	r8,r9
 c018504:	3023883a 	mov	r17,r6
 c018508:	3825883a 	mov	r18,r7
 c01850c:	0401ffc4 	movi	r16,2047
 c018510:	003e8006 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018514:	4462b03a 	or	r17,r8,r17
 c018518:	8822c03a 	cmpne	r17,r17,zero
 c01851c:	0007883a 	mov	r3,zero
 c018520:	003f8b06 	br	c018350 <__alt_data_end+0xfc018350>
 c018524:	0141ffc4 	movi	r5,2047
 c018528:	11403b26 	beq	r2,r5,c018618 <__adddf3+0x780>
 c01852c:	0109c83a 	sub	r4,zero,r4
 c018530:	42002034 	orhi	r8,r8,128
 c018534:	01400e04 	movi	r5,56
 c018538:	29006716 	blt	r5,r4,c0186d8 <__adddf3+0x840>
 c01853c:	014007c4 	movi	r5,31
 c018540:	29007016 	blt	r5,r4,c018704 <__adddf3+0x86c>
 c018544:	01400804 	movi	r5,32
 c018548:	290bc83a 	sub	r5,r5,r4
 c01854c:	4154983a 	sll	r10,r8,r5
 c018550:	890ed83a 	srl	r7,r17,r4
 c018554:	894a983a 	sll	r5,r17,r5
 c018558:	4108d83a 	srl	r4,r8,r4
 c01855c:	51e2b03a 	or	r17,r10,r7
 c018560:	280ac03a 	cmpne	r5,r5,zero
 c018564:	8962b03a 	or	r17,r17,r5
 c018568:	89a3883a 	add	r17,r17,r6
 c01856c:	2253883a 	add	r9,r4,r9
 c018570:	898d803a 	cmpltu	r6,r17,r6
 c018574:	3251883a 	add	r8,r6,r9
 c018578:	1021883a 	mov	r16,r2
 c01857c:	003ee506 	br	c018114 <__alt_data_end+0xfc018114>
 c018580:	4984b03a 	or	r2,r9,r6
 c018584:	103e6326 	beq	r2,zero,c017f14 <__alt_data_end+0xfc017f14>
 c018588:	8987c83a 	sub	r3,r17,r6
 c01858c:	88c9803a 	cmpltu	r4,r17,r3
 c018590:	4245c83a 	sub	r2,r8,r9
 c018594:	1105c83a 	sub	r2,r2,r4
 c018598:	1100202c 	andhi	r4,r2,128
 c01859c:	203ebb26 	beq	r4,zero,c01808c <__alt_data_end+0xfc01808c>
 c0185a0:	3463c83a 	sub	r17,r6,r17
 c0185a4:	4a07c83a 	sub	r3,r9,r8
 c0185a8:	344d803a 	cmpltu	r6,r6,r17
 c0185ac:	1991c83a 	sub	r8,r3,r6
 c0185b0:	3825883a 	mov	r18,r7
 c0185b4:	003e5706 	br	c017f14 <__alt_data_end+0xfc017f14>
 c0185b8:	4984b03a 	or	r2,r9,r6
 c0185bc:	10002e26 	beq	r2,zero,c018678 <__adddf3+0x7e0>
 c0185c0:	4004d0fa 	srli	r2,r8,3
 c0185c4:	8822d0fa 	srli	r17,r17,3
 c0185c8:	4010977a 	slli	r8,r8,29
 c0185cc:	10c0022c 	andhi	r3,r2,8
 c0185d0:	4462b03a 	or	r17,r8,r17
 c0185d4:	18000826 	beq	r3,zero,c0185f8 <__adddf3+0x760>
 c0185d8:	4808d0fa 	srli	r4,r9,3
 c0185dc:	20c0022c 	andhi	r3,r4,8
 c0185e0:	1800051e 	bne	r3,zero,c0185f8 <__adddf3+0x760>
 c0185e4:	300cd0fa 	srli	r6,r6,3
 c0185e8:	4806977a 	slli	r3,r9,29
 c0185ec:	2005883a 	mov	r2,r4
 c0185f0:	3825883a 	mov	r18,r7
 c0185f4:	19a2b03a 	or	r17,r3,r6
 c0185f8:	8810d77a 	srli	r8,r17,29
 c0185fc:	100490fa 	slli	r2,r2,3
 c018600:	882290fa 	slli	r17,r17,3
 c018604:	0401ffc4 	movi	r16,2047
 c018608:	4090b03a 	or	r8,r8,r2
 c01860c:	003e4106 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018610:	0141ffc4 	movi	r5,2047
 c018614:	117fc71e 	bne	r2,r5,c018534 <__alt_data_end+0xfc018534>
 c018618:	4811883a 	mov	r8,r9
 c01861c:	3023883a 	mov	r17,r6
 c018620:	1021883a 	mov	r16,r2
 c018624:	003e3b06 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018628:	10002f26 	beq	r2,zero,c0186e8 <__adddf3+0x850>
 c01862c:	4984b03a 	or	r2,r9,r6
 c018630:	10001126 	beq	r2,zero,c018678 <__adddf3+0x7e0>
 c018634:	4004d0fa 	srli	r2,r8,3
 c018638:	8822d0fa 	srli	r17,r17,3
 c01863c:	4010977a 	slli	r8,r8,29
 c018640:	10c0022c 	andhi	r3,r2,8
 c018644:	4462b03a 	or	r17,r8,r17
 c018648:	183feb26 	beq	r3,zero,c0185f8 <__alt_data_end+0xfc0185f8>
 c01864c:	4808d0fa 	srli	r4,r9,3
 c018650:	20c0022c 	andhi	r3,r4,8
 c018654:	183fe81e 	bne	r3,zero,c0185f8 <__alt_data_end+0xfc0185f8>
 c018658:	300cd0fa 	srli	r6,r6,3
 c01865c:	4806977a 	slli	r3,r9,29
 c018660:	2005883a 	mov	r2,r4
 c018664:	19a2b03a 	or	r17,r3,r6
 c018668:	003fe306 	br	c0185f8 <__alt_data_end+0xfc0185f8>
 c01866c:	0011883a 	mov	r8,zero
 c018670:	0005883a 	mov	r2,zero
 c018674:	003e3f06 	br	c017f74 <__alt_data_end+0xfc017f74>
 c018678:	0401ffc4 	movi	r16,2047
 c01867c:	003e2506 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018680:	0013883a 	mov	r9,zero
 c018684:	003f8406 	br	c018498 <__alt_data_end+0xfc018498>
 c018688:	0005883a 	mov	r2,zero
 c01868c:	0007883a 	mov	r3,zero
 c018690:	003e8906 	br	c0180b8 <__alt_data_end+0xfc0180b8>
 c018694:	197ff804 	addi	r5,r3,-32
 c018698:	01000804 	movi	r4,32
 c01869c:	414ad83a 	srl	r5,r8,r5
 c0186a0:	19002426 	beq	r3,r4,c018734 <__adddf3+0x89c>
 c0186a4:	01001004 	movi	r4,64
 c0186a8:	20c7c83a 	sub	r3,r4,r3
 c0186ac:	40c6983a 	sll	r3,r8,r3
 c0186b0:	1c46b03a 	or	r3,r3,r17
 c0186b4:	1806c03a 	cmpne	r3,r3,zero
 c0186b8:	28e2b03a 	or	r17,r5,r3
 c0186bc:	0007883a 	mov	r3,zero
 c0186c0:	003f2306 	br	c018350 <__alt_data_end+0xfc018350>
 c0186c4:	0007883a 	mov	r3,zero
 c0186c8:	5811883a 	mov	r8,r11
 c0186cc:	00bfffc4 	movi	r2,-1
 c0186d0:	0401ffc4 	movi	r16,2047
 c0186d4:	003e7806 	br	c0180b8 <__alt_data_end+0xfc0180b8>
 c0186d8:	4462b03a 	or	r17,r8,r17
 c0186dc:	8822c03a 	cmpne	r17,r17,zero
 c0186e0:	0009883a 	mov	r4,zero
 c0186e4:	003fa006 	br	c018568 <__alt_data_end+0xfc018568>
 c0186e8:	4811883a 	mov	r8,r9
 c0186ec:	3023883a 	mov	r17,r6
 c0186f0:	0401ffc4 	movi	r16,2047
 c0186f4:	003e0706 	br	c017f14 <__alt_data_end+0xfc017f14>
 c0186f8:	4811883a 	mov	r8,r9
 c0186fc:	3023883a 	mov	r17,r6
 c018700:	003e0406 	br	c017f14 <__alt_data_end+0xfc017f14>
 c018704:	21fff804 	addi	r7,r4,-32
 c018708:	01400804 	movi	r5,32
 c01870c:	41ced83a 	srl	r7,r8,r7
 c018710:	21400a26 	beq	r4,r5,c01873c <__adddf3+0x8a4>
 c018714:	01401004 	movi	r5,64
 c018718:	2909c83a 	sub	r4,r5,r4
 c01871c:	4108983a 	sll	r4,r8,r4
 c018720:	2448b03a 	or	r4,r4,r17
 c018724:	2008c03a 	cmpne	r4,r4,zero
 c018728:	3922b03a 	or	r17,r7,r4
 c01872c:	0009883a 	mov	r4,zero
 c018730:	003f8d06 	br	c018568 <__alt_data_end+0xfc018568>
 c018734:	0007883a 	mov	r3,zero
 c018738:	003fdd06 	br	c0186b0 <__alt_data_end+0xfc0186b0>
 c01873c:	0009883a 	mov	r4,zero
 c018740:	003ff706 	br	c018720 <__alt_data_end+0xfc018720>

0c018744 <__divdf3>:
 c018744:	defff004 	addi	sp,sp,-64
 c018748:	dc800815 	stw	r18,32(sp)
 c01874c:	2824d53a 	srli	r18,r5,20
 c018750:	dd800c15 	stw	r22,48(sp)
 c018754:	282cd7fa 	srli	r22,r5,31
 c018758:	dc000615 	stw	r16,24(sp)
 c01875c:	04000434 	movhi	r16,16
 c018760:	843fffc4 	addi	r16,r16,-1
 c018764:	dfc00f15 	stw	ra,60(sp)
 c018768:	df000e15 	stw	fp,56(sp)
 c01876c:	ddc00d15 	stw	r23,52(sp)
 c018770:	dd400b15 	stw	r21,44(sp)
 c018774:	dd000a15 	stw	r20,40(sp)
 c018778:	dcc00915 	stw	r19,36(sp)
 c01877c:	dc400715 	stw	r17,28(sp)
 c018780:	9481ffcc 	andi	r18,r18,2047
 c018784:	2c20703a 	and	r16,r5,r16
 c018788:	b2003fcc 	andi	r8,r22,255
 c01878c:	90006126 	beq	r18,zero,c018914 <__divdf3+0x1d0>
 c018790:	0081ffc4 	movi	r2,2047
 c018794:	202b883a 	mov	r21,r4
 c018798:	90803726 	beq	r18,r2,c018878 <__divdf3+0x134>
 c01879c:	80800434 	orhi	r2,r16,16
 c0187a0:	100490fa 	slli	r2,r2,3
 c0187a4:	2020d77a 	srli	r16,r4,29
 c0187a8:	202a90fa 	slli	r21,r4,3
 c0187ac:	94bf0044 	addi	r18,r18,-1023
 c0187b0:	80a0b03a 	or	r16,r16,r2
 c0187b4:	0013883a 	mov	r9,zero
 c0187b8:	000b883a 	mov	r5,zero
 c0187bc:	3806d53a 	srli	r3,r7,20
 c0187c0:	382ed7fa 	srli	r23,r7,31
 c0187c4:	04400434 	movhi	r17,16
 c0187c8:	8c7fffc4 	addi	r17,r17,-1
 c0187cc:	18c1ffcc 	andi	r3,r3,2047
 c0187d0:	3029883a 	mov	r20,r6
 c0187d4:	3c62703a 	and	r17,r7,r17
 c0187d8:	bf003fcc 	andi	fp,r23,255
 c0187dc:	18006e26 	beq	r3,zero,c018998 <__divdf3+0x254>
 c0187e0:	0081ffc4 	movi	r2,2047
 c0187e4:	18806626 	beq	r3,r2,c018980 <__divdf3+0x23c>
 c0187e8:	88800434 	orhi	r2,r17,16
 c0187ec:	100490fa 	slli	r2,r2,3
 c0187f0:	3022d77a 	srli	r17,r6,29
 c0187f4:	302890fa 	slli	r20,r6,3
 c0187f8:	18ff0044 	addi	r3,r3,-1023
 c0187fc:	88a2b03a 	or	r17,r17,r2
 c018800:	000f883a 	mov	r7,zero
 c018804:	b5e6f03a 	xor	r19,r22,r23
 c018808:	3a4cb03a 	or	r6,r7,r9
 c01880c:	008003c4 	movi	r2,15
 c018810:	9809883a 	mov	r4,r19
 c018814:	90c7c83a 	sub	r3,r18,r3
 c018818:	9cc03fcc 	andi	r19,r19,255
 c01881c:	11809636 	bltu	r2,r6,c018a78 <__divdf3+0x334>
 c018820:	300c90ba 	slli	r6,r6,2
 c018824:	008300b4 	movhi	r2,3074
 c018828:	10a20e04 	addi	r2,r2,-30664
 c01882c:	308d883a 	add	r6,r6,r2
 c018830:	30800017 	ldw	r2,0(r6)
 c018834:	1000683a 	jmp	r2
 c018838:	0c018a78 	rdprs	r16,at,1577
 c01883c:	0c0188b0 	cmpltui	r16,at,1570
 c018840:	0c018a68 	cmpgeui	r16,at,1577
 c018844:	0c0188a4 	muli	r16,at,1570
 c018848:	0c018a68 	cmpgeui	r16,at,1577
 c01884c:	0c018a3c 	xorhi	r16,at,1576
 c018850:	0c018a68 	cmpgeui	r16,at,1577
 c018854:	0c0188a4 	muli	r16,at,1570
 c018858:	0c0188b0 	cmpltui	r16,at,1570
 c01885c:	0c0188b0 	cmpltui	r16,at,1570
 c018860:	0c018a3c 	xorhi	r16,at,1576
 c018864:	0c0188a4 	muli	r16,at,1570
 c018868:	0c018894 	ori	r16,at,1570
 c01886c:	0c018894 	ori	r16,at,1570
 c018870:	0c018894 	ori	r16,at,1570
 c018874:	0c018e00 	call	c018e0 <__alt_mem_onchip_memory2_0+0xc018e0>
 c018878:	2404b03a 	or	r2,r4,r16
 c01887c:	10006c1e 	bne	r2,zero,c018a30 <__divdf3+0x2ec>
 c018880:	02400204 	movi	r9,8
 c018884:	0021883a 	mov	r16,zero
 c018888:	002b883a 	mov	r21,zero
 c01888c:	01400084 	movi	r5,2
 c018890:	003fca06 	br	c0187bc <__alt_data_end+0xfc0187bc>
 c018894:	8023883a 	mov	r17,r16
 c018898:	a829883a 	mov	r20,r21
 c01889c:	4039883a 	mov	fp,r8
 c0188a0:	280f883a 	mov	r7,r5
 c0188a4:	00800084 	movi	r2,2
 c0188a8:	3881601e 	bne	r7,r2,c018e2c <__divdf3+0x6e8>
 c0188ac:	e027883a 	mov	r19,fp
 c0188b0:	9900004c 	andi	r4,r19,1
 c0188b4:	0081ffc4 	movi	r2,2047
 c0188b8:	0021883a 	mov	r16,zero
 c0188bc:	002b883a 	mov	r21,zero
 c0188c0:	1004953a 	slli	r2,r2,20
 c0188c4:	20c03fcc 	andi	r3,r4,255
 c0188c8:	01400434 	movhi	r5,16
 c0188cc:	297fffc4 	addi	r5,r5,-1
 c0188d0:	180697fa 	slli	r3,r3,31
 c0188d4:	8160703a 	and	r16,r16,r5
 c0188d8:	80a0b03a 	or	r16,r16,r2
 c0188dc:	80c6b03a 	or	r3,r16,r3
 c0188e0:	a805883a 	mov	r2,r21
 c0188e4:	dfc00f17 	ldw	ra,60(sp)
 c0188e8:	df000e17 	ldw	fp,56(sp)
 c0188ec:	ddc00d17 	ldw	r23,52(sp)
 c0188f0:	dd800c17 	ldw	r22,48(sp)
 c0188f4:	dd400b17 	ldw	r21,44(sp)
 c0188f8:	dd000a17 	ldw	r20,40(sp)
 c0188fc:	dcc00917 	ldw	r19,36(sp)
 c018900:	dc800817 	ldw	r18,32(sp)
 c018904:	dc400717 	ldw	r17,28(sp)
 c018908:	dc000617 	ldw	r16,24(sp)
 c01890c:	dec01004 	addi	sp,sp,64
 c018910:	f800283a 	ret
 c018914:	2404b03a 	or	r2,r4,r16
 c018918:	2023883a 	mov	r17,r4
 c01891c:	10003f26 	beq	r2,zero,c018a1c <__divdf3+0x2d8>
 c018920:	80015e26 	beq	r16,zero,c018e9c <__divdf3+0x758>
 c018924:	8009883a 	mov	r4,r16
 c018928:	d9800215 	stw	r6,8(sp)
 c01892c:	d9c00515 	stw	r7,20(sp)
 c018930:	da000415 	stw	r8,16(sp)
 c018934:	c01a8800 	call	c01a880 <__clzsi2>
 c018938:	d9800217 	ldw	r6,8(sp)
 c01893c:	d9c00517 	ldw	r7,20(sp)
 c018940:	da000417 	ldw	r8,16(sp)
 c018944:	113ffd44 	addi	r4,r2,-11
 c018948:	00c00704 	movi	r3,28
 c01894c:	19014f16 	blt	r3,r4,c018e8c <__divdf3+0x748>
 c018950:	00c00744 	movi	r3,29
 c018954:	157ffe04 	addi	r21,r2,-8
 c018958:	1907c83a 	sub	r3,r3,r4
 c01895c:	8560983a 	sll	r16,r16,r21
 c018960:	88c6d83a 	srl	r3,r17,r3
 c018964:	8d6a983a 	sll	r21,r17,r21
 c018968:	1c20b03a 	or	r16,r3,r16
 c01896c:	1080fcc4 	addi	r2,r2,1011
 c018970:	00a5c83a 	sub	r18,zero,r2
 c018974:	0013883a 	mov	r9,zero
 c018978:	000b883a 	mov	r5,zero
 c01897c:	003f8f06 	br	c0187bc <__alt_data_end+0xfc0187bc>
 c018980:	3444b03a 	or	r2,r6,r17
 c018984:	1000231e 	bne	r2,zero,c018a14 <__divdf3+0x2d0>
 c018988:	0023883a 	mov	r17,zero
 c01898c:	0029883a 	mov	r20,zero
 c018990:	01c00084 	movi	r7,2
 c018994:	003f9b06 	br	c018804 <__alt_data_end+0xfc018804>
 c018998:	3444b03a 	or	r2,r6,r17
 c01899c:	10001926 	beq	r2,zero,c018a04 <__divdf3+0x2c0>
 c0189a0:	88014b26 	beq	r17,zero,c018ed0 <__divdf3+0x78c>
 c0189a4:	8809883a 	mov	r4,r17
 c0189a8:	d9400115 	stw	r5,4(sp)
 c0189ac:	d9800215 	stw	r6,8(sp)
 c0189b0:	da000415 	stw	r8,16(sp)
 c0189b4:	da400315 	stw	r9,12(sp)
 c0189b8:	c01a8800 	call	c01a880 <__clzsi2>
 c0189bc:	d9400117 	ldw	r5,4(sp)
 c0189c0:	d9800217 	ldw	r6,8(sp)
 c0189c4:	da000417 	ldw	r8,16(sp)
 c0189c8:	da400317 	ldw	r9,12(sp)
 c0189cc:	113ffd44 	addi	r4,r2,-11
 c0189d0:	00c00704 	movi	r3,28
 c0189d4:	19013a16 	blt	r3,r4,c018ec0 <__divdf3+0x77c>
 c0189d8:	00c00744 	movi	r3,29
 c0189dc:	153ffe04 	addi	r20,r2,-8
 c0189e0:	1907c83a 	sub	r3,r3,r4
 c0189e4:	8d22983a 	sll	r17,r17,r20
 c0189e8:	30c6d83a 	srl	r3,r6,r3
 c0189ec:	3528983a 	sll	r20,r6,r20
 c0189f0:	1c62b03a 	or	r17,r3,r17
 c0189f4:	1080fcc4 	addi	r2,r2,1011
 c0189f8:	0087c83a 	sub	r3,zero,r2
 c0189fc:	000f883a 	mov	r7,zero
 c018a00:	003f8006 	br	c018804 <__alt_data_end+0xfc018804>
 c018a04:	0023883a 	mov	r17,zero
 c018a08:	0029883a 	mov	r20,zero
 c018a0c:	01c00044 	movi	r7,1
 c018a10:	003f7c06 	br	c018804 <__alt_data_end+0xfc018804>
 c018a14:	01c000c4 	movi	r7,3
 c018a18:	003f7a06 	br	c018804 <__alt_data_end+0xfc018804>
 c018a1c:	02400104 	movi	r9,4
 c018a20:	0021883a 	mov	r16,zero
 c018a24:	002b883a 	mov	r21,zero
 c018a28:	01400044 	movi	r5,1
 c018a2c:	003f6306 	br	c0187bc <__alt_data_end+0xfc0187bc>
 c018a30:	02400304 	movi	r9,12
 c018a34:	014000c4 	movi	r5,3
 c018a38:	003f6006 	br	c0187bc <__alt_data_end+0xfc0187bc>
 c018a3c:	04000434 	movhi	r16,16
 c018a40:	0009883a 	mov	r4,zero
 c018a44:	843fffc4 	addi	r16,r16,-1
 c018a48:	057fffc4 	movi	r21,-1
 c018a4c:	0081ffc4 	movi	r2,2047
 c018a50:	003f9b06 	br	c0188c0 <__alt_data_end+0xfc0188c0>
 c018a54:	00c00044 	movi	r3,1
 c018a58:	1887c83a 	sub	r3,r3,r2
 c018a5c:	01000e04 	movi	r4,56
 c018a60:	20c1530e 	bge	r4,r3,c018fb0 <__divdf3+0x86c>
 c018a64:	9900004c 	andi	r4,r19,1
 c018a68:	0005883a 	mov	r2,zero
 c018a6c:	0021883a 	mov	r16,zero
 c018a70:	002b883a 	mov	r21,zero
 c018a74:	003f9206 	br	c0188c0 <__alt_data_end+0xfc0188c0>
 c018a78:	8c012e36 	bltu	r17,r16,c018f34 <__divdf3+0x7f0>
 c018a7c:	84412c26 	beq	r16,r17,c018f30 <__divdf3+0x7ec>
 c018a80:	a82f883a 	mov	r23,r21
 c018a84:	18ffffc4 	addi	r3,r3,-1
 c018a88:	002b883a 	mov	r21,zero
 c018a8c:	a004d63a 	srli	r2,r20,24
 c018a90:	8822923a 	slli	r17,r17,8
 c018a94:	a028923a 	slli	r20,r20,8
 c018a98:	8009883a 	mov	r4,r16
 c018a9c:	88acb03a 	or	r22,r17,r2
 c018aa0:	dd000015 	stw	r20,0(sp)
 c018aa4:	b028d43a 	srli	r20,r22,16
 c018aa8:	d8c00215 	stw	r3,8(sp)
 c018aac:	b4bfffcc 	andi	r18,r22,65535
 c018ab0:	a00b883a 	mov	r5,r20
 c018ab4:	c0046800 	call	c004680 <__udivsi3>
 c018ab8:	100b883a 	mov	r5,r2
 c018abc:	9009883a 	mov	r4,r18
 c018ac0:	1023883a 	mov	r17,r2
 c018ac4:	c00473c0 	call	c00473c <__mulsi3>
 c018ac8:	8009883a 	mov	r4,r16
 c018acc:	a00b883a 	mov	r5,r20
 c018ad0:	1039883a 	mov	fp,r2
 c018ad4:	c0046e40 	call	c0046e4 <__umodsi3>
 c018ad8:	1004943a 	slli	r2,r2,16
 c018adc:	b808d43a 	srli	r4,r23,16
 c018ae0:	d8c00217 	ldw	r3,8(sp)
 c018ae4:	2084b03a 	or	r2,r4,r2
 c018ae8:	1700062e 	bgeu	r2,fp,c018b04 <__divdf3+0x3c0>
 c018aec:	1585883a 	add	r2,r2,r22
 c018af0:	893fffc4 	addi	r4,r17,-1
 c018af4:	15811d36 	bltu	r2,r22,c018f6c <__divdf3+0x828>
 c018af8:	17011c2e 	bgeu	r2,fp,c018f6c <__divdf3+0x828>
 c018afc:	8c7fff84 	addi	r17,r17,-2
 c018b00:	1585883a 	add	r2,r2,r22
 c018b04:	1739c83a 	sub	fp,r2,fp
 c018b08:	a00b883a 	mov	r5,r20
 c018b0c:	e009883a 	mov	r4,fp
 c018b10:	d8c00215 	stw	r3,8(sp)
 c018b14:	c0046800 	call	c004680 <__udivsi3>
 c018b18:	100b883a 	mov	r5,r2
 c018b1c:	9009883a 	mov	r4,r18
 c018b20:	1021883a 	mov	r16,r2
 c018b24:	c00473c0 	call	c00473c <__mulsi3>
 c018b28:	a00b883a 	mov	r5,r20
 c018b2c:	e009883a 	mov	r4,fp
 c018b30:	d8800415 	stw	r2,16(sp)
 c018b34:	c0046e40 	call	c0046e4 <__umodsi3>
 c018b38:	1004943a 	slli	r2,r2,16
 c018b3c:	da000417 	ldw	r8,16(sp)
 c018b40:	bdffffcc 	andi	r23,r23,65535
 c018b44:	b884b03a 	or	r2,r23,r2
 c018b48:	d8c00217 	ldw	r3,8(sp)
 c018b4c:	1200062e 	bgeu	r2,r8,c018b68 <__divdf3+0x424>
 c018b50:	1585883a 	add	r2,r2,r22
 c018b54:	813fffc4 	addi	r4,r16,-1
 c018b58:	15810236 	bltu	r2,r22,c018f64 <__divdf3+0x820>
 c018b5c:	1201012e 	bgeu	r2,r8,c018f64 <__divdf3+0x820>
 c018b60:	843fff84 	addi	r16,r16,-2
 c018b64:	1585883a 	add	r2,r2,r22
 c018b68:	8822943a 	slli	r17,r17,16
 c018b6c:	d9800017 	ldw	r6,0(sp)
 c018b70:	1211c83a 	sub	r8,r2,r8
 c018b74:	8c22b03a 	or	r17,r17,r16
 c018b78:	373fffcc 	andi	fp,r6,65535
 c018b7c:	8abfffcc 	andi	r10,r17,65535
 c018b80:	8820d43a 	srli	r16,r17,16
 c018b84:	5009883a 	mov	r4,r10
 c018b88:	e00b883a 	mov	r5,fp
 c018b8c:	302ed43a 	srli	r23,r6,16
 c018b90:	d8c00215 	stw	r3,8(sp)
 c018b94:	da000415 	stw	r8,16(sp)
 c018b98:	da800115 	stw	r10,4(sp)
 c018b9c:	c00473c0 	call	c00473c <__mulsi3>
 c018ba0:	800b883a 	mov	r5,r16
 c018ba4:	e009883a 	mov	r4,fp
 c018ba8:	d8800515 	stw	r2,20(sp)
 c018bac:	c00473c0 	call	c00473c <__mulsi3>
 c018bb0:	8009883a 	mov	r4,r16
 c018bb4:	b80b883a 	mov	r5,r23
 c018bb8:	d8800315 	stw	r2,12(sp)
 c018bbc:	c00473c0 	call	c00473c <__mulsi3>
 c018bc0:	da800117 	ldw	r10,4(sp)
 c018bc4:	b80b883a 	mov	r5,r23
 c018bc8:	1021883a 	mov	r16,r2
 c018bcc:	5009883a 	mov	r4,r10
 c018bd0:	c00473c0 	call	c00473c <__mulsi3>
 c018bd4:	d9c00517 	ldw	r7,20(sp)
 c018bd8:	da400317 	ldw	r9,12(sp)
 c018bdc:	d8c00217 	ldw	r3,8(sp)
 c018be0:	3808d43a 	srli	r4,r7,16
 c018be4:	1245883a 	add	r2,r2,r9
 c018be8:	da000417 	ldw	r8,16(sp)
 c018bec:	2085883a 	add	r2,r4,r2
 c018bf0:	1240022e 	bgeu	r2,r9,c018bfc <__divdf3+0x4b8>
 c018bf4:	01000074 	movhi	r4,1
 c018bf8:	8121883a 	add	r16,r16,r4
 c018bfc:	1008d43a 	srli	r4,r2,16
 c018c00:	1004943a 	slli	r2,r2,16
 c018c04:	39ffffcc 	andi	r7,r7,65535
 c018c08:	2409883a 	add	r4,r4,r16
 c018c0c:	11c5883a 	add	r2,r2,r7
 c018c10:	4100bb36 	bltu	r8,r4,c018f00 <__divdf3+0x7bc>
 c018c14:	4100d726 	beq	r8,r4,c018f74 <__divdf3+0x830>
 c018c18:	4109c83a 	sub	r4,r8,r4
 c018c1c:	a8a1c83a 	sub	r16,r21,r2
 c018c20:	ac2b803a 	cmpltu	r21,r21,r16
 c018c24:	256bc83a 	sub	r21,r4,r21
 c018c28:	b540d926 	beq	r22,r21,c018f90 <__divdf3+0x84c>
 c018c2c:	a00b883a 	mov	r5,r20
 c018c30:	a809883a 	mov	r4,r21
 c018c34:	d8c00215 	stw	r3,8(sp)
 c018c38:	c0046800 	call	c004680 <__udivsi3>
 c018c3c:	100b883a 	mov	r5,r2
 c018c40:	9009883a 	mov	r4,r18
 c018c44:	d8800515 	stw	r2,20(sp)
 c018c48:	c00473c0 	call	c00473c <__mulsi3>
 c018c4c:	a809883a 	mov	r4,r21
 c018c50:	a00b883a 	mov	r5,r20
 c018c54:	d8800415 	stw	r2,16(sp)
 c018c58:	c0046e40 	call	c0046e4 <__umodsi3>
 c018c5c:	1004943a 	slli	r2,r2,16
 c018c60:	8008d43a 	srli	r4,r16,16
 c018c64:	da000417 	ldw	r8,16(sp)
 c018c68:	d8c00217 	ldw	r3,8(sp)
 c018c6c:	2084b03a 	or	r2,r4,r2
 c018c70:	d9c00517 	ldw	r7,20(sp)
 c018c74:	1200062e 	bgeu	r2,r8,c018c90 <__divdf3+0x54c>
 c018c78:	1585883a 	add	r2,r2,r22
 c018c7c:	393fffc4 	addi	r4,r7,-1
 c018c80:	1580c536 	bltu	r2,r22,c018f98 <__divdf3+0x854>
 c018c84:	1200c42e 	bgeu	r2,r8,c018f98 <__divdf3+0x854>
 c018c88:	39ffff84 	addi	r7,r7,-2
 c018c8c:	1585883a 	add	r2,r2,r22
 c018c90:	122bc83a 	sub	r21,r2,r8
 c018c94:	a00b883a 	mov	r5,r20
 c018c98:	a809883a 	mov	r4,r21
 c018c9c:	d8c00215 	stw	r3,8(sp)
 c018ca0:	d9c00515 	stw	r7,20(sp)
 c018ca4:	c0046800 	call	c004680 <__udivsi3>
 c018ca8:	9009883a 	mov	r4,r18
 c018cac:	100b883a 	mov	r5,r2
 c018cb0:	d8800415 	stw	r2,16(sp)
 c018cb4:	c00473c0 	call	c00473c <__mulsi3>
 c018cb8:	a809883a 	mov	r4,r21
 c018cbc:	a00b883a 	mov	r5,r20
 c018cc0:	1025883a 	mov	r18,r2
 c018cc4:	c0046e40 	call	c0046e4 <__umodsi3>
 c018cc8:	1004943a 	slli	r2,r2,16
 c018ccc:	813fffcc 	andi	r4,r16,65535
 c018cd0:	d8c00217 	ldw	r3,8(sp)
 c018cd4:	20a0b03a 	or	r16,r4,r2
 c018cd8:	d9c00517 	ldw	r7,20(sp)
 c018cdc:	da000417 	ldw	r8,16(sp)
 c018ce0:	8480062e 	bgeu	r16,r18,c018cfc <__divdf3+0x5b8>
 c018ce4:	85a1883a 	add	r16,r16,r22
 c018ce8:	40bfffc4 	addi	r2,r8,-1
 c018cec:	8580ac36 	bltu	r16,r22,c018fa0 <__divdf3+0x85c>
 c018cf0:	8480ab2e 	bgeu	r16,r18,c018fa0 <__divdf3+0x85c>
 c018cf4:	423fff84 	addi	r8,r8,-2
 c018cf8:	85a1883a 	add	r16,r16,r22
 c018cfc:	3804943a 	slli	r2,r7,16
 c018d00:	84a1c83a 	sub	r16,r16,r18
 c018d04:	e009883a 	mov	r4,fp
 c018d08:	1228b03a 	or	r20,r2,r8
 c018d0c:	a1ffffcc 	andi	r7,r20,65535
 c018d10:	a024d43a 	srli	r18,r20,16
 c018d14:	380b883a 	mov	r5,r7
 c018d18:	d8c00215 	stw	r3,8(sp)
 c018d1c:	d9c00515 	stw	r7,20(sp)
 c018d20:	c00473c0 	call	c00473c <__mulsi3>
 c018d24:	900b883a 	mov	r5,r18
 c018d28:	e009883a 	mov	r4,fp
 c018d2c:	102b883a 	mov	r21,r2
 c018d30:	c00473c0 	call	c00473c <__mulsi3>
 c018d34:	900b883a 	mov	r5,r18
 c018d38:	b809883a 	mov	r4,r23
 c018d3c:	1039883a 	mov	fp,r2
 c018d40:	c00473c0 	call	c00473c <__mulsi3>
 c018d44:	d9c00517 	ldw	r7,20(sp)
 c018d48:	b80b883a 	mov	r5,r23
 c018d4c:	1025883a 	mov	r18,r2
 c018d50:	3809883a 	mov	r4,r7
 c018d54:	c00473c0 	call	c00473c <__mulsi3>
 c018d58:	a808d43a 	srli	r4,r21,16
 c018d5c:	1705883a 	add	r2,r2,fp
 c018d60:	d8c00217 	ldw	r3,8(sp)
 c018d64:	2085883a 	add	r2,r4,r2
 c018d68:	1700022e 	bgeu	r2,fp,c018d74 <__divdf3+0x630>
 c018d6c:	01000074 	movhi	r4,1
 c018d70:	9125883a 	add	r18,r18,r4
 c018d74:	1008d43a 	srli	r4,r2,16
 c018d78:	1004943a 	slli	r2,r2,16
 c018d7c:	ad7fffcc 	andi	r21,r21,65535
 c018d80:	2489883a 	add	r4,r4,r18
 c018d84:	1545883a 	add	r2,r2,r21
 c018d88:	81003836 	bltu	r16,r4,c018e6c <__divdf3+0x728>
 c018d8c:	81003626 	beq	r16,r4,c018e68 <__divdf3+0x724>
 c018d90:	a5000054 	ori	r20,r20,1
 c018d94:	1880ffc4 	addi	r2,r3,1023
 c018d98:	00bf2e0e 	bge	zero,r2,c018a54 <__alt_data_end+0xfc018a54>
 c018d9c:	a10001cc 	andi	r4,r20,7
 c018da0:	20000726 	beq	r4,zero,c018dc0 <__divdf3+0x67c>
 c018da4:	a10003cc 	andi	r4,r20,15
 c018da8:	01400104 	movi	r5,4
 c018dac:	21400426 	beq	r4,r5,c018dc0 <__divdf3+0x67c>
 c018db0:	a149883a 	add	r4,r20,r5
 c018db4:	2529803a 	cmpltu	r20,r4,r20
 c018db8:	8d23883a 	add	r17,r17,r20
 c018dbc:	2029883a 	mov	r20,r4
 c018dc0:	8900402c 	andhi	r4,r17,256
 c018dc4:	20000426 	beq	r4,zero,c018dd8 <__divdf3+0x694>
 c018dc8:	18810004 	addi	r2,r3,1024
 c018dcc:	00ffc034 	movhi	r3,65280
 c018dd0:	18ffffc4 	addi	r3,r3,-1
 c018dd4:	88e2703a 	and	r17,r17,r3
 c018dd8:	00c1ff84 	movi	r3,2046
 c018ddc:	18beb416 	blt	r3,r2,c0188b0 <__alt_data_end+0xfc0188b0>
 c018de0:	a028d0fa 	srli	r20,r20,3
 c018de4:	882a977a 	slli	r21,r17,29
 c018de8:	8820927a 	slli	r16,r17,9
 c018dec:	1081ffcc 	andi	r2,r2,2047
 c018df0:	ad2ab03a 	or	r21,r21,r20
 c018df4:	8020d33a 	srli	r16,r16,12
 c018df8:	9900004c 	andi	r4,r19,1
 c018dfc:	003eb006 	br	c0188c0 <__alt_data_end+0xfc0188c0>
 c018e00:	8080022c 	andhi	r2,r16,8
 c018e04:	10001226 	beq	r2,zero,c018e50 <__divdf3+0x70c>
 c018e08:	8880022c 	andhi	r2,r17,8
 c018e0c:	1000101e 	bne	r2,zero,c018e50 <__divdf3+0x70c>
 c018e10:	00800434 	movhi	r2,16
 c018e14:	8c000234 	orhi	r16,r17,8
 c018e18:	10bfffc4 	addi	r2,r2,-1
 c018e1c:	b809883a 	mov	r4,r23
 c018e20:	80a0703a 	and	r16,r16,r2
 c018e24:	a02b883a 	mov	r21,r20
 c018e28:	003f0806 	br	c018a4c <__alt_data_end+0xfc018a4c>
 c018e2c:	008000c4 	movi	r2,3
 c018e30:	3880b126 	beq	r7,r2,c0190f8 <__divdf3+0x9b4>
 c018e34:	00800044 	movi	r2,1
 c018e38:	38805b1e 	bne	r7,r2,c018fa8 <__divdf3+0x864>
 c018e3c:	e009883a 	mov	r4,fp
 c018e40:	0005883a 	mov	r2,zero
 c018e44:	0021883a 	mov	r16,zero
 c018e48:	002b883a 	mov	r21,zero
 c018e4c:	003e9c06 	br	c0188c0 <__alt_data_end+0xfc0188c0>
 c018e50:	00800434 	movhi	r2,16
 c018e54:	84000234 	orhi	r16,r16,8
 c018e58:	10bfffc4 	addi	r2,r2,-1
 c018e5c:	b009883a 	mov	r4,r22
 c018e60:	80a0703a 	and	r16,r16,r2
 c018e64:	003ef906 	br	c018a4c <__alt_data_end+0xfc018a4c>
 c018e68:	103fca26 	beq	r2,zero,c018d94 <__alt_data_end+0xfc018d94>
 c018e6c:	b421883a 	add	r16,r22,r16
 c018e70:	a17fffc4 	addi	r5,r20,-1
 c018e74:	8580422e 	bgeu	r16,r22,c018f80 <__divdf3+0x83c>
 c018e78:	2829883a 	mov	r20,r5
 c018e7c:	813fc41e 	bne	r16,r4,c018d90 <__alt_data_end+0xfc018d90>
 c018e80:	d9800017 	ldw	r6,0(sp)
 c018e84:	30bfc21e 	bne	r6,r2,c018d90 <__alt_data_end+0xfc018d90>
 c018e88:	003fc206 	br	c018d94 <__alt_data_end+0xfc018d94>
 c018e8c:	143ff604 	addi	r16,r2,-40
 c018e90:	8c20983a 	sll	r16,r17,r16
 c018e94:	002b883a 	mov	r21,zero
 c018e98:	003eb406 	br	c01896c <__alt_data_end+0xfc01896c>
 c018e9c:	d9800215 	stw	r6,8(sp)
 c018ea0:	d9c00515 	stw	r7,20(sp)
 c018ea4:	da000415 	stw	r8,16(sp)
 c018ea8:	c01a8800 	call	c01a880 <__clzsi2>
 c018eac:	10800804 	addi	r2,r2,32
 c018eb0:	da000417 	ldw	r8,16(sp)
 c018eb4:	d9c00517 	ldw	r7,20(sp)
 c018eb8:	d9800217 	ldw	r6,8(sp)
 c018ebc:	003ea106 	br	c018944 <__alt_data_end+0xfc018944>
 c018ec0:	147ff604 	addi	r17,r2,-40
 c018ec4:	3462983a 	sll	r17,r6,r17
 c018ec8:	0029883a 	mov	r20,zero
 c018ecc:	003ec906 	br	c0189f4 <__alt_data_end+0xfc0189f4>
 c018ed0:	3009883a 	mov	r4,r6
 c018ed4:	d9400115 	stw	r5,4(sp)
 c018ed8:	d9800215 	stw	r6,8(sp)
 c018edc:	da000415 	stw	r8,16(sp)
 c018ee0:	da400315 	stw	r9,12(sp)
 c018ee4:	c01a8800 	call	c01a880 <__clzsi2>
 c018ee8:	10800804 	addi	r2,r2,32
 c018eec:	da400317 	ldw	r9,12(sp)
 c018ef0:	da000417 	ldw	r8,16(sp)
 c018ef4:	d9800217 	ldw	r6,8(sp)
 c018ef8:	d9400117 	ldw	r5,4(sp)
 c018efc:	003eb306 	br	c0189cc <__alt_data_end+0xfc0189cc>
 c018f00:	d9800017 	ldw	r6,0(sp)
 c018f04:	a9ab883a 	add	r21,r21,r6
 c018f08:	a98b803a 	cmpltu	r5,r21,r6
 c018f0c:	2d8b883a 	add	r5,r5,r22
 c018f10:	2a11883a 	add	r8,r5,r8
 c018f14:	897fffc4 	addi	r5,r17,-1
 c018f18:	b2000c2e 	bgeu	r22,r8,c018f4c <__divdf3+0x808>
 c018f1c:	41003f36 	bltu	r8,r4,c01901c <__divdf3+0x8d8>
 c018f20:	22006c26 	beq	r4,r8,c0190d4 <__divdf3+0x990>
 c018f24:	4109c83a 	sub	r4,r8,r4
 c018f28:	2823883a 	mov	r17,r5
 c018f2c:	003f3b06 	br	c018c1c <__alt_data_end+0xfc018c1c>
 c018f30:	ad3ed336 	bltu	r21,r20,c018a80 <__alt_data_end+0xfc018a80>
 c018f34:	a804d07a 	srli	r2,r21,1
 c018f38:	802e97fa 	slli	r23,r16,31
 c018f3c:	a82a97fa 	slli	r21,r21,31
 c018f40:	8020d07a 	srli	r16,r16,1
 c018f44:	b8aeb03a 	or	r23,r23,r2
 c018f48:	003ed006 	br	c018a8c <__alt_data_end+0xfc018a8c>
 c018f4c:	b23ff51e 	bne	r22,r8,c018f24 <__alt_data_end+0xfc018f24>
 c018f50:	d9800017 	ldw	r6,0(sp)
 c018f54:	a9bff12e 	bgeu	r21,r6,c018f1c <__alt_data_end+0xfc018f1c>
 c018f58:	b109c83a 	sub	r4,r22,r4
 c018f5c:	2823883a 	mov	r17,r5
 c018f60:	003f2e06 	br	c018c1c <__alt_data_end+0xfc018c1c>
 c018f64:	2021883a 	mov	r16,r4
 c018f68:	003eff06 	br	c018b68 <__alt_data_end+0xfc018b68>
 c018f6c:	2023883a 	mov	r17,r4
 c018f70:	003ee406 	br	c018b04 <__alt_data_end+0xfc018b04>
 c018f74:	a8bfe236 	bltu	r21,r2,c018f00 <__alt_data_end+0xfc018f00>
 c018f78:	0009883a 	mov	r4,zero
 c018f7c:	003f2706 	br	c018c1c <__alt_data_end+0xfc018c1c>
 c018f80:	81002d36 	bltu	r16,r4,c019038 <__divdf3+0x8f4>
 c018f84:	24005626 	beq	r4,r16,c0190e0 <__divdf3+0x99c>
 c018f88:	2829883a 	mov	r20,r5
 c018f8c:	003f8006 	br	c018d90 <__alt_data_end+0xfc018d90>
 c018f90:	053fffc4 	movi	r20,-1
 c018f94:	003f7f06 	br	c018d94 <__alt_data_end+0xfc018d94>
 c018f98:	200f883a 	mov	r7,r4
 c018f9c:	003f3c06 	br	c018c90 <__alt_data_end+0xfc018c90>
 c018fa0:	1011883a 	mov	r8,r2
 c018fa4:	003f5506 	br	c018cfc <__alt_data_end+0xfc018cfc>
 c018fa8:	e027883a 	mov	r19,fp
 c018fac:	003f7906 	br	c018d94 <__alt_data_end+0xfc018d94>
 c018fb0:	010007c4 	movi	r4,31
 c018fb4:	20c02816 	blt	r4,r3,c019058 <__divdf3+0x914>
 c018fb8:	00800804 	movi	r2,32
 c018fbc:	10c5c83a 	sub	r2,r2,r3
 c018fc0:	888a983a 	sll	r5,r17,r2
 c018fc4:	a0c8d83a 	srl	r4,r20,r3
 c018fc8:	a084983a 	sll	r2,r20,r2
 c018fcc:	88e2d83a 	srl	r17,r17,r3
 c018fd0:	2906b03a 	or	r3,r5,r4
 c018fd4:	1004c03a 	cmpne	r2,r2,zero
 c018fd8:	1886b03a 	or	r3,r3,r2
 c018fdc:	188001cc 	andi	r2,r3,7
 c018fe0:	10000726 	beq	r2,zero,c019000 <__divdf3+0x8bc>
 c018fe4:	188003cc 	andi	r2,r3,15
 c018fe8:	01000104 	movi	r4,4
 c018fec:	11000426 	beq	r2,r4,c019000 <__divdf3+0x8bc>
 c018ff0:	1805883a 	mov	r2,r3
 c018ff4:	10c00104 	addi	r3,r2,4
 c018ff8:	1885803a 	cmpltu	r2,r3,r2
 c018ffc:	88a3883a 	add	r17,r17,r2
 c019000:	8880202c 	andhi	r2,r17,128
 c019004:	10002926 	beq	r2,zero,c0190ac <__divdf3+0x968>
 c019008:	9900004c 	andi	r4,r19,1
 c01900c:	00800044 	movi	r2,1
 c019010:	0021883a 	mov	r16,zero
 c019014:	002b883a 	mov	r21,zero
 c019018:	003e2906 	br	c0188c0 <__alt_data_end+0xfc0188c0>
 c01901c:	d9800017 	ldw	r6,0(sp)
 c019020:	8c7fff84 	addi	r17,r17,-2
 c019024:	a9ab883a 	add	r21,r21,r6
 c019028:	a98b803a 	cmpltu	r5,r21,r6
 c01902c:	2d8b883a 	add	r5,r5,r22
 c019030:	2a11883a 	add	r8,r5,r8
 c019034:	003ef806 	br	c018c18 <__alt_data_end+0xfc018c18>
 c019038:	d9800017 	ldw	r6,0(sp)
 c01903c:	318f883a 	add	r7,r6,r6
 c019040:	398b803a 	cmpltu	r5,r7,r6
 c019044:	2d8d883a 	add	r6,r5,r22
 c019048:	81a1883a 	add	r16,r16,r6
 c01904c:	a17fff84 	addi	r5,r20,-2
 c019050:	d9c00015 	stw	r7,0(sp)
 c019054:	003f8806 	br	c018e78 <__alt_data_end+0xfc018e78>
 c019058:	013ff844 	movi	r4,-31
 c01905c:	2085c83a 	sub	r2,r4,r2
 c019060:	8888d83a 	srl	r4,r17,r2
 c019064:	00800804 	movi	r2,32
 c019068:	18802126 	beq	r3,r2,c0190f0 <__divdf3+0x9ac>
 c01906c:	04001004 	movi	r16,64
 c019070:	80c7c83a 	sub	r3,r16,r3
 c019074:	88e0983a 	sll	r16,r17,r3
 c019078:	8504b03a 	or	r2,r16,r20
 c01907c:	1004c03a 	cmpne	r2,r2,zero
 c019080:	2084b03a 	or	r2,r4,r2
 c019084:	144001cc 	andi	r17,r2,7
 c019088:	88000d1e 	bne	r17,zero,c0190c0 <__divdf3+0x97c>
 c01908c:	0021883a 	mov	r16,zero
 c019090:	102ad0fa 	srli	r21,r2,3
 c019094:	9900004c 	andi	r4,r19,1
 c019098:	0005883a 	mov	r2,zero
 c01909c:	ac6ab03a 	or	r21,r21,r17
 c0190a0:	003e0706 	br	c0188c0 <__alt_data_end+0xfc0188c0>
 c0190a4:	1007883a 	mov	r3,r2
 c0190a8:	0023883a 	mov	r17,zero
 c0190ac:	8820927a 	slli	r16,r17,9
 c0190b0:	1805883a 	mov	r2,r3
 c0190b4:	8822977a 	slli	r17,r17,29
 c0190b8:	8020d33a 	srli	r16,r16,12
 c0190bc:	003ff406 	br	c019090 <__alt_data_end+0xfc019090>
 c0190c0:	10c003cc 	andi	r3,r2,15
 c0190c4:	01000104 	movi	r4,4
 c0190c8:	193ff626 	beq	r3,r4,c0190a4 <__alt_data_end+0xfc0190a4>
 c0190cc:	0023883a 	mov	r17,zero
 c0190d0:	003fc806 	br	c018ff4 <__alt_data_end+0xfc018ff4>
 c0190d4:	a8bfd136 	bltu	r21,r2,c01901c <__alt_data_end+0xfc01901c>
 c0190d8:	2823883a 	mov	r17,r5
 c0190dc:	003fa606 	br	c018f78 <__alt_data_end+0xfc018f78>
 c0190e0:	d9800017 	ldw	r6,0(sp)
 c0190e4:	30bfd436 	bltu	r6,r2,c019038 <__alt_data_end+0xfc019038>
 c0190e8:	2829883a 	mov	r20,r5
 c0190ec:	003f6406 	br	c018e80 <__alt_data_end+0xfc018e80>
 c0190f0:	0021883a 	mov	r16,zero
 c0190f4:	003fe006 	br	c019078 <__alt_data_end+0xfc019078>
 c0190f8:	00800434 	movhi	r2,16
 c0190fc:	8c000234 	orhi	r16,r17,8
 c019100:	10bfffc4 	addi	r2,r2,-1
 c019104:	e009883a 	mov	r4,fp
 c019108:	80a0703a 	and	r16,r16,r2
 c01910c:	a02b883a 	mov	r21,r20
 c019110:	003e4e06 	br	c018a4c <__alt_data_end+0xfc018a4c>

0c019114 <__eqdf2>:
 c019114:	2804d53a 	srli	r2,r5,20
 c019118:	3806d53a 	srli	r3,r7,20
 c01911c:	02000434 	movhi	r8,16
 c019120:	423fffc4 	addi	r8,r8,-1
 c019124:	1081ffcc 	andi	r2,r2,2047
 c019128:	0281ffc4 	movi	r10,2047
 c01912c:	2a12703a 	and	r9,r5,r8
 c019130:	18c1ffcc 	andi	r3,r3,2047
 c019134:	3a10703a 	and	r8,r7,r8
 c019138:	280ad7fa 	srli	r5,r5,31
 c01913c:	380ed7fa 	srli	r7,r7,31
 c019140:	12801026 	beq	r2,r10,c019184 <__eqdf2+0x70>
 c019144:	0281ffc4 	movi	r10,2047
 c019148:	1a800a26 	beq	r3,r10,c019174 <__eqdf2+0x60>
 c01914c:	10c00226 	beq	r2,r3,c019158 <__eqdf2+0x44>
 c019150:	00800044 	movi	r2,1
 c019154:	f800283a 	ret
 c019158:	4a3ffd1e 	bne	r9,r8,c019150 <__alt_data_end+0xfc019150>
 c01915c:	21bffc1e 	bne	r4,r6,c019150 <__alt_data_end+0xfc019150>
 c019160:	29c00c26 	beq	r5,r7,c019194 <__eqdf2+0x80>
 c019164:	103ffa1e 	bne	r2,zero,c019150 <__alt_data_end+0xfc019150>
 c019168:	2244b03a 	or	r2,r4,r9
 c01916c:	1004c03a 	cmpne	r2,r2,zero
 c019170:	f800283a 	ret
 c019174:	3214b03a 	or	r10,r6,r8
 c019178:	503ff426 	beq	r10,zero,c01914c <__alt_data_end+0xfc01914c>
 c01917c:	00800044 	movi	r2,1
 c019180:	f800283a 	ret
 c019184:	2254b03a 	or	r10,r4,r9
 c019188:	503fee26 	beq	r10,zero,c019144 <__alt_data_end+0xfc019144>
 c01918c:	00800044 	movi	r2,1
 c019190:	f800283a 	ret
 c019194:	0005883a 	mov	r2,zero
 c019198:	f800283a 	ret

0c01919c <__gedf2>:
 c01919c:	2804d53a 	srli	r2,r5,20
 c0191a0:	3806d53a 	srli	r3,r7,20
 c0191a4:	02000434 	movhi	r8,16
 c0191a8:	423fffc4 	addi	r8,r8,-1
 c0191ac:	1081ffcc 	andi	r2,r2,2047
 c0191b0:	0241ffc4 	movi	r9,2047
 c0191b4:	2a14703a 	and	r10,r5,r8
 c0191b8:	18c1ffcc 	andi	r3,r3,2047
 c0191bc:	3a10703a 	and	r8,r7,r8
 c0191c0:	280ad7fa 	srli	r5,r5,31
 c0191c4:	380ed7fa 	srli	r7,r7,31
 c0191c8:	12401d26 	beq	r2,r9,c019240 <__gedf2+0xa4>
 c0191cc:	0241ffc4 	movi	r9,2047
 c0191d0:	1a401226 	beq	r3,r9,c01921c <__gedf2+0x80>
 c0191d4:	1000081e 	bne	r2,zero,c0191f8 <__gedf2+0x5c>
 c0191d8:	2296b03a 	or	r11,r4,r10
 c0191dc:	5813003a 	cmpeq	r9,r11,zero
 c0191e0:	1800091e 	bne	r3,zero,c019208 <__gedf2+0x6c>
 c0191e4:	3218b03a 	or	r12,r6,r8
 c0191e8:	6000071e 	bne	r12,zero,c019208 <__gedf2+0x6c>
 c0191ec:	0005883a 	mov	r2,zero
 c0191f0:	5800101e 	bne	r11,zero,c019234 <__gedf2+0x98>
 c0191f4:	f800283a 	ret
 c0191f8:	18000c1e 	bne	r3,zero,c01922c <__gedf2+0x90>
 c0191fc:	3212b03a 	or	r9,r6,r8
 c019200:	48000c26 	beq	r9,zero,c019234 <__gedf2+0x98>
 c019204:	0013883a 	mov	r9,zero
 c019208:	39c03fcc 	andi	r7,r7,255
 c01920c:	48000826 	beq	r9,zero,c019230 <__gedf2+0x94>
 c019210:	38000926 	beq	r7,zero,c019238 <__gedf2+0x9c>
 c019214:	00800044 	movi	r2,1
 c019218:	f800283a 	ret
 c01921c:	3212b03a 	or	r9,r6,r8
 c019220:	483fec26 	beq	r9,zero,c0191d4 <__alt_data_end+0xfc0191d4>
 c019224:	00bfff84 	movi	r2,-2
 c019228:	f800283a 	ret
 c01922c:	39c03fcc 	andi	r7,r7,255
 c019230:	29c00626 	beq	r5,r7,c01924c <__gedf2+0xb0>
 c019234:	283ff726 	beq	r5,zero,c019214 <__alt_data_end+0xfc019214>
 c019238:	00bfffc4 	movi	r2,-1
 c01923c:	f800283a 	ret
 c019240:	2292b03a 	or	r9,r4,r10
 c019244:	483fe126 	beq	r9,zero,c0191cc <__alt_data_end+0xfc0191cc>
 c019248:	003ff606 	br	c019224 <__alt_data_end+0xfc019224>
 c01924c:	18bff916 	blt	r3,r2,c019234 <__alt_data_end+0xfc019234>
 c019250:	10c00316 	blt	r2,r3,c019260 <__gedf2+0xc4>
 c019254:	42bff736 	bltu	r8,r10,c019234 <__alt_data_end+0xfc019234>
 c019258:	52000326 	beq	r10,r8,c019268 <__gedf2+0xcc>
 c01925c:	5200042e 	bgeu	r10,r8,c019270 <__gedf2+0xd4>
 c019260:	283fec1e 	bne	r5,zero,c019214 <__alt_data_end+0xfc019214>
 c019264:	003ff406 	br	c019238 <__alt_data_end+0xfc019238>
 c019268:	313ff236 	bltu	r6,r4,c019234 <__alt_data_end+0xfc019234>
 c01926c:	21bffc36 	bltu	r4,r6,c019260 <__alt_data_end+0xfc019260>
 c019270:	0005883a 	mov	r2,zero
 c019274:	f800283a 	ret

0c019278 <__ledf2>:
 c019278:	2804d53a 	srli	r2,r5,20
 c01927c:	3810d53a 	srli	r8,r7,20
 c019280:	00c00434 	movhi	r3,16
 c019284:	18ffffc4 	addi	r3,r3,-1
 c019288:	1081ffcc 	andi	r2,r2,2047
 c01928c:	0241ffc4 	movi	r9,2047
 c019290:	28d4703a 	and	r10,r5,r3
 c019294:	4201ffcc 	andi	r8,r8,2047
 c019298:	38c6703a 	and	r3,r7,r3
 c01929c:	280ad7fa 	srli	r5,r5,31
 c0192a0:	380ed7fa 	srli	r7,r7,31
 c0192a4:	12401f26 	beq	r2,r9,c019324 <__ledf2+0xac>
 c0192a8:	0241ffc4 	movi	r9,2047
 c0192ac:	42401426 	beq	r8,r9,c019300 <__ledf2+0x88>
 c0192b0:	1000091e 	bne	r2,zero,c0192d8 <__ledf2+0x60>
 c0192b4:	2296b03a 	or	r11,r4,r10
 c0192b8:	5813003a 	cmpeq	r9,r11,zero
 c0192bc:	29403fcc 	andi	r5,r5,255
 c0192c0:	40000a1e 	bne	r8,zero,c0192ec <__ledf2+0x74>
 c0192c4:	30d8b03a 	or	r12,r6,r3
 c0192c8:	6000081e 	bne	r12,zero,c0192ec <__ledf2+0x74>
 c0192cc:	0005883a 	mov	r2,zero
 c0192d0:	5800111e 	bne	r11,zero,c019318 <__ledf2+0xa0>
 c0192d4:	f800283a 	ret
 c0192d8:	29403fcc 	andi	r5,r5,255
 c0192dc:	40000c1e 	bne	r8,zero,c019310 <__ledf2+0x98>
 c0192e0:	30d2b03a 	or	r9,r6,r3
 c0192e4:	48000c26 	beq	r9,zero,c019318 <__ledf2+0xa0>
 c0192e8:	0013883a 	mov	r9,zero
 c0192ec:	39c03fcc 	andi	r7,r7,255
 c0192f0:	48000826 	beq	r9,zero,c019314 <__ledf2+0x9c>
 c0192f4:	38001126 	beq	r7,zero,c01933c <__ledf2+0xc4>
 c0192f8:	00800044 	movi	r2,1
 c0192fc:	f800283a 	ret
 c019300:	30d2b03a 	or	r9,r6,r3
 c019304:	483fea26 	beq	r9,zero,c0192b0 <__alt_data_end+0xfc0192b0>
 c019308:	00800084 	movi	r2,2
 c01930c:	f800283a 	ret
 c019310:	39c03fcc 	andi	r7,r7,255
 c019314:	39400726 	beq	r7,r5,c019334 <__ledf2+0xbc>
 c019318:	2800081e 	bne	r5,zero,c01933c <__ledf2+0xc4>
 c01931c:	00800044 	movi	r2,1
 c019320:	f800283a 	ret
 c019324:	2292b03a 	or	r9,r4,r10
 c019328:	483fdf26 	beq	r9,zero,c0192a8 <__alt_data_end+0xfc0192a8>
 c01932c:	00800084 	movi	r2,2
 c019330:	f800283a 	ret
 c019334:	4080030e 	bge	r8,r2,c019344 <__ledf2+0xcc>
 c019338:	383fef26 	beq	r7,zero,c0192f8 <__alt_data_end+0xfc0192f8>
 c01933c:	00bfffc4 	movi	r2,-1
 c019340:	f800283a 	ret
 c019344:	123feb16 	blt	r2,r8,c0192f4 <__alt_data_end+0xfc0192f4>
 c019348:	1abff336 	bltu	r3,r10,c019318 <__alt_data_end+0xfc019318>
 c01934c:	50c00326 	beq	r10,r3,c01935c <__ledf2+0xe4>
 c019350:	50c0042e 	bgeu	r10,r3,c019364 <__ledf2+0xec>
 c019354:	283fe81e 	bne	r5,zero,c0192f8 <__alt_data_end+0xfc0192f8>
 c019358:	003ff806 	br	c01933c <__alt_data_end+0xfc01933c>
 c01935c:	313fee36 	bltu	r6,r4,c019318 <__alt_data_end+0xfc019318>
 c019360:	21bffc36 	bltu	r4,r6,c019354 <__alt_data_end+0xfc019354>
 c019364:	0005883a 	mov	r2,zero
 c019368:	f800283a 	ret

0c01936c <__muldf3>:
 c01936c:	deffee04 	addi	sp,sp,-72
 c019370:	dd000c15 	stw	r20,48(sp)
 c019374:	2828d53a 	srli	r20,r5,20
 c019378:	ddc00f15 	stw	r23,60(sp)
 c01937c:	282ed7fa 	srli	r23,r5,31
 c019380:	dc000815 	stw	r16,32(sp)
 c019384:	04000434 	movhi	r16,16
 c019388:	dcc00b15 	stw	r19,44(sp)
 c01938c:	843fffc4 	addi	r16,r16,-1
 c019390:	dfc01115 	stw	ra,68(sp)
 c019394:	df001015 	stw	fp,64(sp)
 c019398:	dd800e15 	stw	r22,56(sp)
 c01939c:	dd400d15 	stw	r21,52(sp)
 c0193a0:	dc800a15 	stw	r18,40(sp)
 c0193a4:	dc400915 	stw	r17,36(sp)
 c0193a8:	a501ffcc 	andi	r20,r20,2047
 c0193ac:	2c20703a 	and	r16,r5,r16
 c0193b0:	b827883a 	mov	r19,r23
 c0193b4:	ba403fcc 	andi	r9,r23,255
 c0193b8:	a0006026 	beq	r20,zero,c01953c <__muldf3+0x1d0>
 c0193bc:	0081ffc4 	movi	r2,2047
 c0193c0:	202d883a 	mov	r22,r4
 c0193c4:	a0803626 	beq	r20,r2,c0194a0 <__muldf3+0x134>
 c0193c8:	84000434 	orhi	r16,r16,16
 c0193cc:	200ad77a 	srli	r5,r4,29
 c0193d0:	800490fa 	slli	r2,r16,3
 c0193d4:	202c90fa 	slli	r22,r4,3
 c0193d8:	a53f0044 	addi	r20,r20,-1023
 c0193dc:	28a0b03a 	or	r16,r5,r2
 c0193e0:	002b883a 	mov	r21,zero
 c0193e4:	000b883a 	mov	r5,zero
 c0193e8:	3804d53a 	srli	r2,r7,20
 c0193ec:	3838d7fa 	srli	fp,r7,31
 c0193f0:	04400434 	movhi	r17,16
 c0193f4:	8c7fffc4 	addi	r17,r17,-1
 c0193f8:	1081ffcc 	andi	r2,r2,2047
 c0193fc:	3025883a 	mov	r18,r6
 c019400:	3c62703a 	and	r17,r7,r17
 c019404:	e2803fcc 	andi	r10,fp,255
 c019408:	10006d26 	beq	r2,zero,c0195c0 <__muldf3+0x254>
 c01940c:	00c1ffc4 	movi	r3,2047
 c019410:	10c06526 	beq	r2,r3,c0195a8 <__muldf3+0x23c>
 c019414:	8c400434 	orhi	r17,r17,16
 c019418:	300ed77a 	srli	r7,r6,29
 c01941c:	880690fa 	slli	r3,r17,3
 c019420:	302490fa 	slli	r18,r6,3
 c019424:	10bf0044 	addi	r2,r2,-1023
 c019428:	38e2b03a 	or	r17,r7,r3
 c01942c:	000f883a 	mov	r7,zero
 c019430:	a087883a 	add	r3,r20,r2
 c019434:	010003c4 	movi	r4,15
 c019438:	3d44b03a 	or	r2,r7,r21
 c01943c:	e5ccf03a 	xor	r6,fp,r23
 c019440:	1a000044 	addi	r8,r3,1
 c019444:	20809b36 	bltu	r4,r2,c0196b4 <__muldf3+0x348>
 c019448:	100490ba 	slli	r2,r2,2
 c01944c:	010300b4 	movhi	r4,3074
 c019450:	21251804 	addi	r4,r4,-27552
 c019454:	1105883a 	add	r2,r2,r4
 c019458:	10800017 	ldw	r2,0(r2)
 c01945c:	1000683a 	jmp	r2
 c019460:	0c0196b4 	orhi	r16,at,1626
 c019464:	0c0194c0 	call	c0194c <__alt_mem_onchip_memory2_0+0xc0194c>
 c019468:	0c0194c0 	call	c0194c <__alt_mem_onchip_memory2_0+0xc0194c>
 c01946c:	0c0194bc 	xorhi	r16,at,1618
 c019470:	0c019690 	cmplti	r16,at,1626
 c019474:	0c019690 	cmplti	r16,at,1626
 c019478:	0c019678 	rdprs	r16,at,1625
 c01947c:	0c0194bc 	xorhi	r16,at,1618
 c019480:	0c019690 	cmplti	r16,at,1626
 c019484:	0c019678 	rdprs	r16,at,1625
 c019488:	0c019690 	cmplti	r16,at,1626
 c01948c:	0c0194bc 	xorhi	r16,at,1618
 c019490:	0c0196a0 	cmpeqi	r16,at,1626
 c019494:	0c0196a0 	cmpeqi	r16,at,1626
 c019498:	0c0196a0 	cmpeqi	r16,at,1626
 c01949c:	0c019a00 	call	c019a0 <__alt_mem_onchip_memory2_0+0xc019a0>
 c0194a0:	2404b03a 	or	r2,r4,r16
 c0194a4:	1000711e 	bne	r2,zero,c01966c <__muldf3+0x300>
 c0194a8:	05400204 	movi	r21,8
 c0194ac:	0021883a 	mov	r16,zero
 c0194b0:	002d883a 	mov	r22,zero
 c0194b4:	01400084 	movi	r5,2
 c0194b8:	003fcb06 	br	c0193e8 <__alt_data_end+0xfc0193e8>
 c0194bc:	500d883a 	mov	r6,r10
 c0194c0:	00800084 	movi	r2,2
 c0194c4:	38805926 	beq	r7,r2,c01962c <__muldf3+0x2c0>
 c0194c8:	008000c4 	movi	r2,3
 c0194cc:	3881bb26 	beq	r7,r2,c019bbc <__muldf3+0x850>
 c0194d0:	00800044 	movi	r2,1
 c0194d4:	3881961e 	bne	r7,r2,c019b30 <__muldf3+0x7c4>
 c0194d8:	3027883a 	mov	r19,r6
 c0194dc:	0005883a 	mov	r2,zero
 c0194e0:	0021883a 	mov	r16,zero
 c0194e4:	002d883a 	mov	r22,zero
 c0194e8:	1004953a 	slli	r2,r2,20
 c0194ec:	98c03fcc 	andi	r3,r19,255
 c0194f0:	04400434 	movhi	r17,16
 c0194f4:	8c7fffc4 	addi	r17,r17,-1
 c0194f8:	180697fa 	slli	r3,r3,31
 c0194fc:	8460703a 	and	r16,r16,r17
 c019500:	80a0b03a 	or	r16,r16,r2
 c019504:	80c6b03a 	or	r3,r16,r3
 c019508:	b005883a 	mov	r2,r22
 c01950c:	dfc01117 	ldw	ra,68(sp)
 c019510:	df001017 	ldw	fp,64(sp)
 c019514:	ddc00f17 	ldw	r23,60(sp)
 c019518:	dd800e17 	ldw	r22,56(sp)
 c01951c:	dd400d17 	ldw	r21,52(sp)
 c019520:	dd000c17 	ldw	r20,48(sp)
 c019524:	dcc00b17 	ldw	r19,44(sp)
 c019528:	dc800a17 	ldw	r18,40(sp)
 c01952c:	dc400917 	ldw	r17,36(sp)
 c019530:	dc000817 	ldw	r16,32(sp)
 c019534:	dec01204 	addi	sp,sp,72
 c019538:	f800283a 	ret
 c01953c:	2404b03a 	or	r2,r4,r16
 c019540:	202b883a 	mov	r21,r4
 c019544:	10004426 	beq	r2,zero,c019658 <__muldf3+0x2ec>
 c019548:	80015126 	beq	r16,zero,c019a90 <__muldf3+0x724>
 c01954c:	8009883a 	mov	r4,r16
 c019550:	d9800715 	stw	r6,28(sp)
 c019554:	d9c00215 	stw	r7,8(sp)
 c019558:	da400415 	stw	r9,16(sp)
 c01955c:	c01a8800 	call	c01a880 <__clzsi2>
 c019560:	d9800717 	ldw	r6,28(sp)
 c019564:	d9c00217 	ldw	r7,8(sp)
 c019568:	da400417 	ldw	r9,16(sp)
 c01956c:	113ffd44 	addi	r4,r2,-11
 c019570:	00c00704 	movi	r3,28
 c019574:	19014216 	blt	r3,r4,c019a80 <__muldf3+0x714>
 c019578:	00c00744 	movi	r3,29
 c01957c:	15bffe04 	addi	r22,r2,-8
 c019580:	1907c83a 	sub	r3,r3,r4
 c019584:	85a0983a 	sll	r16,r16,r22
 c019588:	a8c6d83a 	srl	r3,r21,r3
 c01958c:	adac983a 	sll	r22,r21,r22
 c019590:	1c20b03a 	or	r16,r3,r16
 c019594:	1080fcc4 	addi	r2,r2,1011
 c019598:	00a9c83a 	sub	r20,zero,r2
 c01959c:	002b883a 	mov	r21,zero
 c0195a0:	000b883a 	mov	r5,zero
 c0195a4:	003f9006 	br	c0193e8 <__alt_data_end+0xfc0193e8>
 c0195a8:	3446b03a 	or	r3,r6,r17
 c0195ac:	1800281e 	bne	r3,zero,c019650 <__muldf3+0x2e4>
 c0195b0:	0023883a 	mov	r17,zero
 c0195b4:	0025883a 	mov	r18,zero
 c0195b8:	01c00084 	movi	r7,2
 c0195bc:	003f9c06 	br	c019430 <__alt_data_end+0xfc019430>
 c0195c0:	3446b03a 	or	r3,r6,r17
 c0195c4:	18001e26 	beq	r3,zero,c019640 <__muldf3+0x2d4>
 c0195c8:	88012126 	beq	r17,zero,c019a50 <__muldf3+0x6e4>
 c0195cc:	8809883a 	mov	r4,r17
 c0195d0:	d9400215 	stw	r5,8(sp)
 c0195d4:	d9800715 	stw	r6,28(sp)
 c0195d8:	da400415 	stw	r9,16(sp)
 c0195dc:	da800315 	stw	r10,12(sp)
 c0195e0:	c01a8800 	call	c01a880 <__clzsi2>
 c0195e4:	d9400217 	ldw	r5,8(sp)
 c0195e8:	d9800717 	ldw	r6,28(sp)
 c0195ec:	da400417 	ldw	r9,16(sp)
 c0195f0:	da800317 	ldw	r10,12(sp)
 c0195f4:	113ffd44 	addi	r4,r2,-11
 c0195f8:	00c00704 	movi	r3,28
 c0195fc:	19011016 	blt	r3,r4,c019a40 <__muldf3+0x6d4>
 c019600:	00c00744 	movi	r3,29
 c019604:	14bffe04 	addi	r18,r2,-8
 c019608:	1907c83a 	sub	r3,r3,r4
 c01960c:	8ca2983a 	sll	r17,r17,r18
 c019610:	30c6d83a 	srl	r3,r6,r3
 c019614:	34a4983a 	sll	r18,r6,r18
 c019618:	1c62b03a 	or	r17,r3,r17
 c01961c:	1080fcc4 	addi	r2,r2,1011
 c019620:	0085c83a 	sub	r2,zero,r2
 c019624:	000f883a 	mov	r7,zero
 c019628:	003f8106 	br	c019430 <__alt_data_end+0xfc019430>
 c01962c:	3027883a 	mov	r19,r6
 c019630:	0081ffc4 	movi	r2,2047
 c019634:	0021883a 	mov	r16,zero
 c019638:	002d883a 	mov	r22,zero
 c01963c:	003faa06 	br	c0194e8 <__alt_data_end+0xfc0194e8>
 c019640:	0023883a 	mov	r17,zero
 c019644:	0025883a 	mov	r18,zero
 c019648:	01c00044 	movi	r7,1
 c01964c:	003f7806 	br	c019430 <__alt_data_end+0xfc019430>
 c019650:	01c000c4 	movi	r7,3
 c019654:	003f7606 	br	c019430 <__alt_data_end+0xfc019430>
 c019658:	05400104 	movi	r21,4
 c01965c:	0021883a 	mov	r16,zero
 c019660:	002d883a 	mov	r22,zero
 c019664:	01400044 	movi	r5,1
 c019668:	003f5f06 	br	c0193e8 <__alt_data_end+0xfc0193e8>
 c01966c:	05400304 	movi	r21,12
 c019670:	014000c4 	movi	r5,3
 c019674:	003f5c06 	br	c0193e8 <__alt_data_end+0xfc0193e8>
 c019678:	04000434 	movhi	r16,16
 c01967c:	0027883a 	mov	r19,zero
 c019680:	843fffc4 	addi	r16,r16,-1
 c019684:	05bfffc4 	movi	r22,-1
 c019688:	0081ffc4 	movi	r2,2047
 c01968c:	003f9606 	br	c0194e8 <__alt_data_end+0xfc0194e8>
 c019690:	8023883a 	mov	r17,r16
 c019694:	b025883a 	mov	r18,r22
 c019698:	280f883a 	mov	r7,r5
 c01969c:	003f8806 	br	c0194c0 <__alt_data_end+0xfc0194c0>
 c0196a0:	8023883a 	mov	r17,r16
 c0196a4:	b025883a 	mov	r18,r22
 c0196a8:	480d883a 	mov	r6,r9
 c0196ac:	280f883a 	mov	r7,r5
 c0196b0:	003f8306 	br	c0194c0 <__alt_data_end+0xfc0194c0>
 c0196b4:	b026d43a 	srli	r19,r22,16
 c0196b8:	902ed43a 	srli	r23,r18,16
 c0196bc:	b5bfffcc 	andi	r22,r22,65535
 c0196c0:	94bfffcc 	andi	r18,r18,65535
 c0196c4:	b00b883a 	mov	r5,r22
 c0196c8:	9009883a 	mov	r4,r18
 c0196cc:	d8c00515 	stw	r3,20(sp)
 c0196d0:	d9800715 	stw	r6,28(sp)
 c0196d4:	da000615 	stw	r8,24(sp)
 c0196d8:	c00473c0 	call	c00473c <__mulsi3>
 c0196dc:	980b883a 	mov	r5,r19
 c0196e0:	9009883a 	mov	r4,r18
 c0196e4:	1029883a 	mov	r20,r2
 c0196e8:	c00473c0 	call	c00473c <__mulsi3>
 c0196ec:	b80b883a 	mov	r5,r23
 c0196f0:	9809883a 	mov	r4,r19
 c0196f4:	102b883a 	mov	r21,r2
 c0196f8:	c00473c0 	call	c00473c <__mulsi3>
 c0196fc:	b809883a 	mov	r4,r23
 c019700:	b00b883a 	mov	r5,r22
 c019704:	1039883a 	mov	fp,r2
 c019708:	c00473c0 	call	c00473c <__mulsi3>
 c01970c:	a008d43a 	srli	r4,r20,16
 c019710:	1545883a 	add	r2,r2,r21
 c019714:	d8c00517 	ldw	r3,20(sp)
 c019718:	2085883a 	add	r2,r4,r2
 c01971c:	d9800717 	ldw	r6,28(sp)
 c019720:	da000617 	ldw	r8,24(sp)
 c019724:	1540022e 	bgeu	r2,r21,c019730 <__muldf3+0x3c4>
 c019728:	01000074 	movhi	r4,1
 c01972c:	e139883a 	add	fp,fp,r4
 c019730:	100e943a 	slli	r7,r2,16
 c019734:	1004d43a 	srli	r2,r2,16
 c019738:	882ad43a 	srli	r21,r17,16
 c01973c:	a53fffcc 	andi	r20,r20,65535
 c019740:	8c7fffcc 	andi	r17,r17,65535
 c019744:	3d29883a 	add	r20,r7,r20
 c019748:	b00b883a 	mov	r5,r22
 c01974c:	8809883a 	mov	r4,r17
 c019750:	d8c00515 	stw	r3,20(sp)
 c019754:	d9800715 	stw	r6,28(sp)
 c019758:	da000615 	stw	r8,24(sp)
 c01975c:	dd000115 	stw	r20,4(sp)
 c019760:	d8800015 	stw	r2,0(sp)
 c019764:	c00473c0 	call	c00473c <__mulsi3>
 c019768:	980b883a 	mov	r5,r19
 c01976c:	8809883a 	mov	r4,r17
 c019770:	d8800215 	stw	r2,8(sp)
 c019774:	c00473c0 	call	c00473c <__mulsi3>
 c019778:	9809883a 	mov	r4,r19
 c01977c:	a80b883a 	mov	r5,r21
 c019780:	1029883a 	mov	r20,r2
 c019784:	c00473c0 	call	c00473c <__mulsi3>
 c019788:	b00b883a 	mov	r5,r22
 c01978c:	a809883a 	mov	r4,r21
 c019790:	d8800415 	stw	r2,16(sp)
 c019794:	c00473c0 	call	c00473c <__mulsi3>
 c019798:	d9c00217 	ldw	r7,8(sp)
 c01979c:	1505883a 	add	r2,r2,r20
 c0197a0:	d8c00517 	ldw	r3,20(sp)
 c0197a4:	3826d43a 	srli	r19,r7,16
 c0197a8:	d9800717 	ldw	r6,28(sp)
 c0197ac:	da000617 	ldw	r8,24(sp)
 c0197b0:	9885883a 	add	r2,r19,r2
 c0197b4:	da400417 	ldw	r9,16(sp)
 c0197b8:	1500022e 	bgeu	r2,r20,c0197c4 <__muldf3+0x458>
 c0197bc:	01000074 	movhi	r4,1
 c0197c0:	4913883a 	add	r9,r9,r4
 c0197c4:	1028d43a 	srli	r20,r2,16
 c0197c8:	1004943a 	slli	r2,r2,16
 c0197cc:	802cd43a 	srli	r22,r16,16
 c0197d0:	843fffcc 	andi	r16,r16,65535
 c0197d4:	3cffffcc 	andi	r19,r7,65535
 c0197d8:	9009883a 	mov	r4,r18
 c0197dc:	800b883a 	mov	r5,r16
 c0197e0:	a269883a 	add	r20,r20,r9
 c0197e4:	d8c00515 	stw	r3,20(sp)
 c0197e8:	d9800715 	stw	r6,28(sp)
 c0197ec:	da000615 	stw	r8,24(sp)
 c0197f0:	14e7883a 	add	r19,r2,r19
 c0197f4:	c00473c0 	call	c00473c <__mulsi3>
 c0197f8:	9009883a 	mov	r4,r18
 c0197fc:	b00b883a 	mov	r5,r22
 c019800:	d8800315 	stw	r2,12(sp)
 c019804:	c00473c0 	call	c00473c <__mulsi3>
 c019808:	b809883a 	mov	r4,r23
 c01980c:	b00b883a 	mov	r5,r22
 c019810:	d8800215 	stw	r2,8(sp)
 c019814:	c00473c0 	call	c00473c <__mulsi3>
 c019818:	b80b883a 	mov	r5,r23
 c01981c:	8009883a 	mov	r4,r16
 c019820:	d8800415 	stw	r2,16(sp)
 c019824:	c00473c0 	call	c00473c <__mulsi3>
 c019828:	da800317 	ldw	r10,12(sp)
 c01982c:	d9c00217 	ldw	r7,8(sp)
 c019830:	d9000017 	ldw	r4,0(sp)
 c019834:	502ed43a 	srli	r23,r10,16
 c019838:	11c5883a 	add	r2,r2,r7
 c01983c:	24e5883a 	add	r18,r4,r19
 c019840:	b885883a 	add	r2,r23,r2
 c019844:	d8c00517 	ldw	r3,20(sp)
 c019848:	d9800717 	ldw	r6,28(sp)
 c01984c:	da000617 	ldw	r8,24(sp)
 c019850:	da400417 	ldw	r9,16(sp)
 c019854:	11c0022e 	bgeu	r2,r7,c019860 <__muldf3+0x4f4>
 c019858:	01000074 	movhi	r4,1
 c01985c:	4913883a 	add	r9,r9,r4
 c019860:	100ed43a 	srli	r7,r2,16
 c019864:	1004943a 	slli	r2,r2,16
 c019868:	55ffffcc 	andi	r23,r10,65535
 c01986c:	3a53883a 	add	r9,r7,r9
 c019870:	8809883a 	mov	r4,r17
 c019874:	800b883a 	mov	r5,r16
 c019878:	d8c00515 	stw	r3,20(sp)
 c01987c:	d9800715 	stw	r6,28(sp)
 c019880:	da000615 	stw	r8,24(sp)
 c019884:	da400415 	stw	r9,16(sp)
 c019888:	15ef883a 	add	r23,r2,r23
 c01988c:	c00473c0 	call	c00473c <__mulsi3>
 c019890:	8809883a 	mov	r4,r17
 c019894:	b00b883a 	mov	r5,r22
 c019898:	d8800215 	stw	r2,8(sp)
 c01989c:	c00473c0 	call	c00473c <__mulsi3>
 c0198a0:	b00b883a 	mov	r5,r22
 c0198a4:	a809883a 	mov	r4,r21
 c0198a8:	d8800315 	stw	r2,12(sp)
 c0198ac:	c00473c0 	call	c00473c <__mulsi3>
 c0198b0:	8009883a 	mov	r4,r16
 c0198b4:	a80b883a 	mov	r5,r21
 c0198b8:	1023883a 	mov	r17,r2
 c0198bc:	c00473c0 	call	c00473c <__mulsi3>
 c0198c0:	d9c00217 	ldw	r7,8(sp)
 c0198c4:	da800317 	ldw	r10,12(sp)
 c0198c8:	d8c00517 	ldw	r3,20(sp)
 c0198cc:	3808d43a 	srli	r4,r7,16
 c0198d0:	1285883a 	add	r2,r2,r10
 c0198d4:	d9800717 	ldw	r6,28(sp)
 c0198d8:	2085883a 	add	r2,r4,r2
 c0198dc:	da000617 	ldw	r8,24(sp)
 c0198e0:	da400417 	ldw	r9,16(sp)
 c0198e4:	1280022e 	bgeu	r2,r10,c0198f0 <__muldf3+0x584>
 c0198e8:	01000074 	movhi	r4,1
 c0198ec:	8923883a 	add	r17,r17,r4
 c0198f0:	1008943a 	slli	r4,r2,16
 c0198f4:	39ffffcc 	andi	r7,r7,65535
 c0198f8:	e4b9883a 	add	fp,fp,r18
 c0198fc:	21cf883a 	add	r7,r4,r7
 c019900:	e4e7803a 	cmpltu	r19,fp,r19
 c019904:	3d0f883a 	add	r7,r7,r20
 c019908:	bf39883a 	add	fp,r23,fp
 c01990c:	99c9883a 	add	r4,r19,r7
 c019910:	e5ef803a 	cmpltu	r23,fp,r23
 c019914:	490b883a 	add	r5,r9,r4
 c019918:	1004d43a 	srli	r2,r2,16
 c01991c:	b965883a 	add	r18,r23,r5
 c019920:	24c9803a 	cmpltu	r4,r4,r19
 c019924:	3d29803a 	cmpltu	r20,r7,r20
 c019928:	a128b03a 	or	r20,r20,r4
 c01992c:	95ef803a 	cmpltu	r23,r18,r23
 c019930:	2a53803a 	cmpltu	r9,r5,r9
 c019934:	a0a9883a 	add	r20,r20,r2
 c019938:	4deeb03a 	or	r23,r9,r23
 c01993c:	a5ef883a 	add	r23,r20,r23
 c019940:	bc63883a 	add	r17,r23,r17
 c019944:	e004927a 	slli	r2,fp,9
 c019948:	d9000117 	ldw	r4,4(sp)
 c01994c:	882e927a 	slli	r23,r17,9
 c019950:	9022d5fa 	srli	r17,r18,23
 c019954:	e038d5fa 	srli	fp,fp,23
 c019958:	1104b03a 	or	r2,r2,r4
 c01995c:	9024927a 	slli	r18,r18,9
 c019960:	1004c03a 	cmpne	r2,r2,zero
 c019964:	bc62b03a 	or	r17,r23,r17
 c019968:	1738b03a 	or	fp,r2,fp
 c01996c:	8880402c 	andhi	r2,r17,256
 c019970:	e4a4b03a 	or	r18,fp,r18
 c019974:	10000726 	beq	r2,zero,c019994 <__muldf3+0x628>
 c019978:	9006d07a 	srli	r3,r18,1
 c01997c:	880497fa 	slli	r2,r17,31
 c019980:	9480004c 	andi	r18,r18,1
 c019984:	8822d07a 	srli	r17,r17,1
 c019988:	1ca4b03a 	or	r18,r3,r18
 c01998c:	14a4b03a 	or	r18,r2,r18
 c019990:	4007883a 	mov	r3,r8
 c019994:	1880ffc4 	addi	r2,r3,1023
 c019998:	0080460e 	bge	zero,r2,c019ab4 <__muldf3+0x748>
 c01999c:	910001cc 	andi	r4,r18,7
 c0199a0:	20000726 	beq	r4,zero,c0199c0 <__muldf3+0x654>
 c0199a4:	910003cc 	andi	r4,r18,15
 c0199a8:	01400104 	movi	r5,4
 c0199ac:	21400426 	beq	r4,r5,c0199c0 <__muldf3+0x654>
 c0199b0:	9149883a 	add	r4,r18,r5
 c0199b4:	24a5803a 	cmpltu	r18,r4,r18
 c0199b8:	8ca3883a 	add	r17,r17,r18
 c0199bc:	2025883a 	mov	r18,r4
 c0199c0:	8900402c 	andhi	r4,r17,256
 c0199c4:	20000426 	beq	r4,zero,c0199d8 <__muldf3+0x66c>
 c0199c8:	18810004 	addi	r2,r3,1024
 c0199cc:	00ffc034 	movhi	r3,65280
 c0199d0:	18ffffc4 	addi	r3,r3,-1
 c0199d4:	88e2703a 	and	r17,r17,r3
 c0199d8:	00c1ff84 	movi	r3,2046
 c0199dc:	18bf1316 	blt	r3,r2,c01962c <__alt_data_end+0xfc01962c>
 c0199e0:	882c977a 	slli	r22,r17,29
 c0199e4:	9024d0fa 	srli	r18,r18,3
 c0199e8:	8822927a 	slli	r17,r17,9
 c0199ec:	1081ffcc 	andi	r2,r2,2047
 c0199f0:	b4acb03a 	or	r22,r22,r18
 c0199f4:	8820d33a 	srli	r16,r17,12
 c0199f8:	3027883a 	mov	r19,r6
 c0199fc:	003eba06 	br	c0194e8 <__alt_data_end+0xfc0194e8>
 c019a00:	8080022c 	andhi	r2,r16,8
 c019a04:	10000926 	beq	r2,zero,c019a2c <__muldf3+0x6c0>
 c019a08:	8880022c 	andhi	r2,r17,8
 c019a0c:	1000071e 	bne	r2,zero,c019a2c <__muldf3+0x6c0>
 c019a10:	00800434 	movhi	r2,16
 c019a14:	8c000234 	orhi	r16,r17,8
 c019a18:	10bfffc4 	addi	r2,r2,-1
 c019a1c:	e027883a 	mov	r19,fp
 c019a20:	80a0703a 	and	r16,r16,r2
 c019a24:	902d883a 	mov	r22,r18
 c019a28:	003f1706 	br	c019688 <__alt_data_end+0xfc019688>
 c019a2c:	00800434 	movhi	r2,16
 c019a30:	84000234 	orhi	r16,r16,8
 c019a34:	10bfffc4 	addi	r2,r2,-1
 c019a38:	80a0703a 	and	r16,r16,r2
 c019a3c:	003f1206 	br	c019688 <__alt_data_end+0xfc019688>
 c019a40:	147ff604 	addi	r17,r2,-40
 c019a44:	3462983a 	sll	r17,r6,r17
 c019a48:	0025883a 	mov	r18,zero
 c019a4c:	003ef306 	br	c01961c <__alt_data_end+0xfc01961c>
 c019a50:	3009883a 	mov	r4,r6
 c019a54:	d9400215 	stw	r5,8(sp)
 c019a58:	d9800715 	stw	r6,28(sp)
 c019a5c:	da400415 	stw	r9,16(sp)
 c019a60:	da800315 	stw	r10,12(sp)
 c019a64:	c01a8800 	call	c01a880 <__clzsi2>
 c019a68:	10800804 	addi	r2,r2,32
 c019a6c:	da800317 	ldw	r10,12(sp)
 c019a70:	da400417 	ldw	r9,16(sp)
 c019a74:	d9800717 	ldw	r6,28(sp)
 c019a78:	d9400217 	ldw	r5,8(sp)
 c019a7c:	003edd06 	br	c0195f4 <__alt_data_end+0xfc0195f4>
 c019a80:	143ff604 	addi	r16,r2,-40
 c019a84:	ac20983a 	sll	r16,r21,r16
 c019a88:	002d883a 	mov	r22,zero
 c019a8c:	003ec106 	br	c019594 <__alt_data_end+0xfc019594>
 c019a90:	d9800715 	stw	r6,28(sp)
 c019a94:	d9c00215 	stw	r7,8(sp)
 c019a98:	da400415 	stw	r9,16(sp)
 c019a9c:	c01a8800 	call	c01a880 <__clzsi2>
 c019aa0:	10800804 	addi	r2,r2,32
 c019aa4:	da400417 	ldw	r9,16(sp)
 c019aa8:	d9c00217 	ldw	r7,8(sp)
 c019aac:	d9800717 	ldw	r6,28(sp)
 c019ab0:	003eae06 	br	c01956c <__alt_data_end+0xfc01956c>
 c019ab4:	00c00044 	movi	r3,1
 c019ab8:	1887c83a 	sub	r3,r3,r2
 c019abc:	01000e04 	movi	r4,56
 c019ac0:	20fe8516 	blt	r4,r3,c0194d8 <__alt_data_end+0xfc0194d8>
 c019ac4:	010007c4 	movi	r4,31
 c019ac8:	20c01b16 	blt	r4,r3,c019b38 <__muldf3+0x7cc>
 c019acc:	00800804 	movi	r2,32
 c019ad0:	10c5c83a 	sub	r2,r2,r3
 c019ad4:	888a983a 	sll	r5,r17,r2
 c019ad8:	90c8d83a 	srl	r4,r18,r3
 c019adc:	9084983a 	sll	r2,r18,r2
 c019ae0:	88e2d83a 	srl	r17,r17,r3
 c019ae4:	2906b03a 	or	r3,r5,r4
 c019ae8:	1004c03a 	cmpne	r2,r2,zero
 c019aec:	1886b03a 	or	r3,r3,r2
 c019af0:	188001cc 	andi	r2,r3,7
 c019af4:	10000726 	beq	r2,zero,c019b14 <__muldf3+0x7a8>
 c019af8:	188003cc 	andi	r2,r3,15
 c019afc:	01000104 	movi	r4,4
 c019b00:	11000426 	beq	r2,r4,c019b14 <__muldf3+0x7a8>
 c019b04:	1805883a 	mov	r2,r3
 c019b08:	10c00104 	addi	r3,r2,4
 c019b0c:	1885803a 	cmpltu	r2,r3,r2
 c019b10:	88a3883a 	add	r17,r17,r2
 c019b14:	8880202c 	andhi	r2,r17,128
 c019b18:	10001c26 	beq	r2,zero,c019b8c <__muldf3+0x820>
 c019b1c:	3027883a 	mov	r19,r6
 c019b20:	00800044 	movi	r2,1
 c019b24:	0021883a 	mov	r16,zero
 c019b28:	002d883a 	mov	r22,zero
 c019b2c:	003e6e06 	br	c0194e8 <__alt_data_end+0xfc0194e8>
 c019b30:	4007883a 	mov	r3,r8
 c019b34:	003f9706 	br	c019994 <__alt_data_end+0xfc019994>
 c019b38:	017ff844 	movi	r5,-31
 c019b3c:	2885c83a 	sub	r2,r5,r2
 c019b40:	888ad83a 	srl	r5,r17,r2
 c019b44:	00800804 	movi	r2,32
 c019b48:	18801a26 	beq	r3,r2,c019bb4 <__muldf3+0x848>
 c019b4c:	01001004 	movi	r4,64
 c019b50:	20c7c83a 	sub	r3,r4,r3
 c019b54:	88e2983a 	sll	r17,r17,r3
 c019b58:	8ca4b03a 	or	r18,r17,r18
 c019b5c:	9004c03a 	cmpne	r2,r18,zero
 c019b60:	2884b03a 	or	r2,r5,r2
 c019b64:	144001cc 	andi	r17,r2,7
 c019b68:	88000d1e 	bne	r17,zero,c019ba0 <__muldf3+0x834>
 c019b6c:	0021883a 	mov	r16,zero
 c019b70:	102cd0fa 	srli	r22,r2,3
 c019b74:	3027883a 	mov	r19,r6
 c019b78:	0005883a 	mov	r2,zero
 c019b7c:	b46cb03a 	or	r22,r22,r17
 c019b80:	003e5906 	br	c0194e8 <__alt_data_end+0xfc0194e8>
 c019b84:	1007883a 	mov	r3,r2
 c019b88:	0023883a 	mov	r17,zero
 c019b8c:	8820927a 	slli	r16,r17,9
 c019b90:	1805883a 	mov	r2,r3
 c019b94:	8822977a 	slli	r17,r17,29
 c019b98:	8020d33a 	srli	r16,r16,12
 c019b9c:	003ff406 	br	c019b70 <__alt_data_end+0xfc019b70>
 c019ba0:	10c003cc 	andi	r3,r2,15
 c019ba4:	01000104 	movi	r4,4
 c019ba8:	193ff626 	beq	r3,r4,c019b84 <__alt_data_end+0xfc019b84>
 c019bac:	0023883a 	mov	r17,zero
 c019bb0:	003fd506 	br	c019b08 <__alt_data_end+0xfc019b08>
 c019bb4:	0023883a 	mov	r17,zero
 c019bb8:	003fe706 	br	c019b58 <__alt_data_end+0xfc019b58>
 c019bbc:	00800434 	movhi	r2,16
 c019bc0:	8c000234 	orhi	r16,r17,8
 c019bc4:	10bfffc4 	addi	r2,r2,-1
 c019bc8:	3027883a 	mov	r19,r6
 c019bcc:	80a0703a 	and	r16,r16,r2
 c019bd0:	902d883a 	mov	r22,r18
 c019bd4:	003eac06 	br	c019688 <__alt_data_end+0xfc019688>

0c019bd8 <__subdf3>:
 c019bd8:	02000434 	movhi	r8,16
 c019bdc:	423fffc4 	addi	r8,r8,-1
 c019be0:	defffb04 	addi	sp,sp,-20
 c019be4:	2a14703a 	and	r10,r5,r8
 c019be8:	3812d53a 	srli	r9,r7,20
 c019bec:	3a10703a 	and	r8,r7,r8
 c019bf0:	2006d77a 	srli	r3,r4,29
 c019bf4:	3004d77a 	srli	r2,r6,29
 c019bf8:	dc000015 	stw	r16,0(sp)
 c019bfc:	501490fa 	slli	r10,r10,3
 c019c00:	2820d53a 	srli	r16,r5,20
 c019c04:	401090fa 	slli	r8,r8,3
 c019c08:	dc800215 	stw	r18,8(sp)
 c019c0c:	dc400115 	stw	r17,4(sp)
 c019c10:	dfc00415 	stw	ra,16(sp)
 c019c14:	202290fa 	slli	r17,r4,3
 c019c18:	dcc00315 	stw	r19,12(sp)
 c019c1c:	4a41ffcc 	andi	r9,r9,2047
 c019c20:	0101ffc4 	movi	r4,2047
 c019c24:	2824d7fa 	srli	r18,r5,31
 c019c28:	8401ffcc 	andi	r16,r16,2047
 c019c2c:	50c6b03a 	or	r3,r10,r3
 c019c30:	380ed7fa 	srli	r7,r7,31
 c019c34:	408ab03a 	or	r5,r8,r2
 c019c38:	300c90fa 	slli	r6,r6,3
 c019c3c:	49009626 	beq	r9,r4,c019e98 <__subdf3+0x2c0>
 c019c40:	39c0005c 	xori	r7,r7,1
 c019c44:	8245c83a 	sub	r2,r16,r9
 c019c48:	3c807426 	beq	r7,r18,c019e1c <__subdf3+0x244>
 c019c4c:	0080af0e 	bge	zero,r2,c019f0c <__subdf3+0x334>
 c019c50:	48002a1e 	bne	r9,zero,c019cfc <__subdf3+0x124>
 c019c54:	2988b03a 	or	r4,r5,r6
 c019c58:	20009a1e 	bne	r4,zero,c019ec4 <__subdf3+0x2ec>
 c019c5c:	888001cc 	andi	r2,r17,7
 c019c60:	10000726 	beq	r2,zero,c019c80 <__subdf3+0xa8>
 c019c64:	888003cc 	andi	r2,r17,15
 c019c68:	01000104 	movi	r4,4
 c019c6c:	11000426 	beq	r2,r4,c019c80 <__subdf3+0xa8>
 c019c70:	890b883a 	add	r5,r17,r4
 c019c74:	2c63803a 	cmpltu	r17,r5,r17
 c019c78:	1c47883a 	add	r3,r3,r17
 c019c7c:	2823883a 	mov	r17,r5
 c019c80:	1880202c 	andhi	r2,r3,128
 c019c84:	10005926 	beq	r2,zero,c019dec <__subdf3+0x214>
 c019c88:	84000044 	addi	r16,r16,1
 c019c8c:	0081ffc4 	movi	r2,2047
 c019c90:	8080be26 	beq	r16,r2,c019f8c <__subdf3+0x3b4>
 c019c94:	017fe034 	movhi	r5,65408
 c019c98:	297fffc4 	addi	r5,r5,-1
 c019c9c:	1946703a 	and	r3,r3,r5
 c019ca0:	1804977a 	slli	r2,r3,29
 c019ca4:	1806927a 	slli	r3,r3,9
 c019ca8:	8822d0fa 	srli	r17,r17,3
 c019cac:	8401ffcc 	andi	r16,r16,2047
 c019cb0:	180ad33a 	srli	r5,r3,12
 c019cb4:	9100004c 	andi	r4,r18,1
 c019cb8:	1444b03a 	or	r2,r2,r17
 c019cbc:	80c1ffcc 	andi	r3,r16,2047
 c019cc0:	1820953a 	slli	r16,r3,20
 c019cc4:	20c03fcc 	andi	r3,r4,255
 c019cc8:	180897fa 	slli	r4,r3,31
 c019ccc:	00c00434 	movhi	r3,16
 c019cd0:	18ffffc4 	addi	r3,r3,-1
 c019cd4:	28c6703a 	and	r3,r5,r3
 c019cd8:	1c06b03a 	or	r3,r3,r16
 c019cdc:	1906b03a 	or	r3,r3,r4
 c019ce0:	dfc00417 	ldw	ra,16(sp)
 c019ce4:	dcc00317 	ldw	r19,12(sp)
 c019ce8:	dc800217 	ldw	r18,8(sp)
 c019cec:	dc400117 	ldw	r17,4(sp)
 c019cf0:	dc000017 	ldw	r16,0(sp)
 c019cf4:	dec00504 	addi	sp,sp,20
 c019cf8:	f800283a 	ret
 c019cfc:	0101ffc4 	movi	r4,2047
 c019d00:	813fd626 	beq	r16,r4,c019c5c <__alt_data_end+0xfc019c5c>
 c019d04:	29402034 	orhi	r5,r5,128
 c019d08:	01000e04 	movi	r4,56
 c019d0c:	2080a316 	blt	r4,r2,c019f9c <__subdf3+0x3c4>
 c019d10:	010007c4 	movi	r4,31
 c019d14:	2080c616 	blt	r4,r2,c01a030 <__subdf3+0x458>
 c019d18:	01000804 	movi	r4,32
 c019d1c:	2089c83a 	sub	r4,r4,r2
 c019d20:	2910983a 	sll	r8,r5,r4
 c019d24:	308ed83a 	srl	r7,r6,r2
 c019d28:	3108983a 	sll	r4,r6,r4
 c019d2c:	2884d83a 	srl	r2,r5,r2
 c019d30:	41ccb03a 	or	r6,r8,r7
 c019d34:	2008c03a 	cmpne	r4,r4,zero
 c019d38:	310cb03a 	or	r6,r6,r4
 c019d3c:	898dc83a 	sub	r6,r17,r6
 c019d40:	89a3803a 	cmpltu	r17,r17,r6
 c019d44:	1887c83a 	sub	r3,r3,r2
 c019d48:	1c47c83a 	sub	r3,r3,r17
 c019d4c:	3023883a 	mov	r17,r6
 c019d50:	1880202c 	andhi	r2,r3,128
 c019d54:	10002326 	beq	r2,zero,c019de4 <__subdf3+0x20c>
 c019d58:	04c02034 	movhi	r19,128
 c019d5c:	9cffffc4 	addi	r19,r19,-1
 c019d60:	1ce6703a 	and	r19,r3,r19
 c019d64:	98007a26 	beq	r19,zero,c019f50 <__subdf3+0x378>
 c019d68:	9809883a 	mov	r4,r19
 c019d6c:	c01a8800 	call	c01a880 <__clzsi2>
 c019d70:	113ffe04 	addi	r4,r2,-8
 c019d74:	00c007c4 	movi	r3,31
 c019d78:	19007b16 	blt	r3,r4,c019f68 <__subdf3+0x390>
 c019d7c:	00800804 	movi	r2,32
 c019d80:	1105c83a 	sub	r2,r2,r4
 c019d84:	8884d83a 	srl	r2,r17,r2
 c019d88:	9906983a 	sll	r3,r19,r4
 c019d8c:	8922983a 	sll	r17,r17,r4
 c019d90:	10c4b03a 	or	r2,r2,r3
 c019d94:	24007816 	blt	r4,r16,c019f78 <__subdf3+0x3a0>
 c019d98:	2421c83a 	sub	r16,r4,r16
 c019d9c:	80c00044 	addi	r3,r16,1
 c019da0:	010007c4 	movi	r4,31
 c019da4:	20c09516 	blt	r4,r3,c019ffc <__subdf3+0x424>
 c019da8:	01400804 	movi	r5,32
 c019dac:	28cbc83a 	sub	r5,r5,r3
 c019db0:	88c8d83a 	srl	r4,r17,r3
 c019db4:	8962983a 	sll	r17,r17,r5
 c019db8:	114a983a 	sll	r5,r2,r5
 c019dbc:	10c6d83a 	srl	r3,r2,r3
 c019dc0:	8804c03a 	cmpne	r2,r17,zero
 c019dc4:	290ab03a 	or	r5,r5,r4
 c019dc8:	28a2b03a 	or	r17,r5,r2
 c019dcc:	0021883a 	mov	r16,zero
 c019dd0:	003fa206 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c019dd4:	2090b03a 	or	r8,r4,r2
 c019dd8:	40018e26 	beq	r8,zero,c01a414 <__subdf3+0x83c>
 c019ddc:	1007883a 	mov	r3,r2
 c019de0:	2023883a 	mov	r17,r4
 c019de4:	888001cc 	andi	r2,r17,7
 c019de8:	103f9e1e 	bne	r2,zero,c019c64 <__alt_data_end+0xfc019c64>
 c019dec:	1804977a 	slli	r2,r3,29
 c019df0:	8822d0fa 	srli	r17,r17,3
 c019df4:	1810d0fa 	srli	r8,r3,3
 c019df8:	9100004c 	andi	r4,r18,1
 c019dfc:	1444b03a 	or	r2,r2,r17
 c019e00:	00c1ffc4 	movi	r3,2047
 c019e04:	80c02826 	beq	r16,r3,c019ea8 <__subdf3+0x2d0>
 c019e08:	01400434 	movhi	r5,16
 c019e0c:	297fffc4 	addi	r5,r5,-1
 c019e10:	80e0703a 	and	r16,r16,r3
 c019e14:	414a703a 	and	r5,r8,r5
 c019e18:	003fa806 	br	c019cbc <__alt_data_end+0xfc019cbc>
 c019e1c:	0080630e 	bge	zero,r2,c019fac <__subdf3+0x3d4>
 c019e20:	48003026 	beq	r9,zero,c019ee4 <__subdf3+0x30c>
 c019e24:	0101ffc4 	movi	r4,2047
 c019e28:	813f8c26 	beq	r16,r4,c019c5c <__alt_data_end+0xfc019c5c>
 c019e2c:	29402034 	orhi	r5,r5,128
 c019e30:	01000e04 	movi	r4,56
 c019e34:	2080a90e 	bge	r4,r2,c01a0dc <__subdf3+0x504>
 c019e38:	298cb03a 	or	r6,r5,r6
 c019e3c:	3012c03a 	cmpne	r9,r6,zero
 c019e40:	0005883a 	mov	r2,zero
 c019e44:	4c53883a 	add	r9,r9,r17
 c019e48:	4c63803a 	cmpltu	r17,r9,r17
 c019e4c:	10c7883a 	add	r3,r2,r3
 c019e50:	88c7883a 	add	r3,r17,r3
 c019e54:	4823883a 	mov	r17,r9
 c019e58:	1880202c 	andhi	r2,r3,128
 c019e5c:	1000d026 	beq	r2,zero,c01a1a0 <__subdf3+0x5c8>
 c019e60:	84000044 	addi	r16,r16,1
 c019e64:	0081ffc4 	movi	r2,2047
 c019e68:	8080fe26 	beq	r16,r2,c01a264 <__subdf3+0x68c>
 c019e6c:	00bfe034 	movhi	r2,65408
 c019e70:	10bfffc4 	addi	r2,r2,-1
 c019e74:	1886703a 	and	r3,r3,r2
 c019e78:	880ad07a 	srli	r5,r17,1
 c019e7c:	180497fa 	slli	r2,r3,31
 c019e80:	8900004c 	andi	r4,r17,1
 c019e84:	2922b03a 	or	r17,r5,r4
 c019e88:	1806d07a 	srli	r3,r3,1
 c019e8c:	1462b03a 	or	r17,r2,r17
 c019e90:	3825883a 	mov	r18,r7
 c019e94:	003f7106 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c019e98:	2984b03a 	or	r2,r5,r6
 c019e9c:	103f6826 	beq	r2,zero,c019c40 <__alt_data_end+0xfc019c40>
 c019ea0:	39c03fcc 	andi	r7,r7,255
 c019ea4:	003f6706 	br	c019c44 <__alt_data_end+0xfc019c44>
 c019ea8:	4086b03a 	or	r3,r8,r2
 c019eac:	18015226 	beq	r3,zero,c01a3f8 <__subdf3+0x820>
 c019eb0:	00c00434 	movhi	r3,16
 c019eb4:	41400234 	orhi	r5,r8,8
 c019eb8:	18ffffc4 	addi	r3,r3,-1
 c019ebc:	28ca703a 	and	r5,r5,r3
 c019ec0:	003f7e06 	br	c019cbc <__alt_data_end+0xfc019cbc>
 c019ec4:	10bfffc4 	addi	r2,r2,-1
 c019ec8:	1000491e 	bne	r2,zero,c019ff0 <__subdf3+0x418>
 c019ecc:	898fc83a 	sub	r7,r17,r6
 c019ed0:	89e3803a 	cmpltu	r17,r17,r7
 c019ed4:	1947c83a 	sub	r3,r3,r5
 c019ed8:	1c47c83a 	sub	r3,r3,r17
 c019edc:	3823883a 	mov	r17,r7
 c019ee0:	003f9b06 	br	c019d50 <__alt_data_end+0xfc019d50>
 c019ee4:	2988b03a 	or	r4,r5,r6
 c019ee8:	203f5c26 	beq	r4,zero,c019c5c <__alt_data_end+0xfc019c5c>
 c019eec:	10bfffc4 	addi	r2,r2,-1
 c019ef0:	1000931e 	bne	r2,zero,c01a140 <__subdf3+0x568>
 c019ef4:	898d883a 	add	r6,r17,r6
 c019ef8:	3463803a 	cmpltu	r17,r6,r17
 c019efc:	1947883a 	add	r3,r3,r5
 c019f00:	88c7883a 	add	r3,r17,r3
 c019f04:	3023883a 	mov	r17,r6
 c019f08:	003fd306 	br	c019e58 <__alt_data_end+0xfc019e58>
 c019f0c:	1000541e 	bne	r2,zero,c01a060 <__subdf3+0x488>
 c019f10:	80800044 	addi	r2,r16,1
 c019f14:	1081ffcc 	andi	r2,r2,2047
 c019f18:	01000044 	movi	r4,1
 c019f1c:	2080a20e 	bge	r4,r2,c01a1a8 <__subdf3+0x5d0>
 c019f20:	8989c83a 	sub	r4,r17,r6
 c019f24:	8905803a 	cmpltu	r2,r17,r4
 c019f28:	1967c83a 	sub	r19,r3,r5
 c019f2c:	98a7c83a 	sub	r19,r19,r2
 c019f30:	9880202c 	andhi	r2,r19,128
 c019f34:	10006326 	beq	r2,zero,c01a0c4 <__subdf3+0x4ec>
 c019f38:	3463c83a 	sub	r17,r6,r17
 c019f3c:	28c7c83a 	sub	r3,r5,r3
 c019f40:	344d803a 	cmpltu	r6,r6,r17
 c019f44:	19a7c83a 	sub	r19,r3,r6
 c019f48:	3825883a 	mov	r18,r7
 c019f4c:	983f861e 	bne	r19,zero,c019d68 <__alt_data_end+0xfc019d68>
 c019f50:	8809883a 	mov	r4,r17
 c019f54:	c01a8800 	call	c01a880 <__clzsi2>
 c019f58:	10800804 	addi	r2,r2,32
 c019f5c:	113ffe04 	addi	r4,r2,-8
 c019f60:	00c007c4 	movi	r3,31
 c019f64:	193f850e 	bge	r3,r4,c019d7c <__alt_data_end+0xfc019d7c>
 c019f68:	10bff604 	addi	r2,r2,-40
 c019f6c:	8884983a 	sll	r2,r17,r2
 c019f70:	0023883a 	mov	r17,zero
 c019f74:	243f880e 	bge	r4,r16,c019d98 <__alt_data_end+0xfc019d98>
 c019f78:	00ffe034 	movhi	r3,65408
 c019f7c:	18ffffc4 	addi	r3,r3,-1
 c019f80:	8121c83a 	sub	r16,r16,r4
 c019f84:	10c6703a 	and	r3,r2,r3
 c019f88:	003f3406 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c019f8c:	9100004c 	andi	r4,r18,1
 c019f90:	000b883a 	mov	r5,zero
 c019f94:	0005883a 	mov	r2,zero
 c019f98:	003f4806 	br	c019cbc <__alt_data_end+0xfc019cbc>
 c019f9c:	298cb03a 	or	r6,r5,r6
 c019fa0:	300cc03a 	cmpne	r6,r6,zero
 c019fa4:	0005883a 	mov	r2,zero
 c019fa8:	003f6406 	br	c019d3c <__alt_data_end+0xfc019d3c>
 c019fac:	10009a1e 	bne	r2,zero,c01a218 <__subdf3+0x640>
 c019fb0:	82400044 	addi	r9,r16,1
 c019fb4:	4881ffcc 	andi	r2,r9,2047
 c019fb8:	02800044 	movi	r10,1
 c019fbc:	5080670e 	bge	r10,r2,c01a15c <__subdf3+0x584>
 c019fc0:	0081ffc4 	movi	r2,2047
 c019fc4:	4880af26 	beq	r9,r2,c01a284 <__subdf3+0x6ac>
 c019fc8:	898d883a 	add	r6,r17,r6
 c019fcc:	1945883a 	add	r2,r3,r5
 c019fd0:	3447803a 	cmpltu	r3,r6,r17
 c019fd4:	1887883a 	add	r3,r3,r2
 c019fd8:	182297fa 	slli	r17,r3,31
 c019fdc:	300cd07a 	srli	r6,r6,1
 c019fe0:	1806d07a 	srli	r3,r3,1
 c019fe4:	4821883a 	mov	r16,r9
 c019fe8:	89a2b03a 	or	r17,r17,r6
 c019fec:	003f1b06 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c019ff0:	0101ffc4 	movi	r4,2047
 c019ff4:	813f441e 	bne	r16,r4,c019d08 <__alt_data_end+0xfc019d08>
 c019ff8:	003f1806 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c019ffc:	843ff844 	addi	r16,r16,-31
 c01a000:	01400804 	movi	r5,32
 c01a004:	1408d83a 	srl	r4,r2,r16
 c01a008:	19405026 	beq	r3,r5,c01a14c <__subdf3+0x574>
 c01a00c:	01401004 	movi	r5,64
 c01a010:	28c7c83a 	sub	r3,r5,r3
 c01a014:	10c4983a 	sll	r2,r2,r3
 c01a018:	88a2b03a 	or	r17,r17,r2
 c01a01c:	8822c03a 	cmpne	r17,r17,zero
 c01a020:	2462b03a 	or	r17,r4,r17
 c01a024:	0007883a 	mov	r3,zero
 c01a028:	0021883a 	mov	r16,zero
 c01a02c:	003f6d06 	br	c019de4 <__alt_data_end+0xfc019de4>
 c01a030:	11fff804 	addi	r7,r2,-32
 c01a034:	01000804 	movi	r4,32
 c01a038:	29ced83a 	srl	r7,r5,r7
 c01a03c:	11004526 	beq	r2,r4,c01a154 <__subdf3+0x57c>
 c01a040:	01001004 	movi	r4,64
 c01a044:	2089c83a 	sub	r4,r4,r2
 c01a048:	2904983a 	sll	r2,r5,r4
 c01a04c:	118cb03a 	or	r6,r2,r6
 c01a050:	300cc03a 	cmpne	r6,r6,zero
 c01a054:	398cb03a 	or	r6,r7,r6
 c01a058:	0005883a 	mov	r2,zero
 c01a05c:	003f3706 	br	c019d3c <__alt_data_end+0xfc019d3c>
 c01a060:	80002a26 	beq	r16,zero,c01a10c <__subdf3+0x534>
 c01a064:	0101ffc4 	movi	r4,2047
 c01a068:	49006626 	beq	r9,r4,c01a204 <__subdf3+0x62c>
 c01a06c:	0085c83a 	sub	r2,zero,r2
 c01a070:	18c02034 	orhi	r3,r3,128
 c01a074:	01000e04 	movi	r4,56
 c01a078:	20807e16 	blt	r4,r2,c01a274 <__subdf3+0x69c>
 c01a07c:	010007c4 	movi	r4,31
 c01a080:	2080e716 	blt	r4,r2,c01a420 <__subdf3+0x848>
 c01a084:	01000804 	movi	r4,32
 c01a088:	2089c83a 	sub	r4,r4,r2
 c01a08c:	1914983a 	sll	r10,r3,r4
 c01a090:	8890d83a 	srl	r8,r17,r2
 c01a094:	8908983a 	sll	r4,r17,r4
 c01a098:	1884d83a 	srl	r2,r3,r2
 c01a09c:	5222b03a 	or	r17,r10,r8
 c01a0a0:	2006c03a 	cmpne	r3,r4,zero
 c01a0a4:	88e2b03a 	or	r17,r17,r3
 c01a0a8:	3463c83a 	sub	r17,r6,r17
 c01a0ac:	2885c83a 	sub	r2,r5,r2
 c01a0b0:	344d803a 	cmpltu	r6,r6,r17
 c01a0b4:	1187c83a 	sub	r3,r2,r6
 c01a0b8:	4821883a 	mov	r16,r9
 c01a0bc:	3825883a 	mov	r18,r7
 c01a0c0:	003f2306 	br	c019d50 <__alt_data_end+0xfc019d50>
 c01a0c4:	24d0b03a 	or	r8,r4,r19
 c01a0c8:	40001b1e 	bne	r8,zero,c01a138 <__subdf3+0x560>
 c01a0cc:	0005883a 	mov	r2,zero
 c01a0d0:	0009883a 	mov	r4,zero
 c01a0d4:	0021883a 	mov	r16,zero
 c01a0d8:	003f4906 	br	c019e00 <__alt_data_end+0xfc019e00>
 c01a0dc:	010007c4 	movi	r4,31
 c01a0e0:	20803a16 	blt	r4,r2,c01a1cc <__subdf3+0x5f4>
 c01a0e4:	01000804 	movi	r4,32
 c01a0e8:	2089c83a 	sub	r4,r4,r2
 c01a0ec:	2912983a 	sll	r9,r5,r4
 c01a0f0:	3090d83a 	srl	r8,r6,r2
 c01a0f4:	3108983a 	sll	r4,r6,r4
 c01a0f8:	2884d83a 	srl	r2,r5,r2
 c01a0fc:	4a12b03a 	or	r9,r9,r8
 c01a100:	2008c03a 	cmpne	r4,r4,zero
 c01a104:	4912b03a 	or	r9,r9,r4
 c01a108:	003f4e06 	br	c019e44 <__alt_data_end+0xfc019e44>
 c01a10c:	1c48b03a 	or	r4,r3,r17
 c01a110:	20003c26 	beq	r4,zero,c01a204 <__subdf3+0x62c>
 c01a114:	0084303a 	nor	r2,zero,r2
 c01a118:	1000381e 	bne	r2,zero,c01a1fc <__subdf3+0x624>
 c01a11c:	3463c83a 	sub	r17,r6,r17
 c01a120:	28c5c83a 	sub	r2,r5,r3
 c01a124:	344d803a 	cmpltu	r6,r6,r17
 c01a128:	1187c83a 	sub	r3,r2,r6
 c01a12c:	4821883a 	mov	r16,r9
 c01a130:	3825883a 	mov	r18,r7
 c01a134:	003f0606 	br	c019d50 <__alt_data_end+0xfc019d50>
 c01a138:	2023883a 	mov	r17,r4
 c01a13c:	003f0906 	br	c019d64 <__alt_data_end+0xfc019d64>
 c01a140:	0101ffc4 	movi	r4,2047
 c01a144:	813f3a1e 	bne	r16,r4,c019e30 <__alt_data_end+0xfc019e30>
 c01a148:	003ec406 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a14c:	0005883a 	mov	r2,zero
 c01a150:	003fb106 	br	c01a018 <__alt_data_end+0xfc01a018>
 c01a154:	0005883a 	mov	r2,zero
 c01a158:	003fbc06 	br	c01a04c <__alt_data_end+0xfc01a04c>
 c01a15c:	1c44b03a 	or	r2,r3,r17
 c01a160:	80008e1e 	bne	r16,zero,c01a39c <__subdf3+0x7c4>
 c01a164:	1000c826 	beq	r2,zero,c01a488 <__subdf3+0x8b0>
 c01a168:	2984b03a 	or	r2,r5,r6
 c01a16c:	103ebb26 	beq	r2,zero,c019c5c <__alt_data_end+0xfc019c5c>
 c01a170:	8989883a 	add	r4,r17,r6
 c01a174:	1945883a 	add	r2,r3,r5
 c01a178:	2447803a 	cmpltu	r3,r4,r17
 c01a17c:	1887883a 	add	r3,r3,r2
 c01a180:	1880202c 	andhi	r2,r3,128
 c01a184:	2023883a 	mov	r17,r4
 c01a188:	103f1626 	beq	r2,zero,c019de4 <__alt_data_end+0xfc019de4>
 c01a18c:	00bfe034 	movhi	r2,65408
 c01a190:	10bfffc4 	addi	r2,r2,-1
 c01a194:	5021883a 	mov	r16,r10
 c01a198:	1886703a 	and	r3,r3,r2
 c01a19c:	003eaf06 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a1a0:	3825883a 	mov	r18,r7
 c01a1a4:	003f0f06 	br	c019de4 <__alt_data_end+0xfc019de4>
 c01a1a8:	1c44b03a 	or	r2,r3,r17
 c01a1ac:	8000251e 	bne	r16,zero,c01a244 <__subdf3+0x66c>
 c01a1b0:	1000661e 	bne	r2,zero,c01a34c <__subdf3+0x774>
 c01a1b4:	2990b03a 	or	r8,r5,r6
 c01a1b8:	40009626 	beq	r8,zero,c01a414 <__subdf3+0x83c>
 c01a1bc:	2807883a 	mov	r3,r5
 c01a1c0:	3023883a 	mov	r17,r6
 c01a1c4:	3825883a 	mov	r18,r7
 c01a1c8:	003ea406 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a1cc:	127ff804 	addi	r9,r2,-32
 c01a1d0:	01000804 	movi	r4,32
 c01a1d4:	2a52d83a 	srl	r9,r5,r9
 c01a1d8:	11008c26 	beq	r2,r4,c01a40c <__subdf3+0x834>
 c01a1dc:	01001004 	movi	r4,64
 c01a1e0:	2085c83a 	sub	r2,r4,r2
 c01a1e4:	2884983a 	sll	r2,r5,r2
 c01a1e8:	118cb03a 	or	r6,r2,r6
 c01a1ec:	300cc03a 	cmpne	r6,r6,zero
 c01a1f0:	4992b03a 	or	r9,r9,r6
 c01a1f4:	0005883a 	mov	r2,zero
 c01a1f8:	003f1206 	br	c019e44 <__alt_data_end+0xfc019e44>
 c01a1fc:	0101ffc4 	movi	r4,2047
 c01a200:	493f9c1e 	bne	r9,r4,c01a074 <__alt_data_end+0xfc01a074>
 c01a204:	2807883a 	mov	r3,r5
 c01a208:	3023883a 	mov	r17,r6
 c01a20c:	4821883a 	mov	r16,r9
 c01a210:	3825883a 	mov	r18,r7
 c01a214:	003e9106 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a218:	80001f1e 	bne	r16,zero,c01a298 <__subdf3+0x6c0>
 c01a21c:	1c48b03a 	or	r4,r3,r17
 c01a220:	20005a26 	beq	r4,zero,c01a38c <__subdf3+0x7b4>
 c01a224:	0084303a 	nor	r2,zero,r2
 c01a228:	1000561e 	bne	r2,zero,c01a384 <__subdf3+0x7ac>
 c01a22c:	89a3883a 	add	r17,r17,r6
 c01a230:	1945883a 	add	r2,r3,r5
 c01a234:	898d803a 	cmpltu	r6,r17,r6
 c01a238:	3087883a 	add	r3,r6,r2
 c01a23c:	4821883a 	mov	r16,r9
 c01a240:	003f0506 	br	c019e58 <__alt_data_end+0xfc019e58>
 c01a244:	10002b1e 	bne	r2,zero,c01a2f4 <__subdf3+0x71c>
 c01a248:	2984b03a 	or	r2,r5,r6
 c01a24c:	10008026 	beq	r2,zero,c01a450 <__subdf3+0x878>
 c01a250:	2807883a 	mov	r3,r5
 c01a254:	3023883a 	mov	r17,r6
 c01a258:	3825883a 	mov	r18,r7
 c01a25c:	0401ffc4 	movi	r16,2047
 c01a260:	003e7e06 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a264:	3809883a 	mov	r4,r7
 c01a268:	0011883a 	mov	r8,zero
 c01a26c:	0005883a 	mov	r2,zero
 c01a270:	003ee306 	br	c019e00 <__alt_data_end+0xfc019e00>
 c01a274:	1c62b03a 	or	r17,r3,r17
 c01a278:	8822c03a 	cmpne	r17,r17,zero
 c01a27c:	0005883a 	mov	r2,zero
 c01a280:	003f8906 	br	c01a0a8 <__alt_data_end+0xfc01a0a8>
 c01a284:	3809883a 	mov	r4,r7
 c01a288:	4821883a 	mov	r16,r9
 c01a28c:	0011883a 	mov	r8,zero
 c01a290:	0005883a 	mov	r2,zero
 c01a294:	003eda06 	br	c019e00 <__alt_data_end+0xfc019e00>
 c01a298:	0101ffc4 	movi	r4,2047
 c01a29c:	49003b26 	beq	r9,r4,c01a38c <__subdf3+0x7b4>
 c01a2a0:	0085c83a 	sub	r2,zero,r2
 c01a2a4:	18c02034 	orhi	r3,r3,128
 c01a2a8:	01000e04 	movi	r4,56
 c01a2ac:	20806e16 	blt	r4,r2,c01a468 <__subdf3+0x890>
 c01a2b0:	010007c4 	movi	r4,31
 c01a2b4:	20807716 	blt	r4,r2,c01a494 <__subdf3+0x8bc>
 c01a2b8:	01000804 	movi	r4,32
 c01a2bc:	2089c83a 	sub	r4,r4,r2
 c01a2c0:	1914983a 	sll	r10,r3,r4
 c01a2c4:	8890d83a 	srl	r8,r17,r2
 c01a2c8:	8908983a 	sll	r4,r17,r4
 c01a2cc:	1884d83a 	srl	r2,r3,r2
 c01a2d0:	5222b03a 	or	r17,r10,r8
 c01a2d4:	2006c03a 	cmpne	r3,r4,zero
 c01a2d8:	88e2b03a 	or	r17,r17,r3
 c01a2dc:	89a3883a 	add	r17,r17,r6
 c01a2e0:	1145883a 	add	r2,r2,r5
 c01a2e4:	898d803a 	cmpltu	r6,r17,r6
 c01a2e8:	3087883a 	add	r3,r6,r2
 c01a2ec:	4821883a 	mov	r16,r9
 c01a2f0:	003ed906 	br	c019e58 <__alt_data_end+0xfc019e58>
 c01a2f4:	2984b03a 	or	r2,r5,r6
 c01a2f8:	10004226 	beq	r2,zero,c01a404 <__subdf3+0x82c>
 c01a2fc:	1808d0fa 	srli	r4,r3,3
 c01a300:	8822d0fa 	srli	r17,r17,3
 c01a304:	1806977a 	slli	r3,r3,29
 c01a308:	2080022c 	andhi	r2,r4,8
 c01a30c:	1c62b03a 	or	r17,r3,r17
 c01a310:	10000826 	beq	r2,zero,c01a334 <__subdf3+0x75c>
 c01a314:	2812d0fa 	srli	r9,r5,3
 c01a318:	4880022c 	andhi	r2,r9,8
 c01a31c:	1000051e 	bne	r2,zero,c01a334 <__subdf3+0x75c>
 c01a320:	300cd0fa 	srli	r6,r6,3
 c01a324:	2804977a 	slli	r2,r5,29
 c01a328:	4809883a 	mov	r4,r9
 c01a32c:	3825883a 	mov	r18,r7
 c01a330:	11a2b03a 	or	r17,r2,r6
 c01a334:	8806d77a 	srli	r3,r17,29
 c01a338:	200890fa 	slli	r4,r4,3
 c01a33c:	882290fa 	slli	r17,r17,3
 c01a340:	0401ffc4 	movi	r16,2047
 c01a344:	1906b03a 	or	r3,r3,r4
 c01a348:	003e4406 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a34c:	2984b03a 	or	r2,r5,r6
 c01a350:	103e4226 	beq	r2,zero,c019c5c <__alt_data_end+0xfc019c5c>
 c01a354:	8989c83a 	sub	r4,r17,r6
 c01a358:	8911803a 	cmpltu	r8,r17,r4
 c01a35c:	1945c83a 	sub	r2,r3,r5
 c01a360:	1205c83a 	sub	r2,r2,r8
 c01a364:	1200202c 	andhi	r8,r2,128
 c01a368:	403e9a26 	beq	r8,zero,c019dd4 <__alt_data_end+0xfc019dd4>
 c01a36c:	3463c83a 	sub	r17,r6,r17
 c01a370:	28c5c83a 	sub	r2,r5,r3
 c01a374:	344d803a 	cmpltu	r6,r6,r17
 c01a378:	1187c83a 	sub	r3,r2,r6
 c01a37c:	3825883a 	mov	r18,r7
 c01a380:	003e3606 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a384:	0101ffc4 	movi	r4,2047
 c01a388:	493fc71e 	bne	r9,r4,c01a2a8 <__alt_data_end+0xfc01a2a8>
 c01a38c:	2807883a 	mov	r3,r5
 c01a390:	3023883a 	mov	r17,r6
 c01a394:	4821883a 	mov	r16,r9
 c01a398:	003e3006 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a39c:	10003626 	beq	r2,zero,c01a478 <__subdf3+0x8a0>
 c01a3a0:	2984b03a 	or	r2,r5,r6
 c01a3a4:	10001726 	beq	r2,zero,c01a404 <__subdf3+0x82c>
 c01a3a8:	1808d0fa 	srli	r4,r3,3
 c01a3ac:	8822d0fa 	srli	r17,r17,3
 c01a3b0:	1806977a 	slli	r3,r3,29
 c01a3b4:	2080022c 	andhi	r2,r4,8
 c01a3b8:	1c62b03a 	or	r17,r3,r17
 c01a3bc:	10000726 	beq	r2,zero,c01a3dc <__subdf3+0x804>
 c01a3c0:	2812d0fa 	srli	r9,r5,3
 c01a3c4:	4880022c 	andhi	r2,r9,8
 c01a3c8:	1000041e 	bne	r2,zero,c01a3dc <__subdf3+0x804>
 c01a3cc:	300cd0fa 	srli	r6,r6,3
 c01a3d0:	2804977a 	slli	r2,r5,29
 c01a3d4:	4809883a 	mov	r4,r9
 c01a3d8:	11a2b03a 	or	r17,r2,r6
 c01a3dc:	8806d77a 	srli	r3,r17,29
 c01a3e0:	200890fa 	slli	r4,r4,3
 c01a3e4:	882290fa 	slli	r17,r17,3
 c01a3e8:	3825883a 	mov	r18,r7
 c01a3ec:	1906b03a 	or	r3,r3,r4
 c01a3f0:	0401ffc4 	movi	r16,2047
 c01a3f4:	003e1906 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a3f8:	000b883a 	mov	r5,zero
 c01a3fc:	0005883a 	mov	r2,zero
 c01a400:	003e2e06 	br	c019cbc <__alt_data_end+0xfc019cbc>
 c01a404:	0401ffc4 	movi	r16,2047
 c01a408:	003e1406 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a40c:	0005883a 	mov	r2,zero
 c01a410:	003f7506 	br	c01a1e8 <__alt_data_end+0xfc01a1e8>
 c01a414:	0005883a 	mov	r2,zero
 c01a418:	0009883a 	mov	r4,zero
 c01a41c:	003e7806 	br	c019e00 <__alt_data_end+0xfc019e00>
 c01a420:	123ff804 	addi	r8,r2,-32
 c01a424:	01000804 	movi	r4,32
 c01a428:	1a10d83a 	srl	r8,r3,r8
 c01a42c:	11002526 	beq	r2,r4,c01a4c4 <__subdf3+0x8ec>
 c01a430:	01001004 	movi	r4,64
 c01a434:	2085c83a 	sub	r2,r4,r2
 c01a438:	1884983a 	sll	r2,r3,r2
 c01a43c:	1444b03a 	or	r2,r2,r17
 c01a440:	1004c03a 	cmpne	r2,r2,zero
 c01a444:	40a2b03a 	or	r17,r8,r2
 c01a448:	0005883a 	mov	r2,zero
 c01a44c:	003f1606 	br	c01a0a8 <__alt_data_end+0xfc01a0a8>
 c01a450:	02000434 	movhi	r8,16
 c01a454:	0009883a 	mov	r4,zero
 c01a458:	423fffc4 	addi	r8,r8,-1
 c01a45c:	00bfffc4 	movi	r2,-1
 c01a460:	0401ffc4 	movi	r16,2047
 c01a464:	003e6606 	br	c019e00 <__alt_data_end+0xfc019e00>
 c01a468:	1c62b03a 	or	r17,r3,r17
 c01a46c:	8822c03a 	cmpne	r17,r17,zero
 c01a470:	0005883a 	mov	r2,zero
 c01a474:	003f9906 	br	c01a2dc <__alt_data_end+0xfc01a2dc>
 c01a478:	2807883a 	mov	r3,r5
 c01a47c:	3023883a 	mov	r17,r6
 c01a480:	0401ffc4 	movi	r16,2047
 c01a484:	003df506 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a488:	2807883a 	mov	r3,r5
 c01a48c:	3023883a 	mov	r17,r6
 c01a490:	003df206 	br	c019c5c <__alt_data_end+0xfc019c5c>
 c01a494:	123ff804 	addi	r8,r2,-32
 c01a498:	01000804 	movi	r4,32
 c01a49c:	1a10d83a 	srl	r8,r3,r8
 c01a4a0:	11000a26 	beq	r2,r4,c01a4cc <__subdf3+0x8f4>
 c01a4a4:	01001004 	movi	r4,64
 c01a4a8:	2085c83a 	sub	r2,r4,r2
 c01a4ac:	1884983a 	sll	r2,r3,r2
 c01a4b0:	1444b03a 	or	r2,r2,r17
 c01a4b4:	1004c03a 	cmpne	r2,r2,zero
 c01a4b8:	40a2b03a 	or	r17,r8,r2
 c01a4bc:	0005883a 	mov	r2,zero
 c01a4c0:	003f8606 	br	c01a2dc <__alt_data_end+0xfc01a2dc>
 c01a4c4:	0005883a 	mov	r2,zero
 c01a4c8:	003fdc06 	br	c01a43c <__alt_data_end+0xfc01a43c>
 c01a4cc:	0005883a 	mov	r2,zero
 c01a4d0:	003ff706 	br	c01a4b0 <__alt_data_end+0xfc01a4b0>

0c01a4d4 <__fixdfsi>:
 c01a4d4:	280cd53a 	srli	r6,r5,20
 c01a4d8:	00c00434 	movhi	r3,16
 c01a4dc:	18ffffc4 	addi	r3,r3,-1
 c01a4e0:	3181ffcc 	andi	r6,r6,2047
 c01a4e4:	01c0ff84 	movi	r7,1022
 c01a4e8:	28c6703a 	and	r3,r5,r3
 c01a4ec:	280ad7fa 	srli	r5,r5,31
 c01a4f0:	3980120e 	bge	r7,r6,c01a53c <__fixdfsi+0x68>
 c01a4f4:	00810744 	movi	r2,1053
 c01a4f8:	11800c16 	blt	r2,r6,c01a52c <__fixdfsi+0x58>
 c01a4fc:	00810cc4 	movi	r2,1075
 c01a500:	1185c83a 	sub	r2,r2,r6
 c01a504:	01c007c4 	movi	r7,31
 c01a508:	18c00434 	orhi	r3,r3,16
 c01a50c:	38800d16 	blt	r7,r2,c01a544 <__fixdfsi+0x70>
 c01a510:	31befb44 	addi	r6,r6,-1043
 c01a514:	2084d83a 	srl	r2,r4,r2
 c01a518:	1986983a 	sll	r3,r3,r6
 c01a51c:	1884b03a 	or	r2,r3,r2
 c01a520:	28000726 	beq	r5,zero,c01a540 <__fixdfsi+0x6c>
 c01a524:	0085c83a 	sub	r2,zero,r2
 c01a528:	f800283a 	ret
 c01a52c:	00a00034 	movhi	r2,32768
 c01a530:	10bfffc4 	addi	r2,r2,-1
 c01a534:	2885883a 	add	r2,r5,r2
 c01a538:	f800283a 	ret
 c01a53c:	0005883a 	mov	r2,zero
 c01a540:	f800283a 	ret
 c01a544:	008104c4 	movi	r2,1043
 c01a548:	1185c83a 	sub	r2,r2,r6
 c01a54c:	1884d83a 	srl	r2,r3,r2
 c01a550:	003ff306 	br	c01a520 <__alt_data_end+0xfc01a520>

0c01a554 <__floatsidf>:
 c01a554:	defffd04 	addi	sp,sp,-12
 c01a558:	dfc00215 	stw	ra,8(sp)
 c01a55c:	dc400115 	stw	r17,4(sp)
 c01a560:	dc000015 	stw	r16,0(sp)
 c01a564:	20002b26 	beq	r4,zero,c01a614 <__floatsidf+0xc0>
 c01a568:	2023883a 	mov	r17,r4
 c01a56c:	2020d7fa 	srli	r16,r4,31
 c01a570:	20002d16 	blt	r4,zero,c01a628 <__floatsidf+0xd4>
 c01a574:	8809883a 	mov	r4,r17
 c01a578:	c01a8800 	call	c01a880 <__clzsi2>
 c01a57c:	01410784 	movi	r5,1054
 c01a580:	288bc83a 	sub	r5,r5,r2
 c01a584:	01010cc4 	movi	r4,1075
 c01a588:	2149c83a 	sub	r4,r4,r5
 c01a58c:	00c007c4 	movi	r3,31
 c01a590:	1900160e 	bge	r3,r4,c01a5ec <__floatsidf+0x98>
 c01a594:	00c104c4 	movi	r3,1043
 c01a598:	1947c83a 	sub	r3,r3,r5
 c01a59c:	88c6983a 	sll	r3,r17,r3
 c01a5a0:	00800434 	movhi	r2,16
 c01a5a4:	10bfffc4 	addi	r2,r2,-1
 c01a5a8:	1886703a 	and	r3,r3,r2
 c01a5ac:	2941ffcc 	andi	r5,r5,2047
 c01a5b0:	800d883a 	mov	r6,r16
 c01a5b4:	0005883a 	mov	r2,zero
 c01a5b8:	280a953a 	slli	r5,r5,20
 c01a5bc:	31803fcc 	andi	r6,r6,255
 c01a5c0:	01000434 	movhi	r4,16
 c01a5c4:	300c97fa 	slli	r6,r6,31
 c01a5c8:	213fffc4 	addi	r4,r4,-1
 c01a5cc:	1906703a 	and	r3,r3,r4
 c01a5d0:	1946b03a 	or	r3,r3,r5
 c01a5d4:	1986b03a 	or	r3,r3,r6
 c01a5d8:	dfc00217 	ldw	ra,8(sp)
 c01a5dc:	dc400117 	ldw	r17,4(sp)
 c01a5e0:	dc000017 	ldw	r16,0(sp)
 c01a5e4:	dec00304 	addi	sp,sp,12
 c01a5e8:	f800283a 	ret
 c01a5ec:	00c002c4 	movi	r3,11
 c01a5f0:	1887c83a 	sub	r3,r3,r2
 c01a5f4:	88c6d83a 	srl	r3,r17,r3
 c01a5f8:	8904983a 	sll	r2,r17,r4
 c01a5fc:	01000434 	movhi	r4,16
 c01a600:	213fffc4 	addi	r4,r4,-1
 c01a604:	2941ffcc 	andi	r5,r5,2047
 c01a608:	1906703a 	and	r3,r3,r4
 c01a60c:	800d883a 	mov	r6,r16
 c01a610:	003fe906 	br	c01a5b8 <__alt_data_end+0xfc01a5b8>
 c01a614:	000d883a 	mov	r6,zero
 c01a618:	000b883a 	mov	r5,zero
 c01a61c:	0007883a 	mov	r3,zero
 c01a620:	0005883a 	mov	r2,zero
 c01a624:	003fe406 	br	c01a5b8 <__alt_data_end+0xfc01a5b8>
 c01a628:	0123c83a 	sub	r17,zero,r4
 c01a62c:	003fd106 	br	c01a574 <__alt_data_end+0xfc01a574>

0c01a630 <__floatunsidf>:
 c01a630:	defffe04 	addi	sp,sp,-8
 c01a634:	dc000015 	stw	r16,0(sp)
 c01a638:	dfc00115 	stw	ra,4(sp)
 c01a63c:	2021883a 	mov	r16,r4
 c01a640:	20002226 	beq	r4,zero,c01a6cc <__floatunsidf+0x9c>
 c01a644:	c01a8800 	call	c01a880 <__clzsi2>
 c01a648:	01010784 	movi	r4,1054
 c01a64c:	2089c83a 	sub	r4,r4,r2
 c01a650:	01810cc4 	movi	r6,1075
 c01a654:	310dc83a 	sub	r6,r6,r4
 c01a658:	00c007c4 	movi	r3,31
 c01a65c:	1980120e 	bge	r3,r6,c01a6a8 <__floatunsidf+0x78>
 c01a660:	00c104c4 	movi	r3,1043
 c01a664:	1907c83a 	sub	r3,r3,r4
 c01a668:	80ca983a 	sll	r5,r16,r3
 c01a66c:	00800434 	movhi	r2,16
 c01a670:	10bfffc4 	addi	r2,r2,-1
 c01a674:	2101ffcc 	andi	r4,r4,2047
 c01a678:	0021883a 	mov	r16,zero
 c01a67c:	288a703a 	and	r5,r5,r2
 c01a680:	2008953a 	slli	r4,r4,20
 c01a684:	00c00434 	movhi	r3,16
 c01a688:	18ffffc4 	addi	r3,r3,-1
 c01a68c:	28c6703a 	and	r3,r5,r3
 c01a690:	8005883a 	mov	r2,r16
 c01a694:	1906b03a 	or	r3,r3,r4
 c01a698:	dfc00117 	ldw	ra,4(sp)
 c01a69c:	dc000017 	ldw	r16,0(sp)
 c01a6a0:	dec00204 	addi	sp,sp,8
 c01a6a4:	f800283a 	ret
 c01a6a8:	00c002c4 	movi	r3,11
 c01a6ac:	188bc83a 	sub	r5,r3,r2
 c01a6b0:	814ad83a 	srl	r5,r16,r5
 c01a6b4:	00c00434 	movhi	r3,16
 c01a6b8:	18ffffc4 	addi	r3,r3,-1
 c01a6bc:	81a0983a 	sll	r16,r16,r6
 c01a6c0:	2101ffcc 	andi	r4,r4,2047
 c01a6c4:	28ca703a 	and	r5,r5,r3
 c01a6c8:	003fed06 	br	c01a680 <__alt_data_end+0xfc01a680>
 c01a6cc:	0009883a 	mov	r4,zero
 c01a6d0:	000b883a 	mov	r5,zero
 c01a6d4:	003fea06 	br	c01a680 <__alt_data_end+0xfc01a680>

0c01a6d8 <__truncdfsf2>:
 c01a6d8:	2810d53a 	srli	r8,r5,20
 c01a6dc:	01c00434 	movhi	r7,16
 c01a6e0:	39ffffc4 	addi	r7,r7,-1
 c01a6e4:	29ce703a 	and	r7,r5,r7
 c01a6e8:	4201ffcc 	andi	r8,r8,2047
 c01a6ec:	380e90fa 	slli	r7,r7,3
 c01a6f0:	200cd77a 	srli	r6,r4,29
 c01a6f4:	42400044 	addi	r9,r8,1
 c01a6f8:	4a41ffcc 	andi	r9,r9,2047
 c01a6fc:	00c00044 	movi	r3,1
 c01a700:	280ad7fa 	srli	r5,r5,31
 c01a704:	31ceb03a 	or	r7,r6,r7
 c01a708:	200490fa 	slli	r2,r4,3
 c01a70c:	1a40230e 	bge	r3,r9,c01a79c <__truncdfsf2+0xc4>
 c01a710:	40ff2004 	addi	r3,r8,-896
 c01a714:	01803f84 	movi	r6,254
 c01a718:	30c01516 	blt	r6,r3,c01a770 <__truncdfsf2+0x98>
 c01a71c:	00c0380e 	bge	zero,r3,c01a800 <__truncdfsf2+0x128>
 c01a720:	200c91ba 	slli	r6,r4,6
 c01a724:	380e90fa 	slli	r7,r7,3
 c01a728:	1004d77a 	srli	r2,r2,29
 c01a72c:	300cc03a 	cmpne	r6,r6,zero
 c01a730:	31ccb03a 	or	r6,r6,r7
 c01a734:	308cb03a 	or	r6,r6,r2
 c01a738:	308001cc 	andi	r2,r6,7
 c01a73c:	10000426 	beq	r2,zero,c01a750 <__truncdfsf2+0x78>
 c01a740:	308003cc 	andi	r2,r6,15
 c01a744:	01000104 	movi	r4,4
 c01a748:	11000126 	beq	r2,r4,c01a750 <__truncdfsf2+0x78>
 c01a74c:	31800104 	addi	r6,r6,4
 c01a750:	3081002c 	andhi	r2,r6,1024
 c01a754:	10001626 	beq	r2,zero,c01a7b0 <__truncdfsf2+0xd8>
 c01a758:	18c00044 	addi	r3,r3,1
 c01a75c:	00803fc4 	movi	r2,255
 c01a760:	18800326 	beq	r3,r2,c01a770 <__truncdfsf2+0x98>
 c01a764:	300c91ba 	slli	r6,r6,6
 c01a768:	300cd27a 	srli	r6,r6,9
 c01a76c:	00000206 	br	c01a778 <__truncdfsf2+0xa0>
 c01a770:	00ffffc4 	movi	r3,-1
 c01a774:	000d883a 	mov	r6,zero
 c01a778:	18c03fcc 	andi	r3,r3,255
 c01a77c:	180895fa 	slli	r4,r3,23
 c01a780:	00c02034 	movhi	r3,128
 c01a784:	280a97fa 	slli	r5,r5,31
 c01a788:	18ffffc4 	addi	r3,r3,-1
 c01a78c:	30c6703a 	and	r3,r6,r3
 c01a790:	1906b03a 	or	r3,r3,r4
 c01a794:	1944b03a 	or	r2,r3,r5
 c01a798:	f800283a 	ret
 c01a79c:	40000b1e 	bne	r8,zero,c01a7cc <__truncdfsf2+0xf4>
 c01a7a0:	388cb03a 	or	r6,r7,r2
 c01a7a4:	0007883a 	mov	r3,zero
 c01a7a8:	30000426 	beq	r6,zero,c01a7bc <__truncdfsf2+0xe4>
 c01a7ac:	01800144 	movi	r6,5
 c01a7b0:	00803fc4 	movi	r2,255
 c01a7b4:	300cd0fa 	srli	r6,r6,3
 c01a7b8:	18800a26 	beq	r3,r2,c01a7e4 <__truncdfsf2+0x10c>
 c01a7bc:	00802034 	movhi	r2,128
 c01a7c0:	10bfffc4 	addi	r2,r2,-1
 c01a7c4:	308c703a 	and	r6,r6,r2
 c01a7c8:	003feb06 	br	c01a778 <__alt_data_end+0xfc01a778>
 c01a7cc:	3888b03a 	or	r4,r7,r2
 c01a7d0:	203fe726 	beq	r4,zero,c01a770 <__alt_data_end+0xfc01a770>
 c01a7d4:	380c90fa 	slli	r6,r7,3
 c01a7d8:	00c03fc4 	movi	r3,255
 c01a7dc:	31808034 	orhi	r6,r6,512
 c01a7e0:	003fd506 	br	c01a738 <__alt_data_end+0xfc01a738>
 c01a7e4:	303fe226 	beq	r6,zero,c01a770 <__alt_data_end+0xfc01a770>
 c01a7e8:	00802034 	movhi	r2,128
 c01a7ec:	31801034 	orhi	r6,r6,64
 c01a7f0:	10bfffc4 	addi	r2,r2,-1
 c01a7f4:	00ffffc4 	movi	r3,-1
 c01a7f8:	308c703a 	and	r6,r6,r2
 c01a7fc:	003fde06 	br	c01a778 <__alt_data_end+0xfc01a778>
 c01a800:	013ffa44 	movi	r4,-23
 c01a804:	19000e16 	blt	r3,r4,c01a840 <__truncdfsf2+0x168>
 c01a808:	01000784 	movi	r4,30
 c01a80c:	20c9c83a 	sub	r4,r4,r3
 c01a810:	018007c4 	movi	r6,31
 c01a814:	39c02034 	orhi	r7,r7,128
 c01a818:	31000b16 	blt	r6,r4,c01a848 <__truncdfsf2+0x170>
 c01a81c:	423f2084 	addi	r8,r8,-894
 c01a820:	120c983a 	sll	r6,r2,r8
 c01a824:	3a0e983a 	sll	r7,r7,r8
 c01a828:	1104d83a 	srl	r2,r2,r4
 c01a82c:	300cc03a 	cmpne	r6,r6,zero
 c01a830:	31ceb03a 	or	r7,r6,r7
 c01a834:	388cb03a 	or	r6,r7,r2
 c01a838:	0007883a 	mov	r3,zero
 c01a83c:	003fbe06 	br	c01a738 <__alt_data_end+0xfc01a738>
 c01a840:	0007883a 	mov	r3,zero
 c01a844:	003fd906 	br	c01a7ac <__alt_data_end+0xfc01a7ac>
 c01a848:	01bfff84 	movi	r6,-2
 c01a84c:	30cdc83a 	sub	r6,r6,r3
 c01a850:	00c00804 	movi	r3,32
 c01a854:	398cd83a 	srl	r6,r7,r6
 c01a858:	20c00726 	beq	r4,r3,c01a878 <__truncdfsf2+0x1a0>
 c01a85c:	423f2884 	addi	r8,r8,-862
 c01a860:	3a0e983a 	sll	r7,r7,r8
 c01a864:	3884b03a 	or	r2,r7,r2
 c01a868:	1004c03a 	cmpne	r2,r2,zero
 c01a86c:	118cb03a 	or	r6,r2,r6
 c01a870:	0007883a 	mov	r3,zero
 c01a874:	003fb006 	br	c01a738 <__alt_data_end+0xfc01a738>
 c01a878:	000f883a 	mov	r7,zero
 c01a87c:	003ff906 	br	c01a864 <__alt_data_end+0xfc01a864>

0c01a880 <__clzsi2>:
 c01a880:	00bfffd4 	movui	r2,65535
 c01a884:	11000536 	bltu	r2,r4,c01a89c <__clzsi2+0x1c>
 c01a888:	00803fc4 	movi	r2,255
 c01a88c:	11000f36 	bltu	r2,r4,c01a8cc <__clzsi2+0x4c>
 c01a890:	00800804 	movi	r2,32
 c01a894:	0007883a 	mov	r3,zero
 c01a898:	00000506 	br	c01a8b0 <__clzsi2+0x30>
 c01a89c:	00804034 	movhi	r2,256
 c01a8a0:	10bfffc4 	addi	r2,r2,-1
 c01a8a4:	11000c2e 	bgeu	r2,r4,c01a8d8 <__clzsi2+0x58>
 c01a8a8:	00800204 	movi	r2,8
 c01a8ac:	00c00604 	movi	r3,24
 c01a8b0:	20c8d83a 	srl	r4,r4,r3
 c01a8b4:	00c300b4 	movhi	r3,3074
 c01a8b8:	18f7fd04 	addi	r3,r3,-8204
 c01a8bc:	1909883a 	add	r4,r3,r4
 c01a8c0:	20c00003 	ldbu	r3,0(r4)
 c01a8c4:	10c5c83a 	sub	r2,r2,r3
 c01a8c8:	f800283a 	ret
 c01a8cc:	00800604 	movi	r2,24
 c01a8d0:	00c00204 	movi	r3,8
 c01a8d4:	003ff606 	br	c01a8b0 <__alt_data_end+0xfc01a8b0>
 c01a8d8:	00800404 	movi	r2,16
 c01a8dc:	1007883a 	mov	r3,r2
 c01a8e0:	003ff306 	br	c01a8b0 <__alt_data_end+0xfc01a8b0>

0c01a8e4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01a8e4:	defffe04 	addi	sp,sp,-8
 c01a8e8:	dfc00115 	stw	ra,4(sp)
 c01a8ec:	df000015 	stw	fp,0(sp)
 c01a8f0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01a8f4:	d0a01317 	ldw	r2,-32692(gp)
 c01a8f8:	10000326 	beq	r2,zero,c01a908 <alt_get_errno+0x24>
 c01a8fc:	d0a01317 	ldw	r2,-32692(gp)
 c01a900:	103ee83a 	callr	r2
 c01a904:	00000106 	br	c01a90c <alt_get_errno+0x28>
 c01a908:	d0a7a804 	addi	r2,gp,-24928
}
 c01a90c:	e037883a 	mov	sp,fp
 c01a910:	dfc00117 	ldw	ra,4(sp)
 c01a914:	df000017 	ldw	fp,0(sp)
 c01a918:	dec00204 	addi	sp,sp,8
 c01a91c:	f800283a 	ret

0c01a920 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 c01a920:	defffb04 	addi	sp,sp,-20
 c01a924:	dfc00415 	stw	ra,16(sp)
 c01a928:	df000315 	stw	fp,12(sp)
 c01a92c:	df000304 	addi	fp,sp,12
 c01a930:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 c01a934:	e0bfff17 	ldw	r2,-4(fp)
 c01a938:	10000816 	blt	r2,zero,c01a95c <close+0x3c>
 c01a93c:	01400304 	movi	r5,12
 c01a940:	e13fff17 	ldw	r4,-4(fp)
 c01a944:	c00473c0 	call	c00473c <__mulsi3>
 c01a948:	1007883a 	mov	r3,r2
 c01a94c:	008300b4 	movhi	r2,3074
 c01a950:	10bb4104 	addi	r2,r2,-4860
 c01a954:	1885883a 	add	r2,r3,r2
 c01a958:	00000106 	br	c01a960 <close+0x40>
 c01a95c:	0005883a 	mov	r2,zero
 c01a960:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 c01a964:	e0bffd17 	ldw	r2,-12(fp)
 c01a968:	10001926 	beq	r2,zero,c01a9d0 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 c01a96c:	e0bffd17 	ldw	r2,-12(fp)
 c01a970:	10800017 	ldw	r2,0(r2)
 c01a974:	10800417 	ldw	r2,16(r2)
 c01a978:	10000626 	beq	r2,zero,c01a994 <close+0x74>
 c01a97c:	e0bffd17 	ldw	r2,-12(fp)
 c01a980:	10800017 	ldw	r2,0(r2)
 c01a984:	10800417 	ldw	r2,16(r2)
 c01a988:	e13ffd17 	ldw	r4,-12(fp)
 c01a98c:	103ee83a 	callr	r2
 c01a990:	00000106 	br	c01a998 <close+0x78>
 c01a994:	0005883a 	mov	r2,zero
 c01a998:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 c01a99c:	e13fff17 	ldw	r4,-4(fp)
 c01a9a0:	c01b2700 	call	c01b270 <alt_release_fd>
    if (rval < 0)
 c01a9a4:	e0bffe17 	ldw	r2,-8(fp)
 c01a9a8:	1000070e 	bge	r2,zero,c01a9c8 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 c01a9ac:	c01a8e40 	call	c01a8e4 <alt_get_errno>
 c01a9b0:	1007883a 	mov	r3,r2
 c01a9b4:	e0bffe17 	ldw	r2,-8(fp)
 c01a9b8:	0085c83a 	sub	r2,zero,r2
 c01a9bc:	18800015 	stw	r2,0(r3)
      return -1;
 c01a9c0:	00bfffc4 	movi	r2,-1
 c01a9c4:	00000706 	br	c01a9e4 <close+0xc4>
    }
    return 0;
 c01a9c8:	0005883a 	mov	r2,zero
 c01a9cc:	00000506 	br	c01a9e4 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 c01a9d0:	c01a8e40 	call	c01a8e4 <alt_get_errno>
 c01a9d4:	1007883a 	mov	r3,r2
 c01a9d8:	00801444 	movi	r2,81
 c01a9dc:	18800015 	stw	r2,0(r3)
    return -1;
 c01a9e0:	00bfffc4 	movi	r2,-1
  }
}
 c01a9e4:	e037883a 	mov	sp,fp
 c01a9e8:	dfc00117 	ldw	ra,4(sp)
 c01a9ec:	df000017 	ldw	fp,0(sp)
 c01a9f0:	dec00204 	addi	sp,sp,8
 c01a9f4:	f800283a 	ret

0c01a9f8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 c01a9f8:	defffc04 	addi	sp,sp,-16
 c01a9fc:	df000315 	stw	fp,12(sp)
 c01aa00:	df000304 	addi	fp,sp,12
 c01aa04:	e13ffd15 	stw	r4,-12(fp)
 c01aa08:	e17ffe15 	stw	r5,-8(fp)
 c01aa0c:	e1bfff15 	stw	r6,-4(fp)
  return len;
 c01aa10:	e0bfff17 	ldw	r2,-4(fp)
}
 c01aa14:	e037883a 	mov	sp,fp
 c01aa18:	df000017 	ldw	fp,0(sp)
 c01aa1c:	dec00104 	addi	sp,sp,4
 c01aa20:	f800283a 	ret

0c01aa24 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01aa24:	defffe04 	addi	sp,sp,-8
 c01aa28:	dfc00115 	stw	ra,4(sp)
 c01aa2c:	df000015 	stw	fp,0(sp)
 c01aa30:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01aa34:	d0a01317 	ldw	r2,-32692(gp)
 c01aa38:	10000326 	beq	r2,zero,c01aa48 <alt_get_errno+0x24>
 c01aa3c:	d0a01317 	ldw	r2,-32692(gp)
 c01aa40:	103ee83a 	callr	r2
 c01aa44:	00000106 	br	c01aa4c <alt_get_errno+0x28>
 c01aa48:	d0a7a804 	addi	r2,gp,-24928
}
 c01aa4c:	e037883a 	mov	sp,fp
 c01aa50:	dfc00117 	ldw	ra,4(sp)
 c01aa54:	df000017 	ldw	fp,0(sp)
 c01aa58:	dec00204 	addi	sp,sp,8
 c01aa5c:	f800283a 	ret

0c01aa60 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 c01aa60:	defffb04 	addi	sp,sp,-20
 c01aa64:	dfc00415 	stw	ra,16(sp)
 c01aa68:	df000315 	stw	fp,12(sp)
 c01aa6c:	df000304 	addi	fp,sp,12
 c01aa70:	e13ffe15 	stw	r4,-8(fp)
 c01aa74:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c01aa78:	e0bffe17 	ldw	r2,-8(fp)
 c01aa7c:	10000816 	blt	r2,zero,c01aaa0 <fstat+0x40>
 c01aa80:	01400304 	movi	r5,12
 c01aa84:	e13ffe17 	ldw	r4,-8(fp)
 c01aa88:	c00473c0 	call	c00473c <__mulsi3>
 c01aa8c:	1007883a 	mov	r3,r2
 c01aa90:	008300b4 	movhi	r2,3074
 c01aa94:	10bb4104 	addi	r2,r2,-4860
 c01aa98:	1885883a 	add	r2,r3,r2
 c01aa9c:	00000106 	br	c01aaa4 <fstat+0x44>
 c01aaa0:	0005883a 	mov	r2,zero
 c01aaa4:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 c01aaa8:	e0bffd17 	ldw	r2,-12(fp)
 c01aaac:	10001026 	beq	r2,zero,c01aaf0 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 c01aab0:	e0bffd17 	ldw	r2,-12(fp)
 c01aab4:	10800017 	ldw	r2,0(r2)
 c01aab8:	10800817 	ldw	r2,32(r2)
 c01aabc:	10000726 	beq	r2,zero,c01aadc <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 c01aac0:	e0bffd17 	ldw	r2,-12(fp)
 c01aac4:	10800017 	ldw	r2,0(r2)
 c01aac8:	10800817 	ldw	r2,32(r2)
 c01aacc:	e17fff17 	ldw	r5,-4(fp)
 c01aad0:	e13ffd17 	ldw	r4,-12(fp)
 c01aad4:	103ee83a 	callr	r2
 c01aad8:	00000a06 	br	c01ab04 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 c01aadc:	e0bfff17 	ldw	r2,-4(fp)
 c01aae0:	00c80004 	movi	r3,8192
 c01aae4:	10c00115 	stw	r3,4(r2)
      return 0;
 c01aae8:	0005883a 	mov	r2,zero
 c01aaec:	00000506 	br	c01ab04 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 c01aaf0:	c01aa240 	call	c01aa24 <alt_get_errno>
 c01aaf4:	1007883a 	mov	r3,r2
 c01aaf8:	00801444 	movi	r2,81
 c01aafc:	18800015 	stw	r2,0(r3)
    return -1;
 c01ab00:	00bfffc4 	movi	r2,-1
  }
}
 c01ab04:	e037883a 	mov	sp,fp
 c01ab08:	dfc00117 	ldw	ra,4(sp)
 c01ab0c:	df000017 	ldw	fp,0(sp)
 c01ab10:	dec00204 	addi	sp,sp,8
 c01ab14:	f800283a 	ret

0c01ab18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01ab18:	defffe04 	addi	sp,sp,-8
 c01ab1c:	dfc00115 	stw	ra,4(sp)
 c01ab20:	df000015 	stw	fp,0(sp)
 c01ab24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01ab28:	d0a01317 	ldw	r2,-32692(gp)
 c01ab2c:	10000326 	beq	r2,zero,c01ab3c <alt_get_errno+0x24>
 c01ab30:	d0a01317 	ldw	r2,-32692(gp)
 c01ab34:	103ee83a 	callr	r2
 c01ab38:	00000106 	br	c01ab40 <alt_get_errno+0x28>
 c01ab3c:	d0a7a804 	addi	r2,gp,-24928
}
 c01ab40:	e037883a 	mov	sp,fp
 c01ab44:	dfc00117 	ldw	ra,4(sp)
 c01ab48:	df000017 	ldw	fp,0(sp)
 c01ab4c:	dec00204 	addi	sp,sp,8
 c01ab50:	f800283a 	ret

0c01ab54 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 c01ab54:	deffed04 	addi	sp,sp,-76
 c01ab58:	dfc01215 	stw	ra,72(sp)
 c01ab5c:	df001115 	stw	fp,68(sp)
 c01ab60:	df001104 	addi	fp,sp,68
 c01ab64:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c01ab68:	e0bfff17 	ldw	r2,-4(fp)
 c01ab6c:	10000816 	blt	r2,zero,c01ab90 <isatty+0x3c>
 c01ab70:	01400304 	movi	r5,12
 c01ab74:	e13fff17 	ldw	r4,-4(fp)
 c01ab78:	c00473c0 	call	c00473c <__mulsi3>
 c01ab7c:	1007883a 	mov	r3,r2
 c01ab80:	008300b4 	movhi	r2,3074
 c01ab84:	10bb4104 	addi	r2,r2,-4860
 c01ab88:	1885883a 	add	r2,r3,r2
 c01ab8c:	00000106 	br	c01ab94 <isatty+0x40>
 c01ab90:	0005883a 	mov	r2,zero
 c01ab94:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 c01ab98:	e0bfef17 	ldw	r2,-68(fp)
 c01ab9c:	10000e26 	beq	r2,zero,c01abd8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 c01aba0:	e0bfef17 	ldw	r2,-68(fp)
 c01aba4:	10800017 	ldw	r2,0(r2)
 c01aba8:	10800817 	ldw	r2,32(r2)
 c01abac:	1000021e 	bne	r2,zero,c01abb8 <isatty+0x64>
    {
      return 1;
 c01abb0:	00800044 	movi	r2,1
 c01abb4:	00000d06 	br	c01abec <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 c01abb8:	e0bff004 	addi	r2,fp,-64
 c01abbc:	100b883a 	mov	r5,r2
 c01abc0:	e13fff17 	ldw	r4,-4(fp)
 c01abc4:	c01aa600 	call	c01aa60 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 c01abc8:	e0bff117 	ldw	r2,-60(fp)
 c01abcc:	10880020 	cmpeqi	r2,r2,8192
 c01abd0:	10803fcc 	andi	r2,r2,255
 c01abd4:	00000506 	br	c01abec <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 c01abd8:	c01ab180 	call	c01ab18 <alt_get_errno>
 c01abdc:	1007883a 	mov	r3,r2
 c01abe0:	00801444 	movi	r2,81
 c01abe4:	18800015 	stw	r2,0(r3)
    return 0;
 c01abe8:	0005883a 	mov	r2,zero
  }
}
 c01abec:	e037883a 	mov	sp,fp
 c01abf0:	dfc00117 	ldw	ra,4(sp)
 c01abf4:	df000017 	ldw	fp,0(sp)
 c01abf8:	dec00204 	addi	sp,sp,8
 c01abfc:	f800283a 	ret

0c01ac00 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 c01ac00:	defffc04 	addi	sp,sp,-16
 c01ac04:	df000315 	stw	fp,12(sp)
 c01ac08:	df000304 	addi	fp,sp,12
 c01ac0c:	e13ffd15 	stw	r4,-12(fp)
 c01ac10:	e17ffe15 	stw	r5,-8(fp)
 c01ac14:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 c01ac18:	e0fffe17 	ldw	r3,-8(fp)
 c01ac1c:	e0bffd17 	ldw	r2,-12(fp)
 c01ac20:	18800c26 	beq	r3,r2,c01ac54 <alt_load_section+0x54>
  {
    while( to != end )
 c01ac24:	00000806 	br	c01ac48 <alt_load_section+0x48>
    {
      *to++ = *from++;
 c01ac28:	e0bffe17 	ldw	r2,-8(fp)
 c01ac2c:	10c00104 	addi	r3,r2,4
 c01ac30:	e0fffe15 	stw	r3,-8(fp)
 c01ac34:	e0fffd17 	ldw	r3,-12(fp)
 c01ac38:	19000104 	addi	r4,r3,4
 c01ac3c:	e13ffd15 	stw	r4,-12(fp)
 c01ac40:	18c00017 	ldw	r3,0(r3)
 c01ac44:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 c01ac48:	e0fffe17 	ldw	r3,-8(fp)
 c01ac4c:	e0bfff17 	ldw	r2,-4(fp)
 c01ac50:	18bff51e 	bne	r3,r2,c01ac28 <__alt_data_end+0xfc01ac28>
    {
      *to++ = *from++;
    }
  }
}
 c01ac54:	0001883a 	nop
 c01ac58:	e037883a 	mov	sp,fp
 c01ac5c:	df000017 	ldw	fp,0(sp)
 c01ac60:	dec00104 	addi	sp,sp,4
 c01ac64:	f800283a 	ret

0c01ac68 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 c01ac68:	defffe04 	addi	sp,sp,-8
 c01ac6c:	dfc00115 	stw	ra,4(sp)
 c01ac70:	df000015 	stw	fp,0(sp)
 c01ac74:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 c01ac78:	018300b4 	movhi	r6,3074
 c01ac7c:	31bfd104 	addi	r6,r6,-188
 c01ac80:	014300b4 	movhi	r5,3074
 c01ac84:	29784a04 	addi	r5,r5,-7896
 c01ac88:	010300b4 	movhi	r4,3074
 c01ac8c:	213fd104 	addi	r4,r4,-188
 c01ac90:	c01ac000 	call	c01ac00 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 c01ac94:	01830034 	movhi	r6,3072
 c01ac98:	31808c04 	addi	r6,r6,560
 c01ac9c:	01430034 	movhi	r5,3072
 c01aca0:	29400804 	addi	r5,r5,32
 c01aca4:	01030034 	movhi	r4,3072
 c01aca8:	21000804 	addi	r4,r4,32
 c01acac:	c01ac000 	call	c01ac00 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 c01acb0:	018300b4 	movhi	r6,3074
 c01acb4:	31b84a04 	addi	r6,r6,-7896
 c01acb8:	014300b4 	movhi	r5,3074
 c01acbc:	29759d04 	addi	r5,r5,-10636
 c01acc0:	010300b4 	movhi	r4,3074
 c01acc4:	21359d04 	addi	r4,r4,-10636
 c01acc8:	c01ac000 	call	c01ac00 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 c01accc:	c01c7600 	call	c01c760 <alt_dcache_flush_all>
  alt_icache_flush_all();
 c01acd0:	c01c9200 	call	c01c920 <alt_icache_flush_all>
}
 c01acd4:	0001883a 	nop
 c01acd8:	e037883a 	mov	sp,fp
 c01acdc:	dfc00117 	ldw	ra,4(sp)
 c01ace0:	df000017 	ldw	fp,0(sp)
 c01ace4:	dec00204 	addi	sp,sp,8
 c01ace8:	f800283a 	ret

0c01acec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01acec:	defffe04 	addi	sp,sp,-8
 c01acf0:	dfc00115 	stw	ra,4(sp)
 c01acf4:	df000015 	stw	fp,0(sp)
 c01acf8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01acfc:	d0a01317 	ldw	r2,-32692(gp)
 c01ad00:	10000326 	beq	r2,zero,c01ad10 <alt_get_errno+0x24>
 c01ad04:	d0a01317 	ldw	r2,-32692(gp)
 c01ad08:	103ee83a 	callr	r2
 c01ad0c:	00000106 	br	c01ad14 <alt_get_errno+0x28>
 c01ad10:	d0a7a804 	addi	r2,gp,-24928
}
 c01ad14:	e037883a 	mov	sp,fp
 c01ad18:	dfc00117 	ldw	ra,4(sp)
 c01ad1c:	df000017 	ldw	fp,0(sp)
 c01ad20:	dec00204 	addi	sp,sp,8
 c01ad24:	f800283a 	ret

0c01ad28 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 c01ad28:	defff904 	addi	sp,sp,-28
 c01ad2c:	dfc00615 	stw	ra,24(sp)
 c01ad30:	df000515 	stw	fp,20(sp)
 c01ad34:	df000504 	addi	fp,sp,20
 c01ad38:	e13ffd15 	stw	r4,-12(fp)
 c01ad3c:	e17ffe15 	stw	r5,-8(fp)
 c01ad40:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 c01ad44:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c01ad48:	e0bffd17 	ldw	r2,-12(fp)
 c01ad4c:	10000816 	blt	r2,zero,c01ad70 <lseek+0x48>
 c01ad50:	01400304 	movi	r5,12
 c01ad54:	e13ffd17 	ldw	r4,-12(fp)
 c01ad58:	c00473c0 	call	c00473c <__mulsi3>
 c01ad5c:	1007883a 	mov	r3,r2
 c01ad60:	008300b4 	movhi	r2,3074
 c01ad64:	10bb4104 	addi	r2,r2,-4860
 c01ad68:	1885883a 	add	r2,r3,r2
 c01ad6c:	00000106 	br	c01ad74 <lseek+0x4c>
 c01ad70:	0005883a 	mov	r2,zero
 c01ad74:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 c01ad78:	e0bffc17 	ldw	r2,-16(fp)
 c01ad7c:	10001026 	beq	r2,zero,c01adc0 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 c01ad80:	e0bffc17 	ldw	r2,-16(fp)
 c01ad84:	10800017 	ldw	r2,0(r2)
 c01ad88:	10800717 	ldw	r2,28(r2)
 c01ad8c:	10000926 	beq	r2,zero,c01adb4 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 c01ad90:	e0bffc17 	ldw	r2,-16(fp)
 c01ad94:	10800017 	ldw	r2,0(r2)
 c01ad98:	10800717 	ldw	r2,28(r2)
 c01ad9c:	e1bfff17 	ldw	r6,-4(fp)
 c01ada0:	e17ffe17 	ldw	r5,-8(fp)
 c01ada4:	e13ffc17 	ldw	r4,-16(fp)
 c01ada8:	103ee83a 	callr	r2
 c01adac:	e0bffb15 	stw	r2,-20(fp)
 c01adb0:	00000506 	br	c01adc8 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 c01adb4:	00bfde84 	movi	r2,-134
 c01adb8:	e0bffb15 	stw	r2,-20(fp)
 c01adbc:	00000206 	br	c01adc8 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 c01adc0:	00bfebc4 	movi	r2,-81
 c01adc4:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 c01adc8:	e0bffb17 	ldw	r2,-20(fp)
 c01adcc:	1000070e 	bge	r2,zero,c01adec <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 c01add0:	c01acec0 	call	c01acec <alt_get_errno>
 c01add4:	1007883a 	mov	r3,r2
 c01add8:	e0bffb17 	ldw	r2,-20(fp)
 c01addc:	0085c83a 	sub	r2,zero,r2
 c01ade0:	18800015 	stw	r2,0(r3)
    rc = -1;
 c01ade4:	00bfffc4 	movi	r2,-1
 c01ade8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 c01adec:	e0bffb17 	ldw	r2,-20(fp)
}
 c01adf0:	e037883a 	mov	sp,fp
 c01adf4:	dfc00117 	ldw	ra,4(sp)
 c01adf8:	df000017 	ldw	fp,0(sp)
 c01adfc:	dec00204 	addi	sp,sp,8
 c01ae00:	f800283a 	ret

0c01ae04 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 c01ae04:	defffd04 	addi	sp,sp,-12
 c01ae08:	dfc00215 	stw	ra,8(sp)
 c01ae0c:	df000115 	stw	fp,4(sp)
 c01ae10:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 c01ae14:	0009883a 	mov	r4,zero
 c01ae18:	c01b6e80 	call	c01b6e8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 c01ae1c:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 c01ae20:	c01b7200 	call	c01b720 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 c01ae24:	018300b4 	movhi	r6,3074
 c01ae28:	31b84004 	addi	r6,r6,-7936
 c01ae2c:	014300b4 	movhi	r5,3074
 c01ae30:	29784004 	addi	r5,r5,-7936
 c01ae34:	010300b4 	movhi	r4,3074
 c01ae38:	21384004 	addi	r4,r4,-7936
 c01ae3c:	c01ccc40 	call	c01ccc4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 c01ae40:	c01c8600 	call	c01c860 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 c01ae44:	010300b4 	movhi	r4,3074
 c01ae48:	21323004 	addi	r4,r4,-14144
 c01ae4c:	c01d2e00 	call	c01d2e0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 c01ae50:	d0a7ac17 	ldw	r2,-24912(gp)
 c01ae54:	d0e7ad17 	ldw	r3,-24908(gp)
 c01ae58:	d127ae17 	ldw	r4,-24904(gp)
 c01ae5c:	200d883a 	mov	r6,r4
 c01ae60:	180b883a 	mov	r5,r3
 c01ae64:	1009883a 	mov	r4,r2
 c01ae68:	c001c9c0 	call	c001c9c <main>
 c01ae6c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 c01ae70:	01000044 	movi	r4,1
 c01ae74:	c01a9200 	call	c01a920 <close>
  exit (result);
 c01ae78:	e13fff17 	ldw	r4,-4(fp)
 c01ae7c:	c01d2f40 	call	c01d2f4 <exit>

0c01ae80 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 c01ae80:	defffe04 	addi	sp,sp,-8
 c01ae84:	df000115 	stw	fp,4(sp)
 c01ae88:	df000104 	addi	fp,sp,4
 c01ae8c:	e13fff15 	stw	r4,-4(fp)
}
 c01ae90:	0001883a 	nop
 c01ae94:	e037883a 	mov	sp,fp
 c01ae98:	df000017 	ldw	fp,0(sp)
 c01ae9c:	dec00104 	addi	sp,sp,4
 c01aea0:	f800283a 	ret

0c01aea4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 c01aea4:	defffe04 	addi	sp,sp,-8
 c01aea8:	df000115 	stw	fp,4(sp)
 c01aeac:	df000104 	addi	fp,sp,4
 c01aeb0:	e13fff15 	stw	r4,-4(fp)
}
 c01aeb4:	0001883a 	nop
 c01aeb8:	e037883a 	mov	sp,fp
 c01aebc:	df000017 	ldw	fp,0(sp)
 c01aec0:	dec00104 	addi	sp,sp,4
 c01aec4:	f800283a 	ret

0c01aec8 <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
 c01aec8:	defff204 	addi	sp,sp,-56
 c01aecc:	dfc00a15 	stw	ra,40(sp)
 c01aed0:	df000915 	stw	fp,36(sp)
 c01aed4:	df000904 	addi	fp,sp,36
 c01aed8:	e13fff15 	stw	r4,-4(fp)
 c01aedc:	e1400215 	stw	r5,8(fp)
 c01aee0:	e1800315 	stw	r6,12(fp)
 c01aee4:	e1c00415 	stw	r7,16(fp)
	va_list args;
	va_start(args, fmt);
 c01aee8:	e0800204 	addi	r2,fp,8
 c01aeec:	e0bffe15 	stw	r2,-8(fp)
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
 c01aef0:	e0bfff17 	ldw	r2,-4(fp)
 c01aef4:	e0bff715 	stw	r2,-36(fp)
    while ((c = *w++) != 0)
 c01aef8:	00006f06 	br	c01b0b8 <alt_printf+0x1f0>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
 c01aefc:	e0bff807 	ldb	r2,-32(fp)
 c01af00:	10800960 	cmpeqi	r2,r2,37
 c01af04:	1000041e 	bne	r2,zero,c01af18 <alt_printf+0x50>
        {
            alt_putchar(c);
 c01af08:	e0bff807 	ldb	r2,-32(fp)
 c01af0c:	1009883a 	mov	r4,r2
 c01af10:	c01b0f40 	call	c01b0f4 <alt_putchar>
 c01af14:	00006806 	br	c01b0b8 <alt_printf+0x1f0>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
 c01af18:	e0bff717 	ldw	r2,-36(fp)
 c01af1c:	10c00044 	addi	r3,r2,1
 c01af20:	e0fff715 	stw	r3,-36(fp)
 c01af24:	10800003 	ldbu	r2,0(r2)
 c01af28:	e0bff805 	stb	r2,-32(fp)
 c01af2c:	e0bff807 	ldb	r2,-32(fp)
 c01af30:	10006926 	beq	r2,zero,c01b0d8 <alt_printf+0x210>
            {
                if (c == '%')
 c01af34:	e0bff807 	ldb	r2,-32(fp)
 c01af38:	10800958 	cmpnei	r2,r2,37
 c01af3c:	1000041e 	bne	r2,zero,c01af50 <alt_printf+0x88>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
 c01af40:	e0bff807 	ldb	r2,-32(fp)
 c01af44:	1009883a 	mov	r4,r2
 c01af48:	c01b0f40 	call	c01b0f4 <alt_putchar>
 c01af4c:	00005a06 	br	c01b0b8 <alt_printf+0x1f0>
                } 
                else if (c == 'c')
 c01af50:	e0bff807 	ldb	r2,-32(fp)
 c01af54:	108018d8 	cmpnei	r2,r2,99
 c01af58:	1000081e 	bne	r2,zero,c01af7c <alt_printf+0xb4>
                {
                    int v = va_arg(args, int);
 c01af5c:	e0bffe17 	ldw	r2,-8(fp)
 c01af60:	10c00104 	addi	r3,r2,4
 c01af64:	e0fffe15 	stw	r3,-8(fp)
 c01af68:	10800017 	ldw	r2,0(r2)
 c01af6c:	e0bffd15 	stw	r2,-12(fp)
                    alt_putchar(v);
 c01af70:	e13ffd17 	ldw	r4,-12(fp)
 c01af74:	c01b0f40 	call	c01b0f4 <alt_putchar>
 c01af78:	00004f06 	br	c01b0b8 <alt_printf+0x1f0>
                }
                else if (c == 'x')
 c01af7c:	e0bff807 	ldb	r2,-32(fp)
 c01af80:	10801e18 	cmpnei	r2,r2,120
 c01af84:	1000341e 	bne	r2,zero,c01b058 <alt_printf+0x190>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
 c01af88:	e0bffe17 	ldw	r2,-8(fp)
 c01af8c:	10c00104 	addi	r3,r2,4
 c01af90:	e0fffe15 	stw	r3,-8(fp)
 c01af94:	10800017 	ldw	r2,0(r2)
 c01af98:	e0bffb15 	stw	r2,-20(fp)
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
 c01af9c:	e0bffb17 	ldw	r2,-20(fp)
 c01afa0:	1000031e 	bne	r2,zero,c01afb0 <alt_printf+0xe8>
                    {
                        alt_putchar('0');
 c01afa4:	01000c04 	movi	r4,48
 c01afa8:	c01b0f40 	call	c01b0f4 <alt_putchar>
                        continue;
 c01afac:	00004206 	br	c01b0b8 <alt_printf+0x1f0>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
 c01afb0:	00800704 	movi	r2,28
 c01afb4:	e0bff915 	stw	r2,-28(fp)
                    while (!(v & (0xF << digit_shift)))
 c01afb8:	00000306 	br	c01afc8 <alt_printf+0x100>
                        digit_shift -= 4;
 c01afbc:	e0bff917 	ldw	r2,-28(fp)
 c01afc0:	10bfff04 	addi	r2,r2,-4
 c01afc4:	e0bff915 	stw	r2,-28(fp)
                        continue;
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
 c01afc8:	00c003c4 	movi	r3,15
 c01afcc:	e0bff917 	ldw	r2,-28(fp)
 c01afd0:	1884983a 	sll	r2,r3,r2
 c01afd4:	1007883a 	mov	r3,r2
 c01afd8:	e0bffb17 	ldw	r2,-20(fp)
 c01afdc:	1884703a 	and	r2,r3,r2
 c01afe0:	103ff626 	beq	r2,zero,c01afbc <__alt_data_end+0xfc01afbc>
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 c01afe4:	00001906 	br	c01b04c <alt_printf+0x184>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
 c01afe8:	00c003c4 	movi	r3,15
 c01afec:	e0bff917 	ldw	r2,-28(fp)
 c01aff0:	1884983a 	sll	r2,r3,r2
 c01aff4:	1007883a 	mov	r3,r2
 c01aff8:	e0bffb17 	ldw	r2,-20(fp)
 c01affc:	1886703a 	and	r3,r3,r2
 c01b000:	e0bff917 	ldw	r2,-28(fp)
 c01b004:	1884d83a 	srl	r2,r3,r2
 c01b008:	e0bffc15 	stw	r2,-16(fp)
                        if (digit <= 9)
 c01b00c:	e0bffc17 	ldw	r2,-16(fp)
 c01b010:	108002a8 	cmpgeui	r2,r2,10
 c01b014:	1000041e 	bne	r2,zero,c01b028 <alt_printf+0x160>
                            c = '0' + digit;
 c01b018:	e0bffc17 	ldw	r2,-16(fp)
 c01b01c:	10800c04 	addi	r2,r2,48
 c01b020:	e0bff805 	stb	r2,-32(fp)
 c01b024:	00000306 	br	c01b034 <alt_printf+0x16c>
                        else
                            c = 'a' + digit - 10;
 c01b028:	e0bffc17 	ldw	r2,-16(fp)
 c01b02c:	108015c4 	addi	r2,r2,87
 c01b030:	e0bff805 	stb	r2,-32(fp)
                        alt_putchar(c);
 c01b034:	e0bff807 	ldb	r2,-32(fp)
 c01b038:	1009883a 	mov	r4,r2
 c01b03c:	c01b0f40 	call	c01b0f4 <alt_putchar>
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
 c01b040:	e0bff917 	ldw	r2,-28(fp)
 c01b044:	10bfff04 	addi	r2,r2,-4
 c01b048:	e0bff915 	stw	r2,-28(fp)
 c01b04c:	e0bff917 	ldw	r2,-28(fp)
 c01b050:	103fe50e 	bge	r2,zero,c01afe8 <__alt_data_end+0xfc01afe8>
 c01b054:	00001806 	br	c01b0b8 <alt_printf+0x1f0>
                        else
                            c = 'a' + digit - 10;
                        alt_putchar(c);
                    }
                }
                else if (c == 's')
 c01b058:	e0bff807 	ldb	r2,-32(fp)
 c01b05c:	10801cd8 	cmpnei	r2,r2,115
 c01b060:	1000151e 	bne	r2,zero,c01b0b8 <alt_printf+0x1f0>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
 c01b064:	e0bffe17 	ldw	r2,-8(fp)
 c01b068:	10c00104 	addi	r3,r2,4
 c01b06c:	e0fffe15 	stw	r3,-8(fp)
 c01b070:	10800017 	ldw	r2,0(r2)
 c01b074:	e0bffa15 	stw	r2,-24(fp)

                    while(*s)
 c01b078:	00000906 	br	c01b0a0 <alt_printf+0x1d8>
                      alt_putchar(*s++);
 c01b07c:	e0bffa17 	ldw	r2,-24(fp)
 c01b080:	10c00044 	addi	r3,r2,1
 c01b084:	e0fffa15 	stw	r3,-24(fp)
 c01b088:	10800003 	ldbu	r2,0(r2)
 c01b08c:	10803fcc 	andi	r2,r2,255
 c01b090:	1080201c 	xori	r2,r2,128
 c01b094:	10bfe004 	addi	r2,r2,-128
 c01b098:	1009883a 	mov	r4,r2
 c01b09c:	c01b0f40 	call	c01b0f4 <alt_putchar>
                else if (c == 's')
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);

                    while(*s)
 c01b0a0:	e0bffa17 	ldw	r2,-24(fp)
 c01b0a4:	10800003 	ldbu	r2,0(r2)
 c01b0a8:	10803fcc 	andi	r2,r2,255
 c01b0ac:	1080201c 	xori	r2,r2,128
 c01b0b0:	10bfe004 	addi	r2,r2,-128
 c01b0b4:	103ff11e 	bne	r2,zero,c01b07c <__alt_data_end+0xfc01b07c>
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
    while ((c = *w++) != 0)
 c01b0b8:	e0bff717 	ldw	r2,-36(fp)
 c01b0bc:	10c00044 	addi	r3,r2,1
 c01b0c0:	e0fff715 	stw	r3,-36(fp)
 c01b0c4:	10800003 	ldbu	r2,0(r2)
 c01b0c8:	e0bff805 	stb	r2,-32(fp)
 c01b0cc:	e0bff807 	ldb	r2,-32(fp)
 c01b0d0:	103f8a1e 	bne	r2,zero,c01aefc <__alt_data_end+0xfc01aefc>
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
 c01b0d4:	00000106 	br	c01b0dc <alt_printf+0x214>
                      alt_putchar(*s++);
                }
            }
            else
            {
                break;
 c01b0d8:	0001883a 	nop
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
 c01b0dc:	0001883a 	nop
 c01b0e0:	e037883a 	mov	sp,fp
 c01b0e4:	dfc00117 	ldw	ra,4(sp)
 c01b0e8:	df000017 	ldw	fp,0(sp)
 c01b0ec:	dec00504 	addi	sp,sp,20
 c01b0f0:	f800283a 	ret

0c01b0f4 <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
 c01b0f4:	defffd04 	addi	sp,sp,-12
 c01b0f8:	dfc00215 	stw	ra,8(sp)
 c01b0fc:	df000115 	stw	fp,4(sp)
 c01b100:	df000104 	addi	fp,sp,4
 c01b104:	e13fff15 	stw	r4,-4(fp)
    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
        return -1;
    }
    return c;
#else
    return putchar(c);
 c01b108:	d0a00a17 	ldw	r2,-32728(gp)
 c01b10c:	10800217 	ldw	r2,8(r2)
 c01b110:	100b883a 	mov	r5,r2
 c01b114:	e13fff17 	ldw	r4,-4(fp)
 c01b118:	c00fca00 	call	c00fca0 <putc>
#endif
#endif
}
 c01b11c:	e037883a 	mov	sp,fp
 c01b120:	dfc00117 	ldw	ra,4(sp)
 c01b124:	df000017 	ldw	fp,0(sp)
 c01b128:	dec00204 	addi	sp,sp,8
 c01b12c:	f800283a 	ret

0c01b130 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01b130:	defffe04 	addi	sp,sp,-8
 c01b134:	dfc00115 	stw	ra,4(sp)
 c01b138:	df000015 	stw	fp,0(sp)
 c01b13c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01b140:	d0a01317 	ldw	r2,-32692(gp)
 c01b144:	10000326 	beq	r2,zero,c01b154 <alt_get_errno+0x24>
 c01b148:	d0a01317 	ldw	r2,-32692(gp)
 c01b14c:	103ee83a 	callr	r2
 c01b150:	00000106 	br	c01b158 <alt_get_errno+0x28>
 c01b154:	d0a7a804 	addi	r2,gp,-24928
}
 c01b158:	e037883a 	mov	sp,fp
 c01b15c:	dfc00117 	ldw	ra,4(sp)
 c01b160:	df000017 	ldw	fp,0(sp)
 c01b164:	dec00204 	addi	sp,sp,8
 c01b168:	f800283a 	ret

0c01b16c <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 c01b16c:	defff904 	addi	sp,sp,-28
 c01b170:	dfc00615 	stw	ra,24(sp)
 c01b174:	df000515 	stw	fp,20(sp)
 c01b178:	df000504 	addi	fp,sp,20
 c01b17c:	e13ffd15 	stw	r4,-12(fp)
 c01b180:	e17ffe15 	stw	r5,-8(fp)
 c01b184:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c01b188:	e0bffd17 	ldw	r2,-12(fp)
 c01b18c:	10000816 	blt	r2,zero,c01b1b0 <read+0x44>
 c01b190:	01400304 	movi	r5,12
 c01b194:	e13ffd17 	ldw	r4,-12(fp)
 c01b198:	c00473c0 	call	c00473c <__mulsi3>
 c01b19c:	1007883a 	mov	r3,r2
 c01b1a0:	008300b4 	movhi	r2,3074
 c01b1a4:	10bb4104 	addi	r2,r2,-4860
 c01b1a8:	1885883a 	add	r2,r3,r2
 c01b1ac:	00000106 	br	c01b1b4 <read+0x48>
 c01b1b0:	0005883a 	mov	r2,zero
 c01b1b4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 c01b1b8:	e0bffb17 	ldw	r2,-20(fp)
 c01b1bc:	10002226 	beq	r2,zero,c01b248 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 c01b1c0:	e0bffb17 	ldw	r2,-20(fp)
 c01b1c4:	10800217 	ldw	r2,8(r2)
 c01b1c8:	108000cc 	andi	r2,r2,3
 c01b1cc:	10800060 	cmpeqi	r2,r2,1
 c01b1d0:	1000181e 	bne	r2,zero,c01b234 <read+0xc8>
        (fd->dev->read))
 c01b1d4:	e0bffb17 	ldw	r2,-20(fp)
 c01b1d8:	10800017 	ldw	r2,0(r2)
 c01b1dc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 c01b1e0:	10001426 	beq	r2,zero,c01b234 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 c01b1e4:	e0bffb17 	ldw	r2,-20(fp)
 c01b1e8:	10800017 	ldw	r2,0(r2)
 c01b1ec:	10800517 	ldw	r2,20(r2)
 c01b1f0:	e0ffff17 	ldw	r3,-4(fp)
 c01b1f4:	180d883a 	mov	r6,r3
 c01b1f8:	e17ffe17 	ldw	r5,-8(fp)
 c01b1fc:	e13ffb17 	ldw	r4,-20(fp)
 c01b200:	103ee83a 	callr	r2
 c01b204:	e0bffc15 	stw	r2,-16(fp)
 c01b208:	e0bffc17 	ldw	r2,-16(fp)
 c01b20c:	1000070e 	bge	r2,zero,c01b22c <read+0xc0>
        {
          ALT_ERRNO = -rval;
 c01b210:	c01b1300 	call	c01b130 <alt_get_errno>
 c01b214:	1007883a 	mov	r3,r2
 c01b218:	e0bffc17 	ldw	r2,-16(fp)
 c01b21c:	0085c83a 	sub	r2,zero,r2
 c01b220:	18800015 	stw	r2,0(r3)
          return -1;
 c01b224:	00bfffc4 	movi	r2,-1
 c01b228:	00000c06 	br	c01b25c <read+0xf0>
        }
        return rval;
 c01b22c:	e0bffc17 	ldw	r2,-16(fp)
 c01b230:	00000a06 	br	c01b25c <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 c01b234:	c01b1300 	call	c01b130 <alt_get_errno>
 c01b238:	1007883a 	mov	r3,r2
 c01b23c:	00800344 	movi	r2,13
 c01b240:	18800015 	stw	r2,0(r3)
 c01b244:	00000406 	br	c01b258 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 c01b248:	c01b1300 	call	c01b130 <alt_get_errno>
 c01b24c:	1007883a 	mov	r3,r2
 c01b250:	00801444 	movi	r2,81
 c01b254:	18800015 	stw	r2,0(r3)
  }
  return -1;
 c01b258:	00bfffc4 	movi	r2,-1
}
 c01b25c:	e037883a 	mov	sp,fp
 c01b260:	dfc00117 	ldw	ra,4(sp)
 c01b264:	df000017 	ldw	fp,0(sp)
 c01b268:	dec00204 	addi	sp,sp,8
 c01b26c:	f800283a 	ret

0c01b270 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 c01b270:	defffc04 	addi	sp,sp,-16
 c01b274:	dfc00315 	stw	ra,12(sp)
 c01b278:	df000215 	stw	fp,8(sp)
 c01b27c:	dc000115 	stw	r16,4(sp)
 c01b280:	df000204 	addi	fp,sp,8
 c01b284:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 c01b288:	e0bffe17 	ldw	r2,-8(fp)
 c01b28c:	108000d0 	cmplti	r2,r2,3
 c01b290:	1000111e 	bne	r2,zero,c01b2d8 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 c01b294:	040300b4 	movhi	r16,3074
 c01b298:	843b4104 	addi	r16,r16,-4860
 c01b29c:	e0bffe17 	ldw	r2,-8(fp)
 c01b2a0:	01400304 	movi	r5,12
 c01b2a4:	1009883a 	mov	r4,r2
 c01b2a8:	c00473c0 	call	c00473c <__mulsi3>
 c01b2ac:	8085883a 	add	r2,r16,r2
 c01b2b0:	10800204 	addi	r2,r2,8
 c01b2b4:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 c01b2b8:	040300b4 	movhi	r16,3074
 c01b2bc:	843b4104 	addi	r16,r16,-4860
 c01b2c0:	e0bffe17 	ldw	r2,-8(fp)
 c01b2c4:	01400304 	movi	r5,12
 c01b2c8:	1009883a 	mov	r4,r2
 c01b2cc:	c00473c0 	call	c00473c <__mulsi3>
 c01b2d0:	8085883a 	add	r2,r16,r2
 c01b2d4:	10000015 	stw	zero,0(r2)
  }
}
 c01b2d8:	0001883a 	nop
 c01b2dc:	e6ffff04 	addi	sp,fp,-4
 c01b2e0:	dfc00217 	ldw	ra,8(sp)
 c01b2e4:	df000117 	ldw	fp,4(sp)
 c01b2e8:	dc000017 	ldw	r16,0(sp)
 c01b2ec:	dec00304 	addi	sp,sp,12
 c01b2f0:	f800283a 	ret

0c01b2f4 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 c01b2f4:	defff904 	addi	sp,sp,-28
 c01b2f8:	df000615 	stw	fp,24(sp)
 c01b2fc:	df000604 	addi	fp,sp,24
 c01b300:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01b304:	0005303a 	rdctl	r2,status
 c01b308:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01b30c:	e0fffe17 	ldw	r3,-8(fp)
 c01b310:	00bfff84 	movi	r2,-2
 c01b314:	1884703a 	and	r2,r3,r2
 c01b318:	1001703a 	wrctl	status,r2
  
  return context;
 c01b31c:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 c01b320:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 c01b324:	d0a01417 	ldw	r2,-32688(gp)
 c01b328:	10c000c4 	addi	r3,r2,3
 c01b32c:	00bfff04 	movi	r2,-4
 c01b330:	1884703a 	and	r2,r3,r2
 c01b334:	d0a01415 	stw	r2,-32688(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 c01b338:	d0e01417 	ldw	r3,-32688(gp)
 c01b33c:	e0bfff17 	ldw	r2,-4(fp)
 c01b340:	1887883a 	add	r3,r3,r2
 c01b344:	00840034 	movhi	r2,4096
 c01b348:	10800004 	addi	r2,r2,0
 c01b34c:	10c0062e 	bgeu	r2,r3,c01b368 <sbrk+0x74>
 c01b350:	e0bffb17 	ldw	r2,-20(fp)
 c01b354:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01b358:	e0bffa17 	ldw	r2,-24(fp)
 c01b35c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 c01b360:	00bfffc4 	movi	r2,-1
 c01b364:	00000b06 	br	c01b394 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 c01b368:	d0a01417 	ldw	r2,-32688(gp)
 c01b36c:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 c01b370:	d0e01417 	ldw	r3,-32688(gp)
 c01b374:	e0bfff17 	ldw	r2,-4(fp)
 c01b378:	1885883a 	add	r2,r3,r2
 c01b37c:	d0a01415 	stw	r2,-32688(gp)
 c01b380:	e0bffb17 	ldw	r2,-20(fp)
 c01b384:	e0bffc15 	stw	r2,-16(fp)
 c01b388:	e0bffc17 	ldw	r2,-16(fp)
 c01b38c:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 c01b390:	e0bffd17 	ldw	r2,-12(fp)
} 
 c01b394:	e037883a 	mov	sp,fp
 c01b398:	df000017 	ldw	fp,0(sp)
 c01b39c:	dec00104 	addi	sp,sp,4
 c01b3a0:	f800283a 	ret

0c01b3a4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 c01b3a4:	defffa04 	addi	sp,sp,-24
 c01b3a8:	df000515 	stw	fp,20(sp)
 c01b3ac:	df000504 	addi	fp,sp,20
 c01b3b0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01b3b4:	0005303a 	rdctl	r2,status
 c01b3b8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01b3bc:	e0fffc17 	ldw	r3,-16(fp)
 c01b3c0:	00bfff84 	movi	r2,-2
 c01b3c4:	1884703a 	and	r2,r3,r2
 c01b3c8:	1001703a 	wrctl	status,r2
  
  return context;
 c01b3cc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 c01b3d0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 c01b3d4:	e0bfff17 	ldw	r2,-4(fp)
 c01b3d8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 c01b3dc:	e0bffd17 	ldw	r2,-12(fp)
 c01b3e0:	10800017 	ldw	r2,0(r2)
 c01b3e4:	e0fffd17 	ldw	r3,-12(fp)
 c01b3e8:	18c00117 	ldw	r3,4(r3)
 c01b3ec:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 c01b3f0:	e0bffd17 	ldw	r2,-12(fp)
 c01b3f4:	10800117 	ldw	r2,4(r2)
 c01b3f8:	e0fffd17 	ldw	r3,-12(fp)
 c01b3fc:	18c00017 	ldw	r3,0(r3)
 c01b400:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 c01b404:	e0bffd17 	ldw	r2,-12(fp)
 c01b408:	e0fffd17 	ldw	r3,-12(fp)
 c01b40c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 c01b410:	e0bffd17 	ldw	r2,-12(fp)
 c01b414:	e0fffd17 	ldw	r3,-12(fp)
 c01b418:	10c00015 	stw	r3,0(r2)
 c01b41c:	e0bffb17 	ldw	r2,-20(fp)
 c01b420:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01b424:	e0bffe17 	ldw	r2,-8(fp)
 c01b428:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 c01b42c:	0001883a 	nop
 c01b430:	e037883a 	mov	sp,fp
 c01b434:	df000017 	ldw	fp,0(sp)
 c01b438:	dec00104 	addi	sp,sp,4
 c01b43c:	f800283a 	ret

0c01b440 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 c01b440:	defffb04 	addi	sp,sp,-20
 c01b444:	dfc00415 	stw	ra,16(sp)
 c01b448:	df000315 	stw	fp,12(sp)
 c01b44c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 c01b450:	d0a01517 	ldw	r2,-32684(gp)
 c01b454:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 c01b458:	d0a7b017 	ldw	r2,-24896(gp)
 c01b45c:	10800044 	addi	r2,r2,1
 c01b460:	d0a7b015 	stw	r2,-24896(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 c01b464:	00002e06 	br	c01b520 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 c01b468:	e0bffd17 	ldw	r2,-12(fp)
 c01b46c:	10800017 	ldw	r2,0(r2)
 c01b470:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 c01b474:	e0bffd17 	ldw	r2,-12(fp)
 c01b478:	10800403 	ldbu	r2,16(r2)
 c01b47c:	10803fcc 	andi	r2,r2,255
 c01b480:	10000426 	beq	r2,zero,c01b494 <alt_tick+0x54>
 c01b484:	d0a7b017 	ldw	r2,-24896(gp)
 c01b488:	1000021e 	bne	r2,zero,c01b494 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 c01b48c:	e0bffd17 	ldw	r2,-12(fp)
 c01b490:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 c01b494:	e0bffd17 	ldw	r2,-12(fp)
 c01b498:	10800217 	ldw	r2,8(r2)
 c01b49c:	d0e7b017 	ldw	r3,-24896(gp)
 c01b4a0:	18801d36 	bltu	r3,r2,c01b518 <alt_tick+0xd8>
 c01b4a4:	e0bffd17 	ldw	r2,-12(fp)
 c01b4a8:	10800403 	ldbu	r2,16(r2)
 c01b4ac:	10803fcc 	andi	r2,r2,255
 c01b4b0:	1000191e 	bne	r2,zero,c01b518 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 c01b4b4:	e0bffd17 	ldw	r2,-12(fp)
 c01b4b8:	10800317 	ldw	r2,12(r2)
 c01b4bc:	e0fffd17 	ldw	r3,-12(fp)
 c01b4c0:	18c00517 	ldw	r3,20(r3)
 c01b4c4:	1809883a 	mov	r4,r3
 c01b4c8:	103ee83a 	callr	r2
 c01b4cc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 c01b4d0:	e0bfff17 	ldw	r2,-4(fp)
 c01b4d4:	1000031e 	bne	r2,zero,c01b4e4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 c01b4d8:	e13ffd17 	ldw	r4,-12(fp)
 c01b4dc:	c01b3a40 	call	c01b3a4 <alt_alarm_stop>
 c01b4e0:	00000d06 	br	c01b518 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 c01b4e4:	e0bffd17 	ldw	r2,-12(fp)
 c01b4e8:	10c00217 	ldw	r3,8(r2)
 c01b4ec:	e0bfff17 	ldw	r2,-4(fp)
 c01b4f0:	1887883a 	add	r3,r3,r2
 c01b4f4:	e0bffd17 	ldw	r2,-12(fp)
 c01b4f8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 c01b4fc:	e0bffd17 	ldw	r2,-12(fp)
 c01b500:	10c00217 	ldw	r3,8(r2)
 c01b504:	d0a7b017 	ldw	r2,-24896(gp)
 c01b508:	1880032e 	bgeu	r3,r2,c01b518 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 c01b50c:	e0bffd17 	ldw	r2,-12(fp)
 c01b510:	00c00044 	movi	r3,1
 c01b514:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 c01b518:	e0bffe17 	ldw	r2,-8(fp)
 c01b51c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 c01b520:	e0fffd17 	ldw	r3,-12(fp)
 c01b524:	d0a01504 	addi	r2,gp,-32684
 c01b528:	18bfcf1e 	bne	r3,r2,c01b468 <__alt_data_end+0xfc01b468>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 c01b52c:	0001883a 	nop
}
 c01b530:	0001883a 	nop
 c01b534:	e037883a 	mov	sp,fp
 c01b538:	dfc00117 	ldw	ra,4(sp)
 c01b53c:	df000017 	ldw	fp,0(sp)
 c01b540:	dec00204 	addi	sp,sp,8
 c01b544:	f800283a 	ret

0c01b548 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 c01b548:	defffd04 	addi	sp,sp,-12
 c01b54c:	dfc00215 	stw	ra,8(sp)
 c01b550:	df000115 	stw	fp,4(sp)
 c01b554:	df000104 	addi	fp,sp,4
 c01b558:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 c01b55c:	e13fff17 	ldw	r4,-4(fp)
 c01b560:	c01c6080 	call	c01c608 <alt_busy_sleep>
}
 c01b564:	e037883a 	mov	sp,fp
 c01b568:	dfc00117 	ldw	ra,4(sp)
 c01b56c:	df000017 	ldw	fp,0(sp)
 c01b570:	dec00204 	addi	sp,sp,8
 c01b574:	f800283a 	ret

0c01b578 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01b578:	defffe04 	addi	sp,sp,-8
 c01b57c:	dfc00115 	stw	ra,4(sp)
 c01b580:	df000015 	stw	fp,0(sp)
 c01b584:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01b588:	d0a01317 	ldw	r2,-32692(gp)
 c01b58c:	10000326 	beq	r2,zero,c01b59c <alt_get_errno+0x24>
 c01b590:	d0a01317 	ldw	r2,-32692(gp)
 c01b594:	103ee83a 	callr	r2
 c01b598:	00000106 	br	c01b5a0 <alt_get_errno+0x28>
 c01b59c:	d0a7a804 	addi	r2,gp,-24928
}
 c01b5a0:	e037883a 	mov	sp,fp
 c01b5a4:	dfc00117 	ldw	ra,4(sp)
 c01b5a8:	df000017 	ldw	fp,0(sp)
 c01b5ac:	dec00204 	addi	sp,sp,8
 c01b5b0:	f800283a 	ret

0c01b5b4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 c01b5b4:	defff904 	addi	sp,sp,-28
 c01b5b8:	dfc00615 	stw	ra,24(sp)
 c01b5bc:	df000515 	stw	fp,20(sp)
 c01b5c0:	df000504 	addi	fp,sp,20
 c01b5c4:	e13ffd15 	stw	r4,-12(fp)
 c01b5c8:	e17ffe15 	stw	r5,-8(fp)
 c01b5cc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c01b5d0:	e0bffd17 	ldw	r2,-12(fp)
 c01b5d4:	10000816 	blt	r2,zero,c01b5f8 <write+0x44>
 c01b5d8:	01400304 	movi	r5,12
 c01b5dc:	e13ffd17 	ldw	r4,-12(fp)
 c01b5e0:	c00473c0 	call	c00473c <__mulsi3>
 c01b5e4:	1007883a 	mov	r3,r2
 c01b5e8:	008300b4 	movhi	r2,3074
 c01b5ec:	10bb4104 	addi	r2,r2,-4860
 c01b5f0:	1885883a 	add	r2,r3,r2
 c01b5f4:	00000106 	br	c01b5fc <write+0x48>
 c01b5f8:	0005883a 	mov	r2,zero
 c01b5fc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 c01b600:	e0bffb17 	ldw	r2,-20(fp)
 c01b604:	10002126 	beq	r2,zero,c01b68c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 c01b608:	e0bffb17 	ldw	r2,-20(fp)
 c01b60c:	10800217 	ldw	r2,8(r2)
 c01b610:	108000cc 	andi	r2,r2,3
 c01b614:	10001826 	beq	r2,zero,c01b678 <write+0xc4>
 c01b618:	e0bffb17 	ldw	r2,-20(fp)
 c01b61c:	10800017 	ldw	r2,0(r2)
 c01b620:	10800617 	ldw	r2,24(r2)
 c01b624:	10001426 	beq	r2,zero,c01b678 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 c01b628:	e0bffb17 	ldw	r2,-20(fp)
 c01b62c:	10800017 	ldw	r2,0(r2)
 c01b630:	10800617 	ldw	r2,24(r2)
 c01b634:	e0ffff17 	ldw	r3,-4(fp)
 c01b638:	180d883a 	mov	r6,r3
 c01b63c:	e17ffe17 	ldw	r5,-8(fp)
 c01b640:	e13ffb17 	ldw	r4,-20(fp)
 c01b644:	103ee83a 	callr	r2
 c01b648:	e0bffc15 	stw	r2,-16(fp)
 c01b64c:	e0bffc17 	ldw	r2,-16(fp)
 c01b650:	1000070e 	bge	r2,zero,c01b670 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 c01b654:	c01b5780 	call	c01b578 <alt_get_errno>
 c01b658:	1007883a 	mov	r3,r2
 c01b65c:	e0bffc17 	ldw	r2,-16(fp)
 c01b660:	0085c83a 	sub	r2,zero,r2
 c01b664:	18800015 	stw	r2,0(r3)
        return -1;
 c01b668:	00bfffc4 	movi	r2,-1
 c01b66c:	00000c06 	br	c01b6a0 <write+0xec>
      }
      return rval;
 c01b670:	e0bffc17 	ldw	r2,-16(fp)
 c01b674:	00000a06 	br	c01b6a0 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 c01b678:	c01b5780 	call	c01b578 <alt_get_errno>
 c01b67c:	1007883a 	mov	r3,r2
 c01b680:	00800344 	movi	r2,13
 c01b684:	18800015 	stw	r2,0(r3)
 c01b688:	00000406 	br	c01b69c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 c01b68c:	c01b5780 	call	c01b578 <alt_get_errno>
 c01b690:	1007883a 	mov	r3,r2
 c01b694:	00801444 	movi	r2,81
 c01b698:	18800015 	stw	r2,0(r3)
  }
  return -1;
 c01b69c:	00bfffc4 	movi	r2,-1
}
 c01b6a0:	e037883a 	mov	sp,fp
 c01b6a4:	dfc00117 	ldw	ra,4(sp)
 c01b6a8:	df000017 	ldw	fp,0(sp)
 c01b6ac:	dec00204 	addi	sp,sp,8
 c01b6b0:	f800283a 	ret

0c01b6b4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 c01b6b4:	defffd04 	addi	sp,sp,-12
 c01b6b8:	dfc00215 	stw	ra,8(sp)
 c01b6bc:	df000115 	stw	fp,4(sp)
 c01b6c0:	df000104 	addi	fp,sp,4
 c01b6c4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 c01b6c8:	d1601004 	addi	r5,gp,-32704
 c01b6cc:	e13fff17 	ldw	r4,-4(fp)
 c01b6d0:	c01c7bc0 	call	c01c7bc <alt_dev_llist_insert>
}
 c01b6d4:	e037883a 	mov	sp,fp
 c01b6d8:	dfc00117 	ldw	ra,4(sp)
 c01b6dc:	df000017 	ldw	fp,0(sp)
 c01b6e0:	dec00204 	addi	sp,sp,8
 c01b6e4:	f800283a 	ret

0c01b6e8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 c01b6e8:	defffd04 	addi	sp,sp,-12
 c01b6ec:	dfc00215 	stw	ra,8(sp)
 c01b6f0:	df000115 	stw	fp,4(sp)
 c01b6f4:	df000104 	addi	fp,sp,4
 c01b6f8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 c01b6fc:	c01cfc40 	call	c01cfc4 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 c01b700:	00800044 	movi	r2,1
 c01b704:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 c01b708:	0001883a 	nop
 c01b70c:	e037883a 	mov	sp,fp
 c01b710:	dfc00117 	ldw	ra,4(sp)
 c01b714:	df000017 	ldw	fp,0(sp)
 c01b718:	dec00204 	addi	sp,sp,8
 c01b71c:	f800283a 	ret

0c01b720 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 c01b720:	defffe04 	addi	sp,sp,-8
 c01b724:	dfc00115 	stw	ra,4(sp)
 c01b728:	df000015 	stw	fp,0(sp)
 c01b72c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 c01b730:	01c0fa04 	movi	r7,1000
 c01b734:	01800084 	movi	r6,2
 c01b738:	000b883a 	mov	r5,zero
 c01b73c:	01002004 	movi	r4,128
 c01b740:	c01c4600 	call	c01c460 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 c01b744:	01800044 	movi	r6,1
 c01b748:	000b883a 	mov	r5,zero
 c01b74c:	010300b4 	movhi	r4,3074
 c01b750:	213bab04 	addi	r4,r4,-4436
 c01b754:	c01b8e80 	call	c01b8e8 <altera_avalon_jtag_uart_init>
 c01b758:	010300b4 	movhi	r4,3074
 c01b75c:	213ba104 	addi	r4,r4,-4476
 c01b760:	c01b6b40 	call	c01b6b4 <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI_0, spi_0);
 c01b764:	0001883a 	nop
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 c01b768:	0001883a 	nop
}
 c01b76c:	0001883a 	nop
 c01b770:	e037883a 	mov	sp,fp
 c01b774:	dfc00117 	ldw	ra,4(sp)
 c01b778:	df000017 	ldw	fp,0(sp)
 c01b77c:	dec00204 	addi	sp,sp,8
 c01b780:	f800283a 	ret

0c01b784 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 c01b784:	defffa04 	addi	sp,sp,-24
 c01b788:	dfc00515 	stw	ra,20(sp)
 c01b78c:	df000415 	stw	fp,16(sp)
 c01b790:	df000404 	addi	fp,sp,16
 c01b794:	e13ffd15 	stw	r4,-12(fp)
 c01b798:	e17ffe15 	stw	r5,-8(fp)
 c01b79c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 c01b7a0:	e0bffd17 	ldw	r2,-12(fp)
 c01b7a4:	10800017 	ldw	r2,0(r2)
 c01b7a8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 c01b7ac:	e0bffc17 	ldw	r2,-16(fp)
 c01b7b0:	10c00a04 	addi	r3,r2,40
 c01b7b4:	e0bffd17 	ldw	r2,-12(fp)
 c01b7b8:	10800217 	ldw	r2,8(r2)
 c01b7bc:	100f883a 	mov	r7,r2
 c01b7c0:	e1bfff17 	ldw	r6,-4(fp)
 c01b7c4:	e17ffe17 	ldw	r5,-8(fp)
 c01b7c8:	1809883a 	mov	r4,r3
 c01b7cc:	c01bdac0 	call	c01bdac <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 c01b7d0:	e037883a 	mov	sp,fp
 c01b7d4:	dfc00117 	ldw	ra,4(sp)
 c01b7d8:	df000017 	ldw	fp,0(sp)
 c01b7dc:	dec00204 	addi	sp,sp,8
 c01b7e0:	f800283a 	ret

0c01b7e4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 c01b7e4:	defffa04 	addi	sp,sp,-24
 c01b7e8:	dfc00515 	stw	ra,20(sp)
 c01b7ec:	df000415 	stw	fp,16(sp)
 c01b7f0:	df000404 	addi	fp,sp,16
 c01b7f4:	e13ffd15 	stw	r4,-12(fp)
 c01b7f8:	e17ffe15 	stw	r5,-8(fp)
 c01b7fc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 c01b800:	e0bffd17 	ldw	r2,-12(fp)
 c01b804:	10800017 	ldw	r2,0(r2)
 c01b808:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 c01b80c:	e0bffc17 	ldw	r2,-16(fp)
 c01b810:	10c00a04 	addi	r3,r2,40
 c01b814:	e0bffd17 	ldw	r2,-12(fp)
 c01b818:	10800217 	ldw	r2,8(r2)
 c01b81c:	100f883a 	mov	r7,r2
 c01b820:	e1bfff17 	ldw	r6,-4(fp)
 c01b824:	e17ffe17 	ldw	r5,-8(fp)
 c01b828:	1809883a 	mov	r4,r3
 c01b82c:	c01bfc80 	call	c01bfc8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 c01b830:	e037883a 	mov	sp,fp
 c01b834:	dfc00117 	ldw	ra,4(sp)
 c01b838:	df000017 	ldw	fp,0(sp)
 c01b83c:	dec00204 	addi	sp,sp,8
 c01b840:	f800283a 	ret

0c01b844 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 c01b844:	defffc04 	addi	sp,sp,-16
 c01b848:	dfc00315 	stw	ra,12(sp)
 c01b84c:	df000215 	stw	fp,8(sp)
 c01b850:	df000204 	addi	fp,sp,8
 c01b854:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 c01b858:	e0bfff17 	ldw	r2,-4(fp)
 c01b85c:	10800017 	ldw	r2,0(r2)
 c01b860:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 c01b864:	e0bffe17 	ldw	r2,-8(fp)
 c01b868:	10c00a04 	addi	r3,r2,40
 c01b86c:	e0bfff17 	ldw	r2,-4(fp)
 c01b870:	10800217 	ldw	r2,8(r2)
 c01b874:	100b883a 	mov	r5,r2
 c01b878:	1809883a 	mov	r4,r3
 c01b87c:	c01bc540 	call	c01bc54 <altera_avalon_jtag_uart_close>
}
 c01b880:	e037883a 	mov	sp,fp
 c01b884:	dfc00117 	ldw	ra,4(sp)
 c01b888:	df000017 	ldw	fp,0(sp)
 c01b88c:	dec00204 	addi	sp,sp,8
 c01b890:	f800283a 	ret

0c01b894 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 c01b894:	defffa04 	addi	sp,sp,-24
 c01b898:	dfc00515 	stw	ra,20(sp)
 c01b89c:	df000415 	stw	fp,16(sp)
 c01b8a0:	df000404 	addi	fp,sp,16
 c01b8a4:	e13ffd15 	stw	r4,-12(fp)
 c01b8a8:	e17ffe15 	stw	r5,-8(fp)
 c01b8ac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 c01b8b0:	e0bffd17 	ldw	r2,-12(fp)
 c01b8b4:	10800017 	ldw	r2,0(r2)
 c01b8b8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 c01b8bc:	e0bffc17 	ldw	r2,-16(fp)
 c01b8c0:	10800a04 	addi	r2,r2,40
 c01b8c4:	e1bfff17 	ldw	r6,-4(fp)
 c01b8c8:	e17ffe17 	ldw	r5,-8(fp)
 c01b8cc:	1009883a 	mov	r4,r2
 c01b8d0:	c01bcbc0 	call	c01bcbc <altera_avalon_jtag_uart_ioctl>
}
 c01b8d4:	e037883a 	mov	sp,fp
 c01b8d8:	dfc00117 	ldw	ra,4(sp)
 c01b8dc:	df000017 	ldw	fp,0(sp)
 c01b8e0:	dec00204 	addi	sp,sp,8
 c01b8e4:	f800283a 	ret

0c01b8e8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 c01b8e8:	defffa04 	addi	sp,sp,-24
 c01b8ec:	dfc00515 	stw	ra,20(sp)
 c01b8f0:	df000415 	stw	fp,16(sp)
 c01b8f4:	df000404 	addi	fp,sp,16
 c01b8f8:	e13ffd15 	stw	r4,-12(fp)
 c01b8fc:	e17ffe15 	stw	r5,-8(fp)
 c01b900:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 c01b904:	e0bffd17 	ldw	r2,-12(fp)
 c01b908:	00c00044 	movi	r3,1
 c01b90c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 c01b910:	e0bffd17 	ldw	r2,-12(fp)
 c01b914:	10800017 	ldw	r2,0(r2)
 c01b918:	10800104 	addi	r2,r2,4
 c01b91c:	1007883a 	mov	r3,r2
 c01b920:	e0bffd17 	ldw	r2,-12(fp)
 c01b924:	10800817 	ldw	r2,32(r2)
 c01b928:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 c01b92c:	e0bffe17 	ldw	r2,-8(fp)
 c01b930:	e0ffff17 	ldw	r3,-4(fp)
 c01b934:	d8000015 	stw	zero,0(sp)
 c01b938:	e1fffd17 	ldw	r7,-12(fp)
 c01b93c:	018300b4 	movhi	r6,3074
 c01b940:	31ae6a04 	addi	r6,r6,-18008
 c01b944:	180b883a 	mov	r5,r3
 c01b948:	1009883a 	mov	r4,r2
 c01b94c:	c01c9400 	call	c01c940 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 c01b950:	e0bffd17 	ldw	r2,-12(fp)
 c01b954:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 c01b958:	e0bffd17 	ldw	r2,-12(fp)
 c01b95c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 c01b960:	d0e7af17 	ldw	r3,-24900(gp)
 c01b964:	e1fffd17 	ldw	r7,-12(fp)
 c01b968:	018300b4 	movhi	r6,3074
 c01b96c:	31aeed04 	addi	r6,r6,-17484
 c01b970:	180b883a 	mov	r5,r3
 c01b974:	1009883a 	mov	r4,r2
 c01b978:	c01c4dc0 	call	c01c4dc <alt_alarm_start>
 c01b97c:	1000040e 	bge	r2,zero,c01b990 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 c01b980:	e0fffd17 	ldw	r3,-12(fp)
 c01b984:	00a00034 	movhi	r2,32768
 c01b988:	10bfffc4 	addi	r2,r2,-1
 c01b98c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 c01b990:	0001883a 	nop
 c01b994:	e037883a 	mov	sp,fp
 c01b998:	dfc00117 	ldw	ra,4(sp)
 c01b99c:	df000017 	ldw	fp,0(sp)
 c01b9a0:	dec00204 	addi	sp,sp,8
 c01b9a4:	f800283a 	ret

0c01b9a8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 c01b9a8:	defff804 	addi	sp,sp,-32
 c01b9ac:	df000715 	stw	fp,28(sp)
 c01b9b0:	df000704 	addi	fp,sp,28
 c01b9b4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 c01b9b8:	e0bfff17 	ldw	r2,-4(fp)
 c01b9bc:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 c01b9c0:	e0bffb17 	ldw	r2,-20(fp)
 c01b9c4:	10800017 	ldw	r2,0(r2)
 c01b9c8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 c01b9cc:	e0bffc17 	ldw	r2,-16(fp)
 c01b9d0:	10800104 	addi	r2,r2,4
 c01b9d4:	10800037 	ldwio	r2,0(r2)
 c01b9d8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 c01b9dc:	e0bffd17 	ldw	r2,-12(fp)
 c01b9e0:	1080c00c 	andi	r2,r2,768
 c01b9e4:	10006d26 	beq	r2,zero,c01bb9c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 c01b9e8:	e0bffd17 	ldw	r2,-12(fp)
 c01b9ec:	1080400c 	andi	r2,r2,256
 c01b9f0:	10003526 	beq	r2,zero,c01bac8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 c01b9f4:	00800074 	movhi	r2,1
 c01b9f8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c01b9fc:	e0bffb17 	ldw	r2,-20(fp)
 c01ba00:	10800a17 	ldw	r2,40(r2)
 c01ba04:	10800044 	addi	r2,r2,1
 c01ba08:	1081ffcc 	andi	r2,r2,2047
 c01ba0c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 c01ba10:	e0bffb17 	ldw	r2,-20(fp)
 c01ba14:	10c00b17 	ldw	r3,44(r2)
 c01ba18:	e0bffe17 	ldw	r2,-8(fp)
 c01ba1c:	18801526 	beq	r3,r2,c01ba74 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 c01ba20:	e0bffc17 	ldw	r2,-16(fp)
 c01ba24:	10800037 	ldwio	r2,0(r2)
 c01ba28:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 c01ba2c:	e0bff917 	ldw	r2,-28(fp)
 c01ba30:	10a0000c 	andi	r2,r2,32768
 c01ba34:	10001126 	beq	r2,zero,c01ba7c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 c01ba38:	e0bffb17 	ldw	r2,-20(fp)
 c01ba3c:	10800a17 	ldw	r2,40(r2)
 c01ba40:	e0fff917 	ldw	r3,-28(fp)
 c01ba44:	1809883a 	mov	r4,r3
 c01ba48:	e0fffb17 	ldw	r3,-20(fp)
 c01ba4c:	1885883a 	add	r2,r3,r2
 c01ba50:	10800e04 	addi	r2,r2,56
 c01ba54:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c01ba58:	e0bffb17 	ldw	r2,-20(fp)
 c01ba5c:	10800a17 	ldw	r2,40(r2)
 c01ba60:	10800044 	addi	r2,r2,1
 c01ba64:	10c1ffcc 	andi	r3,r2,2047
 c01ba68:	e0bffb17 	ldw	r2,-20(fp)
 c01ba6c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 c01ba70:	003fe206 	br	c01b9fc <__alt_data_end+0xfc01b9fc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 c01ba74:	0001883a 	nop
 c01ba78:	00000106 	br	c01ba80 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 c01ba7c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 c01ba80:	e0bff917 	ldw	r2,-28(fp)
 c01ba84:	10bfffec 	andhi	r2,r2,65535
 c01ba88:	10000f26 	beq	r2,zero,c01bac8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 c01ba8c:	e0bffb17 	ldw	r2,-20(fp)
 c01ba90:	10c00817 	ldw	r3,32(r2)
 c01ba94:	00bfff84 	movi	r2,-2
 c01ba98:	1886703a 	and	r3,r3,r2
 c01ba9c:	e0bffb17 	ldw	r2,-20(fp)
 c01baa0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 c01baa4:	e0bffc17 	ldw	r2,-16(fp)
 c01baa8:	10800104 	addi	r2,r2,4
 c01baac:	1007883a 	mov	r3,r2
 c01bab0:	e0bffb17 	ldw	r2,-20(fp)
 c01bab4:	10800817 	ldw	r2,32(r2)
 c01bab8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 c01babc:	e0bffc17 	ldw	r2,-16(fp)
 c01bac0:	10800104 	addi	r2,r2,4
 c01bac4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 c01bac8:	e0bffd17 	ldw	r2,-12(fp)
 c01bacc:	1080800c 	andi	r2,r2,512
 c01bad0:	103fbe26 	beq	r2,zero,c01b9cc <__alt_data_end+0xfc01b9cc>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 c01bad4:	e0bffd17 	ldw	r2,-12(fp)
 c01bad8:	1004d43a 	srli	r2,r2,16
 c01badc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 c01bae0:	00001406 	br	c01bb34 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 c01bae4:	e0bffc17 	ldw	r2,-16(fp)
 c01bae8:	e0fffb17 	ldw	r3,-20(fp)
 c01baec:	18c00d17 	ldw	r3,52(r3)
 c01baf0:	e13ffb17 	ldw	r4,-20(fp)
 c01baf4:	20c7883a 	add	r3,r4,r3
 c01baf8:	18c20e04 	addi	r3,r3,2104
 c01bafc:	18c00003 	ldbu	r3,0(r3)
 c01bb00:	18c03fcc 	andi	r3,r3,255
 c01bb04:	18c0201c 	xori	r3,r3,128
 c01bb08:	18ffe004 	addi	r3,r3,-128
 c01bb0c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c01bb10:	e0bffb17 	ldw	r2,-20(fp)
 c01bb14:	10800d17 	ldw	r2,52(r2)
 c01bb18:	10800044 	addi	r2,r2,1
 c01bb1c:	10c1ffcc 	andi	r3,r2,2047
 c01bb20:	e0bffb17 	ldw	r2,-20(fp)
 c01bb24:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 c01bb28:	e0bffa17 	ldw	r2,-24(fp)
 c01bb2c:	10bfffc4 	addi	r2,r2,-1
 c01bb30:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 c01bb34:	e0bffa17 	ldw	r2,-24(fp)
 c01bb38:	10000526 	beq	r2,zero,c01bb50 <altera_avalon_jtag_uart_irq+0x1a8>
 c01bb3c:	e0bffb17 	ldw	r2,-20(fp)
 c01bb40:	10c00d17 	ldw	r3,52(r2)
 c01bb44:	e0bffb17 	ldw	r2,-20(fp)
 c01bb48:	10800c17 	ldw	r2,48(r2)
 c01bb4c:	18bfe51e 	bne	r3,r2,c01bae4 <__alt_data_end+0xfc01bae4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 c01bb50:	e0bffa17 	ldw	r2,-24(fp)
 c01bb54:	103f9d26 	beq	r2,zero,c01b9cc <__alt_data_end+0xfc01b9cc>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 c01bb58:	e0bffb17 	ldw	r2,-20(fp)
 c01bb5c:	10c00817 	ldw	r3,32(r2)
 c01bb60:	00bfff44 	movi	r2,-3
 c01bb64:	1886703a 	and	r3,r3,r2
 c01bb68:	e0bffb17 	ldw	r2,-20(fp)
 c01bb6c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 c01bb70:	e0bffb17 	ldw	r2,-20(fp)
 c01bb74:	10800017 	ldw	r2,0(r2)
 c01bb78:	10800104 	addi	r2,r2,4
 c01bb7c:	1007883a 	mov	r3,r2
 c01bb80:	e0bffb17 	ldw	r2,-20(fp)
 c01bb84:	10800817 	ldw	r2,32(r2)
 c01bb88:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 c01bb8c:	e0bffc17 	ldw	r2,-16(fp)
 c01bb90:	10800104 	addi	r2,r2,4
 c01bb94:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 c01bb98:	003f8c06 	br	c01b9cc <__alt_data_end+0xfc01b9cc>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 c01bb9c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 c01bba0:	0001883a 	nop
 c01bba4:	e037883a 	mov	sp,fp
 c01bba8:	df000017 	ldw	fp,0(sp)
 c01bbac:	dec00104 	addi	sp,sp,4
 c01bbb0:	f800283a 	ret

0c01bbb4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 c01bbb4:	defff804 	addi	sp,sp,-32
 c01bbb8:	df000715 	stw	fp,28(sp)
 c01bbbc:	df000704 	addi	fp,sp,28
 c01bbc0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 c01bbc4:	e0bffb17 	ldw	r2,-20(fp)
 c01bbc8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 c01bbcc:	e0bff917 	ldw	r2,-28(fp)
 c01bbd0:	10800017 	ldw	r2,0(r2)
 c01bbd4:	10800104 	addi	r2,r2,4
 c01bbd8:	10800037 	ldwio	r2,0(r2)
 c01bbdc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 c01bbe0:	e0bffa17 	ldw	r2,-24(fp)
 c01bbe4:	1081000c 	andi	r2,r2,1024
 c01bbe8:	10000b26 	beq	r2,zero,c01bc18 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 c01bbec:	e0bff917 	ldw	r2,-28(fp)
 c01bbf0:	10800017 	ldw	r2,0(r2)
 c01bbf4:	10800104 	addi	r2,r2,4
 c01bbf8:	1007883a 	mov	r3,r2
 c01bbfc:	e0bff917 	ldw	r2,-28(fp)
 c01bc00:	10800817 	ldw	r2,32(r2)
 c01bc04:	10810014 	ori	r2,r2,1024
 c01bc08:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 c01bc0c:	e0bff917 	ldw	r2,-28(fp)
 c01bc10:	10000915 	stw	zero,36(r2)
 c01bc14:	00000a06 	br	c01bc40 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 c01bc18:	e0bff917 	ldw	r2,-28(fp)
 c01bc1c:	10c00917 	ldw	r3,36(r2)
 c01bc20:	00a00034 	movhi	r2,32768
 c01bc24:	10bfff04 	addi	r2,r2,-4
 c01bc28:	10c00536 	bltu	r2,r3,c01bc40 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 c01bc2c:	e0bff917 	ldw	r2,-28(fp)
 c01bc30:	10800917 	ldw	r2,36(r2)
 c01bc34:	10c00044 	addi	r3,r2,1
 c01bc38:	e0bff917 	ldw	r2,-28(fp)
 c01bc3c:	10c00915 	stw	r3,36(r2)
 c01bc40:	d0a7af17 	ldw	r2,-24900(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 c01bc44:	e037883a 	mov	sp,fp
 c01bc48:	df000017 	ldw	fp,0(sp)
 c01bc4c:	dec00104 	addi	sp,sp,4
 c01bc50:	f800283a 	ret

0c01bc54 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 c01bc54:	defffd04 	addi	sp,sp,-12
 c01bc58:	df000215 	stw	fp,8(sp)
 c01bc5c:	df000204 	addi	fp,sp,8
 c01bc60:	e13ffe15 	stw	r4,-8(fp)
 c01bc64:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 c01bc68:	00000506 	br	c01bc80 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 c01bc6c:	e0bfff17 	ldw	r2,-4(fp)
 c01bc70:	1090000c 	andi	r2,r2,16384
 c01bc74:	10000226 	beq	r2,zero,c01bc80 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 c01bc78:	00bffd44 	movi	r2,-11
 c01bc7c:	00000b06 	br	c01bcac <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 c01bc80:	e0bffe17 	ldw	r2,-8(fp)
 c01bc84:	10c00d17 	ldw	r3,52(r2)
 c01bc88:	e0bffe17 	ldw	r2,-8(fp)
 c01bc8c:	10800c17 	ldw	r2,48(r2)
 c01bc90:	18800526 	beq	r3,r2,c01bca8 <altera_avalon_jtag_uart_close+0x54>
 c01bc94:	e0bffe17 	ldw	r2,-8(fp)
 c01bc98:	10c00917 	ldw	r3,36(r2)
 c01bc9c:	e0bffe17 	ldw	r2,-8(fp)
 c01bca0:	10800117 	ldw	r2,4(r2)
 c01bca4:	18bff136 	bltu	r3,r2,c01bc6c <__alt_data_end+0xfc01bc6c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 c01bca8:	0005883a 	mov	r2,zero
}
 c01bcac:	e037883a 	mov	sp,fp
 c01bcb0:	df000017 	ldw	fp,0(sp)
 c01bcb4:	dec00104 	addi	sp,sp,4
 c01bcb8:	f800283a 	ret

0c01bcbc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 c01bcbc:	defffa04 	addi	sp,sp,-24
 c01bcc0:	df000515 	stw	fp,20(sp)
 c01bcc4:	df000504 	addi	fp,sp,20
 c01bcc8:	e13ffd15 	stw	r4,-12(fp)
 c01bccc:	e17ffe15 	stw	r5,-8(fp)
 c01bcd0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 c01bcd4:	00bff9c4 	movi	r2,-25
 c01bcd8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 c01bcdc:	e0bffe17 	ldw	r2,-8(fp)
 c01bce0:	10da8060 	cmpeqi	r3,r2,27137
 c01bce4:	1800031e 	bne	r3,zero,c01bcf4 <altera_avalon_jtag_uart_ioctl+0x38>
 c01bce8:	109a80a0 	cmpeqi	r2,r2,27138
 c01bcec:	1000181e 	bne	r2,zero,c01bd50 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 c01bcf0:	00002906 	br	c01bd98 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 c01bcf4:	e0bffd17 	ldw	r2,-12(fp)
 c01bcf8:	10c00117 	ldw	r3,4(r2)
 c01bcfc:	00a00034 	movhi	r2,32768
 c01bd00:	10bfffc4 	addi	r2,r2,-1
 c01bd04:	18802126 	beq	r3,r2,c01bd8c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 c01bd08:	e0bfff17 	ldw	r2,-4(fp)
 c01bd0c:	10800017 	ldw	r2,0(r2)
 c01bd10:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 c01bd14:	e0bffc17 	ldw	r2,-16(fp)
 c01bd18:	10800090 	cmplti	r2,r2,2
 c01bd1c:	1000061e 	bne	r2,zero,c01bd38 <altera_avalon_jtag_uart_ioctl+0x7c>
 c01bd20:	e0fffc17 	ldw	r3,-16(fp)
 c01bd24:	00a00034 	movhi	r2,32768
 c01bd28:	10bfffc4 	addi	r2,r2,-1
 c01bd2c:	18800226 	beq	r3,r2,c01bd38 <altera_avalon_jtag_uart_ioctl+0x7c>
 c01bd30:	e0bffc17 	ldw	r2,-16(fp)
 c01bd34:	00000206 	br	c01bd40 <altera_avalon_jtag_uart_ioctl+0x84>
 c01bd38:	00a00034 	movhi	r2,32768
 c01bd3c:	10bfff84 	addi	r2,r2,-2
 c01bd40:	e0fffd17 	ldw	r3,-12(fp)
 c01bd44:	18800115 	stw	r2,4(r3)
      rc = 0;
 c01bd48:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 c01bd4c:	00000f06 	br	c01bd8c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 c01bd50:	e0bffd17 	ldw	r2,-12(fp)
 c01bd54:	10c00117 	ldw	r3,4(r2)
 c01bd58:	00a00034 	movhi	r2,32768
 c01bd5c:	10bfffc4 	addi	r2,r2,-1
 c01bd60:	18800c26 	beq	r3,r2,c01bd94 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 c01bd64:	e0bffd17 	ldw	r2,-12(fp)
 c01bd68:	10c00917 	ldw	r3,36(r2)
 c01bd6c:	e0bffd17 	ldw	r2,-12(fp)
 c01bd70:	10800117 	ldw	r2,4(r2)
 c01bd74:	1885803a 	cmpltu	r2,r3,r2
 c01bd78:	10c03fcc 	andi	r3,r2,255
 c01bd7c:	e0bfff17 	ldw	r2,-4(fp)
 c01bd80:	10c00015 	stw	r3,0(r2)
      rc = 0;
 c01bd84:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 c01bd88:	00000206 	br	c01bd94 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 c01bd8c:	0001883a 	nop
 c01bd90:	00000106 	br	c01bd98 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 c01bd94:	0001883a 	nop

  default:
    break;
  }

  return rc;
 c01bd98:	e0bffb17 	ldw	r2,-20(fp)
}
 c01bd9c:	e037883a 	mov	sp,fp
 c01bda0:	df000017 	ldw	fp,0(sp)
 c01bda4:	dec00104 	addi	sp,sp,4
 c01bda8:	f800283a 	ret

0c01bdac <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 c01bdac:	defff304 	addi	sp,sp,-52
 c01bdb0:	dfc00c15 	stw	ra,48(sp)
 c01bdb4:	df000b15 	stw	fp,44(sp)
 c01bdb8:	df000b04 	addi	fp,sp,44
 c01bdbc:	e13ffc15 	stw	r4,-16(fp)
 c01bdc0:	e17ffd15 	stw	r5,-12(fp)
 c01bdc4:	e1bffe15 	stw	r6,-8(fp)
 c01bdc8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 c01bdcc:	e0bffd17 	ldw	r2,-12(fp)
 c01bdd0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 c01bdd4:	00004706 	br	c01bef4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 c01bdd8:	e0bffc17 	ldw	r2,-16(fp)
 c01bddc:	10800a17 	ldw	r2,40(r2)
 c01bde0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 c01bde4:	e0bffc17 	ldw	r2,-16(fp)
 c01bde8:	10800b17 	ldw	r2,44(r2)
 c01bdec:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 c01bdf0:	e0fff717 	ldw	r3,-36(fp)
 c01bdf4:	e0bff817 	ldw	r2,-32(fp)
 c01bdf8:	18800536 	bltu	r3,r2,c01be10 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 c01bdfc:	e0fff717 	ldw	r3,-36(fp)
 c01be00:	e0bff817 	ldw	r2,-32(fp)
 c01be04:	1885c83a 	sub	r2,r3,r2
 c01be08:	e0bff615 	stw	r2,-40(fp)
 c01be0c:	00000406 	br	c01be20 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 c01be10:	00c20004 	movi	r3,2048
 c01be14:	e0bff817 	ldw	r2,-32(fp)
 c01be18:	1885c83a 	sub	r2,r3,r2
 c01be1c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 c01be20:	e0bff617 	ldw	r2,-40(fp)
 c01be24:	10001e26 	beq	r2,zero,c01bea0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 c01be28:	e0fffe17 	ldw	r3,-8(fp)
 c01be2c:	e0bff617 	ldw	r2,-40(fp)
 c01be30:	1880022e 	bgeu	r3,r2,c01be3c <altera_avalon_jtag_uart_read+0x90>
        n = space;
 c01be34:	e0bffe17 	ldw	r2,-8(fp)
 c01be38:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 c01be3c:	e0bffc17 	ldw	r2,-16(fp)
 c01be40:	10c00e04 	addi	r3,r2,56
 c01be44:	e0bff817 	ldw	r2,-32(fp)
 c01be48:	1885883a 	add	r2,r3,r2
 c01be4c:	e1bff617 	ldw	r6,-40(fp)
 c01be50:	100b883a 	mov	r5,r2
 c01be54:	e13ff517 	ldw	r4,-44(fp)
 c01be58:	c00e77c0 	call	c00e77c <memcpy>
      ptr   += n;
 c01be5c:	e0fff517 	ldw	r3,-44(fp)
 c01be60:	e0bff617 	ldw	r2,-40(fp)
 c01be64:	1885883a 	add	r2,r3,r2
 c01be68:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 c01be6c:	e0fffe17 	ldw	r3,-8(fp)
 c01be70:	e0bff617 	ldw	r2,-40(fp)
 c01be74:	1885c83a 	sub	r2,r3,r2
 c01be78:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c01be7c:	e0fff817 	ldw	r3,-32(fp)
 c01be80:	e0bff617 	ldw	r2,-40(fp)
 c01be84:	1885883a 	add	r2,r3,r2
 c01be88:	10c1ffcc 	andi	r3,r2,2047
 c01be8c:	e0bffc17 	ldw	r2,-16(fp)
 c01be90:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 c01be94:	e0bffe17 	ldw	r2,-8(fp)
 c01be98:	00bfcf16 	blt	zero,r2,c01bdd8 <__alt_data_end+0xfc01bdd8>
 c01be9c:	00000106 	br	c01bea4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 c01bea0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 c01bea4:	e0fff517 	ldw	r3,-44(fp)
 c01bea8:	e0bffd17 	ldw	r2,-12(fp)
 c01beac:	1880141e 	bne	r3,r2,c01bf00 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 c01beb0:	e0bfff17 	ldw	r2,-4(fp)
 c01beb4:	1090000c 	andi	r2,r2,16384
 c01beb8:	1000131e 	bne	r2,zero,c01bf08 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 c01bebc:	0001883a 	nop
 c01bec0:	e0bffc17 	ldw	r2,-16(fp)
 c01bec4:	10c00a17 	ldw	r3,40(r2)
 c01bec8:	e0bff717 	ldw	r2,-36(fp)
 c01becc:	1880051e 	bne	r3,r2,c01bee4 <altera_avalon_jtag_uart_read+0x138>
 c01bed0:	e0bffc17 	ldw	r2,-16(fp)
 c01bed4:	10c00917 	ldw	r3,36(r2)
 c01bed8:	e0bffc17 	ldw	r2,-16(fp)
 c01bedc:	10800117 	ldw	r2,4(r2)
 c01bee0:	18bff736 	bltu	r3,r2,c01bec0 <__alt_data_end+0xfc01bec0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 c01bee4:	e0bffc17 	ldw	r2,-16(fp)
 c01bee8:	10c00a17 	ldw	r3,40(r2)
 c01beec:	e0bff717 	ldw	r2,-36(fp)
 c01bef0:	18800726 	beq	r3,r2,c01bf10 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 c01bef4:	e0bffe17 	ldw	r2,-8(fp)
 c01bef8:	00bfb716 	blt	zero,r2,c01bdd8 <__alt_data_end+0xfc01bdd8>
 c01befc:	00000506 	br	c01bf14 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 c01bf00:	0001883a 	nop
 c01bf04:	00000306 	br	c01bf14 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 c01bf08:	0001883a 	nop
 c01bf0c:	00000106 	br	c01bf14 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 c01bf10:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 c01bf14:	e0fff517 	ldw	r3,-44(fp)
 c01bf18:	e0bffd17 	ldw	r2,-12(fp)
 c01bf1c:	18801826 	beq	r3,r2,c01bf80 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01bf20:	0005303a 	rdctl	r2,status
 c01bf24:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01bf28:	e0fffb17 	ldw	r3,-20(fp)
 c01bf2c:	00bfff84 	movi	r2,-2
 c01bf30:	1884703a 	and	r2,r3,r2
 c01bf34:	1001703a 	wrctl	status,r2
  
  return context;
 c01bf38:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 c01bf3c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 c01bf40:	e0bffc17 	ldw	r2,-16(fp)
 c01bf44:	10800817 	ldw	r2,32(r2)
 c01bf48:	10c00054 	ori	r3,r2,1
 c01bf4c:	e0bffc17 	ldw	r2,-16(fp)
 c01bf50:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 c01bf54:	e0bffc17 	ldw	r2,-16(fp)
 c01bf58:	10800017 	ldw	r2,0(r2)
 c01bf5c:	10800104 	addi	r2,r2,4
 c01bf60:	1007883a 	mov	r3,r2
 c01bf64:	e0bffc17 	ldw	r2,-16(fp)
 c01bf68:	10800817 	ldw	r2,32(r2)
 c01bf6c:	18800035 	stwio	r2,0(r3)
 c01bf70:	e0bffa17 	ldw	r2,-24(fp)
 c01bf74:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01bf78:	e0bff917 	ldw	r2,-28(fp)
 c01bf7c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 c01bf80:	e0fff517 	ldw	r3,-44(fp)
 c01bf84:	e0bffd17 	ldw	r2,-12(fp)
 c01bf88:	18800426 	beq	r3,r2,c01bf9c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 c01bf8c:	e0fff517 	ldw	r3,-44(fp)
 c01bf90:	e0bffd17 	ldw	r2,-12(fp)
 c01bf94:	1885c83a 	sub	r2,r3,r2
 c01bf98:	00000606 	br	c01bfb4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 c01bf9c:	e0bfff17 	ldw	r2,-4(fp)
 c01bfa0:	1090000c 	andi	r2,r2,16384
 c01bfa4:	10000226 	beq	r2,zero,c01bfb0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 c01bfa8:	00bffd44 	movi	r2,-11
 c01bfac:	00000106 	br	c01bfb4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 c01bfb0:	00bffec4 	movi	r2,-5
}
 c01bfb4:	e037883a 	mov	sp,fp
 c01bfb8:	dfc00117 	ldw	ra,4(sp)
 c01bfbc:	df000017 	ldw	fp,0(sp)
 c01bfc0:	dec00204 	addi	sp,sp,8
 c01bfc4:	f800283a 	ret

0c01bfc8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 c01bfc8:	defff304 	addi	sp,sp,-52
 c01bfcc:	dfc00c15 	stw	ra,48(sp)
 c01bfd0:	df000b15 	stw	fp,44(sp)
 c01bfd4:	df000b04 	addi	fp,sp,44
 c01bfd8:	e13ffc15 	stw	r4,-16(fp)
 c01bfdc:	e17ffd15 	stw	r5,-12(fp)
 c01bfe0:	e1bffe15 	stw	r6,-8(fp)
 c01bfe4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 c01bfe8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 c01bfec:	e0bffd17 	ldw	r2,-12(fp)
 c01bff0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 c01bff4:	00003706 	br	c01c0d4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 c01bff8:	e0bffc17 	ldw	r2,-16(fp)
 c01bffc:	10800c17 	ldw	r2,48(r2)
 c01c000:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 c01c004:	e0bffc17 	ldw	r2,-16(fp)
 c01c008:	10800d17 	ldw	r2,52(r2)
 c01c00c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 c01c010:	e0fff917 	ldw	r3,-28(fp)
 c01c014:	e0bff517 	ldw	r2,-44(fp)
 c01c018:	1880062e 	bgeu	r3,r2,c01c034 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 c01c01c:	e0fff517 	ldw	r3,-44(fp)
 c01c020:	e0bff917 	ldw	r2,-28(fp)
 c01c024:	1885c83a 	sub	r2,r3,r2
 c01c028:	10bfffc4 	addi	r2,r2,-1
 c01c02c:	e0bff615 	stw	r2,-40(fp)
 c01c030:	00000b06 	br	c01c060 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 c01c034:	e0bff517 	ldw	r2,-44(fp)
 c01c038:	10000526 	beq	r2,zero,c01c050 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 c01c03c:	00c20004 	movi	r3,2048
 c01c040:	e0bff917 	ldw	r2,-28(fp)
 c01c044:	1885c83a 	sub	r2,r3,r2
 c01c048:	e0bff615 	stw	r2,-40(fp)
 c01c04c:	00000406 	br	c01c060 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 c01c050:	00c1ffc4 	movi	r3,2047
 c01c054:	e0bff917 	ldw	r2,-28(fp)
 c01c058:	1885c83a 	sub	r2,r3,r2
 c01c05c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 c01c060:	e0bff617 	ldw	r2,-40(fp)
 c01c064:	10001e26 	beq	r2,zero,c01c0e0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 c01c068:	e0fffe17 	ldw	r3,-8(fp)
 c01c06c:	e0bff617 	ldw	r2,-40(fp)
 c01c070:	1880022e 	bgeu	r3,r2,c01c07c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 c01c074:	e0bffe17 	ldw	r2,-8(fp)
 c01c078:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 c01c07c:	e0bffc17 	ldw	r2,-16(fp)
 c01c080:	10c20e04 	addi	r3,r2,2104
 c01c084:	e0bff917 	ldw	r2,-28(fp)
 c01c088:	1885883a 	add	r2,r3,r2
 c01c08c:	e1bff617 	ldw	r6,-40(fp)
 c01c090:	e17ffd17 	ldw	r5,-12(fp)
 c01c094:	1009883a 	mov	r4,r2
 c01c098:	c00e77c0 	call	c00e77c <memcpy>
      ptr   += n;
 c01c09c:	e0fffd17 	ldw	r3,-12(fp)
 c01c0a0:	e0bff617 	ldw	r2,-40(fp)
 c01c0a4:	1885883a 	add	r2,r3,r2
 c01c0a8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 c01c0ac:	e0fffe17 	ldw	r3,-8(fp)
 c01c0b0:	e0bff617 	ldw	r2,-40(fp)
 c01c0b4:	1885c83a 	sub	r2,r3,r2
 c01c0b8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c01c0bc:	e0fff917 	ldw	r3,-28(fp)
 c01c0c0:	e0bff617 	ldw	r2,-40(fp)
 c01c0c4:	1885883a 	add	r2,r3,r2
 c01c0c8:	10c1ffcc 	andi	r3,r2,2047
 c01c0cc:	e0bffc17 	ldw	r2,-16(fp)
 c01c0d0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 c01c0d4:	e0bffe17 	ldw	r2,-8(fp)
 c01c0d8:	00bfc716 	blt	zero,r2,c01bff8 <__alt_data_end+0xfc01bff8>
 c01c0dc:	00000106 	br	c01c0e4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 c01c0e0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01c0e4:	0005303a 	rdctl	r2,status
 c01c0e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01c0ec:	e0fffb17 	ldw	r3,-20(fp)
 c01c0f0:	00bfff84 	movi	r2,-2
 c01c0f4:	1884703a 	and	r2,r3,r2
 c01c0f8:	1001703a 	wrctl	status,r2
  
  return context;
 c01c0fc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 c01c100:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 c01c104:	e0bffc17 	ldw	r2,-16(fp)
 c01c108:	10800817 	ldw	r2,32(r2)
 c01c10c:	10c00094 	ori	r3,r2,2
 c01c110:	e0bffc17 	ldw	r2,-16(fp)
 c01c114:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 c01c118:	e0bffc17 	ldw	r2,-16(fp)
 c01c11c:	10800017 	ldw	r2,0(r2)
 c01c120:	10800104 	addi	r2,r2,4
 c01c124:	1007883a 	mov	r3,r2
 c01c128:	e0bffc17 	ldw	r2,-16(fp)
 c01c12c:	10800817 	ldw	r2,32(r2)
 c01c130:	18800035 	stwio	r2,0(r3)
 c01c134:	e0bffa17 	ldw	r2,-24(fp)
 c01c138:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01c13c:	e0bff817 	ldw	r2,-32(fp)
 c01c140:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 c01c144:	e0bffe17 	ldw	r2,-8(fp)
 c01c148:	0080100e 	bge	zero,r2,c01c18c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 c01c14c:	e0bfff17 	ldw	r2,-4(fp)
 c01c150:	1090000c 	andi	r2,r2,16384
 c01c154:	1000101e 	bne	r2,zero,c01c198 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 c01c158:	0001883a 	nop
 c01c15c:	e0bffc17 	ldw	r2,-16(fp)
 c01c160:	10c00d17 	ldw	r3,52(r2)
 c01c164:	e0bff517 	ldw	r2,-44(fp)
 c01c168:	1880051e 	bne	r3,r2,c01c180 <altera_avalon_jtag_uart_write+0x1b8>
 c01c16c:	e0bffc17 	ldw	r2,-16(fp)
 c01c170:	10c00917 	ldw	r3,36(r2)
 c01c174:	e0bffc17 	ldw	r2,-16(fp)
 c01c178:	10800117 	ldw	r2,4(r2)
 c01c17c:	18bff736 	bltu	r3,r2,c01c15c <__alt_data_end+0xfc01c15c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 c01c180:	e0bffc17 	ldw	r2,-16(fp)
 c01c184:	10800917 	ldw	r2,36(r2)
 c01c188:	1000051e 	bne	r2,zero,c01c1a0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 c01c18c:	e0bffe17 	ldw	r2,-8(fp)
 c01c190:	00bfd016 	blt	zero,r2,c01c0d4 <__alt_data_end+0xfc01c0d4>
 c01c194:	00000306 	br	c01c1a4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 c01c198:	0001883a 	nop
 c01c19c:	00000106 	br	c01c1a4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 c01c1a0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 c01c1a4:	e0fffd17 	ldw	r3,-12(fp)
 c01c1a8:	e0bff717 	ldw	r2,-36(fp)
 c01c1ac:	18800426 	beq	r3,r2,c01c1c0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 c01c1b0:	e0fffd17 	ldw	r3,-12(fp)
 c01c1b4:	e0bff717 	ldw	r2,-36(fp)
 c01c1b8:	1885c83a 	sub	r2,r3,r2
 c01c1bc:	00000606 	br	c01c1d8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 c01c1c0:	e0bfff17 	ldw	r2,-4(fp)
 c01c1c4:	1090000c 	andi	r2,r2,16384
 c01c1c8:	10000226 	beq	r2,zero,c01c1d4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 c01c1cc:	00bffd44 	movi	r2,-11
 c01c1d0:	00000106 	br	c01c1d8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 c01c1d4:	00bffec4 	movi	r2,-5
}
 c01c1d8:	e037883a 	mov	sp,fp
 c01c1dc:	dfc00117 	ldw	ra,4(sp)
 c01c1e0:	df000017 	ldw	fp,0(sp)
 c01c1e4:	dec00204 	addi	sp,sp,8
 c01c1e8:	f800283a 	ret

0c01c1ec <alt_avalon_spi_command>:

int alt_avalon_spi_command(alt_u32 base, alt_u32 slave,
                           alt_u32 write_length, const alt_u8 * write_data,
                           alt_u32 read_length, alt_u8 * read_data,
                           alt_u32 flags)
{
 c01c1ec:	defff404 	addi	sp,sp,-48
 c01c1f0:	df000b15 	stw	fp,44(sp)
 c01c1f4:	df000b04 	addi	fp,sp,44
 c01c1f8:	e13ffc15 	stw	r4,-16(fp)
 c01c1fc:	e17ffd15 	stw	r5,-12(fp)
 c01c200:	e1bffe15 	stw	r6,-8(fp)
 c01c204:	e1ffff15 	stw	r7,-4(fp)
  const alt_u8 * write_end = write_data + write_length;
 c01c208:	e0ffff17 	ldw	r3,-4(fp)
 c01c20c:	e0bffe17 	ldw	r2,-8(fp)
 c01c210:	1885883a 	add	r2,r3,r2
 c01c214:	e0bff815 	stw	r2,-32(fp)
  alt_u8 * read_end = read_data + read_length;
 c01c218:	e0c00217 	ldw	r3,8(fp)
 c01c21c:	e0800117 	ldw	r2,4(fp)
 c01c220:	1885883a 	add	r2,r3,r2
 c01c224:	e0bff915 	stw	r2,-28(fp)

  alt_u32 write_zeros = read_length;
 c01c228:	e0800117 	ldw	r2,4(fp)
 c01c22c:	e0bff515 	stw	r2,-44(fp)
  alt_u32 read_ignore = write_length;
 c01c230:	e0bffe17 	ldw	r2,-8(fp)
 c01c234:	e0bff615 	stw	r2,-40(fp)

  /* We must not send more than two bytes to the target before it has
   * returned any as otherwise it will overflow. */
  /* Unfortunately the hardware does not seem to work with credits > 1,
   * leave it at 1 for now. */
  alt_32 credits = 1;
 c01c238:	00800044 	movi	r2,1
 c01c23c:	e0bff715 	stw	r2,-36(fp)
  /* Warning: this function is not currently safe if called in a multi-threaded
   * environment, something above must perform locking to make it safe if more
   * than one thread intends to use it.
   */

  IOWR_ALTERA_AVALON_SPI_SLAVE_SEL(base, 1 << slave);
 c01c240:	e0bffc17 	ldw	r2,-16(fp)
 c01c244:	10800504 	addi	r2,r2,20
 c01c248:	1009883a 	mov	r4,r2
 c01c24c:	00c00044 	movi	r3,1
 c01c250:	e0bffd17 	ldw	r2,-12(fp)
 c01c254:	1884983a 	sll	r2,r3,r2
 c01c258:	20800035 	stwio	r2,0(r4)
  
  /* Set the SSO bit (force chipselect) only if the toggle flag is not set */
  if ((flags & ALT_AVALON_SPI_COMMAND_TOGGLE_SS_N) == 0) {
 c01c25c:	e0800317 	ldw	r2,12(fp)
 c01c260:	1080008c 	andi	r2,r2,2
 c01c264:	1000051e 	bne	r2,zero,c01c27c <alt_avalon_spi_command+0x90>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, ALTERA_AVALON_SPI_CONTROL_SSO_MSK);
 c01c268:	e0bffc17 	ldw	r2,-16(fp)
 c01c26c:	10800304 	addi	r2,r2,12
 c01c270:	1007883a 	mov	r3,r2
 c01c274:	00810004 	movi	r2,1024
 c01c278:	18800035 	stwio	r2,0(r3)
  /*
   * Discard any stale data present in the RXDATA register, in case
   * previous communication was interrupted and stale data was left
   * behind.
   */
  IORD_ALTERA_AVALON_SPI_RXDATA(base);
 c01c27c:	e0bffc17 	ldw	r2,-16(fp)
 c01c280:	10800037 	ldwio	r2,0(r2)
  for ( ; ; )
  {
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
 c01c284:	e0bffc17 	ldw	r2,-16(fp)
 c01c288:	10800204 	addi	r2,r2,8
 c01c28c:	10800037 	ldwio	r2,0(r2)
 c01c290:	e0bffa15 	stw	r2,-24(fp)
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
 c01c294:	e0bffa17 	ldw	r2,-24(fp)
 c01c298:	1080100c 	andi	r2,r2,64
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
 c01c29c:	10000226 	beq	r2,zero,c01c2a8 <alt_avalon_spi_command+0xbc>
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
 c01c2a0:	e0bff717 	ldw	r2,-36(fp)
 c01c2a4:	1000031e 	bne	r2,zero,c01c2b4 <alt_avalon_spi_command+0xc8>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);
 c01c2a8:	e0bffa17 	ldw	r2,-24(fp)
 c01c2ac:	1080200c 	andi	r2,r2,128
    
    do
    {
      status = IORD_ALTERA_AVALON_SPI_STATUS(base);
    }
    while (((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) == 0 || credits == 0) &&
 c01c2b0:	103ff426 	beq	r2,zero,c01c284 <__alt_data_end+0xfc01c284>
            (status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) == 0);

    if ((status & ALTERA_AVALON_SPI_STATUS_TRDY_MSK) != 0 && credits > 0)
 c01c2b4:	e0bffa17 	ldw	r2,-24(fp)
 c01c2b8:	1080100c 	andi	r2,r2,64
 c01c2bc:	10001e26 	beq	r2,zero,c01c338 <alt_avalon_spi_command+0x14c>
 c01c2c0:	e0bff717 	ldw	r2,-36(fp)
 c01c2c4:	00801c0e 	bge	zero,r2,c01c338 <alt_avalon_spi_command+0x14c>
    {
      credits--;
 c01c2c8:	e0bff717 	ldw	r2,-36(fp)
 c01c2cc:	10bfffc4 	addi	r2,r2,-1
 c01c2d0:	e0bff715 	stw	r2,-36(fp)

      if (write_data < write_end)
 c01c2d4:	e0ffff17 	ldw	r3,-4(fp)
 c01c2d8:	e0bff817 	ldw	r2,-32(fp)
 c01c2dc:	18800a2e 	bgeu	r3,r2,c01c308 <alt_avalon_spi_command+0x11c>
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, *write_data++);
 c01c2e0:	e0bffc17 	ldw	r2,-16(fp)
 c01c2e4:	10800104 	addi	r2,r2,4
 c01c2e8:	1009883a 	mov	r4,r2
 c01c2ec:	e0bfff17 	ldw	r2,-4(fp)
 c01c2f0:	10c00044 	addi	r3,r2,1
 c01c2f4:	e0ffff15 	stw	r3,-4(fp)
 c01c2f8:	10800003 	ldbu	r2,0(r2)
 c01c2fc:	10803fcc 	andi	r2,r2,255
 c01c300:	20800035 	stwio	r2,0(r4)
 c01c304:	00000c06 	br	c01c338 <alt_avalon_spi_command+0x14c>
      else if (write_zeros > 0)
 c01c308:	e0bff517 	ldw	r2,-44(fp)
 c01c30c:	10000826 	beq	r2,zero,c01c330 <alt_avalon_spi_command+0x144>
      {
        write_zeros--;
 c01c310:	e0bff517 	ldw	r2,-44(fp)
 c01c314:	10bfffc4 	addi	r2,r2,-1
 c01c318:	e0bff515 	stw	r2,-44(fp)
        IOWR_ALTERA_AVALON_SPI_TXDATA(base, 0);
 c01c31c:	e0bffc17 	ldw	r2,-16(fp)
 c01c320:	10800104 	addi	r2,r2,4
 c01c324:	0007883a 	mov	r3,zero
 c01c328:	10c00035 	stwio	r3,0(r2)
 c01c32c:	00000206 	br	c01c338 <alt_avalon_spi_command+0x14c>
      }
      else
        credits = -1024;
 c01c330:	00bf0004 	movi	r2,-1024
 c01c334:	e0bff715 	stw	r2,-36(fp)
    };

    if ((status & ALTERA_AVALON_SPI_STATUS_RRDY_MSK) != 0)
 c01c338:	e0bffa17 	ldw	r2,-24(fp)
 c01c33c:	1080200c 	andi	r2,r2,128
 c01c340:	103fd026 	beq	r2,zero,c01c284 <__alt_data_end+0xfc01c284>
    {
      alt_u32 rxdata = IORD_ALTERA_AVALON_SPI_RXDATA(base);
 c01c344:	e0bffc17 	ldw	r2,-16(fp)
 c01c348:	10800037 	ldwio	r2,0(r2)
 c01c34c:	e0bffb15 	stw	r2,-20(fp)

      if (read_ignore > 0)
 c01c350:	e0bff617 	ldw	r2,-40(fp)
 c01c354:	10000426 	beq	r2,zero,c01c368 <alt_avalon_spi_command+0x17c>
        read_ignore--;
 c01c358:	e0bff617 	ldw	r2,-40(fp)
 c01c35c:	10bfffc4 	addi	r2,r2,-1
 c01c360:	e0bff615 	stw	r2,-40(fp)
 c01c364:	00000506 	br	c01c37c <alt_avalon_spi_command+0x190>
      else
        *read_data++ = (alt_u8)rxdata;
 c01c368:	e0800217 	ldw	r2,8(fp)
 c01c36c:	10c00044 	addi	r3,r2,1
 c01c370:	e0c00215 	stw	r3,8(fp)
 c01c374:	e0fffb17 	ldw	r3,-20(fp)
 c01c378:	10c00005 	stb	r3,0(r2)
      credits++;
 c01c37c:	e0bff717 	ldw	r2,-36(fp)
 c01c380:	10800044 	addi	r2,r2,1
 c01c384:	e0bff715 	stw	r2,-36(fp)

      if (read_ignore == 0 && read_data == read_end)
 c01c388:	e0bff617 	ldw	r2,-40(fp)
 c01c38c:	103fbd1e 	bne	r2,zero,c01c284 <__alt_data_end+0xfc01c284>
 c01c390:	e0c00217 	ldw	r3,8(fp)
 c01c394:	e0bff917 	ldw	r2,-28(fp)
 c01c398:	18bfba1e 	bne	r3,r2,c01c284 <__alt_data_end+0xfc01c284>
  }

  /* Wait until the interface has finished transmitting */
  do
  {
    status = IORD_ALTERA_AVALON_SPI_STATUS(base);
 c01c39c:	e0bffc17 	ldw	r2,-16(fp)
 c01c3a0:	10800204 	addi	r2,r2,8
 c01c3a4:	10800037 	ldwio	r2,0(r2)
 c01c3a8:	e0bffa15 	stw	r2,-24(fp)
  }
  while ((status & ALTERA_AVALON_SPI_STATUS_TMT_MSK) == 0);
 c01c3ac:	e0bffa17 	ldw	r2,-24(fp)
 c01c3b0:	1080080c 	andi	r2,r2,32
 c01c3b4:	103ff926 	beq	r2,zero,c01c39c <__alt_data_end+0xfc01c39c>

  /* Clear SSO (release chipselect) unless the caller is going to
   * keep using this chip
   */
  if ((flags & ALT_AVALON_SPI_COMMAND_MERGE) == 0)
 c01c3b8:	e0800317 	ldw	r2,12(fp)
 c01c3bc:	1080004c 	andi	r2,r2,1
 c01c3c0:	1000041e 	bne	r2,zero,c01c3d4 <alt_avalon_spi_command+0x1e8>
    IOWR_ALTERA_AVALON_SPI_CONTROL(base, 0);
 c01c3c4:	e0bffc17 	ldw	r2,-16(fp)
 c01c3c8:	10800304 	addi	r2,r2,12
 c01c3cc:	0007883a 	mov	r3,zero
 c01c3d0:	10c00035 	stwio	r3,0(r2)

  return read_length;
 c01c3d4:	e0800117 	ldw	r2,4(fp)
}
 c01c3d8:	e037883a 	mov	sp,fp
 c01c3dc:	df000017 	ldw	fp,0(sp)
 c01c3e0:	dec00104 	addi	sp,sp,4
 c01c3e4:	f800283a 	ret

0c01c3e8 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 c01c3e8:	defffa04 	addi	sp,sp,-24
 c01c3ec:	dfc00515 	stw	ra,20(sp)
 c01c3f0:	df000415 	stw	fp,16(sp)
 c01c3f4:	df000404 	addi	fp,sp,16
 c01c3f8:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 c01c3fc:	0007883a 	mov	r3,zero
 c01c400:	e0bfff17 	ldw	r2,-4(fp)
 c01c404:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 c01c408:	e0bfff17 	ldw	r2,-4(fp)
 c01c40c:	10800104 	addi	r2,r2,4
 c01c410:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01c414:	0005303a 	rdctl	r2,status
 c01c418:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01c41c:	e0fffd17 	ldw	r3,-12(fp)
 c01c420:	00bfff84 	movi	r2,-2
 c01c424:	1884703a 	and	r2,r3,r2
 c01c428:	1001703a 	wrctl	status,r2
  
  return context;
 c01c42c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 c01c430:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 c01c434:	c01b4400 	call	c01b440 <alt_tick>
 c01c438:	e0bffc17 	ldw	r2,-16(fp)
 c01c43c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01c440:	e0bffe17 	ldw	r2,-8(fp)
 c01c444:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 c01c448:	0001883a 	nop
 c01c44c:	e037883a 	mov	sp,fp
 c01c450:	dfc00117 	ldw	ra,4(sp)
 c01c454:	df000017 	ldw	fp,0(sp)
 c01c458:	dec00204 	addi	sp,sp,8
 c01c45c:	f800283a 	ret

0c01c460 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 c01c460:	defff804 	addi	sp,sp,-32
 c01c464:	dfc00715 	stw	ra,28(sp)
 c01c468:	df000615 	stw	fp,24(sp)
 c01c46c:	df000604 	addi	fp,sp,24
 c01c470:	e13ffc15 	stw	r4,-16(fp)
 c01c474:	e17ffd15 	stw	r5,-12(fp)
 c01c478:	e1bffe15 	stw	r6,-8(fp)
 c01c47c:	e1ffff15 	stw	r7,-4(fp)
 c01c480:	e0bfff17 	ldw	r2,-4(fp)
 c01c484:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 c01c488:	d0a7af17 	ldw	r2,-24900(gp)
 c01c48c:	1000021e 	bne	r2,zero,c01c498 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 c01c490:	e0bffb17 	ldw	r2,-20(fp)
 c01c494:	d0a7af15 	stw	r2,-24900(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 c01c498:	e0bffc17 	ldw	r2,-16(fp)
 c01c49c:	10800104 	addi	r2,r2,4
 c01c4a0:	00c001c4 	movi	r3,7
 c01c4a4:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 c01c4a8:	d8000015 	stw	zero,0(sp)
 c01c4ac:	e1fffc17 	ldw	r7,-16(fp)
 c01c4b0:	018300b4 	movhi	r6,3074
 c01c4b4:	31b0fa04 	addi	r6,r6,-15384
 c01c4b8:	e17ffe17 	ldw	r5,-8(fp)
 c01c4bc:	e13ffd17 	ldw	r4,-12(fp)
 c01c4c0:	c01c9400 	call	c01c940 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 c01c4c4:	0001883a 	nop
 c01c4c8:	e037883a 	mov	sp,fp
 c01c4cc:	dfc00117 	ldw	ra,4(sp)
 c01c4d0:	df000017 	ldw	fp,0(sp)
 c01c4d4:	dec00204 	addi	sp,sp,8
 c01c4d8:	f800283a 	ret

0c01c4dc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 c01c4dc:	defff504 	addi	sp,sp,-44
 c01c4e0:	df000a15 	stw	fp,40(sp)
 c01c4e4:	df000a04 	addi	fp,sp,40
 c01c4e8:	e13ffc15 	stw	r4,-16(fp)
 c01c4ec:	e17ffd15 	stw	r5,-12(fp)
 c01c4f0:	e1bffe15 	stw	r6,-8(fp)
 c01c4f4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 c01c4f8:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 c01c4fc:	d0a7af17 	ldw	r2,-24900(gp)
  
  if (alt_ticks_per_second ())
 c01c500:	10003c26 	beq	r2,zero,c01c5f4 <alt_alarm_start+0x118>
  {
    if (alarm)
 c01c504:	e0bffc17 	ldw	r2,-16(fp)
 c01c508:	10003826 	beq	r2,zero,c01c5ec <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 c01c50c:	e0bffc17 	ldw	r2,-16(fp)
 c01c510:	e0fffe17 	ldw	r3,-8(fp)
 c01c514:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 c01c518:	e0bffc17 	ldw	r2,-16(fp)
 c01c51c:	e0ffff17 	ldw	r3,-4(fp)
 c01c520:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01c524:	0005303a 	rdctl	r2,status
 c01c528:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01c52c:	e0fff917 	ldw	r3,-28(fp)
 c01c530:	00bfff84 	movi	r2,-2
 c01c534:	1884703a 	and	r2,r3,r2
 c01c538:	1001703a 	wrctl	status,r2
  
  return context;
 c01c53c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 c01c540:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 c01c544:	d0a7b017 	ldw	r2,-24896(gp)
      
      current_nticks = alt_nticks();
 c01c548:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 c01c54c:	e0fffd17 	ldw	r3,-12(fp)
 c01c550:	e0bff617 	ldw	r2,-40(fp)
 c01c554:	1885883a 	add	r2,r3,r2
 c01c558:	10c00044 	addi	r3,r2,1
 c01c55c:	e0bffc17 	ldw	r2,-16(fp)
 c01c560:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 c01c564:	e0bffc17 	ldw	r2,-16(fp)
 c01c568:	10c00217 	ldw	r3,8(r2)
 c01c56c:	e0bff617 	ldw	r2,-40(fp)
 c01c570:	1880042e 	bgeu	r3,r2,c01c584 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 c01c574:	e0bffc17 	ldw	r2,-16(fp)
 c01c578:	00c00044 	movi	r3,1
 c01c57c:	10c00405 	stb	r3,16(r2)
 c01c580:	00000206 	br	c01c58c <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 c01c584:	e0bffc17 	ldw	r2,-16(fp)
 c01c588:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 c01c58c:	e0bffc17 	ldw	r2,-16(fp)
 c01c590:	d0e01504 	addi	r3,gp,-32684
 c01c594:	e0fffa15 	stw	r3,-24(fp)
 c01c598:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 c01c59c:	e0bffb17 	ldw	r2,-20(fp)
 c01c5a0:	e0fffa17 	ldw	r3,-24(fp)
 c01c5a4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 c01c5a8:	e0bffa17 	ldw	r2,-24(fp)
 c01c5ac:	10c00017 	ldw	r3,0(r2)
 c01c5b0:	e0bffb17 	ldw	r2,-20(fp)
 c01c5b4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 c01c5b8:	e0bffa17 	ldw	r2,-24(fp)
 c01c5bc:	10800017 	ldw	r2,0(r2)
 c01c5c0:	e0fffb17 	ldw	r3,-20(fp)
 c01c5c4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 c01c5c8:	e0bffa17 	ldw	r2,-24(fp)
 c01c5cc:	e0fffb17 	ldw	r3,-20(fp)
 c01c5d0:	10c00015 	stw	r3,0(r2)
 c01c5d4:	e0bff817 	ldw	r2,-32(fp)
 c01c5d8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01c5dc:	e0bff717 	ldw	r2,-36(fp)
 c01c5e0:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 c01c5e4:	0005883a 	mov	r2,zero
 c01c5e8:	00000306 	br	c01c5f8 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 c01c5ec:	00bffa84 	movi	r2,-22
 c01c5f0:	00000106 	br	c01c5f8 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 c01c5f4:	00bfde84 	movi	r2,-134
  }
}
 c01c5f8:	e037883a 	mov	sp,fp
 c01c5fc:	df000017 	ldw	fp,0(sp)
 c01c600:	dec00104 	addi	sp,sp,4
 c01c604:	f800283a 	ret

0c01c608 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 c01c608:	defffa04 	addi	sp,sp,-24
 c01c60c:	dfc00515 	stw	ra,20(sp)
 c01c610:	df000415 	stw	fp,16(sp)
 c01c614:	df000404 	addi	fp,sp,16
 c01c618:	e13fff15 	stw	r4,-4(fp)
  int big_loops;
  alt_u32 cycles_per_loop;
  
  if (!strcmp(NIOS2_CPU_IMPLEMENTATION,"tiny"))
  {
    cycles_per_loop = 9;
 c01c61c:	00800244 	movi	r2,9
 c01c620:	e0bffd15 	stw	r2,-12(fp)
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 c01c624:	014003f4 	movhi	r5,15
 c01c628:	29509004 	addi	r5,r5,16960
 c01c62c:	e13ffd17 	ldw	r4,-12(fp)
 c01c630:	c00473c0 	call	c00473c <__mulsi3>
 c01c634:	100b883a 	mov	r5,r2
 c01c638:	0100bef4 	movhi	r4,763
 c01c63c:	213c2004 	addi	r4,r4,-3968
 c01c640:	c0046800 	call	c004680 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 c01c644:	100b883a 	mov	r5,r2
 c01c648:	01200034 	movhi	r4,32768
 c01c64c:	213fffc4 	addi	r4,r4,-1
 c01c650:	c0046800 	call	c004680 <__udivsi3>
 c01c654:	100b883a 	mov	r5,r2
 c01c658:	e13fff17 	ldw	r4,-4(fp)
 c01c65c:	c0046800 	call	c004680 <__udivsi3>
 c01c660:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 c01c664:	e0bffe17 	ldw	r2,-8(fp)
 c01c668:	10002a26 	beq	r2,zero,c01c714 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 c01c66c:	e03ffc15 	stw	zero,-16(fp)
 c01c670:	00001706 	br	c01c6d0 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 c01c674:	00a00034 	movhi	r2,32768
 c01c678:	10bfffc4 	addi	r2,r2,-1
 c01c67c:	10bfffc4 	addi	r2,r2,-1
 c01c680:	103ffe1e 	bne	r2,zero,c01c67c <__alt_data_end+0xfc01c67c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 c01c684:	014003f4 	movhi	r5,15
 c01c688:	29509004 	addi	r5,r5,16960
 c01c68c:	e13ffd17 	ldw	r4,-12(fp)
 c01c690:	c00473c0 	call	c00473c <__mulsi3>
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 c01c694:	100b883a 	mov	r5,r2
 c01c698:	0100bef4 	movhi	r4,763
 c01c69c:	213c2004 	addi	r4,r4,-3968
 c01c6a0:	c0046800 	call	c004680 <__udivsi3>
 c01c6a4:	100b883a 	mov	r5,r2
 c01c6a8:	01200034 	movhi	r4,32768
 c01c6ac:	213fffc4 	addi	r4,r4,-1
 c01c6b0:	c0046800 	call	c004680 <__udivsi3>
 c01c6b4:	1007883a 	mov	r3,r2
 c01c6b8:	e0bfff17 	ldw	r2,-4(fp)
 c01c6bc:	10c5c83a 	sub	r2,r2,r3
 c01c6c0:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 c01c6c4:	e0bffc17 	ldw	r2,-16(fp)
 c01c6c8:	10800044 	addi	r2,r2,1
 c01c6cc:	e0bffc15 	stw	r2,-16(fp)
 c01c6d0:	e0fffc17 	ldw	r3,-16(fp)
 c01c6d4:	e0bffe17 	ldw	r2,-8(fp)
 c01c6d8:	18bfe616 	blt	r3,r2,c01c674 <__alt_data_end+0xfc01c674>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 c01c6dc:	014003f4 	movhi	r5,15
 c01c6e0:	29509004 	addi	r5,r5,16960
 c01c6e4:	e13ffd17 	ldw	r4,-12(fp)
 c01c6e8:	c00473c0 	call	c00473c <__mulsi3>
 c01c6ec:	100b883a 	mov	r5,r2
 c01c6f0:	0100bef4 	movhi	r4,763
 c01c6f4:	213c2004 	addi	r4,r4,-3968
 c01c6f8:	c0046800 	call	c004680 <__udivsi3>
 c01c6fc:	e17fff17 	ldw	r5,-4(fp)
 c01c700:	1009883a 	mov	r4,r2
 c01c704:	c00473c0 	call	c00473c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 c01c708:	10bfffc4 	addi	r2,r2,-1
 c01c70c:	103ffe1e 	bne	r2,zero,c01c708 <__alt_data_end+0xfc01c708>
 c01c710:	00000d06 	br	c01c748 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 c01c714:	014003f4 	movhi	r5,15
 c01c718:	29509004 	addi	r5,r5,16960
 c01c71c:	e13ffd17 	ldw	r4,-12(fp)
 c01c720:	c00473c0 	call	c00473c <__mulsi3>
 c01c724:	100b883a 	mov	r5,r2
 c01c728:	0100bef4 	movhi	r4,763
 c01c72c:	213c2004 	addi	r4,r4,-3968
 c01c730:	c0046800 	call	c004680 <__udivsi3>
 c01c734:	e17fff17 	ldw	r5,-4(fp)
 c01c738:	1009883a 	mov	r4,r2
 c01c73c:	c00473c0 	call	c00473c <__mulsi3>
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 c01c740:	10bfffc4 	addi	r2,r2,-1
 c01c744:	00bffe16 	blt	zero,r2,c01c740 <__alt_data_end+0xfc01c740>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 c01c748:	0005883a 	mov	r2,zero
}
 c01c74c:	e037883a 	mov	sp,fp
 c01c750:	dfc00117 	ldw	ra,4(sp)
 c01c754:	df000017 	ldw	fp,0(sp)
 c01c758:	dec00204 	addi	sp,sp,8
 c01c75c:	f800283a 	ret

0c01c760 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 c01c760:	deffff04 	addi	sp,sp,-4
 c01c764:	df000015 	stw	fp,0(sp)
 c01c768:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 c01c76c:	0001883a 	nop
 c01c770:	e037883a 	mov	sp,fp
 c01c774:	df000017 	ldw	fp,0(sp)
 c01c778:	dec00104 	addi	sp,sp,4
 c01c77c:	f800283a 	ret

0c01c780 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01c780:	defffe04 	addi	sp,sp,-8
 c01c784:	dfc00115 	stw	ra,4(sp)
 c01c788:	df000015 	stw	fp,0(sp)
 c01c78c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01c790:	d0a01317 	ldw	r2,-32692(gp)
 c01c794:	10000326 	beq	r2,zero,c01c7a4 <alt_get_errno+0x24>
 c01c798:	d0a01317 	ldw	r2,-32692(gp)
 c01c79c:	103ee83a 	callr	r2
 c01c7a0:	00000106 	br	c01c7a8 <alt_get_errno+0x28>
 c01c7a4:	d0a7a804 	addi	r2,gp,-24928
}
 c01c7a8:	e037883a 	mov	sp,fp
 c01c7ac:	dfc00117 	ldw	ra,4(sp)
 c01c7b0:	df000017 	ldw	fp,0(sp)
 c01c7b4:	dec00204 	addi	sp,sp,8
 c01c7b8:	f800283a 	ret

0c01c7bc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 c01c7bc:	defffa04 	addi	sp,sp,-24
 c01c7c0:	dfc00515 	stw	ra,20(sp)
 c01c7c4:	df000415 	stw	fp,16(sp)
 c01c7c8:	df000404 	addi	fp,sp,16
 c01c7cc:	e13ffe15 	stw	r4,-8(fp)
 c01c7d0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 c01c7d4:	e0bffe17 	ldw	r2,-8(fp)
 c01c7d8:	10000326 	beq	r2,zero,c01c7e8 <alt_dev_llist_insert+0x2c>
 c01c7dc:	e0bffe17 	ldw	r2,-8(fp)
 c01c7e0:	10800217 	ldw	r2,8(r2)
 c01c7e4:	1000061e 	bne	r2,zero,c01c800 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 c01c7e8:	c01c7800 	call	c01c780 <alt_get_errno>
 c01c7ec:	1007883a 	mov	r3,r2
 c01c7f0:	00800584 	movi	r2,22
 c01c7f4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 c01c7f8:	00bffa84 	movi	r2,-22
 c01c7fc:	00001306 	br	c01c84c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 c01c800:	e0bffe17 	ldw	r2,-8(fp)
 c01c804:	e0ffff17 	ldw	r3,-4(fp)
 c01c808:	e0fffc15 	stw	r3,-16(fp)
 c01c80c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 c01c810:	e0bffd17 	ldw	r2,-12(fp)
 c01c814:	e0fffc17 	ldw	r3,-16(fp)
 c01c818:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 c01c81c:	e0bffc17 	ldw	r2,-16(fp)
 c01c820:	10c00017 	ldw	r3,0(r2)
 c01c824:	e0bffd17 	ldw	r2,-12(fp)
 c01c828:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 c01c82c:	e0bffc17 	ldw	r2,-16(fp)
 c01c830:	10800017 	ldw	r2,0(r2)
 c01c834:	e0fffd17 	ldw	r3,-12(fp)
 c01c838:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 c01c83c:	e0bffc17 	ldw	r2,-16(fp)
 c01c840:	e0fffd17 	ldw	r3,-12(fp)
 c01c844:	10c00015 	stw	r3,0(r2)

  return 0;  
 c01c848:	0005883a 	mov	r2,zero
}
 c01c84c:	e037883a 	mov	sp,fp
 c01c850:	dfc00117 	ldw	ra,4(sp)
 c01c854:	df000017 	ldw	fp,0(sp)
 c01c858:	dec00204 	addi	sp,sp,8
 c01c85c:	f800283a 	ret

0c01c860 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 c01c860:	defffd04 	addi	sp,sp,-12
 c01c864:	dfc00215 	stw	ra,8(sp)
 c01c868:	df000115 	stw	fp,4(sp)
 c01c86c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 c01c870:	008300b4 	movhi	r2,3074
 c01c874:	10b59c04 	addi	r2,r2,-10640
 c01c878:	e0bfff15 	stw	r2,-4(fp)
 c01c87c:	00000606 	br	c01c898 <_do_ctors+0x38>
        (*ctor) (); 
 c01c880:	e0bfff17 	ldw	r2,-4(fp)
 c01c884:	10800017 	ldw	r2,0(r2)
 c01c888:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 c01c88c:	e0bfff17 	ldw	r2,-4(fp)
 c01c890:	10bfff04 	addi	r2,r2,-4
 c01c894:	e0bfff15 	stw	r2,-4(fp)
 c01c898:	e0ffff17 	ldw	r3,-4(fp)
 c01c89c:	008300b4 	movhi	r2,3074
 c01c8a0:	10b59d04 	addi	r2,r2,-10636
 c01c8a4:	18bff62e 	bgeu	r3,r2,c01c880 <__alt_data_end+0xfc01c880>
        (*ctor) (); 
}
 c01c8a8:	0001883a 	nop
 c01c8ac:	e037883a 	mov	sp,fp
 c01c8b0:	dfc00117 	ldw	ra,4(sp)
 c01c8b4:	df000017 	ldw	fp,0(sp)
 c01c8b8:	dec00204 	addi	sp,sp,8
 c01c8bc:	f800283a 	ret

0c01c8c0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 c01c8c0:	defffd04 	addi	sp,sp,-12
 c01c8c4:	dfc00215 	stw	ra,8(sp)
 c01c8c8:	df000115 	stw	fp,4(sp)
 c01c8cc:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 c01c8d0:	008300b4 	movhi	r2,3074
 c01c8d4:	10b59c04 	addi	r2,r2,-10640
 c01c8d8:	e0bfff15 	stw	r2,-4(fp)
 c01c8dc:	00000606 	br	c01c8f8 <_do_dtors+0x38>
        (*dtor) (); 
 c01c8e0:	e0bfff17 	ldw	r2,-4(fp)
 c01c8e4:	10800017 	ldw	r2,0(r2)
 c01c8e8:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 c01c8ec:	e0bfff17 	ldw	r2,-4(fp)
 c01c8f0:	10bfff04 	addi	r2,r2,-4
 c01c8f4:	e0bfff15 	stw	r2,-4(fp)
 c01c8f8:	e0ffff17 	ldw	r3,-4(fp)
 c01c8fc:	008300b4 	movhi	r2,3074
 c01c900:	10b59d04 	addi	r2,r2,-10636
 c01c904:	18bff62e 	bgeu	r3,r2,c01c8e0 <__alt_data_end+0xfc01c8e0>
        (*dtor) (); 
}
 c01c908:	0001883a 	nop
 c01c90c:	e037883a 	mov	sp,fp
 c01c910:	dfc00117 	ldw	ra,4(sp)
 c01c914:	df000017 	ldw	fp,0(sp)
 c01c918:	dec00204 	addi	sp,sp,8
 c01c91c:	f800283a 	ret

0c01c920 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 c01c920:	deffff04 	addi	sp,sp,-4
 c01c924:	df000015 	stw	fp,0(sp)
 c01c928:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 c01c92c:	0001883a 	nop
 c01c930:	e037883a 	mov	sp,fp
 c01c934:	df000017 	ldw	fp,0(sp)
 c01c938:	dec00104 	addi	sp,sp,4
 c01c93c:	f800283a 	ret

0c01c940 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 c01c940:	defff904 	addi	sp,sp,-28
 c01c944:	dfc00615 	stw	ra,24(sp)
 c01c948:	df000515 	stw	fp,20(sp)
 c01c94c:	df000504 	addi	fp,sp,20
 c01c950:	e13ffc15 	stw	r4,-16(fp)
 c01c954:	e17ffd15 	stw	r5,-12(fp)
 c01c958:	e1bffe15 	stw	r6,-8(fp)
 c01c95c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 c01c960:	e0800217 	ldw	r2,8(fp)
 c01c964:	d8800015 	stw	r2,0(sp)
 c01c968:	e1ffff17 	ldw	r7,-4(fp)
 c01c96c:	e1bffe17 	ldw	r6,-8(fp)
 c01c970:	e17ffd17 	ldw	r5,-12(fp)
 c01c974:	e13ffc17 	ldw	r4,-16(fp)
 c01c978:	c01caf00 	call	c01caf0 <alt_iic_isr_register>
}  
 c01c97c:	e037883a 	mov	sp,fp
 c01c980:	dfc00117 	ldw	ra,4(sp)
 c01c984:	df000017 	ldw	fp,0(sp)
 c01c988:	dec00204 	addi	sp,sp,8
 c01c98c:	f800283a 	ret

0c01c990 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 c01c990:	defff904 	addi	sp,sp,-28
 c01c994:	df000615 	stw	fp,24(sp)
 c01c998:	df000604 	addi	fp,sp,24
 c01c99c:	e13ffe15 	stw	r4,-8(fp)
 c01c9a0:	e17fff15 	stw	r5,-4(fp)
 c01c9a4:	e0bfff17 	ldw	r2,-4(fp)
 c01c9a8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01c9ac:	0005303a 	rdctl	r2,status
 c01c9b0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01c9b4:	e0fffb17 	ldw	r3,-20(fp)
 c01c9b8:	00bfff84 	movi	r2,-2
 c01c9bc:	1884703a 	and	r2,r3,r2
 c01c9c0:	1001703a 	wrctl	status,r2
  
  return context;
 c01c9c4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 c01c9c8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 c01c9cc:	00c00044 	movi	r3,1
 c01c9d0:	e0bffa17 	ldw	r2,-24(fp)
 c01c9d4:	1884983a 	sll	r2,r3,r2
 c01c9d8:	1007883a 	mov	r3,r2
 c01c9dc:	d0a7b117 	ldw	r2,-24892(gp)
 c01c9e0:	1884b03a 	or	r2,r3,r2
 c01c9e4:	d0a7b115 	stw	r2,-24892(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 c01c9e8:	d0a7b117 	ldw	r2,-24892(gp)
 c01c9ec:	100170fa 	wrctl	ienable,r2
 c01c9f0:	e0bffc17 	ldw	r2,-16(fp)
 c01c9f4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01c9f8:	e0bffd17 	ldw	r2,-12(fp)
 c01c9fc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 c01ca00:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 c01ca04:	0001883a 	nop
}
 c01ca08:	e037883a 	mov	sp,fp
 c01ca0c:	df000017 	ldw	fp,0(sp)
 c01ca10:	dec00104 	addi	sp,sp,4
 c01ca14:	f800283a 	ret

0c01ca18 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 c01ca18:	defff904 	addi	sp,sp,-28
 c01ca1c:	df000615 	stw	fp,24(sp)
 c01ca20:	df000604 	addi	fp,sp,24
 c01ca24:	e13ffe15 	stw	r4,-8(fp)
 c01ca28:	e17fff15 	stw	r5,-4(fp)
 c01ca2c:	e0bfff17 	ldw	r2,-4(fp)
 c01ca30:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01ca34:	0005303a 	rdctl	r2,status
 c01ca38:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01ca3c:	e0fffb17 	ldw	r3,-20(fp)
 c01ca40:	00bfff84 	movi	r2,-2
 c01ca44:	1884703a 	and	r2,r3,r2
 c01ca48:	1001703a 	wrctl	status,r2
  
  return context;
 c01ca4c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 c01ca50:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 c01ca54:	00c00044 	movi	r3,1
 c01ca58:	e0bffa17 	ldw	r2,-24(fp)
 c01ca5c:	1884983a 	sll	r2,r3,r2
 c01ca60:	0084303a 	nor	r2,zero,r2
 c01ca64:	1007883a 	mov	r3,r2
 c01ca68:	d0a7b117 	ldw	r2,-24892(gp)
 c01ca6c:	1884703a 	and	r2,r3,r2
 c01ca70:	d0a7b115 	stw	r2,-24892(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 c01ca74:	d0a7b117 	ldw	r2,-24892(gp)
 c01ca78:	100170fa 	wrctl	ienable,r2
 c01ca7c:	e0bffc17 	ldw	r2,-16(fp)
 c01ca80:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01ca84:	e0bffd17 	ldw	r2,-12(fp)
 c01ca88:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 c01ca8c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 c01ca90:	0001883a 	nop
}
 c01ca94:	e037883a 	mov	sp,fp
 c01ca98:	df000017 	ldw	fp,0(sp)
 c01ca9c:	dec00104 	addi	sp,sp,4
 c01caa0:	f800283a 	ret

0c01caa4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 c01caa4:	defffc04 	addi	sp,sp,-16
 c01caa8:	df000315 	stw	fp,12(sp)
 c01caac:	df000304 	addi	fp,sp,12
 c01cab0:	e13ffe15 	stw	r4,-8(fp)
 c01cab4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 c01cab8:	000530fa 	rdctl	r2,ienable
 c01cabc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 c01cac0:	00c00044 	movi	r3,1
 c01cac4:	e0bfff17 	ldw	r2,-4(fp)
 c01cac8:	1884983a 	sll	r2,r3,r2
 c01cacc:	1007883a 	mov	r3,r2
 c01cad0:	e0bffd17 	ldw	r2,-12(fp)
 c01cad4:	1884703a 	and	r2,r3,r2
 c01cad8:	1004c03a 	cmpne	r2,r2,zero
 c01cadc:	10803fcc 	andi	r2,r2,255
}
 c01cae0:	e037883a 	mov	sp,fp
 c01cae4:	df000017 	ldw	fp,0(sp)
 c01cae8:	dec00104 	addi	sp,sp,4
 c01caec:	f800283a 	ret

0c01caf0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 c01caf0:	defff504 	addi	sp,sp,-44
 c01caf4:	dfc00a15 	stw	ra,40(sp)
 c01caf8:	df000915 	stw	fp,36(sp)
 c01cafc:	df000904 	addi	fp,sp,36
 c01cb00:	e13ffc15 	stw	r4,-16(fp)
 c01cb04:	e17ffd15 	stw	r5,-12(fp)
 c01cb08:	e1bffe15 	stw	r6,-8(fp)
 c01cb0c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 c01cb10:	00bffa84 	movi	r2,-22
 c01cb14:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 c01cb18:	e0bffd17 	ldw	r2,-12(fp)
 c01cb1c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 c01cb20:	e0bff817 	ldw	r2,-32(fp)
 c01cb24:	10800808 	cmpgei	r2,r2,32
 c01cb28:	1000271e 	bne	r2,zero,c01cbc8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c01cb2c:	0005303a 	rdctl	r2,status
 c01cb30:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c01cb34:	e0fffb17 	ldw	r3,-20(fp)
 c01cb38:	00bfff84 	movi	r2,-2
 c01cb3c:	1884703a 	and	r2,r3,r2
 c01cb40:	1001703a 	wrctl	status,r2
  
  return context;
 c01cb44:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 c01cb48:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 c01cb4c:	008300b4 	movhi	r2,3074
 c01cb50:	1087d204 	addi	r2,r2,8008
 c01cb54:	e0fff817 	ldw	r3,-32(fp)
 c01cb58:	180690fa 	slli	r3,r3,3
 c01cb5c:	10c5883a 	add	r2,r2,r3
 c01cb60:	e0fffe17 	ldw	r3,-8(fp)
 c01cb64:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 c01cb68:	008300b4 	movhi	r2,3074
 c01cb6c:	1087d204 	addi	r2,r2,8008
 c01cb70:	e0fff817 	ldw	r3,-32(fp)
 c01cb74:	180690fa 	slli	r3,r3,3
 c01cb78:	10c5883a 	add	r2,r2,r3
 c01cb7c:	10800104 	addi	r2,r2,4
 c01cb80:	e0ffff17 	ldw	r3,-4(fp)
 c01cb84:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 c01cb88:	e0bffe17 	ldw	r2,-8(fp)
 c01cb8c:	10000526 	beq	r2,zero,c01cba4 <alt_iic_isr_register+0xb4>
 c01cb90:	e0bff817 	ldw	r2,-32(fp)
 c01cb94:	100b883a 	mov	r5,r2
 c01cb98:	e13ffc17 	ldw	r4,-16(fp)
 c01cb9c:	c01c9900 	call	c01c990 <alt_ic_irq_enable>
 c01cba0:	00000406 	br	c01cbb4 <alt_iic_isr_register+0xc4>
 c01cba4:	e0bff817 	ldw	r2,-32(fp)
 c01cba8:	100b883a 	mov	r5,r2
 c01cbac:	e13ffc17 	ldw	r4,-16(fp)
 c01cbb0:	c01ca180 	call	c01ca18 <alt_ic_irq_disable>
 c01cbb4:	e0bff715 	stw	r2,-36(fp)
 c01cbb8:	e0bffa17 	ldw	r2,-24(fp)
 c01cbbc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c01cbc0:	e0bff917 	ldw	r2,-28(fp)
 c01cbc4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 c01cbc8:	e0bff717 	ldw	r2,-36(fp)
}
 c01cbcc:	e037883a 	mov	sp,fp
 c01cbd0:	dfc00117 	ldw	ra,4(sp)
 c01cbd4:	df000017 	ldw	fp,0(sp)
 c01cbd8:	dec00204 	addi	sp,sp,8
 c01cbdc:	f800283a 	ret

0c01cbe0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 c01cbe0:	defff804 	addi	sp,sp,-32
 c01cbe4:	dfc00715 	stw	ra,28(sp)
 c01cbe8:	df000615 	stw	fp,24(sp)
 c01cbec:	dc000515 	stw	r16,20(sp)
 c01cbf0:	df000604 	addi	fp,sp,24
 c01cbf4:	e13ffb15 	stw	r4,-20(fp)
 c01cbf8:	e17ffc15 	stw	r5,-16(fp)
 c01cbfc:	e1bffd15 	stw	r6,-12(fp)
 c01cc00:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 c01cc04:	e1bffe17 	ldw	r6,-8(fp)
 c01cc08:	e17ffd17 	ldw	r5,-12(fp)
 c01cc0c:	e13ffc17 	ldw	r4,-16(fp)
 c01cc10:	c01ce680 	call	c01ce68 <open>
 c01cc14:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 c01cc18:	e0bffa17 	ldw	r2,-24(fp)
 c01cc1c:	10002216 	blt	r2,zero,c01cca8 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 c01cc20:	040300b4 	movhi	r16,3074
 c01cc24:	843b4104 	addi	r16,r16,-4860
 c01cc28:	e0bffa17 	ldw	r2,-24(fp)
 c01cc2c:	01400304 	movi	r5,12
 c01cc30:	1009883a 	mov	r4,r2
 c01cc34:	c00473c0 	call	c00473c <__mulsi3>
 c01cc38:	8085883a 	add	r2,r16,r2
 c01cc3c:	10c00017 	ldw	r3,0(r2)
 c01cc40:	e0bffb17 	ldw	r2,-20(fp)
 c01cc44:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 c01cc48:	040300b4 	movhi	r16,3074
 c01cc4c:	843b4104 	addi	r16,r16,-4860
 c01cc50:	e0bffa17 	ldw	r2,-24(fp)
 c01cc54:	01400304 	movi	r5,12
 c01cc58:	1009883a 	mov	r4,r2
 c01cc5c:	c00473c0 	call	c00473c <__mulsi3>
 c01cc60:	8085883a 	add	r2,r16,r2
 c01cc64:	10800104 	addi	r2,r2,4
 c01cc68:	10c00017 	ldw	r3,0(r2)
 c01cc6c:	e0bffb17 	ldw	r2,-20(fp)
 c01cc70:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 c01cc74:	040300b4 	movhi	r16,3074
 c01cc78:	843b4104 	addi	r16,r16,-4860
 c01cc7c:	e0bffa17 	ldw	r2,-24(fp)
 c01cc80:	01400304 	movi	r5,12
 c01cc84:	1009883a 	mov	r4,r2
 c01cc88:	c00473c0 	call	c00473c <__mulsi3>
 c01cc8c:	8085883a 	add	r2,r16,r2
 c01cc90:	10800204 	addi	r2,r2,8
 c01cc94:	10c00017 	ldw	r3,0(r2)
 c01cc98:	e0bffb17 	ldw	r2,-20(fp)
 c01cc9c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 c01cca0:	e13ffa17 	ldw	r4,-24(fp)
 c01cca4:	c01b2700 	call	c01b270 <alt_release_fd>
  }
} 
 c01cca8:	0001883a 	nop
 c01ccac:	e6ffff04 	addi	sp,fp,-4
 c01ccb0:	dfc00217 	ldw	ra,8(sp)
 c01ccb4:	df000117 	ldw	fp,4(sp)
 c01ccb8:	dc000017 	ldw	r16,0(sp)
 c01ccbc:	dec00304 	addi	sp,sp,12
 c01ccc0:	f800283a 	ret

0c01ccc4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 c01ccc4:	defffb04 	addi	sp,sp,-20
 c01ccc8:	dfc00415 	stw	ra,16(sp)
 c01cccc:	df000315 	stw	fp,12(sp)
 c01ccd0:	df000304 	addi	fp,sp,12
 c01ccd4:	e13ffd15 	stw	r4,-12(fp)
 c01ccd8:	e17ffe15 	stw	r5,-8(fp)
 c01ccdc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 c01cce0:	01c07fc4 	movi	r7,511
 c01cce4:	01800044 	movi	r6,1
 c01cce8:	e17ffd17 	ldw	r5,-12(fp)
 c01ccec:	010300b4 	movhi	r4,3074
 c01ccf0:	213b4404 	addi	r4,r4,-4848
 c01ccf4:	c01cbe00 	call	c01cbe0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 c01ccf8:	01c07fc4 	movi	r7,511
 c01ccfc:	000d883a 	mov	r6,zero
 c01cd00:	e17ffe17 	ldw	r5,-8(fp)
 c01cd04:	010300b4 	movhi	r4,3074
 c01cd08:	213b4104 	addi	r4,r4,-4860
 c01cd0c:	c01cbe00 	call	c01cbe0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 c01cd10:	01c07fc4 	movi	r7,511
 c01cd14:	01800044 	movi	r6,1
 c01cd18:	e17fff17 	ldw	r5,-4(fp)
 c01cd1c:	010300b4 	movhi	r4,3074
 c01cd20:	213b4704 	addi	r4,r4,-4836
 c01cd24:	c01cbe00 	call	c01cbe0 <alt_open_fd>
}  
 c01cd28:	0001883a 	nop
 c01cd2c:	e037883a 	mov	sp,fp
 c01cd30:	dfc00117 	ldw	ra,4(sp)
 c01cd34:	df000017 	ldw	fp,0(sp)
 c01cd38:	dec00204 	addi	sp,sp,8
 c01cd3c:	f800283a 	ret

0c01cd40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c01cd40:	defffe04 	addi	sp,sp,-8
 c01cd44:	dfc00115 	stw	ra,4(sp)
 c01cd48:	df000015 	stw	fp,0(sp)
 c01cd4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c01cd50:	d0a01317 	ldw	r2,-32692(gp)
 c01cd54:	10000326 	beq	r2,zero,c01cd64 <alt_get_errno+0x24>
 c01cd58:	d0a01317 	ldw	r2,-32692(gp)
 c01cd5c:	103ee83a 	callr	r2
 c01cd60:	00000106 	br	c01cd68 <alt_get_errno+0x28>
 c01cd64:	d0a7a804 	addi	r2,gp,-24928
}
 c01cd68:	e037883a 	mov	sp,fp
 c01cd6c:	dfc00117 	ldw	ra,4(sp)
 c01cd70:	df000017 	ldw	fp,0(sp)
 c01cd74:	dec00204 	addi	sp,sp,8
 c01cd78:	f800283a 	ret

0c01cd7c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 c01cd7c:	defffb04 	addi	sp,sp,-20
 c01cd80:	dfc00415 	stw	ra,16(sp)
 c01cd84:	df000315 	stw	fp,12(sp)
 c01cd88:	dc000215 	stw	r16,8(sp)
 c01cd8c:	df000304 	addi	fp,sp,12
 c01cd90:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 c01cd94:	e0bffe17 	ldw	r2,-8(fp)
 c01cd98:	10800217 	ldw	r2,8(r2)
 c01cd9c:	10d00034 	orhi	r3,r2,16384
 c01cda0:	e0bffe17 	ldw	r2,-8(fp)
 c01cda4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 c01cda8:	e03ffd15 	stw	zero,-12(fp)
 c01cdac:	00002306 	br	c01ce3c <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 c01cdb0:	040300b4 	movhi	r16,3074
 c01cdb4:	843b4104 	addi	r16,r16,-4860
 c01cdb8:	e0bffd17 	ldw	r2,-12(fp)
 c01cdbc:	01400304 	movi	r5,12
 c01cdc0:	1009883a 	mov	r4,r2
 c01cdc4:	c00473c0 	call	c00473c <__mulsi3>
 c01cdc8:	8085883a 	add	r2,r16,r2
 c01cdcc:	10c00017 	ldw	r3,0(r2)
 c01cdd0:	e0bffe17 	ldw	r2,-8(fp)
 c01cdd4:	10800017 	ldw	r2,0(r2)
 c01cdd8:	1880151e 	bne	r3,r2,c01ce30 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 c01cddc:	040300b4 	movhi	r16,3074
 c01cde0:	843b4104 	addi	r16,r16,-4860
 c01cde4:	e0bffd17 	ldw	r2,-12(fp)
 c01cde8:	01400304 	movi	r5,12
 c01cdec:	1009883a 	mov	r4,r2
 c01cdf0:	c00473c0 	call	c00473c <__mulsi3>
 c01cdf4:	8085883a 	add	r2,r16,r2
 c01cdf8:	10800204 	addi	r2,r2,8
 c01cdfc:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 c01ce00:	10000b0e 	bge	r2,zero,c01ce30 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 c01ce04:	01400304 	movi	r5,12
 c01ce08:	e13ffd17 	ldw	r4,-12(fp)
 c01ce0c:	c00473c0 	call	c00473c <__mulsi3>
 c01ce10:	1007883a 	mov	r3,r2
 c01ce14:	008300b4 	movhi	r2,3074
 c01ce18:	10bb4104 	addi	r2,r2,-4860
 c01ce1c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 c01ce20:	e0bffe17 	ldw	r2,-8(fp)
 c01ce24:	18800226 	beq	r3,r2,c01ce30 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 c01ce28:	00bffcc4 	movi	r2,-13
 c01ce2c:	00000806 	br	c01ce50 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 c01ce30:	e0bffd17 	ldw	r2,-12(fp)
 c01ce34:	10800044 	addi	r2,r2,1
 c01ce38:	e0bffd15 	stw	r2,-12(fp)
 c01ce3c:	d0a01217 	ldw	r2,-32696(gp)
 c01ce40:	1007883a 	mov	r3,r2
 c01ce44:	e0bffd17 	ldw	r2,-12(fp)
 c01ce48:	18bfd92e 	bgeu	r3,r2,c01cdb0 <__alt_data_end+0xfc01cdb0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 c01ce4c:	0005883a 	mov	r2,zero
}
 c01ce50:	e6ffff04 	addi	sp,fp,-4
 c01ce54:	dfc00217 	ldw	ra,8(sp)
 c01ce58:	df000117 	ldw	fp,4(sp)
 c01ce5c:	dc000017 	ldw	r16,0(sp)
 c01ce60:	dec00304 	addi	sp,sp,12
 c01ce64:	f800283a 	ret

0c01ce68 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 c01ce68:	defff604 	addi	sp,sp,-40
 c01ce6c:	dfc00915 	stw	ra,36(sp)
 c01ce70:	df000815 	stw	fp,32(sp)
 c01ce74:	df000804 	addi	fp,sp,32
 c01ce78:	e13ffd15 	stw	r4,-12(fp)
 c01ce7c:	e17ffe15 	stw	r5,-8(fp)
 c01ce80:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 c01ce84:	00bfffc4 	movi	r2,-1
 c01ce88:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 c01ce8c:	00bffb44 	movi	r2,-19
 c01ce90:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 c01ce94:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 c01ce98:	d1601004 	addi	r5,gp,-32704
 c01ce9c:	e13ffd17 	ldw	r4,-12(fp)
 c01cea0:	c01cfe80 	call	c01cfe8 <alt_find_dev>
 c01cea4:	e0bff815 	stw	r2,-32(fp)
 c01cea8:	e0bff817 	ldw	r2,-32(fp)
 c01ceac:	1000051e 	bne	r2,zero,c01cec4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 c01ceb0:	e13ffd17 	ldw	r4,-12(fp)
 c01ceb4:	c01d0780 	call	c01d078 <alt_find_file>
 c01ceb8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 c01cebc:	00800044 	movi	r2,1
 c01cec0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 c01cec4:	e0bff817 	ldw	r2,-32(fp)
 c01cec8:	10002b26 	beq	r2,zero,c01cf78 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 c01cecc:	e13ff817 	ldw	r4,-32(fp)
 c01ced0:	c01d1800 	call	c01d180 <alt_get_fd>
 c01ced4:	e0bff915 	stw	r2,-28(fp)
 c01ced8:	e0bff917 	ldw	r2,-28(fp)
 c01cedc:	1000030e 	bge	r2,zero,c01ceec <open+0x84>
    {
      status = index;
 c01cee0:	e0bff917 	ldw	r2,-28(fp)
 c01cee4:	e0bffa15 	stw	r2,-24(fp)
 c01cee8:	00002506 	br	c01cf80 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 c01ceec:	01400304 	movi	r5,12
 c01cef0:	e13ff917 	ldw	r4,-28(fp)
 c01cef4:	c00473c0 	call	c00473c <__mulsi3>
 c01cef8:	1007883a 	mov	r3,r2
 c01cefc:	008300b4 	movhi	r2,3074
 c01cf00:	10bb4104 	addi	r2,r2,-4860
 c01cf04:	1885883a 	add	r2,r3,r2
 c01cf08:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 c01cf0c:	e0fffe17 	ldw	r3,-8(fp)
 c01cf10:	00900034 	movhi	r2,16384
 c01cf14:	10bfffc4 	addi	r2,r2,-1
 c01cf18:	1886703a 	and	r3,r3,r2
 c01cf1c:	e0bffc17 	ldw	r2,-16(fp)
 c01cf20:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 c01cf24:	e0bffb17 	ldw	r2,-20(fp)
 c01cf28:	1000051e 	bne	r2,zero,c01cf40 <open+0xd8>
 c01cf2c:	e13ffc17 	ldw	r4,-16(fp)
 c01cf30:	c01cd7c0 	call	c01cd7c <alt_file_locked>
 c01cf34:	e0bffa15 	stw	r2,-24(fp)
 c01cf38:	e0bffa17 	ldw	r2,-24(fp)
 c01cf3c:	10001016 	blt	r2,zero,c01cf80 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 c01cf40:	e0bff817 	ldw	r2,-32(fp)
 c01cf44:	10800317 	ldw	r2,12(r2)
 c01cf48:	10000826 	beq	r2,zero,c01cf6c <open+0x104>
 c01cf4c:	e0bff817 	ldw	r2,-32(fp)
 c01cf50:	10800317 	ldw	r2,12(r2)
 c01cf54:	e1ffff17 	ldw	r7,-4(fp)
 c01cf58:	e1bffe17 	ldw	r6,-8(fp)
 c01cf5c:	e17ffd17 	ldw	r5,-12(fp)
 c01cf60:	e13ffc17 	ldw	r4,-16(fp)
 c01cf64:	103ee83a 	callr	r2
 c01cf68:	00000106 	br	c01cf70 <open+0x108>
 c01cf6c:	0005883a 	mov	r2,zero
 c01cf70:	e0bffa15 	stw	r2,-24(fp)
 c01cf74:	00000206 	br	c01cf80 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 c01cf78:	00bffb44 	movi	r2,-19
 c01cf7c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 c01cf80:	e0bffa17 	ldw	r2,-24(fp)
 c01cf84:	1000090e 	bge	r2,zero,c01cfac <open+0x144>
  {
    alt_release_fd (index);  
 c01cf88:	e13ff917 	ldw	r4,-28(fp)
 c01cf8c:	c01b2700 	call	c01b270 <alt_release_fd>
    ALT_ERRNO = -status;
 c01cf90:	c01cd400 	call	c01cd40 <alt_get_errno>
 c01cf94:	1007883a 	mov	r3,r2
 c01cf98:	e0bffa17 	ldw	r2,-24(fp)
 c01cf9c:	0085c83a 	sub	r2,zero,r2
 c01cfa0:	18800015 	stw	r2,0(r3)
    return -1;
 c01cfa4:	00bfffc4 	movi	r2,-1
 c01cfa8:	00000106 	br	c01cfb0 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 c01cfac:	e0bff917 	ldw	r2,-28(fp)
}
 c01cfb0:	e037883a 	mov	sp,fp
 c01cfb4:	dfc00117 	ldw	ra,4(sp)
 c01cfb8:	df000017 	ldw	fp,0(sp)
 c01cfbc:	dec00204 	addi	sp,sp,8
 c01cfc0:	f800283a 	ret

0c01cfc4 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 c01cfc4:	deffff04 	addi	sp,sp,-4
 c01cfc8:	df000015 	stw	fp,0(sp)
 c01cfcc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 c01cfd0:	000170fa 	wrctl	ienable,zero
}
 c01cfd4:	0001883a 	nop
 c01cfd8:	e037883a 	mov	sp,fp
 c01cfdc:	df000017 	ldw	fp,0(sp)
 c01cfe0:	dec00104 	addi	sp,sp,4
 c01cfe4:	f800283a 	ret

0c01cfe8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 c01cfe8:	defffa04 	addi	sp,sp,-24
 c01cfec:	dfc00515 	stw	ra,20(sp)
 c01cff0:	df000415 	stw	fp,16(sp)
 c01cff4:	df000404 	addi	fp,sp,16
 c01cff8:	e13ffe15 	stw	r4,-8(fp)
 c01cffc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 c01d000:	e0bfff17 	ldw	r2,-4(fp)
 c01d004:	10800017 	ldw	r2,0(r2)
 c01d008:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 c01d00c:	e13ffe17 	ldw	r4,-8(fp)
 c01d010:	c0052f80 	call	c0052f8 <strlen>
 c01d014:	10800044 	addi	r2,r2,1
 c01d018:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 c01d01c:	00000d06 	br	c01d054 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 c01d020:	e0bffc17 	ldw	r2,-16(fp)
 c01d024:	10800217 	ldw	r2,8(r2)
 c01d028:	e0fffd17 	ldw	r3,-12(fp)
 c01d02c:	180d883a 	mov	r6,r3
 c01d030:	e17ffe17 	ldw	r5,-8(fp)
 c01d034:	1009883a 	mov	r4,r2
 c01d038:	c01d32c0 	call	c01d32c <memcmp>
 c01d03c:	1000021e 	bne	r2,zero,c01d048 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 c01d040:	e0bffc17 	ldw	r2,-16(fp)
 c01d044:	00000706 	br	c01d064 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 c01d048:	e0bffc17 	ldw	r2,-16(fp)
 c01d04c:	10800017 	ldw	r2,0(r2)
 c01d050:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 c01d054:	e0fffc17 	ldw	r3,-16(fp)
 c01d058:	e0bfff17 	ldw	r2,-4(fp)
 c01d05c:	18bff01e 	bne	r3,r2,c01d020 <__alt_data_end+0xfc01d020>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 c01d060:	0005883a 	mov	r2,zero
}
 c01d064:	e037883a 	mov	sp,fp
 c01d068:	dfc00117 	ldw	ra,4(sp)
 c01d06c:	df000017 	ldw	fp,0(sp)
 c01d070:	dec00204 	addi	sp,sp,8
 c01d074:	f800283a 	ret

0c01d078 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 c01d078:	defffb04 	addi	sp,sp,-20
 c01d07c:	dfc00415 	stw	ra,16(sp)
 c01d080:	df000315 	stw	fp,12(sp)
 c01d084:	df000304 	addi	fp,sp,12
 c01d088:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 c01d08c:	d0a00e17 	ldw	r2,-32712(gp)
 c01d090:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 c01d094:	00003106 	br	c01d15c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 c01d098:	e0bffd17 	ldw	r2,-12(fp)
 c01d09c:	10800217 	ldw	r2,8(r2)
 c01d0a0:	1009883a 	mov	r4,r2
 c01d0a4:	c0052f80 	call	c0052f8 <strlen>
 c01d0a8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 c01d0ac:	e0bffd17 	ldw	r2,-12(fp)
 c01d0b0:	10c00217 	ldw	r3,8(r2)
 c01d0b4:	e0bffe17 	ldw	r2,-8(fp)
 c01d0b8:	10bfffc4 	addi	r2,r2,-1
 c01d0bc:	1885883a 	add	r2,r3,r2
 c01d0c0:	10800003 	ldbu	r2,0(r2)
 c01d0c4:	10803fcc 	andi	r2,r2,255
 c01d0c8:	1080201c 	xori	r2,r2,128
 c01d0cc:	10bfe004 	addi	r2,r2,-128
 c01d0d0:	10800bd8 	cmpnei	r2,r2,47
 c01d0d4:	1000031e 	bne	r2,zero,c01d0e4 <alt_find_file+0x6c>
    {
      len -= 1;
 c01d0d8:	e0bffe17 	ldw	r2,-8(fp)
 c01d0dc:	10bfffc4 	addi	r2,r2,-1
 c01d0e0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 c01d0e4:	e0bffe17 	ldw	r2,-8(fp)
 c01d0e8:	e0ffff17 	ldw	r3,-4(fp)
 c01d0ec:	1885883a 	add	r2,r3,r2
 c01d0f0:	10800003 	ldbu	r2,0(r2)
 c01d0f4:	10803fcc 	andi	r2,r2,255
 c01d0f8:	1080201c 	xori	r2,r2,128
 c01d0fc:	10bfe004 	addi	r2,r2,-128
 c01d100:	10800be0 	cmpeqi	r2,r2,47
 c01d104:	1000081e 	bne	r2,zero,c01d128 <alt_find_file+0xb0>
 c01d108:	e0bffe17 	ldw	r2,-8(fp)
 c01d10c:	e0ffff17 	ldw	r3,-4(fp)
 c01d110:	1885883a 	add	r2,r3,r2
 c01d114:	10800003 	ldbu	r2,0(r2)
 c01d118:	10803fcc 	andi	r2,r2,255
 c01d11c:	1080201c 	xori	r2,r2,128
 c01d120:	10bfe004 	addi	r2,r2,-128
 c01d124:	10000a1e 	bne	r2,zero,c01d150 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 c01d128:	e0bffd17 	ldw	r2,-12(fp)
 c01d12c:	10800217 	ldw	r2,8(r2)
 c01d130:	e0fffe17 	ldw	r3,-8(fp)
 c01d134:	180d883a 	mov	r6,r3
 c01d138:	e17fff17 	ldw	r5,-4(fp)
 c01d13c:	1009883a 	mov	r4,r2
 c01d140:	c01d32c0 	call	c01d32c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 c01d144:	1000021e 	bne	r2,zero,c01d150 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 c01d148:	e0bffd17 	ldw	r2,-12(fp)
 c01d14c:	00000706 	br	c01d16c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 c01d150:	e0bffd17 	ldw	r2,-12(fp)
 c01d154:	10800017 	ldw	r2,0(r2)
 c01d158:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 c01d15c:	e0fffd17 	ldw	r3,-12(fp)
 c01d160:	d0a00e04 	addi	r2,gp,-32712
 c01d164:	18bfcc1e 	bne	r3,r2,c01d098 <__alt_data_end+0xfc01d098>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 c01d168:	0005883a 	mov	r2,zero
}
 c01d16c:	e037883a 	mov	sp,fp
 c01d170:	dfc00117 	ldw	ra,4(sp)
 c01d174:	df000017 	ldw	fp,0(sp)
 c01d178:	dec00204 	addi	sp,sp,8
 c01d17c:	f800283a 	ret

0c01d180 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 c01d180:	defffa04 	addi	sp,sp,-24
 c01d184:	dfc00515 	stw	ra,20(sp)
 c01d188:	df000415 	stw	fp,16(sp)
 c01d18c:	dc000315 	stw	r16,12(sp)
 c01d190:	df000404 	addi	fp,sp,16
 c01d194:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 c01d198:	00bffa04 	movi	r2,-24
 c01d19c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 c01d1a0:	e03ffc15 	stw	zero,-16(fp)
 c01d1a4:	00001d06 	br	c01d21c <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 c01d1a8:	040300b4 	movhi	r16,3074
 c01d1ac:	843b4104 	addi	r16,r16,-4860
 c01d1b0:	e0bffc17 	ldw	r2,-16(fp)
 c01d1b4:	01400304 	movi	r5,12
 c01d1b8:	1009883a 	mov	r4,r2
 c01d1bc:	c00473c0 	call	c00473c <__mulsi3>
 c01d1c0:	8085883a 	add	r2,r16,r2
 c01d1c4:	10800017 	ldw	r2,0(r2)
 c01d1c8:	1000111e 	bne	r2,zero,c01d210 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 c01d1cc:	040300b4 	movhi	r16,3074
 c01d1d0:	843b4104 	addi	r16,r16,-4860
 c01d1d4:	e0bffc17 	ldw	r2,-16(fp)
 c01d1d8:	01400304 	movi	r5,12
 c01d1dc:	1009883a 	mov	r4,r2
 c01d1e0:	c00473c0 	call	c00473c <__mulsi3>
 c01d1e4:	8085883a 	add	r2,r16,r2
 c01d1e8:	e0fffe17 	ldw	r3,-8(fp)
 c01d1ec:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 c01d1f0:	d0e01217 	ldw	r3,-32696(gp)
 c01d1f4:	e0bffc17 	ldw	r2,-16(fp)
 c01d1f8:	1880020e 	bge	r3,r2,c01d204 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 c01d1fc:	e0bffc17 	ldw	r2,-16(fp)
 c01d200:	d0a01215 	stw	r2,-32696(gp)
      }
      rc = i;
 c01d204:	e0bffc17 	ldw	r2,-16(fp)
 c01d208:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 c01d20c:	00000606 	br	c01d228 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 c01d210:	e0bffc17 	ldw	r2,-16(fp)
 c01d214:	10800044 	addi	r2,r2,1
 c01d218:	e0bffc15 	stw	r2,-16(fp)
 c01d21c:	e0bffc17 	ldw	r2,-16(fp)
 c01d220:	10800810 	cmplti	r2,r2,32
 c01d224:	103fe01e 	bne	r2,zero,c01d1a8 <__alt_data_end+0xfc01d1a8>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 c01d228:	e0bffd17 	ldw	r2,-12(fp)
}
 c01d22c:	e6ffff04 	addi	sp,fp,-4
 c01d230:	dfc00217 	ldw	ra,8(sp)
 c01d234:	df000117 	ldw	fp,4(sp)
 c01d238:	dc000017 	ldw	r16,0(sp)
 c01d23c:	dec00304 	addi	sp,sp,12
 c01d240:	f800283a 	ret

0c01d244 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 c01d244:	defffe04 	addi	sp,sp,-8
 c01d248:	df000115 	stw	fp,4(sp)
 c01d24c:	df000104 	addi	fp,sp,4
 c01d250:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 c01d254:	e0bfff17 	ldw	r2,-4(fp)
 c01d258:	10bffe84 	addi	r2,r2,-6
 c01d25c:	10c00428 	cmpgeui	r3,r2,16
 c01d260:	18001a1e 	bne	r3,zero,c01d2cc <alt_exception_cause_generated_bad_addr+0x88>
 c01d264:	100690ba 	slli	r3,r2,2
 c01d268:	008300b4 	movhi	r2,3074
 c01d26c:	10b49f04 	addi	r2,r2,-11652
 c01d270:	1885883a 	add	r2,r3,r2
 c01d274:	10800017 	ldw	r2,0(r2)
 c01d278:	1000683a 	jmp	r2
 c01d27c:	0c01d2bc 	xorhi	r16,at,1866
 c01d280:	0c01d2bc 	xorhi	r16,at,1866
 c01d284:	0c01d2cc 	andi	r16,at,1867
 c01d288:	0c01d2cc 	andi	r16,at,1867
 c01d28c:	0c01d2cc 	andi	r16,at,1867
 c01d290:	0c01d2bc 	xorhi	r16,at,1866
 c01d294:	0c01d2c4 	addi	r16,at,1867
 c01d298:	0c01d2cc 	andi	r16,at,1867
 c01d29c:	0c01d2bc 	xorhi	r16,at,1866
 c01d2a0:	0c01d2bc 	xorhi	r16,at,1866
 c01d2a4:	0c01d2cc 	andi	r16,at,1867
 c01d2a8:	0c01d2bc 	xorhi	r16,at,1866
 c01d2ac:	0c01d2c4 	addi	r16,at,1867
 c01d2b0:	0c01d2cc 	andi	r16,at,1867
 c01d2b4:	0c01d2cc 	andi	r16,at,1867
 c01d2b8:	0c01d2bc 	xorhi	r16,at,1866
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 c01d2bc:	00800044 	movi	r2,1
 c01d2c0:	00000306 	br	c01d2d0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 c01d2c4:	0005883a 	mov	r2,zero
 c01d2c8:	00000106 	br	c01d2d0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 c01d2cc:	0005883a 	mov	r2,zero
  }
}
 c01d2d0:	e037883a 	mov	sp,fp
 c01d2d4:	df000017 	ldw	fp,0(sp)
 c01d2d8:	dec00104 	addi	sp,sp,4
 c01d2dc:	f800283a 	ret

0c01d2e0 <atexit>:
 c01d2e0:	200b883a 	mov	r5,r4
 c01d2e4:	000f883a 	mov	r7,zero
 c01d2e8:	000d883a 	mov	r6,zero
 c01d2ec:	0009883a 	mov	r4,zero
 c01d2f0:	c01d3a81 	jmpi	c01d3a8 <__register_exitproc>

0c01d2f4 <exit>:
 c01d2f4:	defffe04 	addi	sp,sp,-8
 c01d2f8:	000b883a 	mov	r5,zero
 c01d2fc:	dc000015 	stw	r16,0(sp)
 c01d300:	dfc00115 	stw	ra,4(sp)
 c01d304:	2021883a 	mov	r16,r4
 c01d308:	c01d4c00 	call	c01d4c0 <__call_exitprocs>
 c01d30c:	008300b4 	movhi	r2,3074
 c01d310:	10bfc204 	addi	r2,r2,-248
 c01d314:	11000017 	ldw	r4,0(r2)
 c01d318:	20800f17 	ldw	r2,60(r4)
 c01d31c:	10000126 	beq	r2,zero,c01d324 <exit+0x30>
 c01d320:	103ee83a 	callr	r2
 c01d324:	8009883a 	mov	r4,r16
 c01d328:	c01d6400 	call	c01d640 <_exit>

0c01d32c <memcmp>:
 c01d32c:	01c000c4 	movi	r7,3
 c01d330:	3980192e 	bgeu	r7,r6,c01d398 <memcmp+0x6c>
 c01d334:	2144b03a 	or	r2,r4,r5
 c01d338:	11c4703a 	and	r2,r2,r7
 c01d33c:	10000f26 	beq	r2,zero,c01d37c <memcmp+0x50>
 c01d340:	20800003 	ldbu	r2,0(r4)
 c01d344:	28c00003 	ldbu	r3,0(r5)
 c01d348:	10c0151e 	bne	r2,r3,c01d3a0 <memcmp+0x74>
 c01d34c:	31bfff84 	addi	r6,r6,-2
 c01d350:	01ffffc4 	movi	r7,-1
 c01d354:	00000406 	br	c01d368 <memcmp+0x3c>
 c01d358:	20800003 	ldbu	r2,0(r4)
 c01d35c:	28c00003 	ldbu	r3,0(r5)
 c01d360:	31bfffc4 	addi	r6,r6,-1
 c01d364:	10c00e1e 	bne	r2,r3,c01d3a0 <memcmp+0x74>
 c01d368:	21000044 	addi	r4,r4,1
 c01d36c:	29400044 	addi	r5,r5,1
 c01d370:	31fff91e 	bne	r6,r7,c01d358 <__alt_data_end+0xfc01d358>
 c01d374:	0005883a 	mov	r2,zero
 c01d378:	f800283a 	ret
 c01d37c:	20c00017 	ldw	r3,0(r4)
 c01d380:	28800017 	ldw	r2,0(r5)
 c01d384:	18bfee1e 	bne	r3,r2,c01d340 <__alt_data_end+0xfc01d340>
 c01d388:	31bfff04 	addi	r6,r6,-4
 c01d38c:	21000104 	addi	r4,r4,4
 c01d390:	29400104 	addi	r5,r5,4
 c01d394:	39bff936 	bltu	r7,r6,c01d37c <__alt_data_end+0xfc01d37c>
 c01d398:	303fe91e 	bne	r6,zero,c01d340 <__alt_data_end+0xfc01d340>
 c01d39c:	003ff506 	br	c01d374 <__alt_data_end+0xfc01d374>
 c01d3a0:	10c5c83a 	sub	r2,r2,r3
 c01d3a4:	f800283a 	ret

0c01d3a8 <__register_exitproc>:
 c01d3a8:	defffa04 	addi	sp,sp,-24
 c01d3ac:	dc000315 	stw	r16,12(sp)
 c01d3b0:	040300b4 	movhi	r16,3074
 c01d3b4:	843fc204 	addi	r16,r16,-248
 c01d3b8:	80c00017 	ldw	r3,0(r16)
 c01d3bc:	dc400415 	stw	r17,16(sp)
 c01d3c0:	dfc00515 	stw	ra,20(sp)
 c01d3c4:	18805217 	ldw	r2,328(r3)
 c01d3c8:	2023883a 	mov	r17,r4
 c01d3cc:	10003726 	beq	r2,zero,c01d4ac <__register_exitproc+0x104>
 c01d3d0:	10c00117 	ldw	r3,4(r2)
 c01d3d4:	010007c4 	movi	r4,31
 c01d3d8:	20c00e16 	blt	r4,r3,c01d414 <__register_exitproc+0x6c>
 c01d3dc:	1a000044 	addi	r8,r3,1
 c01d3e0:	8800221e 	bne	r17,zero,c01d46c <__register_exitproc+0xc4>
 c01d3e4:	18c00084 	addi	r3,r3,2
 c01d3e8:	18c7883a 	add	r3,r3,r3
 c01d3ec:	18c7883a 	add	r3,r3,r3
 c01d3f0:	12000115 	stw	r8,4(r2)
 c01d3f4:	10c7883a 	add	r3,r2,r3
 c01d3f8:	19400015 	stw	r5,0(r3)
 c01d3fc:	0005883a 	mov	r2,zero
 c01d400:	dfc00517 	ldw	ra,20(sp)
 c01d404:	dc400417 	ldw	r17,16(sp)
 c01d408:	dc000317 	ldw	r16,12(sp)
 c01d40c:	dec00604 	addi	sp,sp,24
 c01d410:	f800283a 	ret
 c01d414:	00830034 	movhi	r2,3072
 c01d418:	1091d904 	addi	r2,r2,18276
 c01d41c:	10002626 	beq	r2,zero,c01d4b8 <__register_exitproc+0x110>
 c01d420:	01006404 	movi	r4,400
 c01d424:	d9400015 	stw	r5,0(sp)
 c01d428:	d9800115 	stw	r6,4(sp)
 c01d42c:	d9c00215 	stw	r7,8(sp)
 c01d430:	c0047640 	call	c004764 <malloc>
 c01d434:	d9400017 	ldw	r5,0(sp)
 c01d438:	d9800117 	ldw	r6,4(sp)
 c01d43c:	d9c00217 	ldw	r7,8(sp)
 c01d440:	10001d26 	beq	r2,zero,c01d4b8 <__register_exitproc+0x110>
 c01d444:	81000017 	ldw	r4,0(r16)
 c01d448:	10000115 	stw	zero,4(r2)
 c01d44c:	02000044 	movi	r8,1
 c01d450:	22405217 	ldw	r9,328(r4)
 c01d454:	0007883a 	mov	r3,zero
 c01d458:	12400015 	stw	r9,0(r2)
 c01d45c:	20805215 	stw	r2,328(r4)
 c01d460:	10006215 	stw	zero,392(r2)
 c01d464:	10006315 	stw	zero,396(r2)
 c01d468:	883fde26 	beq	r17,zero,c01d3e4 <__alt_data_end+0xfc01d3e4>
 c01d46c:	18c9883a 	add	r4,r3,r3
 c01d470:	2109883a 	add	r4,r4,r4
 c01d474:	1109883a 	add	r4,r2,r4
 c01d478:	21802215 	stw	r6,136(r4)
 c01d47c:	01800044 	movi	r6,1
 c01d480:	12406217 	ldw	r9,392(r2)
 c01d484:	30cc983a 	sll	r6,r6,r3
 c01d488:	4992b03a 	or	r9,r9,r6
 c01d48c:	12406215 	stw	r9,392(r2)
 c01d490:	21c04215 	stw	r7,264(r4)
 c01d494:	01000084 	movi	r4,2
 c01d498:	893fd21e 	bne	r17,r4,c01d3e4 <__alt_data_end+0xfc01d3e4>
 c01d49c:	11006317 	ldw	r4,396(r2)
 c01d4a0:	218cb03a 	or	r6,r4,r6
 c01d4a4:	11806315 	stw	r6,396(r2)
 c01d4a8:	003fce06 	br	c01d3e4 <__alt_data_end+0xfc01d3e4>
 c01d4ac:	18805304 	addi	r2,r3,332
 c01d4b0:	18805215 	stw	r2,328(r3)
 c01d4b4:	003fc606 	br	c01d3d0 <__alt_data_end+0xfc01d3d0>
 c01d4b8:	00bfffc4 	movi	r2,-1
 c01d4bc:	003fd006 	br	c01d400 <__alt_data_end+0xfc01d400>

0c01d4c0 <__call_exitprocs>:
 c01d4c0:	defff504 	addi	sp,sp,-44
 c01d4c4:	df000915 	stw	fp,36(sp)
 c01d4c8:	dd400615 	stw	r21,24(sp)
 c01d4cc:	dc800315 	stw	r18,12(sp)
 c01d4d0:	dfc00a15 	stw	ra,40(sp)
 c01d4d4:	ddc00815 	stw	r23,32(sp)
 c01d4d8:	dd800715 	stw	r22,28(sp)
 c01d4dc:	dd000515 	stw	r20,20(sp)
 c01d4e0:	dcc00415 	stw	r19,16(sp)
 c01d4e4:	dc400215 	stw	r17,8(sp)
 c01d4e8:	dc000115 	stw	r16,4(sp)
 c01d4ec:	d9000015 	stw	r4,0(sp)
 c01d4f0:	2839883a 	mov	fp,r5
 c01d4f4:	04800044 	movi	r18,1
 c01d4f8:	057fffc4 	movi	r21,-1
 c01d4fc:	008300b4 	movhi	r2,3074
 c01d500:	10bfc204 	addi	r2,r2,-248
 c01d504:	12000017 	ldw	r8,0(r2)
 c01d508:	45005217 	ldw	r20,328(r8)
 c01d50c:	44c05204 	addi	r19,r8,328
 c01d510:	a0001c26 	beq	r20,zero,c01d584 <__call_exitprocs+0xc4>
 c01d514:	a0800117 	ldw	r2,4(r20)
 c01d518:	15ffffc4 	addi	r23,r2,-1
 c01d51c:	b8000d16 	blt	r23,zero,c01d554 <__call_exitprocs+0x94>
 c01d520:	14000044 	addi	r16,r2,1
 c01d524:	8421883a 	add	r16,r16,r16
 c01d528:	8421883a 	add	r16,r16,r16
 c01d52c:	84402004 	addi	r17,r16,128
 c01d530:	a463883a 	add	r17,r20,r17
 c01d534:	a421883a 	add	r16,r20,r16
 c01d538:	e0001e26 	beq	fp,zero,c01d5b4 <__call_exitprocs+0xf4>
 c01d53c:	80804017 	ldw	r2,256(r16)
 c01d540:	e0801c26 	beq	fp,r2,c01d5b4 <__call_exitprocs+0xf4>
 c01d544:	bdffffc4 	addi	r23,r23,-1
 c01d548:	843fff04 	addi	r16,r16,-4
 c01d54c:	8c7fff04 	addi	r17,r17,-4
 c01d550:	bd7ff91e 	bne	r23,r21,c01d538 <__alt_data_end+0xfc01d538>
 c01d554:	00830034 	movhi	r2,3072
 c01d558:	1091de04 	addi	r2,r2,18296
 c01d55c:	10000926 	beq	r2,zero,c01d584 <__call_exitprocs+0xc4>
 c01d560:	a0800117 	ldw	r2,4(r20)
 c01d564:	1000301e 	bne	r2,zero,c01d628 <__call_exitprocs+0x168>
 c01d568:	a0800017 	ldw	r2,0(r20)
 c01d56c:	10003226 	beq	r2,zero,c01d638 <__call_exitprocs+0x178>
 c01d570:	a009883a 	mov	r4,r20
 c01d574:	98800015 	stw	r2,0(r19)
 c01d578:	c0047780 	call	c004778 <free>
 c01d57c:	9d000017 	ldw	r20,0(r19)
 c01d580:	a03fe41e 	bne	r20,zero,c01d514 <__alt_data_end+0xfc01d514>
 c01d584:	dfc00a17 	ldw	ra,40(sp)
 c01d588:	df000917 	ldw	fp,36(sp)
 c01d58c:	ddc00817 	ldw	r23,32(sp)
 c01d590:	dd800717 	ldw	r22,28(sp)
 c01d594:	dd400617 	ldw	r21,24(sp)
 c01d598:	dd000517 	ldw	r20,20(sp)
 c01d59c:	dcc00417 	ldw	r19,16(sp)
 c01d5a0:	dc800317 	ldw	r18,12(sp)
 c01d5a4:	dc400217 	ldw	r17,8(sp)
 c01d5a8:	dc000117 	ldw	r16,4(sp)
 c01d5ac:	dec00b04 	addi	sp,sp,44
 c01d5b0:	f800283a 	ret
 c01d5b4:	a0800117 	ldw	r2,4(r20)
 c01d5b8:	80c00017 	ldw	r3,0(r16)
 c01d5bc:	10bfffc4 	addi	r2,r2,-1
 c01d5c0:	15c01426 	beq	r2,r23,c01d614 <__call_exitprocs+0x154>
 c01d5c4:	80000015 	stw	zero,0(r16)
 c01d5c8:	183fde26 	beq	r3,zero,c01d544 <__alt_data_end+0xfc01d544>
 c01d5cc:	95c8983a 	sll	r4,r18,r23
 c01d5d0:	a0806217 	ldw	r2,392(r20)
 c01d5d4:	a5800117 	ldw	r22,4(r20)
 c01d5d8:	2084703a 	and	r2,r4,r2
 c01d5dc:	10000b26 	beq	r2,zero,c01d60c <__call_exitprocs+0x14c>
 c01d5e0:	a0806317 	ldw	r2,396(r20)
 c01d5e4:	2088703a 	and	r4,r4,r2
 c01d5e8:	20000c1e 	bne	r4,zero,c01d61c <__call_exitprocs+0x15c>
 c01d5ec:	89400017 	ldw	r5,0(r17)
 c01d5f0:	d9000017 	ldw	r4,0(sp)
 c01d5f4:	183ee83a 	callr	r3
 c01d5f8:	a0800117 	ldw	r2,4(r20)
 c01d5fc:	15bfbf1e 	bne	r2,r22,c01d4fc <__alt_data_end+0xfc01d4fc>
 c01d600:	98800017 	ldw	r2,0(r19)
 c01d604:	153fcf26 	beq	r2,r20,c01d544 <__alt_data_end+0xfc01d544>
 c01d608:	003fbc06 	br	c01d4fc <__alt_data_end+0xfc01d4fc>
 c01d60c:	183ee83a 	callr	r3
 c01d610:	003ff906 	br	c01d5f8 <__alt_data_end+0xfc01d5f8>
 c01d614:	a5c00115 	stw	r23,4(r20)
 c01d618:	003feb06 	br	c01d5c8 <__alt_data_end+0xfc01d5c8>
 c01d61c:	89000017 	ldw	r4,0(r17)
 c01d620:	183ee83a 	callr	r3
 c01d624:	003ff406 	br	c01d5f8 <__alt_data_end+0xfc01d5f8>
 c01d628:	a0800017 	ldw	r2,0(r20)
 c01d62c:	a027883a 	mov	r19,r20
 c01d630:	1029883a 	mov	r20,r2
 c01d634:	003fb606 	br	c01d510 <__alt_data_end+0xfc01d510>
 c01d638:	0005883a 	mov	r2,zero
 c01d63c:	003ffb06 	br	c01d62c <__alt_data_end+0xfc01d62c>

0c01d640 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 c01d640:	defffd04 	addi	sp,sp,-12
 c01d644:	df000215 	stw	fp,8(sp)
 c01d648:	df000204 	addi	fp,sp,8
 c01d64c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 c01d650:	0001883a 	nop
 c01d654:	e0bfff17 	ldw	r2,-4(fp)
 c01d658:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 c01d65c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 c01d660:	10000226 	beq	r2,zero,c01d66c <_exit+0x2c>
    ALT_SIM_FAIL();
 c01d664:	002af070 	cmpltui	zero,zero,43969
 c01d668:	00000106 	br	c01d670 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 c01d66c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 c01d670:	003fff06 	br	c01d670 <__alt_data_end+0xfc01d670>
